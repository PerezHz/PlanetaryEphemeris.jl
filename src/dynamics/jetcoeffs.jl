### LASCIATE OGNE SPERANZA, VOI CH'INTRATE ###
### ABANDON ALL HOPE, YE WHO ENTER HERE ###

# DO NOT MODIFY THIS FILE BY HAND

# Methods of TaylorIntegration.jetcoeffs! and TaylorIntegration._allocate_jetcoeffs! generated by @taylorize for the functions in
# src/dynamical_model.jl

# To update the functions do the following:
# 1.- Update the corresponding function in src/dynamical_model.jl
# 2.- using TaylorIntegration
# 2.- ex = :(paste here the modified function)
# 3.- x, y = TaylorIntegration._make_parsed_coeffs(ex)
# 4.- Paste x and y in this file

# TaylorIntegration._allocate_jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S_threads!
function TaylorIntegration._allocate_jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp1133 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1867 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1134 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1868 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1135 = Taylor1(constant_term(tmp1133) * constant_term(tmp1134), order)
    tmp1136 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1869 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1137 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1870 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1138 = Taylor1(constant_term(tmp1136) * constant_term(tmp1137), order)
    tmp1139 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1871 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1140 = Taylor1(constant_term(tmp1138) * constant_term(tmp1139), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp1135) - constant_term(tmp1140), order)
    tmp1142 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1872 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1143 = Taylor1(-(constant_term(tmp1142)), order)
    tmp1144 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1873 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1145 = Taylor1(constant_term(tmp1143) * constant_term(tmp1144), order)
    tmp1146 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1874 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1147 = Taylor1(constant_term(tmp1145) * constant_term(tmp1146), order)
    tmp1148 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1875 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1149 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1876 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1150 = Taylor1(constant_term(tmp1148) * constant_term(tmp1149), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp1147) - constant_term(tmp1150), order)
    tmp1152 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1877 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1153 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1878 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp1152) * constant_term(tmp1153), order)
    tmp1155 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1879 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1156 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1880 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1157 = Taylor1(constant_term(tmp1155) * constant_term(tmp1156), order)
    tmp1158 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1881 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1159 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1882 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1160 = Taylor1(constant_term(tmp1158) * constant_term(tmp1159), order)
    tmp1161 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1883 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1162 = Taylor1(constant_term(tmp1160) * constant_term(tmp1161), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp1157) + constant_term(tmp1162), order)
    tmp1164 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1884 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1165 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1885 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1166 = Taylor1(constant_term(tmp1164) * constant_term(tmp1165), order)
    tmp1167 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1886 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1168 = Taylor1(constant_term(tmp1166) * constant_term(tmp1167), order)
    tmp1169 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1887 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1170 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1888 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1171 = Taylor1(constant_term(tmp1169) * constant_term(tmp1170), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp1168) - constant_term(tmp1171), order)
    tmp1173 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1889 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1174 = Taylor1(-(constant_term(tmp1173)), order)
    tmp1175 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1890 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp1174) * constant_term(tmp1175), order)
    tmp1177 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1891 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1178 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1892 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp1177) * constant_term(tmp1178), order)
    tmp1180 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1893 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1181 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1894 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp1180) * constant_term(tmp1181), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp1895 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp1184 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1896 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1185 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp1184), order)
    tmp1186 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1897 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1187 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp1186), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp1185) + constant_term(tmp1187), order)
    tmp1189 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp1190 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1898 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1191 = Taylor1(constant_term(tmp1189) * constant_term(tmp1190), order)
    tmp1192 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1899 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1193 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp1192), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp1191) + constant_term(tmp1193), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp1195 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1900 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1196 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp1195), order)
    tmp1197 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1901 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1198 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp1197), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp1196) + constant_term(tmp1198), order)
    tmp1200 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp1201 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1902 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1202 = Taylor1(constant_term(tmp1200) * constant_term(tmp1201), order)
    tmp1203 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1903 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1204 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp1203), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp1202) + constant_term(tmp1204), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp1206 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1904 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1207 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp1206), order)
    tmp1208 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1905 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1209 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp1208), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp1207) + constant_term(tmp1209), order)
    tmp1211 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp1212 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1906 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1213 = Taylor1(constant_term(tmp1211) * constant_term(tmp1212), order)
    tmp1214 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1907 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1215 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp1214), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp1213) + constant_term(tmp1215), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp1217 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp1218 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp1219 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp1220 = Taylor1(constant_term(tmp1218) + constant_term(tmp1219), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp1217) + constant_term(tmp1220), order)
    tmp1222 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp1223 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp1224 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp1225 = Taylor1(constant_term(tmp1223) + constant_term(tmp1224), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp1222) + constant_term(tmp1225), order)
    tmp1227 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp1228 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp1229 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp1230 = Taylor1(constant_term(tmp1228) + constant_term(tmp1229), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp1227) + constant_term(tmp1230), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:309 =# Threads.@threads for j = 1:N
            newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
            dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
            dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:321 =# Threads.@threads for j = 1:N_ext
            accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp1295 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1295)
        tmp1295[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1913 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1913)
        tmp1913[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1297 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1297)
        tmp1297[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1914 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1914)
        tmp1914[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1298 = Array{Taylor1{_S}}(undef, size(tmp1295))
    for i = eachindex(tmp1298)
        tmp1298[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1300 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1300)
        tmp1300[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1915 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1915)
        tmp1915[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1239 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1239)
        tmp1239[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1241 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1241)
        tmp1241[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1244 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1244)
        tmp1244[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1246 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1246)
        tmp1246[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1249 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1249)
        tmp1249[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1251 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp1251)
        tmp1251[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(pn2x)
        pn2x[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(pn2y)
        pn2y[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(pn2z)
        pn2z[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1259 = Array{Taylor1{_S}}(undef, size(UU))
    for i = eachindex(tmp1259)
        tmp1259[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1262 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp1262)
        tmp1262[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1908 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp1908)
        tmp1908[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1264 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp1264)
        tmp1264[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1909 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp1909)
        tmp1909[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1265 = Array{Taylor1{_S}}(undef, size(tmp1262))
    for i = eachindex(tmp1265)
        tmp1265[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1267 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp1267)
        tmp1267[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1910 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp1910)
        tmp1910[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1911 = Array{Taylor1{_S}}(undef, size(r_p2))
    for i = eachindex(tmp1911)
        tmp1911[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1912 = Array{Taylor1{_S}}(undef, size(r_p2))
    for i = eachindex(tmp1912)
        tmp1912[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1275 = Array{Taylor1{_S}}(undef, size(pn2x))
    for i = eachindex(tmp1275)
        tmp1275[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1276 = Array{Taylor1{_S}}(undef, size(tmp1275))
    for i = eachindex(tmp1276)
        tmp1276[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1287 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp1287)
        tmp1287[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp1287))
    for i = eachindex(temp_001)
        temp_001[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1289 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp1289)
        tmp1289[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp1289))
    for i = eachindex(temp_002)
        temp_002[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1291 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp1291)
        tmp1291[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp1291))
    for i = eachindex(temp_003)
        temp_003[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    for i = eachindex(temp_004)
        temp_004[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:327 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                    Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                    Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                    U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                    V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                    W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                    tmp1239[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                    tmp1241[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                    _4U_m_3X[i, j] = Taylor1(constant_term(tmp1239[3j - 2]) - constant_term(tmp1241[3i - 2]), order)
                    tmp1244[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                    tmp1246[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                    _4V_m_3Y[i, j] = Taylor1(constant_term(tmp1244[3j - 1]) - constant_term(tmp1246[3i - 1]), order)
                    tmp1249[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                    tmp1251[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                    _4W_m_3Z[i, j] = Taylor1(constant_term(tmp1249[3j]) - constant_term(tmp1251[3i]), order)
                    pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                    pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                    pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                    UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                    VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                    WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                    tmp1259[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                    vi_dot_vj[i, j] = Taylor1(constant_term(tmp1259[i, j]) + constant_term(WW[i, j]), order)
                    tmp1262[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                    tmp1908[i, j] = Taylor1(zero(constant_term(X[i, j])), order)
                    tmp1264[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                    tmp1909[i, j] = Taylor1(zero(constant_term(Y[i, j])), order)
                    tmp1265[i, j] = Taylor1(constant_term(tmp1262[i, j]) + constant_term(tmp1264[i, j]), order)
                    tmp1267[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                    tmp1910[i, j] = Taylor1(zero(constant_term(Z[i, j])), order)
                    r_p2[i, j] = Taylor1(constant_term(tmp1265[i, j]) + constant_term(tmp1267[i, j]), order)
                    r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                    r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                    tmp1911[i, j] = Taylor1(zero(constant_term(r_p2[i, j])), order)
                    r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                    tmp1912[i, j] = Taylor1(zero(constant_term(r_p2[i, j])), order)
                    newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                    tmp1275[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                    tmp1276[i, j] = Taylor1(constant_term(tmp1275[i, j]) + constant_term(pn2z[i, j]), order)
                    pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp1276[i, j]), order)
                    newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                    pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                    U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                    V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                    W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                    tmp1287[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp1287[i, j]), order)
                    newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                    tmp1289[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp1289[i, j]), order)
                    newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                    tmp1291[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp1291[i, j]), order)
                    newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                    temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                    newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
                end
            end
            tmp1295[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
            tmp1913[3j - 2] = Taylor1(zero(constant_term(dq[3j - 2])), order)
            tmp1297[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
            tmp1914[3j - 1] = Taylor1(zero(constant_term(dq[3j - 1])), order)
            tmp1298[3j - 2] = Taylor1(constant_term(tmp1295[3j - 2]) + constant_term(tmp1297[3j - 1]), order)
            tmp1300[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
            tmp1915[3j] = Taylor1(zero(constant_term(dq[3j])), order)
            v2[j] = Taylor1(constant_term(tmp1298[3j - 2]) + constant_term(tmp1300[3j]), order)
        end
    tmp1302 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp1304 = Taylor1(constant_term(tmp1302) / constant_term(2), order)
    tmp1305 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp1304), order)
    J2M_t = Taylor1(constant_term(tmp1305) / constant_term(μ[mo]), order)
    tmp1307 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp1308 = Taylor1(constant_term(tmp1307) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp1308) / constant_term(4), order)
    tmp1311 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp1311) / constant_term(μ[mo]), order)
    tmp1313 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp1313) / constant_term(μ[mo]), order)
    tmp1315 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp1316 = Taylor1(constant_term(tmp1315) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp1316) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp1328 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    for i = eachindex(tmp1328)
        tmp1328[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1330 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    for i = eachindex(tmp1330)
        tmp1330[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1332 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    for i = eachindex(tmp1332)
        tmp1332[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1336 = Array{Taylor1{_S}}(undef, size(X_bf))
    for i = eachindex(tmp1336)
        tmp1336[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1916 = Array{Taylor1{_S}}(undef, size(X_bf))
    for i = eachindex(tmp1916)
        tmp1916[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1338 = Array{Taylor1{_S}}(undef, size(Y_bf))
    for i = eachindex(tmp1338)
        tmp1338[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1917 = Array{Taylor1{_S}}(undef, size(Y_bf))
    for i = eachindex(tmp1917)
        tmp1917[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1339 = Array{Taylor1{_S}}(undef, size(tmp1336))
    for i = eachindex(tmp1339)
        tmp1339[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1919 = Array{Taylor1{_S}}(undef, size(r_p2))
    for i = eachindex(tmp1919)
        tmp1919[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1354 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp1354)
        tmp1354[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1355 = Array{Taylor1{_S}}(undef, size(tmp1354))
    for i = eachindex(tmp1355)
        tmp1355[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1357 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = eachindex(tmp1357)
        tmp1357[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1358 = Array{Taylor1{_S}}(undef, size(tmp1357))
    for i = eachindex(tmp1358)
        tmp1358[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1359 = Array{Taylor1{_S}}(undef, size(tmp1358))
    for i = eachindex(tmp1359)
        tmp1359[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1456 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    for i = eachindex(tmp1456)
        tmp1456[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1459 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    for i = eachindex(tmp1459)
        tmp1459[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1461 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1461)
        tmp1461[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1462 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1462)
        tmp1462[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1463 = Array{Taylor1{_S}}(undef, size(tmp1461))
    for i = eachindex(tmp1463)
        tmp1463[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1464 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1464)
        tmp1464[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1466 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1466)
        tmp1466[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1467 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1467)
        tmp1467[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1468 = Array{Taylor1{_S}}(undef, size(tmp1466))
    for i = eachindex(tmp1468)
        tmp1468[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1469 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1469)
        tmp1469[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1471 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1471)
        tmp1471[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1472 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1472)
        tmp1472[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1473 = Array{Taylor1{_S}}(undef, size(tmp1471))
    for i = eachindex(tmp1473)
        tmp1473[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1474 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1474)
        tmp1474[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1476 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1476)
        tmp1476[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1477 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1477)
        tmp1477[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1478 = Array{Taylor1{_S}}(undef, size(tmp1476))
    for i = eachindex(tmp1478)
        tmp1478[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1479 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1479)
        tmp1479[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1481 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1481)
        tmp1481[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1482 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1482)
        tmp1482[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1483 = Array{Taylor1{_S}}(undef, size(tmp1481))
    for i = eachindex(tmp1483)
        tmp1483[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1484 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1484)
        tmp1484[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1486 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1486)
        tmp1486[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1487 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1487)
        tmp1487[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1488 = Array{Taylor1{_S}}(undef, size(tmp1486))
    for i = eachindex(tmp1488)
        tmp1488[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1489 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1489)
        tmp1489[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1491 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1491)
        tmp1491[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1492 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1492)
        tmp1492[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1493 = Array{Taylor1{_S}}(undef, size(tmp1491))
    for i = eachindex(tmp1493)
        tmp1493[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1494 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1494)
        tmp1494[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1496 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1496)
        tmp1496[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1497 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1497)
        tmp1497[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1498 = Array{Taylor1{_S}}(undef, size(tmp1496))
    for i = eachindex(tmp1498)
        tmp1498[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1499 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1499)
        tmp1499[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1501 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1501)
        tmp1501[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1502 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1502)
        tmp1502[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1503 = Array{Taylor1{_S}}(undef, size(tmp1501))
    for i = eachindex(tmp1503)
        tmp1503[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1504 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp1504)
        tmp1504[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1506 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1506)
        tmp1506[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1507 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1507)
        tmp1507[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1508 = Array{Taylor1{_S}}(undef, size(tmp1506))
    for i = eachindex(tmp1508)
        tmp1508[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1509 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1509)
        tmp1509[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1511 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1511)
        tmp1511[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1512 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1512)
        tmp1512[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1513 = Array{Taylor1{_S}}(undef, size(tmp1511))
    for i = eachindex(tmp1513)
        tmp1513[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1514 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1514)
        tmp1514[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1516 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1516)
        tmp1516[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1517 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1517)
        tmp1517[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1518 = Array{Taylor1{_S}}(undef, size(tmp1516))
    for i = eachindex(tmp1518)
        tmp1518[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1519 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp1519)
        tmp1519[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1344 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp1344)
        tmp1344[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1345 = Array{Taylor1{_S}}(undef, size(tmp1344))
    for i = eachindex(tmp1345)
        tmp1345[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1346 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp1346)
        tmp1346[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1348 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = eachindex(tmp1348)
        tmp1348[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1349 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp1349)
        tmp1349[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1918 = Array{Taylor1{_S}}(undef, size(r_p1d2))
    for i = eachindex(tmp1918)
        tmp1918[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1361 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp1361)
        tmp1361[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1362 = Array{Taylor1{_S}}(undef, size(tmp1361))
    for i = eachindex(tmp1362)
        tmp1362[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1363 = Array{Taylor1{_S}}(undef, size(tmp1362))
    for i = eachindex(tmp1363)
        tmp1363[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1365 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = eachindex(tmp1365)
        tmp1365[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1366 = Array{Taylor1{_S}}(undef, size(tmp1365))
    for i = eachindex(tmp1366)
        tmp1366[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1367 = Array{Taylor1{_S}}(undef, size(tmp1366))
    for i = eachindex(tmp1367)
        tmp1367[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1368 = Array{Taylor1{_S}}(undef, size(tmp1367))
    for i = eachindex(tmp1368)
        tmp1368[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1393 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = eachindex(tmp1393)
        tmp1393[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1394 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp1394)
        tmp1394[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1395 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp1395)
        tmp1395[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1396 = Array{Taylor1{_S}}(undef, size(tmp1394))
    for i = eachindex(tmp1396)
        tmp1396[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1397 = Array{Taylor1{_S}}(undef, size(tmp1393))
    for i = eachindex(tmp1397)
        tmp1397[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1398 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = eachindex(tmp1398)
        tmp1398[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1399 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp1399)
        tmp1399[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1400 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp1400)
        tmp1400[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1401 = Array{Taylor1{_S}}(undef, size(tmp1399))
    for i = eachindex(tmp1401)
        tmp1401[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1402 = Array{Taylor1{_S}}(undef, size(tmp1398))
    for i = eachindex(tmp1402)
        tmp1402[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1403 = Array{Taylor1{_S}}(undef, size(tmp1397))
    for i = eachindex(tmp1403)
        tmp1403[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1405 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1405)
        tmp1405[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1406 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp1406)
        tmp1406[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1407 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp1407)
        tmp1407[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1408 = Array{Taylor1{_S}}(undef, size(tmp1406))
    for i = eachindex(tmp1408)
        tmp1408[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1409 = Array{Taylor1{_S}}(undef, size(tmp1405))
    for i = eachindex(tmp1409)
        tmp1409[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1410 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1410)
        tmp1410[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1411 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp1411)
        tmp1411[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1412 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp1412)
        tmp1412[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1413 = Array{Taylor1{_S}}(undef, size(tmp1411))
    for i = eachindex(tmp1413)
        tmp1413[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1414 = Array{Taylor1{_S}}(undef, size(tmp1410))
    for i = eachindex(tmp1414)
        tmp1414[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1415 = Array{Taylor1{_S}}(undef, size(tmp1409))
    for i = eachindex(tmp1415)
        tmp1415[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1417 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp1417)
        tmp1417[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1418 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp1418)
        tmp1418[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1419 = Array{Taylor1{_S}}(undef, size(tmp1417))
    for i = eachindex(tmp1419)
        tmp1419[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1420 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = eachindex(tmp1420)
        tmp1420[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1421 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp1421)
        tmp1421[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1422 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp1422)
        tmp1422[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1423 = Array{Taylor1{_S}}(undef, size(tmp1421))
    for i = eachindex(tmp1423)
        tmp1423[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1424 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = eachindex(tmp1424)
        tmp1424[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1425 = Array{Taylor1{_S}}(undef, size(tmp1420))
    for i = eachindex(tmp1425)
        tmp1425[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1445 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    for i = eachindex(tmp1445)
        tmp1445[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1446 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    for i = eachindex(tmp1446)
        tmp1446[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1449 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    for i = eachindex(tmp1449)
        tmp1449[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1450 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    for i = eachindex(tmp1450)
        tmp1450[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1371 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp1371)
        tmp1371[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1372 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp1372)
        tmp1372[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1374 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp1374)
        tmp1374[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1375 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp1375)
        tmp1375[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1377 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1377)
        tmp1377[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1380 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1380)
        tmp1380[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1389 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1389)
        tmp1389[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1390 = Array{Taylor1{_S}}(undef, size(tmp1389))
    for i = eachindex(tmp1390)
        tmp1390[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1391 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1391)
        tmp1391[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1382 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1382)
        tmp1382[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1384 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1384)
        tmp1384[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1385 = Array{Taylor1{_S}}(undef, size(tmp1384))
    for i = eachindex(tmp1385)
        tmp1385[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1386 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1386)
        tmp1386[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1431 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = eachindex(tmp1431)
        tmp1431[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1432 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    for i = eachindex(tmp1432)
        tmp1432[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1433 = Array{Taylor1{_S}}(undef, size(tmp1431))
    for i = eachindex(tmp1433)
        tmp1433[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1434 = Array{Taylor1{_S}}(undef, size(tmp1433))
    for i = eachindex(tmp1434)
        tmp1434[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1436 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp1436)
        tmp1436[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1437 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    for i = eachindex(tmp1437)
        tmp1437[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1438 = Array{Taylor1{_S}}(undef, size(tmp1436))
    for i = eachindex(tmp1438)
        tmp1438[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1439 = Array{Taylor1{_S}}(undef, size(tmp1438))
    for i = eachindex(tmp1439)
        tmp1439[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1441 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    for i = eachindex(tmp1441)
        tmp1441[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1442 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = eachindex(tmp1442)
        tmp1442[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1443 = Array{Taylor1{_S}}(undef, size(tmp1442))
    for i = eachindex(tmp1443)
        tmp1443[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:418 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                        X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                        X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                        Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                        Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                        Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                        Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                        Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                        Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                        tmp1328[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                        X_bf[i, j] = Taylor1(constant_term(tmp1328[i, j]) + constant_term(X_bf_3[i, j]), order)
                        tmp1330[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                        Y_bf[i, j] = Taylor1(constant_term(tmp1330[i, j]) + constant_term(Y_bf_3[i, j]), order)
                        tmp1332[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                        Z_bf[i, j] = Taylor1(constant_term(tmp1332[i, j]) + constant_term(Z_bf_3[i, j]), order)
                        sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                        tmp1336[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp1916[i, j] = Taylor1(zero(constant_term(X_bf[i, j])), order)
                        tmp1338[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp1917[i, j] = Taylor1(zero(constant_term(Y_bf[i, j])), order)
                        tmp1339[i, j] = Taylor1(constant_term(tmp1336[i, j]) + constant_term(tmp1338[i, j]), order)
                        r_xy[i, j] = Taylor1(sqrt(constant_term(tmp1339[i, j])), order)
                        cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                        sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                        P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                        dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                        for n = 2:n1SEM[j]
                            tmp1344[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp1345[i, j, n] = Taylor1(constant_term(tmp1344[i, j, n]) * constant_term(fact1_jsem[n]), order)
                            tmp1346[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                            P_n[i, j, n + 1] = Taylor1(constant_term(tmp1345[i, j, n]) - constant_term(tmp1346[i, j, n - 1]), order)
                            tmp1348[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp1349[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                            dP_n[i, j, n + 1] = Taylor1(constant_term(tmp1348[i, j, n]) + constant_term(tmp1349[i, j, n]), order)
                            temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                            tmp1918[i, j] = Taylor1(zero(constant_term(r_p1d2[i, j])), order)
                        end
                        r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                        tmp1919[i, j] = Taylor1(zero(constant_term(r_p2[i, j])), order)
                        tmp1354[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                        tmp1355[i, j, 3] = Taylor1(constant_term(tmp1354[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ξ[i, j] = Taylor1(constant_term(tmp1355[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        tmp1357[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                        tmp1358[i, j, 3] = Taylor1(constant_term(tmp1357[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                        tmp1359[i, j, 3] = Taylor1(constant_term(tmp1358[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ζ[i, j] = Taylor1(constant_term(tmp1359[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n1SEM[j]
                            tmp1361[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                            tmp1362[i, j, n + 1] = Taylor1(constant_term(tmp1361[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp1363[i, j, n + 1] = Taylor1(constant_term(tmp1362[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjξ[i, j, n] = Taylor1(constant_term(tmp1363[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp1365[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                            tmp1366[i, j, n + 1] = Taylor1(constant_term(tmp1365[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                            tmp1367[i, j, n + 1] = Taylor1(constant_term(tmp1366[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp1368[i, j, n + 1] = Taylor1(constant_term(tmp1367[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjζ[i, j, n] = Taylor1(constant_term(tmp1368[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                            F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                            F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                    cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                    secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                    P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                    cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                                else
                                    tmp1371[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    tmp1372[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    sin_mλ[i, j, m] = Taylor1(constant_term(tmp1371[i, j, m - 1]) + constant_term(tmp1372[i, j, m - 1]), order)
                                    tmp1374[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    tmp1375[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    cos_mλ[i, j, m] = Taylor1(constant_term(tmp1374[i, j, m - 1]) - constant_term(tmp1375[i, j, m - 1]), order)
                                    tmp1377[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp1377[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                    P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp1380[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                    cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp1380[i, j, m, m]) * constant_term(lnm3[m]), order)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        tmp1382[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp1382[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    else
                                        tmp1384[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        tmp1385[i, j, n - 1, m] = Taylor1(constant_term(tmp1384[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                        tmp1386[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp1385[i, j, n - 1, m]) + constant_term(tmp1386[i, j, n - 2, m]), order)
                                    end
                                    P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp1389[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp1390[i, j, n, m] = Taylor1(constant_term(tmp1389[i, j, n, m]) * constant_term(lnm3[n]), order)
                                    tmp1391[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                    cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp1390[i, j, n, m]) + constant_term(tmp1391[i, j, n - 1, m]), order)
                                end
                            end
                            tmp1393[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                            tmp1394[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp1395[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp1396[i, j, 1] = Taylor1(constant_term(tmp1394[i, j, 1]) + constant_term(tmp1395[i, j, 1]), order)
                            tmp1397[i, j, 2, 1] = Taylor1(constant_term(tmp1393[i, j, 2, 1]) * constant_term(tmp1396[i, j, 1]), order)
                            tmp1398[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                            tmp1399[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp1400[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp1401[i, j, 2] = Taylor1(constant_term(tmp1399[i, j, 2]) + constant_term(tmp1400[i, j, 2]), order)
                            tmp1402[i, j, 2, 2] = Taylor1(constant_term(tmp1398[i, j, 2, 2]) * constant_term(tmp1401[i, j, 2]), order)
                            tmp1403[i, j, 2, 1] = Taylor1(constant_term(tmp1397[i, j, 2, 1]) + constant_term(tmp1402[i, j, 2, 2]), order)
                            F_CS_ξ[i, j] = Taylor1(constant_term(tmp1403[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp1405[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                            tmp1406[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp1407[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp1408[i, j, 1] = Taylor1(constant_term(tmp1406[i, j, 1]) - constant_term(tmp1407[i, j, 1]), order)
                            tmp1409[i, j, 2, 1] = Taylor1(constant_term(tmp1405[i, j, 2, 1]) * constant_term(tmp1408[i, j, 1]), order)
                            tmp1410[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                            tmp1411[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp1412[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp1413[i, j, 2] = Taylor1(constant_term(tmp1411[i, j, 2]) - constant_term(tmp1412[i, j, 2]), order)
                            tmp1414[i, j, 2, 2] = Taylor1(constant_term(tmp1410[i, j, 2, 2]) * constant_term(tmp1413[i, j, 2]), order)
                            tmp1415[i, j, 2, 1] = Taylor1(constant_term(tmp1409[i, j, 2, 1]) + constant_term(tmp1414[i, j, 2, 2]), order)
                            F_CS_η[i, j] = Taylor1(constant_term(tmp1415[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp1417[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp1418[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp1419[i, j, 1] = Taylor1(constant_term(tmp1417[i, j, 1]) + constant_term(tmp1418[i, j, 1]), order)
                            tmp1420[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp1419[i, j, 1]), order)
                            tmp1421[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp1422[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp1423[i, j, 2] = Taylor1(constant_term(tmp1421[i, j, 2]) + constant_term(tmp1422[i, j, 2]), order)
                            tmp1424[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp1423[i, j, 2]), order)
                            tmp1425[i, j, 2, 1] = Taylor1(constant_term(tmp1420[i, j, 2, 1]) + constant_term(tmp1424[i, j, 2, 2]), order)
                            F_CS_ζ[i, j] = Taylor1(constant_term(tmp1425[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            for n = 3:n2M
                                for m = 1:n
                                    Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    tmp1431[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                    tmp1432[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp1433[i, j, n, m] = Taylor1(constant_term(tmp1431[i, j, n, m]) * constant_term(tmp1432[i, j, n, m]), order)
                                    tmp1434[i, j, n, m] = Taylor1(constant_term(tmp1433[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp1434[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                    tmp1436[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                    tmp1437[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                    tmp1438[i, j, n, m] = Taylor1(constant_term(tmp1436[i, j, n, m]) * constant_term(tmp1437[i, j, n, m]), order)
                                    tmp1439[i, j, n, m] = Taylor1(constant_term(tmp1438[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp1439[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                    tmp1441[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp1442[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp1441[i, j, n, m]), order)
                                    tmp1443[i, j, n, m] = Taylor1(constant_term(tmp1442[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp1443[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                    F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                    F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                    F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                                end
                            end
                            tmp1445[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp1446[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                            F_JCS_ξ[i, j] = Taylor1(constant_term(tmp1445[i, j]) + constant_term(tmp1446[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                            tmp1449[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                            tmp1450[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(tmp1449[i, j]) + constant_term(tmp1450[i, j]), order)
                        else
                            F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        end
                        Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                        tmp1456[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp1456[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                        tmp1459[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp1459[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                        Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                        tmp1461[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp1462[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp1463[i, j, 1, 1] = Taylor1(constant_term(tmp1461[i, j, 1, 1]) + constant_term(tmp1462[i, j, 1, 2]), order)
                        tmp1464[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp1463[i, j, 1, 1]) + constant_term(tmp1464[i, j, 1, 3]), order)
                        tmp1466[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp1467[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp1468[i, j, 2, 1] = Taylor1(constant_term(tmp1466[i, j, 2, 1]) + constant_term(tmp1467[i, j, 2, 2]), order)
                        tmp1469[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp1468[i, j, 2, 1]) + constant_term(tmp1469[i, j, 2, 3]), order)
                        tmp1471[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp1472[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp1473[i, j, 3, 1] = Taylor1(constant_term(tmp1471[i, j, 3, 1]) + constant_term(tmp1472[i, j, 3, 2]), order)
                        tmp1474[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp1473[i, j, 3, 1]) + constant_term(tmp1474[i, j, 3, 3]), order)
                        tmp1476[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp1477[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp1478[i, j, 1, 1] = Taylor1(constant_term(tmp1476[i, j, 1, 1]) + constant_term(tmp1477[i, j, 1, 2]), order)
                        tmp1479[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp1478[i, j, 1, 1]) + constant_term(tmp1479[i, j, 1, 3]), order)
                        tmp1481[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp1482[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp1483[i, j, 2, 1] = Taylor1(constant_term(tmp1481[i, j, 2, 1]) + constant_term(tmp1482[i, j, 2, 2]), order)
                        tmp1484[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp1483[i, j, 2, 1]) + constant_term(tmp1484[i, j, 2, 3]), order)
                        tmp1486[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp1487[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp1488[i, j, 3, 1] = Taylor1(constant_term(tmp1486[i, j, 3, 1]) + constant_term(tmp1487[i, j, 3, 2]), order)
                        tmp1489[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp1488[i, j, 3, 1]) + constant_term(tmp1489[i, j, 3, 3]), order)
                        tmp1491[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp1492[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp1493[i, j, 1, 1] = Taylor1(constant_term(tmp1491[i, j, 1, 1]) + constant_term(tmp1492[i, j, 1, 2]), order)
                        tmp1494[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp1493[i, j, 1, 1]) + constant_term(tmp1494[i, j, 1, 3]), order)
                        tmp1496[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp1497[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp1498[i, j, 2, 1] = Taylor1(constant_term(tmp1496[i, j, 2, 1]) + constant_term(tmp1497[i, j, 2, 2]), order)
                        tmp1499[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp1498[i, j, 2, 1]) + constant_term(tmp1499[i, j, 2, 3]), order)
                        tmp1501[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp1502[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp1503[i, j, 3, 1] = Taylor1(constant_term(tmp1501[i, j, 3, 1]) + constant_term(tmp1502[i, j, 3, 2]), order)
                        tmp1504[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp1503[i, j, 3, 1]) + constant_term(tmp1504[i, j, 3, 3]), order)
                        tmp1506[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                        tmp1507[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                        tmp1508[i, j, 1, 1] = Taylor1(constant_term(tmp1506[i, j, 1, 1]) + constant_term(tmp1507[i, j, 2, 1]), order)
                        tmp1509[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                        F_JCS_x[i, j] = Taylor1(constant_term(tmp1508[i, j, 1, 1]) + constant_term(tmp1509[i, j, 3, 1]), order)
                        tmp1511[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                        tmp1512[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                        tmp1513[i, j, 1, 2] = Taylor1(constant_term(tmp1511[i, j, 1, 2]) + constant_term(tmp1512[i, j, 2, 2]), order)
                        tmp1514[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                        F_JCS_y[i, j] = Taylor1(constant_term(tmp1513[i, j, 1, 2]) + constant_term(tmp1514[i, j, 3, 2]), order)
                        tmp1516[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                        tmp1517[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                        tmp1518[i, j, 1, 3] = Taylor1(constant_term(tmp1516[i, j, 1, 3]) + constant_term(tmp1517[i, j, 2, 3]), order)
                        tmp1519[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                        F_JCS_z[i, j] = Taylor1(constant_term(tmp1518[i, j, 1, 3]) + constant_term(tmp1519[i, j, 3, 3]), order)
                    end
                end
            end
        end
    tmp1521 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    for i = eachindex(tmp1521)
        tmp1521[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1523 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    for i = eachindex(tmp1523)
        tmp1523[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1525 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    for i = eachindex(tmp1525)
        tmp1525[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1527 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    for i = eachindex(tmp1527)
        tmp1527[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1529 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    for i = eachindex(tmp1529)
        tmp1529[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1531 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    for i = eachindex(tmp1531)
        tmp1531[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1533 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp1533)
        tmp1533[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1534 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp1534)
        tmp1534[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1535 = Array{Taylor1{_S}}(undef, size(tmp1533))
    for i = eachindex(tmp1535)
        tmp1535[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1537 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp1537)
        tmp1537[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1538 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp1538)
        tmp1538[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1539 = Array{Taylor1{_S}}(undef, size(tmp1537))
    for i = eachindex(tmp1539)
        tmp1539[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1541 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp1541)
        tmp1541[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1542 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp1542)
        tmp1542[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1543 = Array{Taylor1{_S}}(undef, size(tmp1541))
    for i = eachindex(tmp1543)
        tmp1543[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp1521[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp1521[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp1523[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp1523[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp1525[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp1525[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp1527[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp1527[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp1529[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp1529[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp1531[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp1531[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp1533[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp1534[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp1535[i, j] = Taylor1(constant_term(tmp1533[i, j]) - constant_term(tmp1534[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1535[i, j]), order)
                        tmp1537[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp1538[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp1539[i, j] = Taylor1(constant_term(tmp1537[i, j]) - constant_term(tmp1538[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1539[i, j]), order)
                        tmp1541[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp1542[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp1543[i, j] = Taylor1(constant_term(tmp1541[i, j]) - constant_term(tmp1542[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1543[i, j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp1555 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    for i = eachindex(tmp1555)
        tmp1555[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(Xij_t_Ui)
        Xij_t_Ui[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(Yij_t_Vi)
        Yij_t_Vi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(Zij_t_Wi)
        Zij_t_Wi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1561 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    for i = eachindex(tmp1561)
        tmp1561[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp1561))
    for i = eachindex(Rij_dot_Vi)
        Rij_dot_Vi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1564 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    for i = eachindex(tmp1564)
        tmp1564[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1920 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    for i = eachindex(tmp1920)
        tmp1920[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp1564))
    for i = eachindex(pn1t7)
        pn1t7[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1567 = Array{Taylor1{_S}}(undef, size(pn1t7))
    for i = eachindex(tmp1567)
        tmp1567[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    for i = eachindex(pn1t2_7)
        pn1t2_7[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:658 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                    ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                    _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                    sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                    tmp1555[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                    sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp1555[i, j]), order)
                    ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                    Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                    Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                    Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                    tmp1561[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                    Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp1561[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                    tmp1564[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                    tmp1920[i, j] = Taylor1(zero(constant_term(Rij_dot_Vi[i, j])), order)
                    pn1t7[i, j] = Taylor1(constant_term(tmp1564[i, j]) / constant_term(r_p2[i, j]), order)
                    tmp1567[i, j] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i, j]), order)
                    pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp1567[i, j]), order)
                    pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
                end
            end
            pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp1574 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    for i = eachindex(tmp1574)
        tmp1574[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1575 = Array{Taylor1{_S}}(undef, size(tmp1574))
    for i = eachindex(tmp1575)
        tmp1575[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1576 = Array{Taylor1{_S}}(undef, size(tmp1575))
    for i = eachindex(tmp1576)
        tmp1576[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1584 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    for i = eachindex(tmp1584)
        tmp1584[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    for i = eachindex(termpnx)
        termpnx[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    for i = eachindex(sumpnx)
        sumpnx[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1587 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    for i = eachindex(tmp1587)
        tmp1587[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    for i = eachindex(termpny)
        termpny[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    for i = eachindex(sumpny)
        sumpny[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1590 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    for i = eachindex(tmp1590)
        tmp1590[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    for i = eachindex(termpnz)
        termpnz[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    for i = eachindex(sumpnz)
        sumpnz[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:697 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                    pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                    pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                    tmp1574[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                    tmp1575[i, j] = Taylor1(constant_term(tmp1574[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                    tmp1576[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp1575[i, j]), order)
                    pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp1576[i, j]), order)
                    X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                    Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                    Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                    pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                    pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                    pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                    tmp1584[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                    termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp1584[i, j]), order)
                    sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                    pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                    tmp1587[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                    termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp1587[i, j]), order)
                    sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                    pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                    tmp1590[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                    termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp1590[i, j]), order)
                    sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                    pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
                end
            end
            postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
            postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
            postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:743 =# Threads.@threads for i = 1:N_ext
            dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
            dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
            dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:748 =# Threads.@threads for i = N_ext + 1:N
            dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
            dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
            dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
        end
    tmp1599 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp1600 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp1601 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp1602 = Taylor1(constant_term(tmp1600) + constant_term(tmp1601), order)
    Iω_x = Taylor1(constant_term(tmp1599) + constant_term(tmp1602), order)
    tmp1604 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp1605 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp1606 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp1607 = Taylor1(constant_term(tmp1605) + constant_term(tmp1606), order)
    Iω_y = Taylor1(constant_term(tmp1604) + constant_term(tmp1607), order)
    tmp1609 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp1610 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp1611 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp1612 = Taylor1(constant_term(tmp1610) + constant_term(tmp1611), order)
    Iω_z = Taylor1(constant_term(tmp1609) + constant_term(tmp1612), order)
    tmp1614 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp1615 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp1614) - constant_term(tmp1615), order)
    tmp1617 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp1618 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp1617) - constant_term(tmp1618), order)
    tmp1620 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp1621 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp1620) - constant_term(tmp1621), order)
    tmp1623 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp1624 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp1625 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp1626 = Taylor1(constant_term(tmp1624) + constant_term(tmp1625), order)
    dIω_x = Taylor1(constant_term(tmp1623) + constant_term(tmp1626), order)
    tmp1628 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp1629 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp1630 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp1631 = Taylor1(constant_term(tmp1629) + constant_term(tmp1630), order)
    dIω_y = Taylor1(constant_term(tmp1628) + constant_term(tmp1631), order)
    tmp1633 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp1634 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp1635 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp1636 = Taylor1(constant_term(tmp1634) + constant_term(tmp1635), order)
    dIω_z = Taylor1(constant_term(tmp1633) + constant_term(tmp1636), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp1641 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1642 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1643 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1644 = Taylor1(constant_term(tmp1642) + constant_term(tmp1643), order)
    er_EM_1 = Taylor1(constant_term(tmp1641) + constant_term(tmp1644), order)
    tmp1646 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1647 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1648 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1649 = Taylor1(constant_term(tmp1647) + constant_term(tmp1648), order)
    er_EM_2 = Taylor1(constant_term(tmp1646) + constant_term(tmp1649), order)
    tmp1651 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1652 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1653 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1654 = Taylor1(constant_term(tmp1652) + constant_term(tmp1653), order)
    er_EM_3 = Taylor1(constant_term(tmp1651) + constant_term(tmp1654), order)
    tmp1656 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1657 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1658 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1659 = Taylor1(constant_term(tmp1657) + constant_term(tmp1658), order)
    p_E_1 = Taylor1(constant_term(tmp1656) + constant_term(tmp1659), order)
    tmp1661 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1662 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1663 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1664 = Taylor1(constant_term(tmp1662) + constant_term(tmp1663), order)
    p_E_2 = Taylor1(constant_term(tmp1661) + constant_term(tmp1664), order)
    tmp1666 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1667 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1668 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1669 = Taylor1(constant_term(tmp1667) + constant_term(tmp1668), order)
    p_E_3 = Taylor1(constant_term(tmp1666) + constant_term(tmp1669), order)
    tmp1671 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp1672 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp1673 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp1674 = Taylor1(constant_term(tmp1672) + constant_term(tmp1673), order)
    I_er_EM_1 = Taylor1(constant_term(tmp1671) + constant_term(tmp1674), order)
    tmp1676 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp1677 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp1678 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp1679 = Taylor1(constant_term(tmp1677) + constant_term(tmp1678), order)
    I_er_EM_2 = Taylor1(constant_term(tmp1676) + constant_term(tmp1679), order)
    tmp1681 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp1682 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp1683 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp1684 = Taylor1(constant_term(tmp1682) + constant_term(tmp1683), order)
    I_er_EM_3 = Taylor1(constant_term(tmp1681) + constant_term(tmp1684), order)
    tmp1686 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp1687 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp1688 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp1689 = Taylor1(constant_term(tmp1687) + constant_term(tmp1688), order)
    I_p_E_1 = Taylor1(constant_term(tmp1686) + constant_term(tmp1689), order)
    tmp1691 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp1692 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp1693 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp1694 = Taylor1(constant_term(tmp1692) + constant_term(tmp1693), order)
    I_p_E_2 = Taylor1(constant_term(tmp1691) + constant_term(tmp1694), order)
    tmp1696 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp1697 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp1698 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp1699 = Taylor1(constant_term(tmp1697) + constant_term(tmp1698), order)
    I_p_E_3 = Taylor1(constant_term(tmp1696) + constant_term(tmp1699), order)
    tmp1701 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp1702 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp1701) - constant_term(tmp1702), order)
    tmp1704 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp1705 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp1704) - constant_term(tmp1705), order)
    tmp1707 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp1708 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp1707) - constant_term(tmp1708), order)
    tmp1710 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp1711 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp1710) - constant_term(tmp1711), order)
    tmp1713 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp1714 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp1713) - constant_term(tmp1714), order)
    tmp1716 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp1717 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp1716) - constant_term(tmp1717), order)
    tmp1719 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp1720 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp1719) - constant_term(tmp1720), order)
    tmp1722 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp1723 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp1722) - constant_term(tmp1723), order)
    tmp1725 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp1726 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp1725) - constant_term(tmp1726), order)
    tmp1728 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp1729 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp1728) - constant_term(tmp1729), order)
    tmp1731 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp1732 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp1731) - constant_term(tmp1732), order)
    tmp1734 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp1735 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp1734) - constant_term(tmp1735), order)
    tmp1739 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp1921 = Taylor1(zero(constant_term(sin_ϕ[ea, mo])), order)
    tmp1740 = Taylor1(constant_term(7) * constant_term(tmp1739), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp1740), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp1745 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    tmp1922 = Taylor1(zero(constant_term(r_p1d2[mo, ea])), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp1745), order)
    tmp1747 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp1748 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp1749 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1748), order)
    tmp1750 = Taylor1(constant_term(tmp1747) + constant_term(tmp1749), order)
    tmp1752 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp1753 = Taylor1(constant_term(tmp1750) - constant_term(tmp1752), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1753), order)
    tmp1755 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp1756 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp1757 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1756), order)
    tmp1758 = Taylor1(constant_term(tmp1755) + constant_term(tmp1757), order)
    tmp1760 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp1761 = Taylor1(constant_term(tmp1758) - constant_term(tmp1760), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1761), order)
    tmp1763 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp1764 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp1765 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1764), order)
    tmp1766 = Taylor1(constant_term(tmp1763) + constant_term(tmp1765), order)
    tmp1768 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp1769 = Taylor1(constant_term(tmp1766) - constant_term(tmp1768), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1769), order)
    tmp1771 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1772 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1773 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1774 = Taylor1(constant_term(tmp1772) + constant_term(tmp1773), order)
    N_1_LMF = Taylor1(constant_term(tmp1771) + constant_term(tmp1774), order)
    tmp1776 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1777 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1778 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1779 = Taylor1(constant_term(tmp1777) + constant_term(tmp1778), order)
    N_2_LMF = Taylor1(constant_term(tmp1776) + constant_term(tmp1779), order)
    tmp1781 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1782 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1783 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1784 = Taylor1(constant_term(tmp1782) + constant_term(tmp1783), order)
    N_3_LMF = Taylor1(constant_term(tmp1781) + constant_term(tmp1784), order)
    tmp1786 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp1787 = Taylor1(constant_term(k_ν) * constant_term(tmp1786), order)
    tmp1788 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp1789 = Taylor1(constant_term(tmp1788) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp1787) - constant_term(tmp1789), order)
    tmp1791 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp1792 = Taylor1(constant_term(k_ν) * constant_term(tmp1791), order)
    tmp1793 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp1794 = Taylor1(constant_term(tmp1793) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp1792) + constant_term(tmp1794), order)
    tmp1796 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp1796), order)
    tmp1798 = Taylor1(constant_term(μ[mo]) * constant_term(N_1_LMF), order)
    tmp1799 = Taylor1(constant_term(N_MfigM_figE_1) + constant_term(tmp1798), order)
    tmp1800 = Taylor1(constant_term(tmp1799) + constant_term(N_cmb_1), order)
    tmp1801 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp1800) - constant_term(tmp1801), order)
    tmp1803 = Taylor1(constant_term(μ[mo]) * constant_term(N_2_LMF), order)
    tmp1804 = Taylor1(constant_term(N_MfigM_figE_2) + constant_term(tmp1803), order)
    tmp1805 = Taylor1(constant_term(tmp1804) + constant_term(N_cmb_2), order)
    tmp1806 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp1805) - constant_term(tmp1806), order)
    tmp1808 = Taylor1(constant_term(μ[mo]) * constant_term(N_3_LMF), order)
    tmp1809 = Taylor1(constant_term(N_MfigM_figE_3) + constant_term(tmp1808), order)
    tmp1810 = Taylor1(constant_term(tmp1809) + constant_term(N_cmb_3), order)
    tmp1811 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp1810) - constant_term(tmp1811), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp1816 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp1817 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp1816) - constant_term(tmp1817), order)
    tmp1819 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp1820 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp1819) - constant_term(tmp1820), order)
    tmp1822 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp1823 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp1822) - constant_term(tmp1823), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp1828 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1923 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1829 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp1828), order)
    tmp1830 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1924 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1831 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp1830), order)
    tmp1832 = Taylor1(constant_term(tmp1829) + constant_term(tmp1831), order)
    tmp1833 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp1925 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp1832) / constant_term(tmp1833), order)
    tmp1835 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1926 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1836 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp1835), order)
    tmp1837 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1927 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1838 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp1837), order)
    dq[6N + 2] = Taylor1(constant_term(tmp1836) - constant_term(tmp1838), order)
    tmp1840 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp1928 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp1841 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp1840), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp1841), order)
    tmp1843 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp1844 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp1845 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp1846 = Taylor1(constant_term(tmp1844) + constant_term(tmp1845), order)
    dq[6N + 4] = Taylor1(constant_term(tmp1843) + constant_term(tmp1846), order)
    tmp1848 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp1849 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp1850 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp1851 = Taylor1(constant_term(tmp1849) + constant_term(tmp1850), order)
    dq[6N + 5] = Taylor1(constant_term(tmp1848) + constant_term(tmp1851), order)
    tmp1853 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp1854 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp1855 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp1856 = Taylor1(constant_term(tmp1854) + constant_term(tmp1855), order)
    dq[6N + 6] = Taylor1(constant_term(tmp1853) + constant_term(tmp1856), order)
    tmp1858 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp1929 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp1859 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp1858), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp1859)), order)
    tmp1861 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp1930 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp1862 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp1861), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp1862), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    dq[6N + 13] = Taylor1(identity(constant_term(zero_q_1)), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp1133, tmp1134, tmp1135, tmp1136, tmp1137, tmp1138, tmp1139, tmp1140, tmp1142, tmp1143, tmp1144, tmp1145, tmp1146, tmp1147, tmp1148, tmp1149, tmp1150, tmp1152, tmp1153, tmp1155, tmp1156, tmp1157, tmp1158, tmp1159, tmp1160, tmp1161, tmp1162, tmp1164, tmp1165, tmp1166, tmp1167, tmp1168, tmp1169, tmp1170, tmp1171, tmp1173, tmp1174, tmp1175, tmp1177, tmp1178, tmp1180, tmp1181, tmp1184, tmp1185, tmp1186, tmp1187, tmp1189, tmp1190, tmp1191, tmp1192, tmp1193, tmp1195, tmp1196, tmp1197, tmp1198, tmp1200, tmp1201, tmp1202, tmp1203, tmp1204, tmp1206, tmp1207, tmp1208, tmp1209, tmp1211, tmp1212, tmp1213, tmp1214, tmp1215, tmp1217, tmp1218, tmp1219, tmp1220, tmp1222, tmp1223, tmp1224, tmp1225, tmp1227, tmp1228, tmp1229, tmp1230, tmp1302, tmp1304, tmp1305, tmp1307, tmp1308, tmp1311, tmp1313, tmp1315, tmp1316, tmp1599, tmp1600, tmp1601, tmp1602, tmp1604, tmp1605, tmp1606, tmp1607, tmp1609, tmp1610, tmp1611, tmp1612, tmp1614, tmp1615, tmp1617, tmp1618, tmp1620, tmp1621, tmp1623, tmp1624, tmp1625, tmp1626, tmp1628, tmp1629, tmp1630, tmp1631, tmp1633, tmp1634, tmp1635, tmp1636, tmp1641, tmp1642, tmp1643, tmp1644, tmp1646, tmp1647, tmp1648, tmp1649, tmp1651, tmp1652, tmp1653, tmp1654, tmp1656, tmp1657, tmp1658, tmp1659, tmp1661, tmp1662, tmp1663, tmp1664, tmp1666, tmp1667, tmp1668, tmp1669, tmp1671, tmp1672, tmp1673, tmp1674, tmp1676, tmp1677, tmp1678, tmp1679, tmp1681, tmp1682, tmp1683, tmp1684, tmp1686, tmp1687, tmp1688, tmp1689, tmp1691, tmp1692, tmp1693, tmp1694, tmp1696, tmp1697, tmp1698, tmp1699, tmp1701, tmp1702, tmp1704, tmp1705, tmp1707, tmp1708, tmp1710, tmp1711, tmp1713, tmp1714, tmp1716, tmp1717, tmp1719, tmp1720, tmp1722, tmp1723, tmp1725, tmp1726, tmp1728, tmp1729, tmp1731, tmp1732, tmp1734, tmp1735, tmp1739, tmp1740, tmp1745, tmp1747, tmp1748, tmp1749, tmp1750, tmp1752, tmp1753, tmp1755, tmp1756, tmp1757, tmp1758, tmp1760, tmp1761, tmp1763, tmp1764, tmp1765, tmp1766, tmp1768, tmp1769, tmp1771, tmp1772, tmp1773, tmp1774, tmp1776, tmp1777, tmp1778, tmp1779, tmp1781, tmp1782, tmp1783, tmp1784, tmp1786, tmp1787, tmp1788, tmp1789, tmp1791, tmp1792, tmp1793, tmp1794, tmp1796, tmp1798, tmp1799, tmp1800, tmp1801, tmp1803, tmp1804, tmp1805, tmp1806, tmp1808, tmp1809, tmp1810, tmp1811, tmp1816, tmp1817, tmp1819, tmp1820, tmp1822, tmp1823, tmp1828, tmp1829, tmp1830, tmp1831, tmp1832, tmp1833, tmp1835, tmp1836, tmp1837, tmp1838, tmp1840, tmp1841, tmp1843, tmp1844, tmp1845, tmp1846, tmp1848, tmp1849, tmp1850, tmp1851, tmp1853, tmp1854, tmp1855, tmp1856, tmp1858, tmp1859, tmp1861, tmp1862, ϕ_m, θ_m, ψ_m, tmp1867, tmp1868, tmp1869, tmp1870, tmp1871, tmp1872, tmp1873, tmp1874, tmp1875, tmp1876, tmp1877, tmp1878, tmp1879, tmp1880, tmp1881, tmp1882, tmp1883, tmp1884, tmp1885, tmp1886, tmp1887, tmp1888, tmp1889, tmp1890, tmp1891, tmp1892, tmp1893, tmp1894, tmp1895, ϕ_c, tmp1896, tmp1897, tmp1898, tmp1899, tmp1900, tmp1901, tmp1902, tmp1903, tmp1904, tmp1905, tmp1906, tmp1907, ω_c_CE_1, ω_c_CE_2, ω_c_CE_3, J2M_t, C22M_t, C21M_t, S21M_t, S22M_t, Iω_x, Iω_y, Iω_z, ωxIω_x, ωxIω_y, ωxIω_z, dIω_x, dIω_y, dIω_z, er_EM_I_1, er_EM_I_2, er_EM_I_3, p_E_I_1, p_E_I_2, p_E_I_3, er_EM_1, er_EM_2, er_EM_3, p_E_1, p_E_2, p_E_3, I_er_EM_1, I_er_EM_2, I_er_EM_3, I_p_E_1, I_p_E_2, I_p_E_3, er_EM_cross_I_er_EM_1, er_EM_cross_I_er_EM_2, er_EM_cross_I_er_EM_3, er_EM_cross_I_p_E_1, er_EM_cross_I_p_E_2, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_1, p_E_cross_I_er_EM_2, p_E_cross_I_er_EM_3, p_E_cross_I_p_E_1, p_E_cross_I_p_E_2, p_E_cross_I_p_E_3, tmp1921, one_minus_7sin2ϕEM, two_sinϕEM, tmp1922, N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_1, N_MfigM_figE_2, N_MfigM_figE_3, N_1_LMF, N_2_LMF, N_3_LMF, N_cmb_1, N_cmb_2, N_cmb_3, I_dω_1, I_dω_2, I_dω_3, Ic_ωc_1, Ic_ωc_2, Ic_ωc_3, m_ωm_x_Icωc_1, m_ωm_x_Icωc_2, m_ωm_x_Icωc_3, Ic_dωc_1, Ic_dωc_2, Ic_dωc_3, tmp1923, tmp1924, tmp1925, tmp1926, tmp1927, tmp1928, tmp1929, tmp1930], [newtonX, newtonY, newtonZ, newtonianNb_Potential, v2, pntempX, pntempY, pntempZ, postNewtonX, postNewtonY, postNewtonZ, accX, accY, accZ, N_MfigM_pmA_x, N_MfigM_pmA_y, N_MfigM_pmA_z, temp_N_M_x, temp_N_M_y, temp_N_M_z, N_MfigM, J2_t, tmp1239, tmp1241, tmp1244, tmp1246, tmp1249, tmp1251, tmp1295, tmp1913, tmp1297, tmp1914, tmp1298, tmp1300, tmp1915], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, _2v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, X_bf_1, Y_bf_1, Z_bf_1, X_bf_2, Y_bf_2, Z_bf_2, X_bf_3, Y_bf_3, Z_bf_3, X_bf, Y_bf, Z_bf, F_JCS_x, F_JCS_y, F_JCS_z, temp_accX_j, temp_accY_j, temp_accZ_j, temp_accX_i, temp_accY_i, temp_accZ_i, sin_ϕ, cos_ϕ, sin_λ, cos_λ, r_xy, r_p4, F_CS_ξ_36, F_CS_η_36, F_CS_ζ_36, F_J_ξ_36, F_J_ζ_36, F_J_ξ, F_J_ζ, F_CS_ξ, F_CS_η, F_CS_ζ, F_JCS_ξ, F_JCS_η, F_JCS_ζ, mantlef2coref, pn2x, pn2y, pn2z, tmp1259, tmp1262, tmp1908, tmp1264, tmp1909, tmp1265, tmp1267, tmp1910, tmp1911, tmp1912, tmp1275, tmp1276, tmp1287, temp_001, tmp1289, temp_002, tmp1291, temp_003, temp_004, tmp1328, tmp1330, tmp1332, tmp1336, tmp1916, tmp1338, tmp1917, tmp1339, tmp1918, tmp1919, tmp1445, tmp1446, tmp1449, tmp1450, tmp1456, tmp1459, tmp1521, tmp1523, tmp1525, tmp1527, tmp1529, tmp1531, tmp1533, tmp1534, tmp1535, tmp1537, tmp1538, tmp1539, tmp1541, tmp1542, tmp1543, tmp1555, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp1561, Rij_dot_Vi, tmp1564, tmp1920, pn1t7, tmp1567, pn1t2_7, tmp1574, tmp1575, tmp1576, tmp1584, termpnx, sumpnx, tmp1587, termpny, sumpny, tmp1590, termpnz, sumpnz], [P_n, dP_n, temp_fjξ, temp_fjζ, temp_rn, sin_mλ, cos_mλ, RotM, tmp1344, tmp1345, tmp1346, tmp1348, tmp1349, tmp1354, tmp1355, tmp1357, tmp1358, tmp1359, tmp1361, tmp1362, tmp1363, tmp1365, tmp1366, tmp1367, tmp1368, tmp1371, tmp1372, tmp1374, tmp1375, tmp1394, tmp1395, tmp1396, tmp1399, tmp1400, tmp1401, tmp1406, tmp1407, tmp1408, tmp1411, tmp1412, tmp1413, tmp1417, tmp1418, tmp1419, tmp1421, tmp1422, tmp1423], [temp_CS_ξ, temp_CS_η, temp_CS_ζ, Cnm_cosmλ, Cnm_sinmλ, Snm_cosmλ, Snm_sinmλ, secϕ_P_nm, P_nm, cosϕ_dP_nm, Rb2p, Gc2p, tmp1377, tmp1380, tmp1382, tmp1384, tmp1385, tmp1386, tmp1389, tmp1390, tmp1391, tmp1393, tmp1397, tmp1398, tmp1402, tmp1403, tmp1405, tmp1409, tmp1410, tmp1414, tmp1415, tmp1420, tmp1424, tmp1425, tmp1431, tmp1432, tmp1433, tmp1434, tmp1436, tmp1437, tmp1438, tmp1439, tmp1441, tmp1442, tmp1443, tmp1461, tmp1462, tmp1463, tmp1464, tmp1466, tmp1467, tmp1468, tmp1469, tmp1471, tmp1472, tmp1473, tmp1474, tmp1476, tmp1477, tmp1478, tmp1479, tmp1481, tmp1482, tmp1483, tmp1484, tmp1486, tmp1487, tmp1488, tmp1489, tmp1491, tmp1492, tmp1493, tmp1494, tmp1496, tmp1497, tmp1498, tmp1499, tmp1501, tmp1502, tmp1503, tmp1504, tmp1506, tmp1507, tmp1508, tmp1509, tmp1511, tmp1512, tmp1513, tmp1514, tmp1516, tmp1517, tmp1518, tmp1519])
end
# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S_threads!
function TaylorIntegration.jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp1133 = __ralloc.v0[1]
    tmp1134 = __ralloc.v0[2]
    tmp1135 = __ralloc.v0[3]
    tmp1136 = __ralloc.v0[4]
    tmp1137 = __ralloc.v0[5]
    tmp1138 = __ralloc.v0[6]
    tmp1139 = __ralloc.v0[7]
    tmp1140 = __ralloc.v0[8]
    tmp1142 = __ralloc.v0[9]
    tmp1143 = __ralloc.v0[10]
    tmp1144 = __ralloc.v0[11]
    tmp1145 = __ralloc.v0[12]
    tmp1146 = __ralloc.v0[13]
    tmp1147 = __ralloc.v0[14]
    tmp1148 = __ralloc.v0[15]
    tmp1149 = __ralloc.v0[16]
    tmp1150 = __ralloc.v0[17]
    tmp1152 = __ralloc.v0[18]
    tmp1153 = __ralloc.v0[19]
    tmp1155 = __ralloc.v0[20]
    tmp1156 = __ralloc.v0[21]
    tmp1157 = __ralloc.v0[22]
    tmp1158 = __ralloc.v0[23]
    tmp1159 = __ralloc.v0[24]
    tmp1160 = __ralloc.v0[25]
    tmp1161 = __ralloc.v0[26]
    tmp1162 = __ralloc.v0[27]
    tmp1164 = __ralloc.v0[28]
    tmp1165 = __ralloc.v0[29]
    tmp1166 = __ralloc.v0[30]
    tmp1167 = __ralloc.v0[31]
    tmp1168 = __ralloc.v0[32]
    tmp1169 = __ralloc.v0[33]
    tmp1170 = __ralloc.v0[34]
    tmp1171 = __ralloc.v0[35]
    tmp1173 = __ralloc.v0[36]
    tmp1174 = __ralloc.v0[37]
    tmp1175 = __ralloc.v0[38]
    tmp1177 = __ralloc.v0[39]
    tmp1178 = __ralloc.v0[40]
    tmp1180 = __ralloc.v0[41]
    tmp1181 = __ralloc.v0[42]
    tmp1184 = __ralloc.v0[43]
    tmp1185 = __ralloc.v0[44]
    tmp1186 = __ralloc.v0[45]
    tmp1187 = __ralloc.v0[46]
    tmp1189 = __ralloc.v0[47]
    tmp1190 = __ralloc.v0[48]
    tmp1191 = __ralloc.v0[49]
    tmp1192 = __ralloc.v0[50]
    tmp1193 = __ralloc.v0[51]
    tmp1195 = __ralloc.v0[52]
    tmp1196 = __ralloc.v0[53]
    tmp1197 = __ralloc.v0[54]
    tmp1198 = __ralloc.v0[55]
    tmp1200 = __ralloc.v0[56]
    tmp1201 = __ralloc.v0[57]
    tmp1202 = __ralloc.v0[58]
    tmp1203 = __ralloc.v0[59]
    tmp1204 = __ralloc.v0[60]
    tmp1206 = __ralloc.v0[61]
    tmp1207 = __ralloc.v0[62]
    tmp1208 = __ralloc.v0[63]
    tmp1209 = __ralloc.v0[64]
    tmp1211 = __ralloc.v0[65]
    tmp1212 = __ralloc.v0[66]
    tmp1213 = __ralloc.v0[67]
    tmp1214 = __ralloc.v0[68]
    tmp1215 = __ralloc.v0[69]
    tmp1217 = __ralloc.v0[70]
    tmp1218 = __ralloc.v0[71]
    tmp1219 = __ralloc.v0[72]
    tmp1220 = __ralloc.v0[73]
    tmp1222 = __ralloc.v0[74]
    tmp1223 = __ralloc.v0[75]
    tmp1224 = __ralloc.v0[76]
    tmp1225 = __ralloc.v0[77]
    tmp1227 = __ralloc.v0[78]
    tmp1228 = __ralloc.v0[79]
    tmp1229 = __ralloc.v0[80]
    tmp1230 = __ralloc.v0[81]
    tmp1302 = __ralloc.v0[82]
    tmp1304 = __ralloc.v0[83]
    tmp1305 = __ralloc.v0[84]
    tmp1307 = __ralloc.v0[85]
    tmp1308 = __ralloc.v0[86]
    tmp1311 = __ralloc.v0[87]
    tmp1313 = __ralloc.v0[88]
    tmp1315 = __ralloc.v0[89]
    tmp1316 = __ralloc.v0[90]
    tmp1599 = __ralloc.v0[91]
    tmp1600 = __ralloc.v0[92]
    tmp1601 = __ralloc.v0[93]
    tmp1602 = __ralloc.v0[94]
    tmp1604 = __ralloc.v0[95]
    tmp1605 = __ralloc.v0[96]
    tmp1606 = __ralloc.v0[97]
    tmp1607 = __ralloc.v0[98]
    tmp1609 = __ralloc.v0[99]
    tmp1610 = __ralloc.v0[100]
    tmp1611 = __ralloc.v0[101]
    tmp1612 = __ralloc.v0[102]
    tmp1614 = __ralloc.v0[103]
    tmp1615 = __ralloc.v0[104]
    tmp1617 = __ralloc.v0[105]
    tmp1618 = __ralloc.v0[106]
    tmp1620 = __ralloc.v0[107]
    tmp1621 = __ralloc.v0[108]
    tmp1623 = __ralloc.v0[109]
    tmp1624 = __ralloc.v0[110]
    tmp1625 = __ralloc.v0[111]
    tmp1626 = __ralloc.v0[112]
    tmp1628 = __ralloc.v0[113]
    tmp1629 = __ralloc.v0[114]
    tmp1630 = __ralloc.v0[115]
    tmp1631 = __ralloc.v0[116]
    tmp1633 = __ralloc.v0[117]
    tmp1634 = __ralloc.v0[118]
    tmp1635 = __ralloc.v0[119]
    tmp1636 = __ralloc.v0[120]
    tmp1641 = __ralloc.v0[121]
    tmp1642 = __ralloc.v0[122]
    tmp1643 = __ralloc.v0[123]
    tmp1644 = __ralloc.v0[124]
    tmp1646 = __ralloc.v0[125]
    tmp1647 = __ralloc.v0[126]
    tmp1648 = __ralloc.v0[127]
    tmp1649 = __ralloc.v0[128]
    tmp1651 = __ralloc.v0[129]
    tmp1652 = __ralloc.v0[130]
    tmp1653 = __ralloc.v0[131]
    tmp1654 = __ralloc.v0[132]
    tmp1656 = __ralloc.v0[133]
    tmp1657 = __ralloc.v0[134]
    tmp1658 = __ralloc.v0[135]
    tmp1659 = __ralloc.v0[136]
    tmp1661 = __ralloc.v0[137]
    tmp1662 = __ralloc.v0[138]
    tmp1663 = __ralloc.v0[139]
    tmp1664 = __ralloc.v0[140]
    tmp1666 = __ralloc.v0[141]
    tmp1667 = __ralloc.v0[142]
    tmp1668 = __ralloc.v0[143]
    tmp1669 = __ralloc.v0[144]
    tmp1671 = __ralloc.v0[145]
    tmp1672 = __ralloc.v0[146]
    tmp1673 = __ralloc.v0[147]
    tmp1674 = __ralloc.v0[148]
    tmp1676 = __ralloc.v0[149]
    tmp1677 = __ralloc.v0[150]
    tmp1678 = __ralloc.v0[151]
    tmp1679 = __ralloc.v0[152]
    tmp1681 = __ralloc.v0[153]
    tmp1682 = __ralloc.v0[154]
    tmp1683 = __ralloc.v0[155]
    tmp1684 = __ralloc.v0[156]
    tmp1686 = __ralloc.v0[157]
    tmp1687 = __ralloc.v0[158]
    tmp1688 = __ralloc.v0[159]
    tmp1689 = __ralloc.v0[160]
    tmp1691 = __ralloc.v0[161]
    tmp1692 = __ralloc.v0[162]
    tmp1693 = __ralloc.v0[163]
    tmp1694 = __ralloc.v0[164]
    tmp1696 = __ralloc.v0[165]
    tmp1697 = __ralloc.v0[166]
    tmp1698 = __ralloc.v0[167]
    tmp1699 = __ralloc.v0[168]
    tmp1701 = __ralloc.v0[169]
    tmp1702 = __ralloc.v0[170]
    tmp1704 = __ralloc.v0[171]
    tmp1705 = __ralloc.v0[172]
    tmp1707 = __ralloc.v0[173]
    tmp1708 = __ralloc.v0[174]
    tmp1710 = __ralloc.v0[175]
    tmp1711 = __ralloc.v0[176]
    tmp1713 = __ralloc.v0[177]
    tmp1714 = __ralloc.v0[178]
    tmp1716 = __ralloc.v0[179]
    tmp1717 = __ralloc.v0[180]
    tmp1719 = __ralloc.v0[181]
    tmp1720 = __ralloc.v0[182]
    tmp1722 = __ralloc.v0[183]
    tmp1723 = __ralloc.v0[184]
    tmp1725 = __ralloc.v0[185]
    tmp1726 = __ralloc.v0[186]
    tmp1728 = __ralloc.v0[187]
    tmp1729 = __ralloc.v0[188]
    tmp1731 = __ralloc.v0[189]
    tmp1732 = __ralloc.v0[190]
    tmp1734 = __ralloc.v0[191]
    tmp1735 = __ralloc.v0[192]
    tmp1739 = __ralloc.v0[193]
    tmp1740 = __ralloc.v0[194]
    tmp1745 = __ralloc.v0[195]
    tmp1747 = __ralloc.v0[196]
    tmp1748 = __ralloc.v0[197]
    tmp1749 = __ralloc.v0[198]
    tmp1750 = __ralloc.v0[199]
    tmp1752 = __ralloc.v0[200]
    tmp1753 = __ralloc.v0[201]
    tmp1755 = __ralloc.v0[202]
    tmp1756 = __ralloc.v0[203]
    tmp1757 = __ralloc.v0[204]
    tmp1758 = __ralloc.v0[205]
    tmp1760 = __ralloc.v0[206]
    tmp1761 = __ralloc.v0[207]
    tmp1763 = __ralloc.v0[208]
    tmp1764 = __ralloc.v0[209]
    tmp1765 = __ralloc.v0[210]
    tmp1766 = __ralloc.v0[211]
    tmp1768 = __ralloc.v0[212]
    tmp1769 = __ralloc.v0[213]
    tmp1771 = __ralloc.v0[214]
    tmp1772 = __ralloc.v0[215]
    tmp1773 = __ralloc.v0[216]
    tmp1774 = __ralloc.v0[217]
    tmp1776 = __ralloc.v0[218]
    tmp1777 = __ralloc.v0[219]
    tmp1778 = __ralloc.v0[220]
    tmp1779 = __ralloc.v0[221]
    tmp1781 = __ralloc.v0[222]
    tmp1782 = __ralloc.v0[223]
    tmp1783 = __ralloc.v0[224]
    tmp1784 = __ralloc.v0[225]
    tmp1786 = __ralloc.v0[226]
    tmp1787 = __ralloc.v0[227]
    tmp1788 = __ralloc.v0[228]
    tmp1789 = __ralloc.v0[229]
    tmp1791 = __ralloc.v0[230]
    tmp1792 = __ralloc.v0[231]
    tmp1793 = __ralloc.v0[232]
    tmp1794 = __ralloc.v0[233]
    tmp1796 = __ralloc.v0[234]
    tmp1798 = __ralloc.v0[235]
    tmp1799 = __ralloc.v0[236]
    tmp1800 = __ralloc.v0[237]
    tmp1801 = __ralloc.v0[238]
    tmp1803 = __ralloc.v0[239]
    tmp1804 = __ralloc.v0[240]
    tmp1805 = __ralloc.v0[241]
    tmp1806 = __ralloc.v0[242]
    tmp1808 = __ralloc.v0[243]
    tmp1809 = __ralloc.v0[244]
    tmp1810 = __ralloc.v0[245]
    tmp1811 = __ralloc.v0[246]
    tmp1816 = __ralloc.v0[247]
    tmp1817 = __ralloc.v0[248]
    tmp1819 = __ralloc.v0[249]
    tmp1820 = __ralloc.v0[250]
    tmp1822 = __ralloc.v0[251]
    tmp1823 = __ralloc.v0[252]
    tmp1828 = __ralloc.v0[253]
    tmp1829 = __ralloc.v0[254]
    tmp1830 = __ralloc.v0[255]
    tmp1831 = __ralloc.v0[256]
    tmp1832 = __ralloc.v0[257]
    tmp1833 = __ralloc.v0[258]
    tmp1835 = __ralloc.v0[259]
    tmp1836 = __ralloc.v0[260]
    tmp1837 = __ralloc.v0[261]
    tmp1838 = __ralloc.v0[262]
    tmp1840 = __ralloc.v0[263]
    tmp1841 = __ralloc.v0[264]
    tmp1843 = __ralloc.v0[265]
    tmp1844 = __ralloc.v0[266]
    tmp1845 = __ralloc.v0[267]
    tmp1846 = __ralloc.v0[268]
    tmp1848 = __ralloc.v0[269]
    tmp1849 = __ralloc.v0[270]
    tmp1850 = __ralloc.v0[271]
    tmp1851 = __ralloc.v0[272]
    tmp1853 = __ralloc.v0[273]
    tmp1854 = __ralloc.v0[274]
    tmp1855 = __ralloc.v0[275]
    tmp1856 = __ralloc.v0[276]
    tmp1858 = __ralloc.v0[277]
    tmp1859 = __ralloc.v0[278]
    tmp1861 = __ralloc.v0[279]
    tmp1862 = __ralloc.v0[280]
    ϕ_m = __ralloc.v0[281]
    θ_m = __ralloc.v0[282]
    ψ_m = __ralloc.v0[283]
    tmp1867 = __ralloc.v0[284]
    tmp1868 = __ralloc.v0[285]
    tmp1869 = __ralloc.v0[286]
    tmp1870 = __ralloc.v0[287]
    tmp1871 = __ralloc.v0[288]
    tmp1872 = __ralloc.v0[289]
    tmp1873 = __ralloc.v0[290]
    tmp1874 = __ralloc.v0[291]
    tmp1875 = __ralloc.v0[292]
    tmp1876 = __ralloc.v0[293]
    tmp1877 = __ralloc.v0[294]
    tmp1878 = __ralloc.v0[295]
    tmp1879 = __ralloc.v0[296]
    tmp1880 = __ralloc.v0[297]
    tmp1881 = __ralloc.v0[298]
    tmp1882 = __ralloc.v0[299]
    tmp1883 = __ralloc.v0[300]
    tmp1884 = __ralloc.v0[301]
    tmp1885 = __ralloc.v0[302]
    tmp1886 = __ralloc.v0[303]
    tmp1887 = __ralloc.v0[304]
    tmp1888 = __ralloc.v0[305]
    tmp1889 = __ralloc.v0[306]
    tmp1890 = __ralloc.v0[307]
    tmp1891 = __ralloc.v0[308]
    tmp1892 = __ralloc.v0[309]
    tmp1893 = __ralloc.v0[310]
    tmp1894 = __ralloc.v0[311]
    tmp1895 = __ralloc.v0[312]
    ϕ_c = __ralloc.v0[313]
    tmp1896 = __ralloc.v0[314]
    tmp1897 = __ralloc.v0[315]
    tmp1898 = __ralloc.v0[316]
    tmp1899 = __ralloc.v0[317]
    tmp1900 = __ralloc.v0[318]
    tmp1901 = __ralloc.v0[319]
    tmp1902 = __ralloc.v0[320]
    tmp1903 = __ralloc.v0[321]
    tmp1904 = __ralloc.v0[322]
    tmp1905 = __ralloc.v0[323]
    tmp1906 = __ralloc.v0[324]
    tmp1907 = __ralloc.v0[325]
    ω_c_CE_1 = __ralloc.v0[326]
    ω_c_CE_2 = __ralloc.v0[327]
    ω_c_CE_3 = __ralloc.v0[328]
    J2M_t = __ralloc.v0[329]
    C22M_t = __ralloc.v0[330]
    C21M_t = __ralloc.v0[331]
    S21M_t = __ralloc.v0[332]
    S22M_t = __ralloc.v0[333]
    Iω_x = __ralloc.v0[334]
    Iω_y = __ralloc.v0[335]
    Iω_z = __ralloc.v0[336]
    ωxIω_x = __ralloc.v0[337]
    ωxIω_y = __ralloc.v0[338]
    ωxIω_z = __ralloc.v0[339]
    dIω_x = __ralloc.v0[340]
    dIω_y = __ralloc.v0[341]
    dIω_z = __ralloc.v0[342]
    er_EM_I_1 = __ralloc.v0[343]
    er_EM_I_2 = __ralloc.v0[344]
    er_EM_I_3 = __ralloc.v0[345]
    p_E_I_1 = __ralloc.v0[346]
    p_E_I_2 = __ralloc.v0[347]
    p_E_I_3 = __ralloc.v0[348]
    er_EM_1 = __ralloc.v0[349]
    er_EM_2 = __ralloc.v0[350]
    er_EM_3 = __ralloc.v0[351]
    p_E_1 = __ralloc.v0[352]
    p_E_2 = __ralloc.v0[353]
    p_E_3 = __ralloc.v0[354]
    I_er_EM_1 = __ralloc.v0[355]
    I_er_EM_2 = __ralloc.v0[356]
    I_er_EM_3 = __ralloc.v0[357]
    I_p_E_1 = __ralloc.v0[358]
    I_p_E_2 = __ralloc.v0[359]
    I_p_E_3 = __ralloc.v0[360]
    er_EM_cross_I_er_EM_1 = __ralloc.v0[361]
    er_EM_cross_I_er_EM_2 = __ralloc.v0[362]
    er_EM_cross_I_er_EM_3 = __ralloc.v0[363]
    er_EM_cross_I_p_E_1 = __ralloc.v0[364]
    er_EM_cross_I_p_E_2 = __ralloc.v0[365]
    er_EM_cross_I_p_E_3 = __ralloc.v0[366]
    p_E_cross_I_er_EM_1 = __ralloc.v0[367]
    p_E_cross_I_er_EM_2 = __ralloc.v0[368]
    p_E_cross_I_er_EM_3 = __ralloc.v0[369]
    p_E_cross_I_p_E_1 = __ralloc.v0[370]
    p_E_cross_I_p_E_2 = __ralloc.v0[371]
    p_E_cross_I_p_E_3 = __ralloc.v0[372]
    tmp1921 = __ralloc.v0[373]
    one_minus_7sin2ϕEM = __ralloc.v0[374]
    two_sinϕEM = __ralloc.v0[375]
    tmp1922 = __ralloc.v0[376]
    N_MfigM_figE_factor_div_rEMp5 = __ralloc.v0[377]
    N_MfigM_figE_1 = __ralloc.v0[378]
    N_MfigM_figE_2 = __ralloc.v0[379]
    N_MfigM_figE_3 = __ralloc.v0[380]
    N_1_LMF = __ralloc.v0[381]
    N_2_LMF = __ralloc.v0[382]
    N_3_LMF = __ralloc.v0[383]
    N_cmb_1 = __ralloc.v0[384]
    N_cmb_2 = __ralloc.v0[385]
    N_cmb_3 = __ralloc.v0[386]
    I_dω_1 = __ralloc.v0[387]
    I_dω_2 = __ralloc.v0[388]
    I_dω_3 = __ralloc.v0[389]
    Ic_ωc_1 = __ralloc.v0[390]
    Ic_ωc_2 = __ralloc.v0[391]
    Ic_ωc_3 = __ralloc.v0[392]
    m_ωm_x_Icωc_1 = __ralloc.v0[393]
    m_ωm_x_Icωc_2 = __ralloc.v0[394]
    m_ωm_x_Icωc_3 = __ralloc.v0[395]
    Ic_dωc_1 = __ralloc.v0[396]
    Ic_dωc_2 = __ralloc.v0[397]
    Ic_dωc_3 = __ralloc.v0[398]
    tmp1923 = __ralloc.v0[399]
    tmp1924 = __ralloc.v0[400]
    tmp1925 = __ralloc.v0[401]
    tmp1926 = __ralloc.v0[402]
    tmp1927 = __ralloc.v0[403]
    tmp1928 = __ralloc.v0[404]
    tmp1929 = __ralloc.v0[405]
    tmp1930 = __ralloc.v0[406]
    newtonX = __ralloc.v1[1]
    newtonY = __ralloc.v1[2]
    newtonZ = __ralloc.v1[3]
    newtonianNb_Potential = __ralloc.v1[4]
    v2 = __ralloc.v1[5]
    pntempX = __ralloc.v1[6]
    pntempY = __ralloc.v1[7]
    pntempZ = __ralloc.v1[8]
    postNewtonX = __ralloc.v1[9]
    postNewtonY = __ralloc.v1[10]
    postNewtonZ = __ralloc.v1[11]
    accX = __ralloc.v1[12]
    accY = __ralloc.v1[13]
    accZ = __ralloc.v1[14]
    N_MfigM_pmA_x = __ralloc.v1[15]
    N_MfigM_pmA_y = __ralloc.v1[16]
    N_MfigM_pmA_z = __ralloc.v1[17]
    temp_N_M_x = __ralloc.v1[18]
    temp_N_M_y = __ralloc.v1[19]
    temp_N_M_z = __ralloc.v1[20]
    N_MfigM = __ralloc.v1[21]
    J2_t = __ralloc.v1[22]
    tmp1239 = __ralloc.v1[23]
    tmp1241 = __ralloc.v1[24]
    tmp1244 = __ralloc.v1[25]
    tmp1246 = __ralloc.v1[26]
    tmp1249 = __ralloc.v1[27]
    tmp1251 = __ralloc.v1[28]
    tmp1295 = __ralloc.v1[29]
    tmp1913 = __ralloc.v1[30]
    tmp1297 = __ralloc.v1[31]
    tmp1914 = __ralloc.v1[32]
    tmp1298 = __ralloc.v1[33]
    tmp1300 = __ralloc.v1[34]
    tmp1915 = __ralloc.v1[35]
    X = __ralloc.v2[1]
    Y = __ralloc.v2[2]
    Z = __ralloc.v2[3]
    r_p2 = __ralloc.v2[4]
    r_p1d2 = __ralloc.v2[5]
    r_p3d2 = __ralloc.v2[6]
    r_p7d2 = __ralloc.v2[7]
    newtonianCoeff = __ralloc.v2[8]
    U = __ralloc.v2[9]
    V = __ralloc.v2[10]
    W = __ralloc.v2[11]
    _4U_m_3X = __ralloc.v2[12]
    _4V_m_3Y = __ralloc.v2[13]
    _4W_m_3Z = __ralloc.v2[14]
    UU = __ralloc.v2[15]
    VV = __ralloc.v2[16]
    WW = __ralloc.v2[17]
    newtonian1b_Potential = __ralloc.v2[18]
    newton_acc_X = __ralloc.v2[19]
    newton_acc_Y = __ralloc.v2[20]
    newton_acc_Z = __ralloc.v2[21]
    _2v2 = __ralloc.v2[22]
    vi_dot_vj = __ralloc.v2[23]
    pn2 = __ralloc.v2[24]
    U_t_pn2 = __ralloc.v2[25]
    V_t_pn2 = __ralloc.v2[26]
    W_t_pn2 = __ralloc.v2[27]
    pn3 = __ralloc.v2[28]
    pNX_t_pn3 = __ralloc.v2[29]
    pNY_t_pn3 = __ralloc.v2[30]
    pNZ_t_pn3 = __ralloc.v2[31]
    _4ϕj = __ralloc.v2[32]
    ϕi_plus_4ϕj = __ralloc.v2[33]
    sj2_plus_2si2 = __ralloc.v2[34]
    sj2_plus_2si2_minus_4vivj = __ralloc.v2[35]
    ϕs_and_vs = __ralloc.v2[36]
    pn1t1_7 = __ralloc.v2[37]
    pNX_t_X = __ralloc.v2[38]
    pNY_t_Y = __ralloc.v2[39]
    pNZ_t_Z = __ralloc.v2[40]
    pn1 = __ralloc.v2[41]
    X_t_pn1 = __ralloc.v2[42]
    Y_t_pn1 = __ralloc.v2[43]
    Z_t_pn1 = __ralloc.v2[44]
    X_bf_1 = __ralloc.v2[45]
    Y_bf_1 = __ralloc.v2[46]
    Z_bf_1 = __ralloc.v2[47]
    X_bf_2 = __ralloc.v2[48]
    Y_bf_2 = __ralloc.v2[49]
    Z_bf_2 = __ralloc.v2[50]
    X_bf_3 = __ralloc.v2[51]
    Y_bf_3 = __ralloc.v2[52]
    Z_bf_3 = __ralloc.v2[53]
    X_bf = __ralloc.v2[54]
    Y_bf = __ralloc.v2[55]
    Z_bf = __ralloc.v2[56]
    F_JCS_x = __ralloc.v2[57]
    F_JCS_y = __ralloc.v2[58]
    F_JCS_z = __ralloc.v2[59]
    temp_accX_j = __ralloc.v2[60]
    temp_accY_j = __ralloc.v2[61]
    temp_accZ_j = __ralloc.v2[62]
    temp_accX_i = __ralloc.v2[63]
    temp_accY_i = __ralloc.v2[64]
    temp_accZ_i = __ralloc.v2[65]
    sin_ϕ = __ralloc.v2[66]
    cos_ϕ = __ralloc.v2[67]
    sin_λ = __ralloc.v2[68]
    cos_λ = __ralloc.v2[69]
    r_xy = __ralloc.v2[70]
    r_p4 = __ralloc.v2[71]
    F_CS_ξ_36 = __ralloc.v2[72]
    F_CS_η_36 = __ralloc.v2[73]
    F_CS_ζ_36 = __ralloc.v2[74]
    F_J_ξ_36 = __ralloc.v2[75]
    F_J_ζ_36 = __ralloc.v2[76]
    F_J_ξ = __ralloc.v2[77]
    F_J_ζ = __ralloc.v2[78]
    F_CS_ξ = __ralloc.v2[79]
    F_CS_η = __ralloc.v2[80]
    F_CS_ζ = __ralloc.v2[81]
    F_JCS_ξ = __ralloc.v2[82]
    F_JCS_η = __ralloc.v2[83]
    F_JCS_ζ = __ralloc.v2[84]
    mantlef2coref = __ralloc.v2[85]
    pn2x = __ralloc.v2[86]
    pn2y = __ralloc.v2[87]
    pn2z = __ralloc.v2[88]
    tmp1259 = __ralloc.v2[89]
    tmp1262 = __ralloc.v2[90]
    tmp1908 = __ralloc.v2[91]
    tmp1264 = __ralloc.v2[92]
    tmp1909 = __ralloc.v2[93]
    tmp1265 = __ralloc.v2[94]
    tmp1267 = __ralloc.v2[95]
    tmp1910 = __ralloc.v2[96]
    tmp1911 = __ralloc.v2[97]
    tmp1912 = __ralloc.v2[98]
    tmp1275 = __ralloc.v2[99]
    tmp1276 = __ralloc.v2[100]
    tmp1287 = __ralloc.v2[101]
    temp_001 = __ralloc.v2[102]
    tmp1289 = __ralloc.v2[103]
    temp_002 = __ralloc.v2[104]
    tmp1291 = __ralloc.v2[105]
    temp_003 = __ralloc.v2[106]
    temp_004 = __ralloc.v2[107]
    tmp1328 = __ralloc.v2[108]
    tmp1330 = __ralloc.v2[109]
    tmp1332 = __ralloc.v2[110]
    tmp1336 = __ralloc.v2[111]
    tmp1916 = __ralloc.v2[112]
    tmp1338 = __ralloc.v2[113]
    tmp1917 = __ralloc.v2[114]
    tmp1339 = __ralloc.v2[115]
    tmp1918 = __ralloc.v2[116]
    tmp1919 = __ralloc.v2[117]
    tmp1445 = __ralloc.v2[118]
    tmp1446 = __ralloc.v2[119]
    tmp1449 = __ralloc.v2[120]
    tmp1450 = __ralloc.v2[121]
    tmp1456 = __ralloc.v2[122]
    tmp1459 = __ralloc.v2[123]
    tmp1521 = __ralloc.v2[124]
    tmp1523 = __ralloc.v2[125]
    tmp1525 = __ralloc.v2[126]
    tmp1527 = __ralloc.v2[127]
    tmp1529 = __ralloc.v2[128]
    tmp1531 = __ralloc.v2[129]
    tmp1533 = __ralloc.v2[130]
    tmp1534 = __ralloc.v2[131]
    tmp1535 = __ralloc.v2[132]
    tmp1537 = __ralloc.v2[133]
    tmp1538 = __ralloc.v2[134]
    tmp1539 = __ralloc.v2[135]
    tmp1541 = __ralloc.v2[136]
    tmp1542 = __ralloc.v2[137]
    tmp1543 = __ralloc.v2[138]
    tmp1555 = __ralloc.v2[139]
    Xij_t_Ui = __ralloc.v2[140]
    Yij_t_Vi = __ralloc.v2[141]
    Zij_t_Wi = __ralloc.v2[142]
    tmp1561 = __ralloc.v2[143]
    Rij_dot_Vi = __ralloc.v2[144]
    tmp1564 = __ralloc.v2[145]
    tmp1920 = __ralloc.v2[146]
    pn1t7 = __ralloc.v2[147]
    tmp1567 = __ralloc.v2[148]
    pn1t2_7 = __ralloc.v2[149]
    tmp1574 = __ralloc.v2[150]
    tmp1575 = __ralloc.v2[151]
    tmp1576 = __ralloc.v2[152]
    tmp1584 = __ralloc.v2[153]
    termpnx = __ralloc.v2[154]
    sumpnx = __ralloc.v2[155]
    tmp1587 = __ralloc.v2[156]
    termpny = __ralloc.v2[157]
    sumpny = __ralloc.v2[158]
    tmp1590 = __ralloc.v2[159]
    termpnz = __ralloc.v2[160]
    sumpnz = __ralloc.v2[161]
    P_n = __ralloc.v3[1]
    dP_n = __ralloc.v3[2]
    temp_fjξ = __ralloc.v3[3]
    temp_fjζ = __ralloc.v3[4]
    temp_rn = __ralloc.v3[5]
    sin_mλ = __ralloc.v3[6]
    cos_mλ = __ralloc.v3[7]
    RotM = __ralloc.v3[8]
    tmp1344 = __ralloc.v3[9]
    tmp1345 = __ralloc.v3[10]
    tmp1346 = __ralloc.v3[11]
    tmp1348 = __ralloc.v3[12]
    tmp1349 = __ralloc.v3[13]
    tmp1354 = __ralloc.v3[14]
    tmp1355 = __ralloc.v3[15]
    tmp1357 = __ralloc.v3[16]
    tmp1358 = __ralloc.v3[17]
    tmp1359 = __ralloc.v3[18]
    tmp1361 = __ralloc.v3[19]
    tmp1362 = __ralloc.v3[20]
    tmp1363 = __ralloc.v3[21]
    tmp1365 = __ralloc.v3[22]
    tmp1366 = __ralloc.v3[23]
    tmp1367 = __ralloc.v3[24]
    tmp1368 = __ralloc.v3[25]
    tmp1371 = __ralloc.v3[26]
    tmp1372 = __ralloc.v3[27]
    tmp1374 = __ralloc.v3[28]
    tmp1375 = __ralloc.v3[29]
    tmp1394 = __ralloc.v3[30]
    tmp1395 = __ralloc.v3[31]
    tmp1396 = __ralloc.v3[32]
    tmp1399 = __ralloc.v3[33]
    tmp1400 = __ralloc.v3[34]
    tmp1401 = __ralloc.v3[35]
    tmp1406 = __ralloc.v3[36]
    tmp1407 = __ralloc.v3[37]
    tmp1408 = __ralloc.v3[38]
    tmp1411 = __ralloc.v3[39]
    tmp1412 = __ralloc.v3[40]
    tmp1413 = __ralloc.v3[41]
    tmp1417 = __ralloc.v3[42]
    tmp1418 = __ralloc.v3[43]
    tmp1419 = __ralloc.v3[44]
    tmp1421 = __ralloc.v3[45]
    tmp1422 = __ralloc.v3[46]
    tmp1423 = __ralloc.v3[47]
    temp_CS_ξ = __ralloc.v4[1]
    temp_CS_η = __ralloc.v4[2]
    temp_CS_ζ = __ralloc.v4[3]
    Cnm_cosmλ = __ralloc.v4[4]
    Cnm_sinmλ = __ralloc.v4[5]
    Snm_cosmλ = __ralloc.v4[6]
    Snm_sinmλ = __ralloc.v4[7]
    secϕ_P_nm = __ralloc.v4[8]
    P_nm = __ralloc.v4[9]
    cosϕ_dP_nm = __ralloc.v4[10]
    Rb2p = __ralloc.v4[11]
    Gc2p = __ralloc.v4[12]
    tmp1377 = __ralloc.v4[13]
    tmp1380 = __ralloc.v4[14]
    tmp1382 = __ralloc.v4[15]
    tmp1384 = __ralloc.v4[16]
    tmp1385 = __ralloc.v4[17]
    tmp1386 = __ralloc.v4[18]
    tmp1389 = __ralloc.v4[19]
    tmp1390 = __ralloc.v4[20]
    tmp1391 = __ralloc.v4[21]
    tmp1393 = __ralloc.v4[22]
    tmp1397 = __ralloc.v4[23]
    tmp1398 = __ralloc.v4[24]
    tmp1402 = __ralloc.v4[25]
    tmp1403 = __ralloc.v4[26]
    tmp1405 = __ralloc.v4[27]
    tmp1409 = __ralloc.v4[28]
    tmp1410 = __ralloc.v4[29]
    tmp1414 = __ralloc.v4[30]
    tmp1415 = __ralloc.v4[31]
    tmp1420 = __ralloc.v4[32]
    tmp1424 = __ralloc.v4[33]
    tmp1425 = __ralloc.v4[34]
    tmp1431 = __ralloc.v4[35]
    tmp1432 = __ralloc.v4[36]
    tmp1433 = __ralloc.v4[37]
    tmp1434 = __ralloc.v4[38]
    tmp1436 = __ralloc.v4[39]
    tmp1437 = __ralloc.v4[40]
    tmp1438 = __ralloc.v4[41]
    tmp1439 = __ralloc.v4[42]
    tmp1441 = __ralloc.v4[43]
    tmp1442 = __ralloc.v4[44]
    tmp1443 = __ralloc.v4[45]
    tmp1461 = __ralloc.v4[46]
    tmp1462 = __ralloc.v4[47]
    tmp1463 = __ralloc.v4[48]
    tmp1464 = __ralloc.v4[49]
    tmp1466 = __ralloc.v4[50]
    tmp1467 = __ralloc.v4[51]
    tmp1468 = __ralloc.v4[52]
    tmp1469 = __ralloc.v4[53]
    tmp1471 = __ralloc.v4[54]
    tmp1472 = __ralloc.v4[55]
    tmp1473 = __ralloc.v4[56]
    tmp1474 = __ralloc.v4[57]
    tmp1476 = __ralloc.v4[58]
    tmp1477 = __ralloc.v4[59]
    tmp1478 = __ralloc.v4[60]
    tmp1479 = __ralloc.v4[61]
    tmp1481 = __ralloc.v4[62]
    tmp1482 = __ralloc.v4[63]
    tmp1483 = __ralloc.v4[64]
    tmp1484 = __ralloc.v4[65]
    tmp1486 = __ralloc.v4[66]
    tmp1487 = __ralloc.v4[67]
    tmp1488 = __ralloc.v4[68]
    tmp1489 = __ralloc.v4[69]
    tmp1491 = __ralloc.v4[70]
    tmp1492 = __ralloc.v4[71]
    tmp1493 = __ralloc.v4[72]
    tmp1494 = __ralloc.v4[73]
    tmp1496 = __ralloc.v4[74]
    tmp1497 = __ralloc.v4[75]
    tmp1498 = __ralloc.v4[76]
    tmp1499 = __ralloc.v4[77]
    tmp1501 = __ralloc.v4[78]
    tmp1502 = __ralloc.v4[79]
    tmp1503 = __ralloc.v4[80]
    tmp1504 = __ralloc.v4[81]
    tmp1506 = __ralloc.v4[82]
    tmp1507 = __ralloc.v4[83]
    tmp1508 = __ralloc.v4[84]
    tmp1509 = __ralloc.v4[85]
    tmp1511 = __ralloc.v4[86]
    tmp1512 = __ralloc.v4[87]
    tmp1513 = __ralloc.v4[88]
    tmp1514 = __ralloc.v4[89]
    tmp1516 = __ralloc.v4[90]
    tmp1517 = __ralloc.v4[91]
    tmp1518 = __ralloc.v4[92]
    tmp1519 = __ralloc.v4[93]
    local (N, jd0) = params
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    for ord = 0:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp1867, tmp1133, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1868, tmp1134, ψ_m, ord)
        TaylorSeries.mul!(tmp1135, tmp1133, tmp1134, ord)
        TaylorSeries.sincos!(tmp1869, tmp1136, θ_m, ord)
        TaylorSeries.sincos!(tmp1137, tmp1870, ϕ_m, ord)
        TaylorSeries.mul!(tmp1138, tmp1136, tmp1137, ord)
        TaylorSeries.sincos!(tmp1139, tmp1871, ψ_m, ord)
        TaylorSeries.mul!(tmp1140, tmp1138, tmp1139, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp1135, tmp1140, ord)
        TaylorSeries.sincos!(tmp1872, tmp1142, θ_m, ord)
        TaylorSeries.subst!(tmp1143, tmp1142, ord)
        TaylorSeries.sincos!(tmp1873, tmp1144, ψ_m, ord)
        TaylorSeries.mul!(tmp1145, tmp1143, tmp1144, ord)
        TaylorSeries.sincos!(tmp1146, tmp1874, ϕ_m, ord)
        TaylorSeries.mul!(tmp1147, tmp1145, tmp1146, ord)
        TaylorSeries.sincos!(tmp1875, tmp1148, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1149, tmp1876, ψ_m, ord)
        TaylorSeries.mul!(tmp1150, tmp1148, tmp1149, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp1147, tmp1150, ord)
        TaylorSeries.sincos!(tmp1152, tmp1877, θ_m, ord)
        TaylorSeries.sincos!(tmp1153, tmp1878, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp1152, tmp1153, ord)
        TaylorSeries.sincos!(tmp1879, tmp1155, ψ_m, ord)
        TaylorSeries.sincos!(tmp1156, tmp1880, ϕ_m, ord)
        TaylorSeries.mul!(tmp1157, tmp1155, tmp1156, ord)
        TaylorSeries.sincos!(tmp1881, tmp1158, θ_m, ord)
        TaylorSeries.sincos!(tmp1882, tmp1159, ϕ_m, ord)
        TaylorSeries.mul!(tmp1160, tmp1158, tmp1159, ord)
        TaylorSeries.sincos!(tmp1161, tmp1883, ψ_m, ord)
        TaylorSeries.mul!(tmp1162, tmp1160, tmp1161, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp1157, tmp1162, ord)
        TaylorSeries.sincos!(tmp1884, tmp1164, θ_m, ord)
        TaylorSeries.sincos!(tmp1885, tmp1165, ϕ_m, ord)
        TaylorSeries.mul!(tmp1166, tmp1164, tmp1165, ord)
        TaylorSeries.sincos!(tmp1886, tmp1167, ψ_m, ord)
        TaylorSeries.mul!(tmp1168, tmp1166, tmp1167, ord)
        TaylorSeries.sincos!(tmp1169, tmp1887, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1170, tmp1888, ψ_m, ord)
        TaylorSeries.mul!(tmp1171, tmp1169, tmp1170, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp1168, tmp1171, ord)
        TaylorSeries.sincos!(tmp1889, tmp1173, ϕ_m, ord)
        TaylorSeries.subst!(tmp1174, tmp1173, ord)
        TaylorSeries.sincos!(tmp1175, tmp1890, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp1174, tmp1175, ord)
        TaylorSeries.sincos!(tmp1177, tmp1891, θ_m, ord)
        TaylorSeries.sincos!(tmp1178, tmp1892, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp1177, tmp1178, ord)
        TaylorSeries.sincos!(tmp1893, tmp1180, ψ_m, ord)
        TaylorSeries.sincos!(tmp1181, tmp1894, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp1180, tmp1181, ord)
        TaylorSeries.sincos!(tmp1895, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp1896, tmp1184, ϕ_c, ord)
        TaylorSeries.mul!(tmp1185, RotM[1, 1, mo], tmp1184, ord)
        TaylorSeries.sincos!(tmp1186, tmp1897, ϕ_c, ord)
        TaylorSeries.mul!(tmp1187, RotM[1, 2, mo], tmp1186, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp1185, tmp1187, ord)
        TaylorSeries.subst!(tmp1189, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp1190, tmp1898, ϕ_c, ord)
        TaylorSeries.mul!(tmp1191, tmp1189, tmp1190, ord)
        TaylorSeries.sincos!(tmp1899, tmp1192, ϕ_c, ord)
        TaylorSeries.mul!(tmp1193, RotM[1, 2, mo], tmp1192, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp1191, tmp1193, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp1900, tmp1195, ϕ_c, ord)
        TaylorSeries.mul!(tmp1196, RotM[2, 1, mo], tmp1195, ord)
        TaylorSeries.sincos!(tmp1197, tmp1901, ϕ_c, ord)
        TaylorSeries.mul!(tmp1198, RotM[2, 2, mo], tmp1197, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp1196, tmp1198, ord)
        TaylorSeries.subst!(tmp1200, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp1201, tmp1902, ϕ_c, ord)
        TaylorSeries.mul!(tmp1202, tmp1200, tmp1201, ord)
        TaylorSeries.sincos!(tmp1903, tmp1203, ϕ_c, ord)
        TaylorSeries.mul!(tmp1204, RotM[2, 2, mo], tmp1203, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp1202, tmp1204, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp1904, tmp1206, ϕ_c, ord)
        TaylorSeries.mul!(tmp1207, RotM[3, 1, mo], tmp1206, ord)
        TaylorSeries.sincos!(tmp1208, tmp1905, ϕ_c, ord)
        TaylorSeries.mul!(tmp1209, RotM[3, 2, mo], tmp1208, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp1207, tmp1209, ord)
        TaylorSeries.subst!(tmp1211, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp1212, tmp1906, ϕ_c, ord)
        TaylorSeries.mul!(tmp1213, tmp1211, tmp1212, ord)
        TaylorSeries.sincos!(tmp1907, tmp1214, ϕ_c, ord)
        TaylorSeries.mul!(tmp1215, RotM[3, 2, mo], tmp1214, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp1213, tmp1215, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp1217, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1218, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1219, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1220, tmp1218, tmp1219, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp1217, tmp1220, ord)
        TaylorSeries.mul!(tmp1222, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1223, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1224, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1225, tmp1223, tmp1224, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp1222, tmp1225, ord)
        TaylorSeries.mul!(tmp1227, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1228, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1229, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1230, tmp1228, tmp1229, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp1227, tmp1230, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:309 =# Threads.@threads for j = 1:N
                TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
                TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
                TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
                TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:321 =# Threads.@threads for j = 1:N_ext
                TaylorSeries.identity!(accX[j], zero_q_1, ord)
                TaylorSeries.identity!(accY[j], zero_q_1, ord)
                TaylorSeries.identity!(accZ[j], zero_q_1, ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:327 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                        TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                        TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                        TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.mul!(tmp1239[3j - 2], 4, dq[3j - 2], ord)
                        TaylorSeries.mul!(tmp1241[3i - 2], 3, dq[3i - 2], ord)
                        TaylorSeries.subst!(_4U_m_3X[i, j], tmp1239[3j - 2], tmp1241[3i - 2], ord)
                        TaylorSeries.mul!(tmp1244[3j - 1], 4, dq[3j - 1], ord)
                        TaylorSeries.mul!(tmp1246[3i - 1], 3, dq[3i - 1], ord)
                        TaylorSeries.subst!(_4V_m_3Y[i, j], tmp1244[3j - 1], tmp1246[3i - 1], ord)
                        TaylorSeries.mul!(tmp1249[3j], 4, dq[3j], ord)
                        TaylorSeries.mul!(tmp1251[3i], 3, dq[3i], ord)
                        TaylorSeries.subst!(_4W_m_3Z[i, j], tmp1249[3j], tmp1251[3i], ord)
                        TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                        TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                        TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                        TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.add!(tmp1259[i, j], UU[i, j], VV[i, j], ord)
                        TaylorSeries.add!(vi_dot_vj[i, j], tmp1259[i, j], WW[i, j], ord)
                        TaylorSeries.pow!(tmp1262[i, j], X[i, j], tmp1908[i, j], 2, ord)
                        TaylorSeries.pow!(tmp1264[i, j], Y[i, j], tmp1909[i, j], 2, ord)
                        TaylorSeries.add!(tmp1265[i, j], tmp1262[i, j], tmp1264[i, j], ord)
                        TaylorSeries.pow!(tmp1267[i, j], Z[i, j], tmp1910[i, j], 2, ord)
                        TaylorSeries.add!(r_p2[i, j], tmp1265[i, j], tmp1267[i, j], ord)
                        TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                        TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], tmp1911[i, j], 1.5, ord)
                        TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], tmp1912[i, j], 3.5, ord)
                        TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                        TaylorSeries.add!(tmp1275[i, j], pn2x[i, j], pn2y[i, j], ord)
                        TaylorSeries.add!(tmp1276[i, j], tmp1275[i, j], pn2z[i, j], ord)
                        TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp1276[i, j], ord)
                        TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                        TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                        TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                        TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                        TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                        TaylorSeries.mul!(tmp1287[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp1287[i, j], ord)
                        TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                        TaylorSeries.mul!(tmp1289[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp1289[i, j], ord)
                        TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                        TaylorSeries.mul!(tmp1291[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp1291[i, j], ord)
                        TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                        TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                        TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                    end
                end
                TaylorSeries.pow!(tmp1295[3j - 2], dq[3j - 2], tmp1913[3j - 2], 2, ord)
                TaylorSeries.pow!(tmp1297[3j - 1], dq[3j - 1], tmp1914[3j - 1], 2, ord)
                TaylorSeries.add!(tmp1298[3j - 2], tmp1295[3j - 2], tmp1297[3j - 1], ord)
                TaylorSeries.pow!(tmp1300[3j], dq[3j], tmp1915[3j], 2, ord)
                TaylorSeries.add!(v2[j], tmp1298[3j - 2], tmp1300[3j], ord)
            end
        TaylorSeries.add!(tmp1302, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp1304, tmp1302, 2, ord)
        TaylorSeries.subst!(tmp1305, I_M_t[3, 3], tmp1304, ord)
        TaylorSeries.div!(J2M_t, tmp1305, μ[mo], ord)
        TaylorSeries.subst!(tmp1307, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp1308, tmp1307, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp1308, 4, ord)
        TaylorSeries.subst!(tmp1311, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp1311, μ[mo], ord)
        TaylorSeries.subst!(tmp1313, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp1313, μ[mo], ord)
        TaylorSeries.subst!(tmp1315, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp1316, tmp1315, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp1316, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:418 =# Threads.@threads for j = 1:N_ext
                for i = 1:N_ext
                    if i == j
                        continue
                    else
                        if UJ_interaction[i, j]
                            TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                            TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                            TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                            TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                            TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                            TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                            TaylorSeries.add!(tmp1328[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                            TaylorSeries.add!(X_bf[i, j], tmp1328[i, j], X_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp1330[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                            TaylorSeries.add!(Y_bf[i, j], tmp1330[i, j], Y_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp1332[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                            TaylorSeries.add!(Z_bf[i, j], tmp1332[i, j], Z_bf_3[i, j], ord)
                            TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.pow!(tmp1336[i, j], X_bf[i, j], tmp1916[i, j], 2, ord)
                            TaylorSeries.pow!(tmp1338[i, j], Y_bf[i, j], tmp1917[i, j], 2, ord)
                            TaylorSeries.add!(tmp1339[i, j], tmp1336[i, j], tmp1338[i, j], ord)
                            TaylorSeries.sqrt!(r_xy[i, j], tmp1339[i, j], ord)
                            TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                            TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                            TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                            for n = 2:n1SEM[j]
                                TaylorSeries.mul!(tmp1344[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp1345[i, j, n], tmp1344[i, j, n], fact1_jsem[n], ord)
                                TaylorSeries.mul!(tmp1346[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                                TaylorSeries.subst!(P_n[i, j, n + 1], tmp1345[i, j, n], tmp1346[i, j, n - 1], ord)
                                TaylorSeries.mul!(tmp1348[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp1349[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                                TaylorSeries.add!(dP_n[i, j, n + 1], tmp1348[i, j, n], tmp1349[i, j, n], ord)
                                TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], tmp1918[i, j], fact5_jsem[n], ord)
                            end
                            TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], tmp1919[i, j], 2, ord)
                            TaylorSeries.mul!(tmp1354[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                            TaylorSeries.mul!(tmp1355[i, j, 3], tmp1354[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ξ[i, j], tmp1355[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.subst!(tmp1357[i, j, 3], dP_n[i, j, 3], ord)
                            TaylorSeries.mul!(tmp1358[i, j, 3], tmp1357[i, j, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1359[i, j, 3], tmp1358[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ζ[i, j], tmp1359[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n1SEM[j]
                                TaylorSeries.mul!(tmp1361[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                                TaylorSeries.mul!(tmp1362[i, j, n + 1], tmp1361[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp1363[i, j, n + 1], tmp1362[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjξ[i, j, n], tmp1363[i, j, n + 1], F_J_ξ_36[i, j], ord)
                                TaylorSeries.subst!(tmp1365[i, j, n + 1], dP_n[i, j, n + 1], ord)
                                TaylorSeries.mul!(tmp1366[i, j, n + 1], tmp1365[i, j, n + 1], cos_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp1367[i, j, n + 1], tmp1366[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp1368[i, j, n + 1], tmp1367[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjζ[i, j, n], tmp1368[i, j, n + 1], F_J_ζ_36[i, j], ord)
                                TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                                TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                            end
                            if j == mo
                                for m = 1:n1SEM[mo]
                                    if m == 1
                                        TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                        TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                        TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                        TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                    else
                                        TaylorSeries.mul!(tmp1371[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp1372[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.add!(sin_mλ[i, j, m], tmp1371[i, j, m - 1], tmp1372[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp1374[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp1375[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.subst!(cos_mλ[i, j, m], tmp1374[i, j, m - 1], tmp1375[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp1377[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp1377[i, j, m - 1, m - 1], lnm5[m], ord)
                                        TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp1380[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp1380[i, j, m, m], lnm3[m], ord)
                                    end
                                    for n = m + 1:n1SEM[mo]
                                        if n == m + 1
                                            TaylorSeries.mul!(tmp1382[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp1382[i, j, n - 1, m], lnm1[n, m], ord)
                                        else
                                            TaylorSeries.mul!(tmp1384[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(tmp1385[i, j, n - 1, m], tmp1384[i, j, n - 1, m], lnm1[n, m], ord)
                                            TaylorSeries.mul!(tmp1386[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                            TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp1385[i, j, n - 1, m], tmp1386[i, j, n - 2, m], ord)
                                        end
                                        TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp1389[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp1390[i, j, n, m], tmp1389[i, j, n, m], lnm3[n], ord)
                                        TaylorSeries.mul!(tmp1391[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                        TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp1390[i, j, n, m], tmp1391[i, j, n - 1, m], ord)
                                    end
                                end
                                TaylorSeries.mul!(tmp1393[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                                TaylorSeries.mul!(tmp1394[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1395[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp1396[i, j, 1], tmp1394[i, j, 1], tmp1395[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1397[i, j, 2, 1], tmp1393[i, j, 2, 1], tmp1396[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1398[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                                TaylorSeries.mul!(tmp1399[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1400[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp1401[i, j, 2], tmp1399[i, j, 2], tmp1400[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1402[i, j, 2, 2], tmp1398[i, j, 2, 2], tmp1401[i, j, 2], ord)
                                TaylorSeries.add!(tmp1403[i, j, 2, 1], tmp1397[i, j, 2, 1], tmp1402[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ξ[i, j], tmp1403[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp1405[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                                TaylorSeries.mul!(tmp1406[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1407[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.subst!(tmp1408[i, j, 1], tmp1406[i, j, 1], tmp1407[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1409[i, j, 2, 1], tmp1405[i, j, 2, 1], tmp1408[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1410[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                                TaylorSeries.mul!(tmp1411[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1412[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.subst!(tmp1413[i, j, 2], tmp1411[i, j, 2], tmp1412[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1414[i, j, 2, 2], tmp1410[i, j, 2, 2], tmp1413[i, j, 2], ord)
                                TaylorSeries.add!(tmp1415[i, j, 2, 1], tmp1409[i, j, 2, 1], tmp1414[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_η[i, j], tmp1415[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp1417[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1418[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp1419[i, j, 1], tmp1417[i, j, 1], tmp1418[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1420[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp1419[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1421[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1422[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp1423[i, j, 2], tmp1421[i, j, 2], tmp1422[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1424[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp1423[i, j, 2], ord)
                                TaylorSeries.add!(tmp1425[i, j, 2, 1], tmp1420[i, j, 2, 1], tmp1424[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ζ[i, j], tmp1425[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                                for n = 3:n2M
                                    for m = 1:n
                                        TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(tmp1431[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                        TaylorSeries.add!(tmp1432[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp1433[i, j, n, m], tmp1431[i, j, n, m], tmp1432[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp1434[i, j, n, m], tmp1433[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp1434[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                        TaylorSeries.mul!(tmp1436[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                        TaylorSeries.subst!(tmp1437[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp1438[i, j, n, m], tmp1436[i, j, n, m], tmp1437[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp1439[i, j, n, m], tmp1438[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp1439[i, j, n, m], F_CS_η_36[i, j], ord)
                                        TaylorSeries.add!(tmp1441[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp1442[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp1441[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp1443[i, j, n, m], tmp1442[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp1443[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                        TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                    end
                                end
                                TaylorSeries.add!(tmp1445[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.add!(tmp1446[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ξ[i, j], tmp1445[i, j], tmp1446[i, j], ord)
                                TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                                TaylorSeries.add!(tmp1449[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                                TaylorSeries.add!(tmp1450[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], tmp1449[i, j], tmp1450[i, j], ord)
                            else
                                TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            end
                            TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                            TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                            TaylorSeries.subst!(tmp1456[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp1456[i, j], cos_λ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                            TaylorSeries.subst!(tmp1459[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp1459[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                            TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1461[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp1462[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp1463[i, j, 1, 1], tmp1461[i, j, 1, 1], tmp1462[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp1464[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp1463[i, j, 1, 1], tmp1464[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp1466[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp1467[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp1468[i, j, 2, 1], tmp1466[i, j, 2, 1], tmp1467[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp1469[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp1468[i, j, 2, 1], tmp1469[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp1471[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp1472[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp1473[i, j, 3, 1], tmp1471[i, j, 3, 1], tmp1472[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp1474[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp1473[i, j, 3, 1], tmp1474[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp1476[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp1477[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp1478[i, j, 1, 1], tmp1476[i, j, 1, 1], tmp1477[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp1479[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp1478[i, j, 1, 1], tmp1479[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp1481[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp1482[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp1483[i, j, 2, 1], tmp1481[i, j, 2, 1], tmp1482[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp1484[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp1483[i, j, 2, 1], tmp1484[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp1486[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp1487[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp1488[i, j, 3, 1], tmp1486[i, j, 3, 1], tmp1487[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp1489[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp1488[i, j, 3, 1], tmp1489[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp1491[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp1492[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp1493[i, j, 1, 1], tmp1491[i, j, 1, 1], tmp1492[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp1494[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp1493[i, j, 1, 1], tmp1494[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp1496[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp1497[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp1498[i, j, 2, 1], tmp1496[i, j, 2, 1], tmp1497[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp1499[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp1498[i, j, 2, 1], tmp1499[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp1501[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp1502[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp1503[i, j, 3, 1], tmp1501[i, j, 3, 1], tmp1502[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp1504[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp1503[i, j, 3, 1], tmp1504[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp1506[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                            TaylorSeries.mul!(tmp1507[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                            TaylorSeries.add!(tmp1508[i, j, 1, 1], tmp1506[i, j, 1, 1], tmp1507[i, j, 2, 1], ord)
                            TaylorSeries.mul!(tmp1509[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                            TaylorSeries.add!(F_JCS_x[i, j], tmp1508[i, j, 1, 1], tmp1509[i, j, 3, 1], ord)
                            TaylorSeries.mul!(tmp1511[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp1512[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                            TaylorSeries.add!(tmp1513[i, j, 1, 2], tmp1511[i, j, 1, 2], tmp1512[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp1514[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                            TaylorSeries.add!(F_JCS_y[i, j], tmp1513[i, j, 1, 2], tmp1514[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp1516[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp1517[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                            TaylorSeries.add!(tmp1518[i, j, 1, 3], tmp1516[i, j, 1, 3], tmp1517[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp1519[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                            TaylorSeries.add!(F_JCS_z[i, j], tmp1518[i, j, 1, 3], tmp1519[i, j, 3, 3], ord)
                        end
                    end
                end
            end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp1521[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp1521[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp1523[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp1523[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp1525[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp1525[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp1527[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp1527[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp1529[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp1529[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp1531[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp1531[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp1533[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp1534[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp1535[i, j], tmp1533[i, j], tmp1534[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp1535[i, j], ord)
                            TaylorSeries.mul!(tmp1537[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp1538[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp1539[i, j], tmp1537[i, j], tmp1538[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp1539[i, j], ord)
                            TaylorSeries.mul!(tmp1541[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp1542[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp1543[i, j], tmp1541[i, j], tmp1542[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp1543[i, j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], N_MfigM_pmA_x[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], N_MfigM_pmA_y[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], N_MfigM_pmA_z[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:658 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                        TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                        TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                        TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                        TaylorSeries.mul!(tmp1555[i, j], 4, vi_dot_vj[i, j], ord)
                        TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp1555[i, j], ord)
                        TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                        TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                        TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                        TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                        TaylorSeries.add!(tmp1561[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                        TaylorSeries.add!(Rij_dot_Vi[i, j], tmp1561[i, j], Zij_t_Wi[i, j], ord)
                        TaylorSeries.pow!(tmp1564[i, j], Rij_dot_Vi[i, j], tmp1920[i, j], 2, ord)
                        TaylorSeries.div!(pn1t7[i, j], tmp1564[i, j], r_p2[i, j], ord)
                        TaylorSeries.mul!(tmp1567[i, j], 1.5, pn1t7[i, j], ord)
                        TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp1567[i, j], ord)
                        TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                    end
                end
                TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:697 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                        TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                        TaylorSeries.add!(tmp1574[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                        TaylorSeries.add!(tmp1575[i, j], tmp1574[i, j], pNZ_t_Z[i, j], ord)
                        TaylorSeries.mul!(tmp1576[i, j], 0.5, tmp1575[i, j], ord)
                        TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp1576[i, j], ord)
                        TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                        TaylorSeries.add!(tmp1584[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp1584[i, j], ord)
                        TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                        TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                        TaylorSeries.add!(tmp1587[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp1587[i, j], ord)
                        TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                        TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                        TaylorSeries.add!(tmp1590[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp1590[i, j], ord)
                        TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                        TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                    end
                end
                TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:743 =# Threads.@threads for i = 1:N_ext
                TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
                TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
                TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:748 =# Threads.@threads for i = N_ext + 1:N
                TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
            end
        TaylorSeries.mul!(tmp1599, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1600, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1601, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1602, tmp1600, tmp1601, ord)
        TaylorSeries.add!(Iω_x, tmp1599, tmp1602, ord)
        TaylorSeries.mul!(tmp1604, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1605, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1606, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1607, tmp1605, tmp1606, ord)
        TaylorSeries.add!(Iω_y, tmp1604, tmp1607, ord)
        TaylorSeries.mul!(tmp1609, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1610, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1611, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1612, tmp1610, tmp1611, ord)
        TaylorSeries.add!(Iω_z, tmp1609, tmp1612, ord)
        TaylorSeries.mul!(tmp1614, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp1615, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp1614, tmp1615, ord)
        TaylorSeries.mul!(tmp1617, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp1618, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp1617, tmp1618, ord)
        TaylorSeries.mul!(tmp1620, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp1621, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp1620, tmp1621, ord)
        TaylorSeries.mul!(tmp1623, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1624, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1625, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1626, tmp1624, tmp1625, ord)
        TaylorSeries.add!(dIω_x, tmp1623, tmp1626, ord)
        TaylorSeries.mul!(tmp1628, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1629, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1630, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1631, tmp1629, tmp1630, ord)
        TaylorSeries.add!(dIω_y, tmp1628, tmp1631, ord)
        TaylorSeries.mul!(tmp1633, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1634, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1635, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1636, tmp1634, tmp1635, ord)
        TaylorSeries.add!(dIω_z, tmp1633, tmp1636, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp1641, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1642, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1643, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1644, tmp1642, tmp1643, ord)
        TaylorSeries.add!(er_EM_1, tmp1641, tmp1644, ord)
        TaylorSeries.mul!(tmp1646, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1647, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1648, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1649, tmp1647, tmp1648, ord)
        TaylorSeries.add!(er_EM_2, tmp1646, tmp1649, ord)
        TaylorSeries.mul!(tmp1651, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1652, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1653, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1654, tmp1652, tmp1653, ord)
        TaylorSeries.add!(er_EM_3, tmp1651, tmp1654, ord)
        TaylorSeries.mul!(tmp1656, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1657, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1658, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1659, tmp1657, tmp1658, ord)
        TaylorSeries.add!(p_E_1, tmp1656, tmp1659, ord)
        TaylorSeries.mul!(tmp1661, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1662, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1663, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1664, tmp1662, tmp1663, ord)
        TaylorSeries.add!(p_E_2, tmp1661, tmp1664, ord)
        TaylorSeries.mul!(tmp1666, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1667, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1668, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1669, tmp1667, tmp1668, ord)
        TaylorSeries.add!(p_E_3, tmp1666, tmp1669, ord)
        TaylorSeries.mul!(tmp1671, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1672, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1673, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1674, tmp1672, tmp1673, ord)
        TaylorSeries.add!(I_er_EM_1, tmp1671, tmp1674, ord)
        TaylorSeries.mul!(tmp1676, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1677, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1678, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1679, tmp1677, tmp1678, ord)
        TaylorSeries.add!(I_er_EM_2, tmp1676, tmp1679, ord)
        TaylorSeries.mul!(tmp1681, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1682, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1683, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1684, tmp1682, tmp1683, ord)
        TaylorSeries.add!(I_er_EM_3, tmp1681, tmp1684, ord)
        TaylorSeries.mul!(tmp1686, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1687, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1688, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1689, tmp1687, tmp1688, ord)
        TaylorSeries.add!(I_p_E_1, tmp1686, tmp1689, ord)
        TaylorSeries.mul!(tmp1691, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1692, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1693, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1694, tmp1692, tmp1693, ord)
        TaylorSeries.add!(I_p_E_2, tmp1691, tmp1694, ord)
        TaylorSeries.mul!(tmp1696, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1697, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1698, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1699, tmp1697, tmp1698, ord)
        TaylorSeries.add!(I_p_E_3, tmp1696, tmp1699, ord)
        TaylorSeries.mul!(tmp1701, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1702, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp1701, tmp1702, ord)
        TaylorSeries.mul!(tmp1704, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1705, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp1704, tmp1705, ord)
        TaylorSeries.mul!(tmp1707, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1708, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp1707, tmp1708, ord)
        TaylorSeries.mul!(tmp1710, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp1711, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp1710, tmp1711, ord)
        TaylorSeries.mul!(tmp1713, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp1714, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp1713, tmp1714, ord)
        TaylorSeries.mul!(tmp1716, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp1717, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp1716, tmp1717, ord)
        TaylorSeries.mul!(tmp1719, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1720, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp1719, tmp1720, ord)
        TaylorSeries.mul!(tmp1722, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1723, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp1722, tmp1723, ord)
        TaylorSeries.mul!(tmp1725, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1726, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp1725, tmp1726, ord)
        TaylorSeries.mul!(tmp1728, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp1729, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp1728, tmp1729, ord)
        TaylorSeries.mul!(tmp1731, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp1732, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp1731, tmp1732, ord)
        TaylorSeries.mul!(tmp1734, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp1735, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp1734, tmp1735, ord)
        TaylorSeries.pow!(tmp1739, sin_ϕ[ea, mo], tmp1921, 2, ord)
        TaylorSeries.mul!(tmp1740, 7, tmp1739, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp1740, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp1745, r_p1d2[mo, ea], tmp1922, 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp1745, ord)
        TaylorSeries.mul!(tmp1747, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp1748, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1749, two_sinϕEM, tmp1748, ord)
        TaylorSeries.add!(tmp1750, tmp1747, tmp1749, ord)
        TaylorSeries.mul!(tmp1752, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp1753, tmp1750, tmp1752, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp1753, ord)
        TaylorSeries.mul!(tmp1755, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp1756, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1757, two_sinϕEM, tmp1756, ord)
        TaylorSeries.add!(tmp1758, tmp1755, tmp1757, ord)
        TaylorSeries.mul!(tmp1760, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp1761, tmp1758, tmp1760, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp1761, ord)
        TaylorSeries.mul!(tmp1763, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp1764, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1765, two_sinϕEM, tmp1764, ord)
        TaylorSeries.add!(tmp1766, tmp1763, tmp1765, ord)
        TaylorSeries.mul!(tmp1768, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp1769, tmp1766, tmp1768, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp1769, ord)
        TaylorSeries.mul!(tmp1771, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1772, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1773, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1774, tmp1772, tmp1773, ord)
        TaylorSeries.add!(N_1_LMF, tmp1771, tmp1774, ord)
        TaylorSeries.mul!(tmp1776, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1777, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1778, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1779, tmp1777, tmp1778, ord)
        TaylorSeries.add!(N_2_LMF, tmp1776, tmp1779, ord)
        TaylorSeries.mul!(tmp1781, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1782, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1783, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1784, tmp1782, tmp1783, ord)
        TaylorSeries.add!(N_3_LMF, tmp1781, tmp1784, ord)
        TaylorSeries.subst!(tmp1786, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1787, k_ν, tmp1786, ord)
        TaylorSeries.mul!(tmp1788, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp1789, tmp1788, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp1787, tmp1789, ord)
        TaylorSeries.subst!(tmp1791, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1792, k_ν, tmp1791, ord)
        TaylorSeries.mul!(tmp1793, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp1794, tmp1793, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp1792, tmp1794, ord)
        TaylorSeries.subst!(tmp1796, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp1796, ord)
        TaylorSeries.mul!(tmp1798, μ[mo], N_1_LMF, ord)
        TaylorSeries.add!(tmp1799, N_MfigM_figE_1, tmp1798, ord)
        TaylorSeries.add!(tmp1800, tmp1799, N_cmb_1, ord)
        TaylorSeries.add!(tmp1801, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp1800, tmp1801, ord)
        TaylorSeries.mul!(tmp1803, μ[mo], N_2_LMF, ord)
        TaylorSeries.add!(tmp1804, N_MfigM_figE_2, tmp1803, ord)
        TaylorSeries.add!(tmp1805, tmp1804, N_cmb_2, ord)
        TaylorSeries.add!(tmp1806, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp1805, tmp1806, ord)
        TaylorSeries.mul!(tmp1808, μ[mo], N_3_LMF, ord)
        TaylorSeries.add!(tmp1809, N_MfigM_figE_3, tmp1808, ord)
        TaylorSeries.add!(tmp1810, tmp1809, N_cmb_3, ord)
        TaylorSeries.add!(tmp1811, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp1810, tmp1811, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp1816, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp1817, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp1816, tmp1817, ord)
        TaylorSeries.mul!(tmp1819, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp1820, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp1819, tmp1820, ord)
        TaylorSeries.mul!(tmp1822, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp1823, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp1822, tmp1823, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp1828, tmp1923, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1829, q[6N + 4], tmp1828, ord)
        TaylorSeries.sincos!(tmp1924, tmp1830, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1831, q[6N + 5], tmp1830, ord)
        TaylorSeries.add!(tmp1832, tmp1829, tmp1831, ord)
        TaylorSeries.sincos!(tmp1833, tmp1925, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp1832, tmp1833, ord)
        TaylorSeries.sincos!(tmp1926, tmp1835, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1836, q[6N + 4], tmp1835, ord)
        TaylorSeries.sincos!(tmp1837, tmp1927, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1838, q[6N + 5], tmp1837, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp1836, tmp1838, ord)
        TaylorSeries.sincos!(tmp1928, tmp1840, q[6N + 2], ord)
        TaylorSeries.mul!(tmp1841, dq[6N + 1], tmp1840, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp1841, ord)
        TaylorSeries.mul!(tmp1843, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1844, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1845, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1846, tmp1844, tmp1845, ord)
        TaylorSeries.add!(dq[6N + 4], tmp1843, tmp1846, ord)
        TaylorSeries.mul!(tmp1848, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1849, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1850, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1851, tmp1849, tmp1850, ord)
        TaylorSeries.add!(dq[6N + 5], tmp1848, tmp1851, ord)
        TaylorSeries.mul!(tmp1853, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1854, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1855, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1856, tmp1854, tmp1855, ord)
        TaylorSeries.add!(dq[6N + 6], tmp1853, tmp1856, ord)
        TaylorSeries.sincos!(tmp1858, tmp1929, q[6N + 8], ord)
        TaylorSeries.div!(tmp1859, ω_c_CE_2, tmp1858, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp1859, ord)
        TaylorSeries.sincos!(tmp1930, tmp1861, q[6N + 8], ord)
        TaylorSeries.mul!(tmp1862, dq[6N + 9], tmp1861, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp1862, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.identity!(dq[6N + 13], zero_q_1, ord)
        for __idx = eachindex(q)
            TaylorIntegration.solcoeff!(q[__idx], dq[__idx], ordnext)
        end
    end
    return nothing
end

# TaylorIntegration._allocate_jetcoeffs! method for src/dynamical_model.jl: DE430!
function TaylorIntegration._allocate_jetcoeffs!(::Val{DE430!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local __t = Taylor1(numtype(t), t.order)
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local params_bwd = (N_bwd, jd0)
    local qq_bwd = Taylor1.(constant_term.(q[union(nbodyind(N, 1:N_bwd), 6N + 1:6N + 13)]), t.order)::Vector{S}
    local dqq_bwd = similar(qq_bwd)
    local xaux_bwd = similar(qq_bwd)
    local jc = TaylorIntegration.jetcoeffs!(NBP_pN_A_J23E_J23M_J2S_threads!, t, qq_bwd, dqq_bwd, xaux_bwd, params_bwd)
    local q_del_τ_M = special_eval(qq_bwd, __t - τ_M)
    local q_del_τ_0 = special_eval(qq_bwd, __t - τ_0p)
    local q_del_τ_1 = special_eval(qq_bwd, __t - τ_1p)
    local q_del_τ_2 = special_eval(qq_bwd, __t - τ_2p)
    local eulang_del_τ_M = q_del_τ_M[6N_bwd + 1:6N_bwd + 3]::Vector{S}
    local ω_m_del_τ_M = q_del_τ_M[6N_bwd + 4:6N_bwd + 6]::Vector{S}
    local I_m_t = ITM(q_del_τ_M, eulang_del_τ_M, ω_m_del_τ_M)::Matrix{S}
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    rij_dot_vi_div_rij_sq = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp2976 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4046 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2977 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4047 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2978 = Taylor1(constant_term(tmp2976) * constant_term(tmp2977), order)
    tmp2979 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4048 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2980 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4049 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2981 = Taylor1(constant_term(tmp2979) * constant_term(tmp2980), order)
    tmp2982 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4050 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2983 = Taylor1(constant_term(tmp2981) * constant_term(tmp2982), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp2978) - constant_term(tmp2983), order)
    tmp2985 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4051 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2986 = Taylor1(-(constant_term(tmp2985)), order)
    tmp2987 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4052 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2988 = Taylor1(constant_term(tmp2986) * constant_term(tmp2987), order)
    tmp2989 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4053 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2990 = Taylor1(constant_term(tmp2988) * constant_term(tmp2989), order)
    tmp2991 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4054 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2992 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4055 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2993 = Taylor1(constant_term(tmp2991) * constant_term(tmp2992), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp2990) - constant_term(tmp2993), order)
    tmp2995 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4056 = Taylor1(cos(constant_term(θ_m)), order)
    tmp2996 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4057 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp2995) * constant_term(tmp2996), order)
    tmp2998 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4058 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2999 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4059 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3000 = Taylor1(constant_term(tmp2998) * constant_term(tmp2999), order)
    tmp3001 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4060 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3002 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4061 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3003 = Taylor1(constant_term(tmp3001) * constant_term(tmp3002), order)
    tmp3004 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4062 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3005 = Taylor1(constant_term(tmp3003) * constant_term(tmp3004), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp3000) + constant_term(tmp3005), order)
    tmp3007 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4063 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3008 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4064 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3009 = Taylor1(constant_term(tmp3007) * constant_term(tmp3008), order)
    tmp3010 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4065 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3011 = Taylor1(constant_term(tmp3009) * constant_term(tmp3010), order)
    tmp3012 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4066 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3013 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4067 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3014 = Taylor1(constant_term(tmp3012) * constant_term(tmp3013), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp3011) - constant_term(tmp3014), order)
    tmp3016 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4068 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3017 = Taylor1(-(constant_term(tmp3016)), order)
    tmp3018 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4069 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp3017) * constant_term(tmp3018), order)
    tmp3020 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4070 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3021 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4071 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp3020) * constant_term(tmp3021), order)
    tmp3023 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4072 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3024 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4073 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp3023) * constant_term(tmp3024), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp4074 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp3027 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4075 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3028 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp3027), order)
    tmp3029 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4076 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3030 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp3029), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp3028) + constant_term(tmp3030), order)
    tmp3032 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp3033 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4077 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3034 = Taylor1(constant_term(tmp3032) * constant_term(tmp3033), order)
    tmp3035 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4078 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3036 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp3035), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp3034) + constant_term(tmp3036), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp3038 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4079 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3039 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp3038), order)
    tmp3040 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4080 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3041 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp3040), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp3039) + constant_term(tmp3041), order)
    tmp3043 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp3044 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4081 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3045 = Taylor1(constant_term(tmp3043) * constant_term(tmp3044), order)
    tmp3046 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4082 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3047 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp3046), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp3045) + constant_term(tmp3047), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp3049 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4083 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3050 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp3049), order)
    tmp3051 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4084 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3052 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp3051), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp3050) + constant_term(tmp3052), order)
    tmp3054 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp3055 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4085 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3056 = Taylor1(constant_term(tmp3054) * constant_term(tmp3055), order)
    tmp3057 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4086 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3058 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp3057), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp3056) + constant_term(tmp3058), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp3060 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp3061 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp3062 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp3063 = Taylor1(constant_term(tmp3061) + constant_term(tmp3062), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp3060) + constant_term(tmp3063), order)
    tmp3065 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp3066 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp3067 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp3068 = Taylor1(constant_term(tmp3066) + constant_term(tmp3067), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp3065) + constant_term(tmp3068), order)
    tmp3070 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp3071 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp3072 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp3073 = Taylor1(constant_term(tmp3071) + constant_term(tmp3072), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp3070) + constant_term(tmp3073), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    local q_ME_τ_0 = q_del_τ_0[3mo - 2:3mo] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_ME_τ_1 = q_del_τ_1[3mo - 2:3mo] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_ME_τ_2 = q_del_τ_2[3mo - 2:3mo] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local q_SE_τ_0 = q_del_τ_0[3su - 2:3su] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_SE_τ_1 = q_del_τ_1[3su - 2:3su] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_SE_τ_2 = q_del_τ_2[3su - 2:3su] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local R30 = RotM[:, :, ea]
    local R31 = Rz(-ω_E * τ_1) * RotM[:, :, ea]
    local R32 = Rz(-ω_E * τ_2) * RotM[:, :, ea]
    local r_star_M_0 = R30 * q_ME_τ_0
    local r_star_M_1 = R31 * q_ME_τ_1
    local r_star_M_2 = R32 * q_ME_τ_2
    local r_star_S_0 = R30 * q_SE_τ_0
    local r_star_S_1 = R31 * q_SE_τ_1
    local r_star_S_2 = R32 * q_SE_τ_2
    for j = 1:N
        newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
        dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
        dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
    end
    for j = 1:N_ext
        accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
    end
    tmp3138 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3138)
        tmp3138[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4092 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp4092)
        tmp4092[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3140 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3140)
        tmp3140[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4093 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp4093)
        tmp4093[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3141 = Array{Taylor1{_S}}(undef, size(tmp3138))
    for i = eachindex(tmp3141)
        tmp3141[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3143 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3143)
        tmp3143[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4094 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp4094)
        tmp4094[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3082 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3082)
        tmp3082[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3084 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3084)
        tmp3084[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3087 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3087)
        tmp3087[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3089 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3089)
        tmp3089[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3092 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3092)
        tmp3092[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3094 = Array{Taylor1{_S}}(undef, size(dq))
    for i = eachindex(tmp3094)
        tmp3094[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(pn2x)
        pn2x[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(pn2y)
        pn2y[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(pn2z)
        pn2z[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3102 = Array{Taylor1{_S}}(undef, size(UU))
    for i = eachindex(tmp3102)
        tmp3102[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3105 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp3105)
        tmp3105[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4087 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp4087)
        tmp4087[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3107 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp3107)
        tmp3107[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4088 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp4088)
        tmp4088[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3108 = Array{Taylor1{_S}}(undef, size(tmp3105))
    for i = eachindex(tmp3108)
        tmp3108[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3110 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp3110)
        tmp3110[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4089 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp4089)
        tmp4089[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4090 = Array{Taylor1{_S}}(undef, size(r_p2))
    for i = eachindex(tmp4090)
        tmp4090[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4091 = Array{Taylor1{_S}}(undef, size(r_p2))
    for i = eachindex(tmp4091)
        tmp4091[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3118 = Array{Taylor1{_S}}(undef, size(pn2x))
    for i = eachindex(tmp3118)
        tmp3118[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3119 = Array{Taylor1{_S}}(undef, size(tmp3118))
    for i = eachindex(tmp3119)
        tmp3119[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3130 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp3130)
        tmp3130[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp3130))
    for i = eachindex(temp_001)
        temp_001[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3132 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp3132)
        tmp3132[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp3132))
    for i = eachindex(temp_002)
        temp_002[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3134 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp3134)
        tmp3134[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp3134))
    for i = eachindex(temp_003)
        temp_003[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    for i = eachindex(temp_004)
        temp_004[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1286 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                    Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                    Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                    U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                    V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                    W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                    tmp3082[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                    tmp3084[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                    _4U_m_3X[i, j] = Taylor1(constant_term(tmp3082[3j - 2]) - constant_term(tmp3084[3i - 2]), order)
                    tmp3087[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                    tmp3089[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                    _4V_m_3Y[i, j] = Taylor1(constant_term(tmp3087[3j - 1]) - constant_term(tmp3089[3i - 1]), order)
                    tmp3092[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                    tmp3094[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                    _4W_m_3Z[i, j] = Taylor1(constant_term(tmp3092[3j]) - constant_term(tmp3094[3i]), order)
                    pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                    pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                    pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                    UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                    VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                    WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                    tmp3102[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                    vi_dot_vj[i, j] = Taylor1(constant_term(tmp3102[i, j]) + constant_term(WW[i, j]), order)
                    tmp3105[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                    tmp4087[i, j] = Taylor1(zero(constant_term(X[i, j])), order)
                    tmp3107[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                    tmp4088[i, j] = Taylor1(zero(constant_term(Y[i, j])), order)
                    tmp3108[i, j] = Taylor1(constant_term(tmp3105[i, j]) + constant_term(tmp3107[i, j]), order)
                    tmp3110[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                    tmp4089[i, j] = Taylor1(zero(constant_term(Z[i, j])), order)
                    r_p2[i, j] = Taylor1(constant_term(tmp3108[i, j]) + constant_term(tmp3110[i, j]), order)
                    r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                    r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                    tmp4090[i, j] = Taylor1(zero(constant_term(r_p2[i, j])), order)
                    r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                    tmp4091[i, j] = Taylor1(zero(constant_term(r_p2[i, j])), order)
                    newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                    tmp3118[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                    tmp3119[i, j] = Taylor1(constant_term(tmp3118[i, j]) + constant_term(pn2z[i, j]), order)
                    pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp3119[i, j]), order)
                    newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                    pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                    U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                    V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                    W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                    tmp3130[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp3130[i, j]), order)
                    newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                    tmp3132[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp3132[i, j]), order)
                    newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                    tmp3134[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp3134[i, j]), order)
                    newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                    temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                    newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
                end
            end
            tmp3138[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
            tmp4092[3j - 2] = Taylor1(zero(constant_term(dq[3j - 2])), order)
            tmp3140[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
            tmp4093[3j - 1] = Taylor1(zero(constant_term(dq[3j - 1])), order)
            tmp3141[3j - 2] = Taylor1(constant_term(tmp3138[3j - 2]) + constant_term(tmp3140[3j - 1]), order)
            tmp3143[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
            tmp4094[3j] = Taylor1(zero(constant_term(dq[3j])), order)
            v2[j] = Taylor1(constant_term(tmp3141[3j - 2]) + constant_term(tmp3143[3j]), order)
        end
    tmp3145 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp3147 = Taylor1(constant_term(tmp3145) / constant_term(2), order)
    tmp3148 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp3147), order)
    J2M_t = Taylor1(constant_term(tmp3148) / constant_term(μ[mo]), order)
    tmp3150 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp3151 = Taylor1(constant_term(tmp3150) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp3151) / constant_term(4), order)
    tmp3154 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp3154) / constant_term(μ[mo]), order)
    tmp3156 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp3156) / constant_term(μ[mo]), order)
    tmp3158 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp3159 = Taylor1(constant_term(tmp3158) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp3159) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp3171 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    for i = eachindex(tmp3171)
        tmp3171[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3173 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    for i = eachindex(tmp3173)
        tmp3173[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3175 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    for i = eachindex(tmp3175)
        tmp3175[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3179 = Array{Taylor1{_S}}(undef, size(X_bf))
    for i = eachindex(tmp3179)
        tmp3179[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4095 = Array{Taylor1{_S}}(undef, size(X_bf))
    for i = eachindex(tmp4095)
        tmp4095[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3181 = Array{Taylor1{_S}}(undef, size(Y_bf))
    for i = eachindex(tmp3181)
        tmp3181[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4096 = Array{Taylor1{_S}}(undef, size(Y_bf))
    for i = eachindex(tmp4096)
        tmp4096[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3182 = Array{Taylor1{_S}}(undef, size(tmp3179))
    for i = eachindex(tmp3182)
        tmp3182[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4098 = Array{Taylor1{_S}}(undef, size(r_p2))
    for i = eachindex(tmp4098)
        tmp4098[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3197 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp3197)
        tmp3197[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3198 = Array{Taylor1{_S}}(undef, size(tmp3197))
    for i = eachindex(tmp3198)
        tmp3198[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3200 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = eachindex(tmp3200)
        tmp3200[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3201 = Array{Taylor1{_S}}(undef, size(tmp3200))
    for i = eachindex(tmp3201)
        tmp3201[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3202 = Array{Taylor1{_S}}(undef, size(tmp3201))
    for i = eachindex(tmp3202)
        tmp3202[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3299 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    for i = eachindex(tmp3299)
        tmp3299[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3302 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    for i = eachindex(tmp3302)
        tmp3302[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3304 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3304)
        tmp3304[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3305 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3305)
        tmp3305[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3306 = Array{Taylor1{_S}}(undef, size(tmp3304))
    for i = eachindex(tmp3306)
        tmp3306[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3307 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3307)
        tmp3307[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3309 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3309)
        tmp3309[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3310 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3310)
        tmp3310[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3311 = Array{Taylor1{_S}}(undef, size(tmp3309))
    for i = eachindex(tmp3311)
        tmp3311[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3312 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3312)
        tmp3312[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3314 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3314)
        tmp3314[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3315 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3315)
        tmp3315[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3316 = Array{Taylor1{_S}}(undef, size(tmp3314))
    for i = eachindex(tmp3316)
        tmp3316[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3317 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3317)
        tmp3317[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3319 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3319)
        tmp3319[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3320 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3320)
        tmp3320[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3321 = Array{Taylor1{_S}}(undef, size(tmp3319))
    for i = eachindex(tmp3321)
        tmp3321[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3322 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3322)
        tmp3322[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3324 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3324)
        tmp3324[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3325 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3325)
        tmp3325[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3326 = Array{Taylor1{_S}}(undef, size(tmp3324))
    for i = eachindex(tmp3326)
        tmp3326[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3327 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3327)
        tmp3327[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3329 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3329)
        tmp3329[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3330 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3330)
        tmp3330[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3331 = Array{Taylor1{_S}}(undef, size(tmp3329))
    for i = eachindex(tmp3331)
        tmp3331[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3332 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3332)
        tmp3332[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3334 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3334)
        tmp3334[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3335 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3335)
        tmp3335[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3336 = Array{Taylor1{_S}}(undef, size(tmp3334))
    for i = eachindex(tmp3336)
        tmp3336[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3337 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3337)
        tmp3337[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3339 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3339)
        tmp3339[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3340 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3340)
        tmp3340[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3341 = Array{Taylor1{_S}}(undef, size(tmp3339))
    for i = eachindex(tmp3341)
        tmp3341[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3342 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3342)
        tmp3342[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3344 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3344)
        tmp3344[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3345 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3345)
        tmp3345[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3346 = Array{Taylor1{_S}}(undef, size(tmp3344))
    for i = eachindex(tmp3346)
        tmp3346[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3347 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = eachindex(tmp3347)
        tmp3347[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3349 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3349)
        tmp3349[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3350 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3350)
        tmp3350[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3351 = Array{Taylor1{_S}}(undef, size(tmp3349))
    for i = eachindex(tmp3351)
        tmp3351[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3352 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3352)
        tmp3352[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3354 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3354)
        tmp3354[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3355 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3355)
        tmp3355[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3356 = Array{Taylor1{_S}}(undef, size(tmp3354))
    for i = eachindex(tmp3356)
        tmp3356[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3357 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3357)
        tmp3357[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3359 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3359)
        tmp3359[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3360 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3360)
        tmp3360[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3361 = Array{Taylor1{_S}}(undef, size(tmp3359))
    for i = eachindex(tmp3361)
        tmp3361[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3362 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = eachindex(tmp3362)
        tmp3362[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3187 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp3187)
        tmp3187[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3188 = Array{Taylor1{_S}}(undef, size(tmp3187))
    for i = eachindex(tmp3188)
        tmp3188[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3189 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp3189)
        tmp3189[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3191 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = eachindex(tmp3191)
        tmp3191[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3192 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp3192)
        tmp3192[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4097 = Array{Taylor1{_S}}(undef, size(r_p1d2))
    for i = eachindex(tmp4097)
        tmp4097[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3204 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = eachindex(tmp3204)
        tmp3204[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3205 = Array{Taylor1{_S}}(undef, size(tmp3204))
    for i = eachindex(tmp3205)
        tmp3205[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3206 = Array{Taylor1{_S}}(undef, size(tmp3205))
    for i = eachindex(tmp3206)
        tmp3206[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3208 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = eachindex(tmp3208)
        tmp3208[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3209 = Array{Taylor1{_S}}(undef, size(tmp3208))
    for i = eachindex(tmp3209)
        tmp3209[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3210 = Array{Taylor1{_S}}(undef, size(tmp3209))
    for i = eachindex(tmp3210)
        tmp3210[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3211 = Array{Taylor1{_S}}(undef, size(tmp3210))
    for i = eachindex(tmp3211)
        tmp3211[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3236 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = eachindex(tmp3236)
        tmp3236[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3237 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp3237)
        tmp3237[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3238 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp3238)
        tmp3238[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3239 = Array{Taylor1{_S}}(undef, size(tmp3237))
    for i = eachindex(tmp3239)
        tmp3239[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3240 = Array{Taylor1{_S}}(undef, size(tmp3236))
    for i = eachindex(tmp3240)
        tmp3240[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3241 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = eachindex(tmp3241)
        tmp3241[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3242 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp3242)
        tmp3242[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3243 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp3243)
        tmp3243[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3244 = Array{Taylor1{_S}}(undef, size(tmp3242))
    for i = eachindex(tmp3244)
        tmp3244[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3245 = Array{Taylor1{_S}}(undef, size(tmp3241))
    for i = eachindex(tmp3245)
        tmp3245[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3246 = Array{Taylor1{_S}}(undef, size(tmp3240))
    for i = eachindex(tmp3246)
        tmp3246[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3248 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3248)
        tmp3248[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3249 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp3249)
        tmp3249[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3250 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp3250)
        tmp3250[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3251 = Array{Taylor1{_S}}(undef, size(tmp3249))
    for i = eachindex(tmp3251)
        tmp3251[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3252 = Array{Taylor1{_S}}(undef, size(tmp3248))
    for i = eachindex(tmp3252)
        tmp3252[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3253 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3253)
        tmp3253[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3254 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp3254)
        tmp3254[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3255 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp3255)
        tmp3255[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3256 = Array{Taylor1{_S}}(undef, size(tmp3254))
    for i = eachindex(tmp3256)
        tmp3256[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3257 = Array{Taylor1{_S}}(undef, size(tmp3253))
    for i = eachindex(tmp3257)
        tmp3257[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3258 = Array{Taylor1{_S}}(undef, size(tmp3252))
    for i = eachindex(tmp3258)
        tmp3258[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3260 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp3260)
        tmp3260[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3261 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp3261)
        tmp3261[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3262 = Array{Taylor1{_S}}(undef, size(tmp3260))
    for i = eachindex(tmp3262)
        tmp3262[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3263 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = eachindex(tmp3263)
        tmp3263[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3264 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp3264)
        tmp3264[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3265 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp3265)
        tmp3265[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3266 = Array{Taylor1{_S}}(undef, size(tmp3264))
    for i = eachindex(tmp3266)
        tmp3266[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3267 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = eachindex(tmp3267)
        tmp3267[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3268 = Array{Taylor1{_S}}(undef, size(tmp3263))
    for i = eachindex(tmp3268)
        tmp3268[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3288 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    for i = eachindex(tmp3288)
        tmp3288[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3289 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    for i = eachindex(tmp3289)
        tmp3289[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3292 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    for i = eachindex(tmp3292)
        tmp3292[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3293 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    for i = eachindex(tmp3293)
        tmp3293[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3214 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp3214)
        tmp3214[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3215 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp3215)
        tmp3215[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3217 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = eachindex(tmp3217)
        tmp3217[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3218 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = eachindex(tmp3218)
        tmp3218[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3220 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3220)
        tmp3220[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3223 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3223)
        tmp3223[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3232 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3232)
        tmp3232[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3233 = Array{Taylor1{_S}}(undef, size(tmp3232))
    for i = eachindex(tmp3233)
        tmp3233[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3234 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3234)
        tmp3234[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3225 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3225)
        tmp3225[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3227 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3227)
        tmp3227[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3228 = Array{Taylor1{_S}}(undef, size(tmp3227))
    for i = eachindex(tmp3228)
        tmp3228[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3229 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3229)
        tmp3229[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3274 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = eachindex(tmp3274)
        tmp3274[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3275 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    for i = eachindex(tmp3275)
        tmp3275[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3276 = Array{Taylor1{_S}}(undef, size(tmp3274))
    for i = eachindex(tmp3276)
        tmp3276[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3277 = Array{Taylor1{_S}}(undef, size(tmp3276))
    for i = eachindex(tmp3277)
        tmp3277[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3279 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = eachindex(tmp3279)
        tmp3279[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3280 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    for i = eachindex(tmp3280)
        tmp3280[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3281 = Array{Taylor1{_S}}(undef, size(tmp3279))
    for i = eachindex(tmp3281)
        tmp3281[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3282 = Array{Taylor1{_S}}(undef, size(tmp3281))
    for i = eachindex(tmp3282)
        tmp3282[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3284 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    for i = eachindex(tmp3284)
        tmp3284[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3285 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = eachindex(tmp3285)
        tmp3285[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3286 = Array{Taylor1{_S}}(undef, size(tmp3285))
    for i = eachindex(tmp3286)
        tmp3286[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1380 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                        X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                        X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                        Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                        Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                        Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                        Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                        Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                        Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                        tmp3171[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                        X_bf[i, j] = Taylor1(constant_term(tmp3171[i, j]) + constant_term(X_bf_3[i, j]), order)
                        tmp3173[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                        Y_bf[i, j] = Taylor1(constant_term(tmp3173[i, j]) + constant_term(Y_bf_3[i, j]), order)
                        tmp3175[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                        Z_bf[i, j] = Taylor1(constant_term(tmp3175[i, j]) + constant_term(Z_bf_3[i, j]), order)
                        sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                        tmp3179[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp4095[i, j] = Taylor1(zero(constant_term(X_bf[i, j])), order)
                        tmp3181[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp4096[i, j] = Taylor1(zero(constant_term(Y_bf[i, j])), order)
                        tmp3182[i, j] = Taylor1(constant_term(tmp3179[i, j]) + constant_term(tmp3181[i, j]), order)
                        r_xy[i, j] = Taylor1(sqrt(constant_term(tmp3182[i, j])), order)
                        cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                        sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                        P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                        dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                        for n = 2:n1SEM[j]
                            tmp3187[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp3188[i, j, n] = Taylor1(constant_term(tmp3187[i, j, n]) * constant_term(fact1_jsem[n]), order)
                            tmp3189[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                            P_n[i, j, n + 1] = Taylor1(constant_term(tmp3188[i, j, n]) - constant_term(tmp3189[i, j, n - 1]), order)
                            tmp3191[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp3192[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                            dP_n[i, j, n + 1] = Taylor1(constant_term(tmp3191[i, j, n]) + constant_term(tmp3192[i, j, n]), order)
                            temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                            tmp4097[i, j] = Taylor1(zero(constant_term(r_p1d2[i, j])), order)
                        end
                        r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                        tmp4098[i, j] = Taylor1(zero(constant_term(r_p2[i, j])), order)
                        tmp3197[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                        tmp3198[i, j, 3] = Taylor1(constant_term(tmp3197[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ξ[i, j] = Taylor1(constant_term(tmp3198[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        tmp3200[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                        tmp3201[i, j, 3] = Taylor1(constant_term(tmp3200[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                        tmp3202[i, j, 3] = Taylor1(constant_term(tmp3201[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ζ[i, j] = Taylor1(constant_term(tmp3202[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n1SEM[j]
                            tmp3204[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                            tmp3205[i, j, n + 1] = Taylor1(constant_term(tmp3204[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp3206[i, j, n + 1] = Taylor1(constant_term(tmp3205[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjξ[i, j, n] = Taylor1(constant_term(tmp3206[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp3208[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                            tmp3209[i, j, n + 1] = Taylor1(constant_term(tmp3208[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                            tmp3210[i, j, n + 1] = Taylor1(constant_term(tmp3209[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp3211[i, j, n + 1] = Taylor1(constant_term(tmp3210[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjζ[i, j, n] = Taylor1(constant_term(tmp3211[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                            F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                            F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                    cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                    secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                    P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                    cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                                else
                                    tmp3214[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    tmp3215[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    sin_mλ[i, j, m] = Taylor1(constant_term(tmp3214[i, j, m - 1]) + constant_term(tmp3215[i, j, m - 1]), order)
                                    tmp3217[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    tmp3218[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    cos_mλ[i, j, m] = Taylor1(constant_term(tmp3217[i, j, m - 1]) - constant_term(tmp3218[i, j, m - 1]), order)
                                    tmp3220[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp3220[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                    P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp3223[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                    cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp3223[i, j, m, m]) * constant_term(lnm3[m]), order)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        tmp3225[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp3225[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    else
                                        tmp3227[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        tmp3228[i, j, n - 1, m] = Taylor1(constant_term(tmp3227[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                        tmp3229[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp3228[i, j, n - 1, m]) + constant_term(tmp3229[i, j, n - 2, m]), order)
                                    end
                                    P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp3232[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp3233[i, j, n, m] = Taylor1(constant_term(tmp3232[i, j, n, m]) * constant_term(lnm3[n]), order)
                                    tmp3234[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                    cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp3233[i, j, n, m]) + constant_term(tmp3234[i, j, n - 1, m]), order)
                                end
                            end
                            tmp3236[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                            tmp3237[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3238[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3239[i, j, 1] = Taylor1(constant_term(tmp3237[i, j, 1]) + constant_term(tmp3238[i, j, 1]), order)
                            tmp3240[i, j, 2, 1] = Taylor1(constant_term(tmp3236[i, j, 2, 1]) * constant_term(tmp3239[i, j, 1]), order)
                            tmp3241[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                            tmp3242[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3243[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3244[i, j, 2] = Taylor1(constant_term(tmp3242[i, j, 2]) + constant_term(tmp3243[i, j, 2]), order)
                            tmp3245[i, j, 2, 2] = Taylor1(constant_term(tmp3241[i, j, 2, 2]) * constant_term(tmp3244[i, j, 2]), order)
                            tmp3246[i, j, 2, 1] = Taylor1(constant_term(tmp3240[i, j, 2, 1]) + constant_term(tmp3245[i, j, 2, 2]), order)
                            F_CS_ξ[i, j] = Taylor1(constant_term(tmp3246[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp3248[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                            tmp3249[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3250[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3251[i, j, 1] = Taylor1(constant_term(tmp3249[i, j, 1]) - constant_term(tmp3250[i, j, 1]), order)
                            tmp3252[i, j, 2, 1] = Taylor1(constant_term(tmp3248[i, j, 2, 1]) * constant_term(tmp3251[i, j, 1]), order)
                            tmp3253[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                            tmp3254[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3255[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3256[i, j, 2] = Taylor1(constant_term(tmp3254[i, j, 2]) - constant_term(tmp3255[i, j, 2]), order)
                            tmp3257[i, j, 2, 2] = Taylor1(constant_term(tmp3253[i, j, 2, 2]) * constant_term(tmp3256[i, j, 2]), order)
                            tmp3258[i, j, 2, 1] = Taylor1(constant_term(tmp3252[i, j, 2, 1]) + constant_term(tmp3257[i, j, 2, 2]), order)
                            F_CS_η[i, j] = Taylor1(constant_term(tmp3258[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp3260[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3261[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3262[i, j, 1] = Taylor1(constant_term(tmp3260[i, j, 1]) + constant_term(tmp3261[i, j, 1]), order)
                            tmp3263[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp3262[i, j, 1]), order)
                            tmp3264[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3265[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3266[i, j, 2] = Taylor1(constant_term(tmp3264[i, j, 2]) + constant_term(tmp3265[i, j, 2]), order)
                            tmp3267[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp3266[i, j, 2]), order)
                            tmp3268[i, j, 2, 1] = Taylor1(constant_term(tmp3263[i, j, 2, 1]) + constant_term(tmp3267[i, j, 2, 2]), order)
                            F_CS_ζ[i, j] = Taylor1(constant_term(tmp3268[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            for n = 3:n2M
                                for m = 1:n
                                    Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    tmp3274[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                    tmp3275[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp3276[i, j, n, m] = Taylor1(constant_term(tmp3274[i, j, n, m]) * constant_term(tmp3275[i, j, n, m]), order)
                                    tmp3277[i, j, n, m] = Taylor1(constant_term(tmp3276[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp3277[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                    tmp3279[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                    tmp3280[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                    tmp3281[i, j, n, m] = Taylor1(constant_term(tmp3279[i, j, n, m]) * constant_term(tmp3280[i, j, n, m]), order)
                                    tmp3282[i, j, n, m] = Taylor1(constant_term(tmp3281[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp3282[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                    tmp3284[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp3285[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp3284[i, j, n, m]), order)
                                    tmp3286[i, j, n, m] = Taylor1(constant_term(tmp3285[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp3286[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                    F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                    F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                    F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                                end
                            end
                            tmp3288[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp3289[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                            F_JCS_ξ[i, j] = Taylor1(constant_term(tmp3288[i, j]) + constant_term(tmp3289[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                            tmp3292[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                            tmp3293[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(tmp3292[i, j]) + constant_term(tmp3293[i, j]), order)
                        else
                            F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        end
                        Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                        tmp3299[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp3299[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                        tmp3302[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp3302[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                        Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                        tmp3304[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3305[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3306[i, j, 1, 1] = Taylor1(constant_term(tmp3304[i, j, 1, 1]) + constant_term(tmp3305[i, j, 1, 2]), order)
                        tmp3307[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp3306[i, j, 1, 1]) + constant_term(tmp3307[i, j, 1, 3]), order)
                        tmp3309[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3310[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3311[i, j, 2, 1] = Taylor1(constant_term(tmp3309[i, j, 2, 1]) + constant_term(tmp3310[i, j, 2, 2]), order)
                        tmp3312[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp3311[i, j, 2, 1]) + constant_term(tmp3312[i, j, 2, 3]), order)
                        tmp3314[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3315[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3316[i, j, 3, 1] = Taylor1(constant_term(tmp3314[i, j, 3, 1]) + constant_term(tmp3315[i, j, 3, 2]), order)
                        tmp3317[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp3316[i, j, 3, 1]) + constant_term(tmp3317[i, j, 3, 3]), order)
                        tmp3319[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3320[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3321[i, j, 1, 1] = Taylor1(constant_term(tmp3319[i, j, 1, 1]) + constant_term(tmp3320[i, j, 1, 2]), order)
                        tmp3322[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp3321[i, j, 1, 1]) + constant_term(tmp3322[i, j, 1, 3]), order)
                        tmp3324[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3325[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3326[i, j, 2, 1] = Taylor1(constant_term(tmp3324[i, j, 2, 1]) + constant_term(tmp3325[i, j, 2, 2]), order)
                        tmp3327[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp3326[i, j, 2, 1]) + constant_term(tmp3327[i, j, 2, 3]), order)
                        tmp3329[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3330[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3331[i, j, 3, 1] = Taylor1(constant_term(tmp3329[i, j, 3, 1]) + constant_term(tmp3330[i, j, 3, 2]), order)
                        tmp3332[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp3331[i, j, 3, 1]) + constant_term(tmp3332[i, j, 3, 3]), order)
                        tmp3334[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3335[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3336[i, j, 1, 1] = Taylor1(constant_term(tmp3334[i, j, 1, 1]) + constant_term(tmp3335[i, j, 1, 2]), order)
                        tmp3337[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp3336[i, j, 1, 1]) + constant_term(tmp3337[i, j, 1, 3]), order)
                        tmp3339[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3340[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3341[i, j, 2, 1] = Taylor1(constant_term(tmp3339[i, j, 2, 1]) + constant_term(tmp3340[i, j, 2, 2]), order)
                        tmp3342[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp3341[i, j, 2, 1]) + constant_term(tmp3342[i, j, 2, 3]), order)
                        tmp3344[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3345[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3346[i, j, 3, 1] = Taylor1(constant_term(tmp3344[i, j, 3, 1]) + constant_term(tmp3345[i, j, 3, 2]), order)
                        tmp3347[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp3346[i, j, 3, 1]) + constant_term(tmp3347[i, j, 3, 3]), order)
                        tmp3349[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                        tmp3350[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                        tmp3351[i, j, 1, 1] = Taylor1(constant_term(tmp3349[i, j, 1, 1]) + constant_term(tmp3350[i, j, 2, 1]), order)
                        tmp3352[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                        F_JCS_x[i, j] = Taylor1(constant_term(tmp3351[i, j, 1, 1]) + constant_term(tmp3352[i, j, 3, 1]), order)
                        tmp3354[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                        tmp3355[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                        tmp3356[i, j, 1, 2] = Taylor1(constant_term(tmp3354[i, j, 1, 2]) + constant_term(tmp3355[i, j, 2, 2]), order)
                        tmp3357[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                        F_JCS_y[i, j] = Taylor1(constant_term(tmp3356[i, j, 1, 2]) + constant_term(tmp3357[i, j, 3, 2]), order)
                        tmp3359[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                        tmp3360[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                        tmp3361[i, j, 1, 3] = Taylor1(constant_term(tmp3359[i, j, 1, 3]) + constant_term(tmp3360[i, j, 2, 3]), order)
                        tmp3362[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                        F_JCS_z[i, j] = Taylor1(constant_term(tmp3361[i, j, 1, 3]) + constant_term(tmp3362[i, j, 3, 3]), order)
                    end
                end
            end
        end
    tmp3364 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    for i = eachindex(tmp3364)
        tmp3364[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3366 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    for i = eachindex(tmp3366)
        tmp3366[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3368 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    for i = eachindex(tmp3368)
        tmp3368[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3370 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    for i = eachindex(tmp3370)
        tmp3370[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3372 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    for i = eachindex(tmp3372)
        tmp3372[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3374 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    for i = eachindex(tmp3374)
        tmp3374[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3376 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp3376)
        tmp3376[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3377 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp3377)
        tmp3377[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3378 = Array{Taylor1{_S}}(undef, size(tmp3376))
    for i = eachindex(tmp3378)
        tmp3378[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3380 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp3380)
        tmp3380[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3381 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp3381)
        tmp3381[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3382 = Array{Taylor1{_S}}(undef, size(tmp3380))
    for i = eachindex(tmp3382)
        tmp3382[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3384 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp3384)
        tmp3384[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3385 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp3385)
        tmp3385[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3386 = Array{Taylor1{_S}}(undef, size(tmp3384))
    for i = eachindex(tmp3386)
        tmp3386[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp3364[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp3364[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp3366[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp3366[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp3368[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp3368[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp3370[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp3370[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp3372[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp3372[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp3374[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp3374[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp3376[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp3377[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp3378[i, j] = Taylor1(constant_term(tmp3376[i, j]) - constant_term(tmp3377[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3378[i, j]), order)
                        tmp3380[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp3381[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp3382[i, j] = Taylor1(constant_term(tmp3380[i, j]) - constant_term(tmp3381[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3382[i, j]), order)
                        tmp3384[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp3385[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp3386[i, j] = Taylor1(constant_term(tmp3384[i, j]) - constant_term(tmp3385[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3386[i, j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp3398 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    for i = eachindex(tmp3398)
        tmp3398[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(Xij_t_Ui)
        Xij_t_Ui[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(Yij_t_Vi)
        Yij_t_Vi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(Zij_t_Wi)
        Zij_t_Wi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3404 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    for i = eachindex(tmp3404)
        tmp3404[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp3404))
    for i = eachindex(Rij_dot_Vi)
        Rij_dot_Vi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3407 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    for i = eachindex(tmp3407)
        tmp3407[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4099 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    for i = eachindex(tmp4099)
        tmp4099[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3410 = Array{Taylor1{_S}}(undef, size(rij_dot_vi_div_rij_sq))
    for i = eachindex(tmp3410)
        tmp3410[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    for i = eachindex(pn1t2_7)
        pn1t2_7[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1619 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                    ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                    _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                    sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                    tmp3398[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                    sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp3398[i, j]), order)
                    ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                    Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                    Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                    Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                    tmp3404[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                    Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp3404[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                    tmp3407[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                    tmp4099[i, j] = Taylor1(zero(constant_term(Rij_dot_Vi[i, j])), order)
                    rij_dot_vi_div_rij_sq[i, j] = Taylor1(constant_term(tmp3407[i, j]) / constant_term(r_p2[i, j]), order)
                    tmp3410[i, j] = Taylor1(constant_term(1.5) * constant_term(rij_dot_vi_div_rij_sq[i, j]), order)
                    pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp3410[i, j]), order)
                    pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
                end
            end
            pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp3417 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    for i = eachindex(tmp3417)
        tmp3417[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3418 = Array{Taylor1{_S}}(undef, size(tmp3417))
    for i = eachindex(tmp3418)
        tmp3418[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3419 = Array{Taylor1{_S}}(undef, size(tmp3418))
    for i = eachindex(tmp3419)
        tmp3419[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3427 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    for i = eachindex(tmp3427)
        tmp3427[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    for i = eachindex(termpnx)
        termpnx[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    for i = eachindex(sumpnx)
        sumpnx[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3430 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    for i = eachindex(tmp3430)
        tmp3430[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    for i = eachindex(termpny)
        termpny[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    for i = eachindex(sumpny)
        sumpny[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3433 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    for i = eachindex(tmp3433)
        tmp3433[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    for i = eachindex(termpnz)
        termpnz[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    for i = eachindex(sumpnz)
        sumpnz[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1658 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                    pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                    pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                    tmp3417[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                    tmp3418[i, j] = Taylor1(constant_term(tmp3417[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                    tmp3419[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp3418[i, j]), order)
                    pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp3419[i, j]), order)
                    X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                    Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                    Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                    pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                    pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                    pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                    tmp3427[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                    termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp3427[i, j]), order)
                    sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                    pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                    tmp3430[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                    termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp3430[i, j]), order)
                    sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                    pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                    tmp3433[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                    termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp3433[i, j]), order)
                    sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                    pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
                end
            end
            postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
            postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
            postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
        end
    x0s_M = Taylor1(identity(constant_term(r_star_M_0[1])), order)
    y0s_M = Taylor1(identity(constant_term(r_star_M_0[2])), order)
    z0s_M = Taylor1(identity(constant_term(r_star_M_0[3])), order)
    tmp3440 = Taylor1(constant_term(x0s_M) ^ float(constant_term(2)), order)
    tmp4100 = Taylor1(zero(constant_term(x0s_M)), order)
    tmp3442 = Taylor1(constant_term(y0s_M) ^ float(constant_term(2)), order)
    tmp4101 = Taylor1(zero(constant_term(y0s_M)), order)
    ρ0s2_M = Taylor1(constant_term(tmp3440) + constant_term(tmp3442), order)
    ρ0s_M = Taylor1(sqrt(constant_term(ρ0s2_M)), order)
    z0s2_M = Taylor1(constant_term(z0s_M) ^ float(constant_term(2)), order)
    tmp4102 = Taylor1(zero(constant_term(z0s_M)), order)
    r0s2_M = Taylor1(constant_term(ρ0s2_M) + constant_term(z0s2_M), order)
    r0s_M = Taylor1(sqrt(constant_term(r0s2_M)), order)
    r0s5_M = Taylor1(constant_term(r0s_M) ^ float(constant_term(5)), order)
    tmp4103 = Taylor1(zero(constant_term(r0s_M)), order)
    x0s_S = Taylor1(identity(constant_term(r_star_S_0[1])), order)
    y0s_S = Taylor1(identity(constant_term(r_star_S_0[2])), order)
    z0s_S = Taylor1(identity(constant_term(r_star_S_0[3])), order)
    tmp3452 = Taylor1(constant_term(x0s_S) ^ float(constant_term(2)), order)
    tmp4104 = Taylor1(zero(constant_term(x0s_S)), order)
    tmp3454 = Taylor1(constant_term(y0s_S) ^ float(constant_term(2)), order)
    tmp4105 = Taylor1(zero(constant_term(y0s_S)), order)
    ρ0s2_S = Taylor1(constant_term(tmp3452) + constant_term(tmp3454), order)
    ρ0s_S = Taylor1(sqrt(constant_term(ρ0s2_S)), order)
    z0s2_S = Taylor1(constant_term(z0s_S) ^ float(constant_term(2)), order)
    tmp4106 = Taylor1(zero(constant_term(z0s_S)), order)
    r0s2_S = Taylor1(constant_term(ρ0s2_S) + constant_term(z0s2_S), order)
    r0s_S = Taylor1(sqrt(constant_term(r0s2_S)), order)
    r0s5_S = Taylor1(constant_term(r0s_S) ^ float(constant_term(5)), order)
    tmp4107 = Taylor1(zero(constant_term(r0s_S)), order)
    tmp3464 = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_0[3]), order)
    tmp3466 = Taylor1(constant_term(tmp3464) ^ float(constant_term(2)), order)
    tmp4108 = Taylor1(zero(constant_term(tmp3464)), order)
    tmp3468 = Taylor1(constant_term(r_xy[mo, ea]) * constant_term(ρ0s_M), order)
    tmp3470 = Taylor1(constant_term(tmp3468) ^ float(constant_term(2)), order)
    tmp4109 = Taylor1(zero(constant_term(tmp3468)), order)
    tmp3471 = Taylor1(constant_term(0.5) * constant_term(tmp3470), order)
    tmp3472 = Taylor1(constant_term(tmp3466) + constant_term(tmp3471), order)
    tmp3473 = Taylor1(constant_term(tmp3472) / constant_term(r_p2[mo, ea]), order)
    tmp3474 = Taylor1(constant_term(5) * constant_term(tmp3473), order)
    coeff0_M = Taylor1(constant_term(r0s2_M) - constant_term(tmp3474), order)
    tmp3477 = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_0[3]), order)
    tmp3479 = Taylor1(constant_term(tmp3477) ^ float(constant_term(2)), order)
    tmp4110 = Taylor1(zero(constant_term(tmp3477)), order)
    tmp3481 = Taylor1(constant_term(r_xy[mo, ea]) * constant_term(ρ0s_S), order)
    tmp3483 = Taylor1(constant_term(tmp3481) ^ float(constant_term(2)), order)
    tmp4111 = Taylor1(zero(constant_term(tmp3481)), order)
    tmp3484 = Taylor1(constant_term(0.5) * constant_term(tmp3483), order)
    tmp3485 = Taylor1(constant_term(tmp3479) + constant_term(tmp3484), order)
    tmp3486 = Taylor1(constant_term(tmp3485) / constant_term(r_p2[mo, ea]), order)
    tmp3487 = Taylor1(constant_term(5) * constant_term(tmp3486), order)
    coeff0_S = Taylor1(constant_term(r0s2_S) - constant_term(tmp3487), order)
    k_20E_div_r0s5_M = Taylor1(constant_term(k_20E) / constant_term(r0s5_M), order)
    k_20E_div_r0s5_S = Taylor1(constant_term(k_20E) / constant_term(r0s5_S), order)
    tmp3491 = Taylor1(constant_term(ρ0s2_M) + constant_term(coeff0_M), order)
    tmp3492 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp3491), order)
    a_tid_0_M_x = Taylor1(constant_term(tmp3492) * constant_term(X_bf[mo, ea]), order)
    tmp3494 = Taylor1(constant_term(ρ0s2_M) + constant_term(coeff0_M), order)
    tmp3495 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp3494), order)
    a_tid_0_M_y = Taylor1(constant_term(tmp3495) * constant_term(Y_bf[mo, ea]), order)
    tmp3498 = Taylor1(constant_term(2) * constant_term(z0s2_M), order)
    tmp3499 = Taylor1(constant_term(tmp3498) + constant_term(coeff0_M), order)
    tmp3500 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp3499), order)
    a_tid_0_M_z = Taylor1(constant_term(tmp3500) * constant_term(Z_bf[mo, ea]), order)
    tmp3502 = Taylor1(constant_term(ρ0s2_S) + constant_term(coeff0_S), order)
    tmp3503 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp3502), order)
    a_tid_0_S_x = Taylor1(constant_term(tmp3503) * constant_term(X_bf[mo, ea]), order)
    tmp3505 = Taylor1(constant_term(ρ0s2_S) + constant_term(coeff0_S), order)
    tmp3506 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp3505), order)
    a_tid_0_S_y = Taylor1(constant_term(tmp3506) * constant_term(Y_bf[mo, ea]), order)
    tmp3509 = Taylor1(constant_term(2) * constant_term(z0s2_S), order)
    tmp3510 = Taylor1(constant_term(tmp3509) + constant_term(coeff0_S), order)
    tmp3511 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp3510), order)
    a_tid_0_S_z = Taylor1(constant_term(tmp3511) * constant_term(Z_bf[mo, ea]), order)
    x1s_M = Taylor1(identity(constant_term(r_star_M_1[1])), order)
    y1s_M = Taylor1(identity(constant_term(r_star_M_1[2])), order)
    z1s_M = Taylor1(identity(constant_term(r_star_M_1[3])), order)
    tmp3514 = Taylor1(constant_term(x1s_M) ^ float(constant_term(2)), order)
    tmp4112 = Taylor1(zero(constant_term(x1s_M)), order)
    tmp3516 = Taylor1(constant_term(y1s_M) ^ float(constant_term(2)), order)
    tmp4113 = Taylor1(zero(constant_term(y1s_M)), order)
    ρ1s2_M = Taylor1(constant_term(tmp3514) + constant_term(tmp3516), order)
    ρ1s_M = Taylor1(sqrt(constant_term(ρ1s2_M)), order)
    z1s2_M = Taylor1(constant_term(z1s_M) ^ float(constant_term(2)), order)
    tmp4114 = Taylor1(zero(constant_term(z1s_M)), order)
    r1s2_M = Taylor1(constant_term(ρ1s2_M) + constant_term(z1s2_M), order)
    r1s_M = Taylor1(sqrt(constant_term(r1s2_M)), order)
    r1s5_M = Taylor1(constant_term(r1s_M) ^ float(constant_term(5)), order)
    tmp4115 = Taylor1(zero(constant_term(r1s_M)), order)
    x1s_S = Taylor1(identity(constant_term(r_star_S_1[1])), order)
    y1s_S = Taylor1(identity(constant_term(r_star_S_1[2])), order)
    z1s_S = Taylor1(identity(constant_term(r_star_S_1[3])), order)
    tmp3526 = Taylor1(constant_term(x1s_S) ^ float(constant_term(2)), order)
    tmp4116 = Taylor1(zero(constant_term(x1s_S)), order)
    tmp3528 = Taylor1(constant_term(y1s_S) ^ float(constant_term(2)), order)
    tmp4117 = Taylor1(zero(constant_term(y1s_S)), order)
    ρ1s2_S = Taylor1(constant_term(tmp3526) + constant_term(tmp3528), order)
    ρ1s_S = Taylor1(sqrt(constant_term(ρ1s2_S)), order)
    z1s2_S = Taylor1(constant_term(z1s_S) ^ float(constant_term(2)), order)
    tmp4118 = Taylor1(zero(constant_term(z1s_S)), order)
    r1s2_S = Taylor1(constant_term(ρ1s2_S) + constant_term(z1s2_S), order)
    r1s_S = Taylor1(sqrt(constant_term(r1s2_S)), order)
    r1s5_S = Taylor1(constant_term(r1s_S) ^ float(constant_term(5)), order)
    tmp4119 = Taylor1(zero(constant_term(r1s_S)), order)
    tmp3537 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_M_1[1]), order)
    tmp3538 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_1[2]), order)
    coeff1_1_M = Taylor1(constant_term(tmp3537) + constant_term(tmp3538), order)
    tmp3540 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_S_1[1]), order)
    tmp3541 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_1[2]), order)
    coeff1_1_S = Taylor1(constant_term(tmp3540) + constant_term(tmp3541), order)
    coeff2_1_M = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_1[3]), order)
    coeff2_1_S = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_1[3]), order)
    tmp3546 = Taylor1(constant_term(10) * constant_term(coeff1_1_M), order)
    tmp3547 = Taylor1(constant_term(tmp3546) * constant_term(coeff2_1_M), order)
    coeff3_1_M = Taylor1(constant_term(tmp3547) / constant_term(r_p2[mo, ea]), order)
    tmp3550 = Taylor1(constant_term(10) * constant_term(coeff1_1_S), order)
    tmp3551 = Taylor1(constant_term(tmp3550) * constant_term(coeff2_1_S), order)
    coeff3_1_S = Taylor1(constant_term(tmp3551) / constant_term(r_p2[mo, ea]), order)
    k_21E_div_r1s5_M = Taylor1(constant_term(k_21E) / constant_term(r1s5_M), order)
    k_21E_div_r1s5_S = Taylor1(constant_term(k_21E) / constant_term(r1s5_S), order)
    tmp3556 = Taylor1(constant_term(2) * constant_term(coeff2_1_M), order)
    tmp3557 = Taylor1(constant_term(tmp3556) * constant_term(r_star_M_1[1]), order)
    tmp3558 = Taylor1(constant_term(coeff3_1_M) * constant_term(X_bf[mo, ea]), order)
    tmp3559 = Taylor1(constant_term(tmp3557) - constant_term(tmp3558), order)
    a_tid_1_M_x = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp3559), order)
    tmp3562 = Taylor1(constant_term(2) * constant_term(coeff2_1_M), order)
    tmp3563 = Taylor1(constant_term(tmp3562) * constant_term(r_star_M_1[2]), order)
    tmp3564 = Taylor1(constant_term(coeff3_1_M) * constant_term(Y_bf[mo, ea]), order)
    tmp3565 = Taylor1(constant_term(tmp3563) - constant_term(tmp3564), order)
    a_tid_1_M_y = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp3565), order)
    tmp3568 = Taylor1(constant_term(2) * constant_term(coeff1_1_M), order)
    tmp3569 = Taylor1(constant_term(tmp3568) * constant_term(r_star_M_1[3]), order)
    tmp3570 = Taylor1(constant_term(coeff3_1_M) * constant_term(Z_bf[mo, ea]), order)
    tmp3571 = Taylor1(constant_term(tmp3569) - constant_term(tmp3570), order)
    a_tid_1_M_z = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp3571), order)
    tmp3574 = Taylor1(constant_term(2) * constant_term(coeff2_1_S), order)
    tmp3575 = Taylor1(constant_term(tmp3574) * constant_term(r_star_S_1[1]), order)
    tmp3576 = Taylor1(constant_term(coeff3_1_S) * constant_term(X_bf[mo, ea]), order)
    tmp3577 = Taylor1(constant_term(tmp3575) - constant_term(tmp3576), order)
    a_tid_1_S_x = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp3577), order)
    tmp3580 = Taylor1(constant_term(2) * constant_term(coeff2_1_S), order)
    tmp3581 = Taylor1(constant_term(tmp3580) * constant_term(r_star_S_1[2]), order)
    tmp3582 = Taylor1(constant_term(coeff3_1_S) * constant_term(Y_bf[mo, ea]), order)
    tmp3583 = Taylor1(constant_term(tmp3581) - constant_term(tmp3582), order)
    a_tid_1_S_y = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp3583), order)
    tmp3586 = Taylor1(constant_term(2) * constant_term(coeff1_1_S), order)
    tmp3587 = Taylor1(constant_term(tmp3586) * constant_term(r_star_S_1[3]), order)
    tmp3588 = Taylor1(constant_term(coeff3_1_S) * constant_term(Z_bf[mo, ea]), order)
    tmp3589 = Taylor1(constant_term(tmp3587) - constant_term(tmp3588), order)
    a_tid_1_S_z = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp3589), order)
    x2s_M = Taylor1(identity(constant_term(r_star_M_2[1])), order)
    y2s_M = Taylor1(identity(constant_term(r_star_M_2[2])), order)
    z2s_M = Taylor1(identity(constant_term(r_star_M_2[3])), order)
    tmp3592 = Taylor1(constant_term(x2s_M) ^ float(constant_term(2)), order)
    tmp4120 = Taylor1(zero(constant_term(x2s_M)), order)
    tmp3594 = Taylor1(constant_term(y2s_M) ^ float(constant_term(2)), order)
    tmp4121 = Taylor1(zero(constant_term(y2s_M)), order)
    ρ2s2_M = Taylor1(constant_term(tmp3592) + constant_term(tmp3594), order)
    ρ2s_M = Taylor1(sqrt(constant_term(ρ2s2_M)), order)
    z2s2_M = Taylor1(constant_term(z2s_M) ^ float(constant_term(2)), order)
    tmp4122 = Taylor1(zero(constant_term(z2s_M)), order)
    r2s2_M = Taylor1(constant_term(ρ2s2_M) + constant_term(z2s2_M), order)
    r2s_M = Taylor1(sqrt(constant_term(r2s2_M)), order)
    r2s5_M = Taylor1(constant_term(r2s_M) ^ float(constant_term(5)), order)
    tmp4123 = Taylor1(zero(constant_term(r2s_M)), order)
    x2s_S = Taylor1(identity(constant_term(r_star_S_2[1])), order)
    y2s_S = Taylor1(identity(constant_term(r_star_S_2[2])), order)
    z2s_S = Taylor1(identity(constant_term(r_star_S_2[3])), order)
    tmp3604 = Taylor1(constant_term(x2s_S) ^ float(constant_term(2)), order)
    tmp4124 = Taylor1(zero(constant_term(x2s_S)), order)
    tmp3606 = Taylor1(constant_term(y2s_S) ^ float(constant_term(2)), order)
    tmp4125 = Taylor1(zero(constant_term(y2s_S)), order)
    ρ2s2_S = Taylor1(constant_term(tmp3604) + constant_term(tmp3606), order)
    ρ2s_S = Taylor1(sqrt(constant_term(ρ2s2_S)), order)
    z2s2_S = Taylor1(constant_term(z2s_S) ^ float(constant_term(2)), order)
    tmp4126 = Taylor1(zero(constant_term(z2s_S)), order)
    r2s2_S = Taylor1(constant_term(ρ2s2_S) + constant_term(z2s2_S), order)
    r2s_S = Taylor1(sqrt(constant_term(r2s2_S)), order)
    r2s5_S = Taylor1(constant_term(r2s_S) ^ float(constant_term(5)), order)
    tmp4127 = Taylor1(zero(constant_term(r2s_S)), order)
    tmp3615 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_M_2[1]), order)
    tmp3616 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_2[2]), order)
    coeff1_2_M = Taylor1(constant_term(tmp3615) + constant_term(tmp3616), order)
    tmp3618 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_S_2[1]), order)
    tmp3619 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_2[2]), order)
    coeff1_2_S = Taylor1(constant_term(tmp3618) + constant_term(tmp3619), order)
    tmp3623 = Taylor1(constant_term(coeff1_2_M) ^ float(constant_term(2)), order)
    tmp4128 = Taylor1(zero(constant_term(coeff1_2_M)), order)
    tmp3626 = Taylor1(constant_term(r_xy[mo, ea]) ^ float(constant_term(2)), order)
    tmp4129 = Taylor1(zero(constant_term(r_xy[mo, ea])), order)
    tmp3627 = Taylor1(constant_term(0.5) * constant_term(tmp3626), order)
    tmp3628 = Taylor1(constant_term(tmp3627) * constant_term(ρ2s2_M), order)
    tmp3629 = Taylor1(constant_term(tmp3623) - constant_term(tmp3628), order)
    tmp3630 = Taylor1(constant_term(5) * constant_term(tmp3629), order)
    coeff3_2_M = Taylor1(constant_term(tmp3630) / constant_term(r_p2[mo, ea]), order)
    tmp3634 = Taylor1(constant_term(coeff1_2_S) ^ float(constant_term(2)), order)
    tmp4130 = Taylor1(zero(constant_term(coeff1_2_S)), order)
    tmp3637 = Taylor1(constant_term(r_xy[mo, ea]) ^ float(constant_term(2)), order)
    tmp4131 = Taylor1(zero(constant_term(r_xy[mo, ea])), order)
    tmp3638 = Taylor1(constant_term(0.5) * constant_term(tmp3637), order)
    tmp3639 = Taylor1(constant_term(tmp3638) * constant_term(ρ2s2_S), order)
    tmp3640 = Taylor1(constant_term(tmp3634) - constant_term(tmp3639), order)
    tmp3641 = Taylor1(constant_term(5) * constant_term(tmp3640), order)
    coeff3_2_S = Taylor1(constant_term(tmp3641) / constant_term(r_p2[mo, ea]), order)
    k_22E_div_r2s5_M = Taylor1(constant_term(k_22E) / constant_term(r2s5_M), order)
    k_22E_div_r2s5_S = Taylor1(constant_term(k_22E) / constant_term(r2s5_S), order)
    tmp3646 = Taylor1(constant_term(2) * constant_term(coeff1_2_M), order)
    tmp3647 = Taylor1(constant_term(tmp3646) * constant_term(r_star_M_2[1]), order)
    tmp3648 = Taylor1(constant_term(ρ2s2_M) + constant_term(coeff3_2_M), order)
    tmp3649 = Taylor1(constant_term(tmp3648) * constant_term(X_bf[mo, ea]), order)
    tmp3650 = Taylor1(constant_term(tmp3647) - constant_term(tmp3649), order)
    a_tid_2_M_x = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp3650), order)
    tmp3653 = Taylor1(constant_term(2) * constant_term(coeff1_2_M), order)
    tmp3654 = Taylor1(constant_term(tmp3653) * constant_term(r_star_M_2[2]), order)
    tmp3655 = Taylor1(constant_term(ρ2s2_M) + constant_term(coeff3_2_M), order)
    tmp3656 = Taylor1(constant_term(tmp3655) * constant_term(Y_bf[mo, ea]), order)
    tmp3657 = Taylor1(constant_term(tmp3654) - constant_term(tmp3656), order)
    a_tid_2_M_y = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp3657), order)
    tmp3659 = Taylor1(-(constant_term(coeff3_2_M)), order)
    tmp3660 = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp3659), order)
    a_tid_2_M_z = Taylor1(constant_term(tmp3660) * constant_term(Z_bf[mo, ea]), order)
    tmp3663 = Taylor1(constant_term(2) * constant_term(coeff1_2_S), order)
    tmp3664 = Taylor1(constant_term(tmp3663) * constant_term(r_star_S_2[1]), order)
    tmp3665 = Taylor1(constant_term(ρ2s2_S) + constant_term(coeff3_2_S), order)
    tmp3666 = Taylor1(constant_term(tmp3665) * constant_term(X_bf[mo, ea]), order)
    tmp3667 = Taylor1(constant_term(tmp3664) - constant_term(tmp3666), order)
    a_tid_2_S_x = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp3667), order)
    tmp3670 = Taylor1(constant_term(2) * constant_term(coeff1_2_S), order)
    tmp3671 = Taylor1(constant_term(tmp3670) * constant_term(r_star_S_2[2]), order)
    tmp3672 = Taylor1(constant_term(ρ2s2_S) + constant_term(coeff3_2_S), order)
    tmp3673 = Taylor1(constant_term(tmp3672) * constant_term(Y_bf[mo, ea]), order)
    tmp3674 = Taylor1(constant_term(tmp3671) - constant_term(tmp3673), order)
    a_tid_2_S_y = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp3674), order)
    tmp3676 = Taylor1(-(constant_term(coeff3_2_S)), order)
    tmp3677 = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp3676), order)
    a_tid_2_S_z = Taylor1(constant_term(tmp3677) * constant_term(Z_bf[mo, ea]), order)
    tmp3679 = Taylor1(constant_term(RE_au) / constant_term(r_p1d2[mo, ea]), order)
    RE_div_r_p5 = Taylor1(constant_term(tmp3679) ^ float(constant_term(5)), order)
    tmp4132 = Taylor1(zero(constant_term(tmp3679)), order)
    aux_tidacc = Taylor1(constant_term(tid_num_coeff) * constant_term(RE_div_r_p5), order)
    a_tidal_coeff_M = Taylor1(constant_term(μ[mo]) * constant_term(aux_tidacc), order)
    a_tidal_coeff_S = Taylor1(constant_term(μ[su]) * constant_term(aux_tidacc), order)
    tmp3685 = Taylor1(constant_term(a_tid_0_M_x) + constant_term(a_tid_1_M_x), order)
    tmp3686 = Taylor1(constant_term(tmp3685) + constant_term(a_tid_2_M_x), order)
    tmp3687 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp3686), order)
    tmp3688 = Taylor1(constant_term(a_tid_0_S_x) + constant_term(a_tid_1_S_x), order)
    tmp3689 = Taylor1(constant_term(tmp3688) + constant_term(a_tid_2_S_x), order)
    tmp3690 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp3689), order)
    a_tidal_tod_x = Taylor1(constant_term(tmp3687) + constant_term(tmp3690), order)
    tmp3692 = Taylor1(constant_term(a_tid_0_M_y) + constant_term(a_tid_1_M_y), order)
    tmp3693 = Taylor1(constant_term(tmp3692) + constant_term(a_tid_2_M_y), order)
    tmp3694 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp3693), order)
    tmp3695 = Taylor1(constant_term(a_tid_0_S_y) + constant_term(a_tid_1_S_y), order)
    tmp3696 = Taylor1(constant_term(tmp3695) + constant_term(a_tid_2_S_y), order)
    tmp3697 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp3696), order)
    a_tidal_tod_y = Taylor1(constant_term(tmp3694) + constant_term(tmp3697), order)
    tmp3699 = Taylor1(constant_term(a_tid_0_M_z) + constant_term(a_tid_1_M_z), order)
    tmp3700 = Taylor1(constant_term(tmp3699) + constant_term(a_tid_2_M_z), order)
    tmp3701 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp3700), order)
    tmp3702 = Taylor1(constant_term(a_tid_0_S_z) + constant_term(a_tid_1_S_z), order)
    tmp3703 = Taylor1(constant_term(tmp3702) + constant_term(a_tid_2_S_z), order)
    tmp3704 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp3703), order)
    a_tidal_tod_z = Taylor1(constant_term(tmp3701) + constant_term(tmp3704), order)
    tmp3706 = Taylor1(constant_term(RotM[1, 1, ea]) * constant_term(a_tidal_tod_x), order)
    tmp3707 = Taylor1(constant_term(RotM[2, 1, ea]) * constant_term(a_tidal_tod_y), order)
    tmp3708 = Taylor1(constant_term(tmp3706) + constant_term(tmp3707), order)
    tmp3709 = Taylor1(constant_term(RotM[3, 1, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_x = Taylor1(constant_term(tmp3708) + constant_term(tmp3709), order)
    tmp3711 = Taylor1(constant_term(RotM[1, 2, ea]) * constant_term(a_tidal_tod_x), order)
    tmp3712 = Taylor1(constant_term(RotM[2, 2, ea]) * constant_term(a_tidal_tod_y), order)
    tmp3713 = Taylor1(constant_term(tmp3711) + constant_term(tmp3712), order)
    tmp3714 = Taylor1(constant_term(RotM[3, 2, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_y = Taylor1(constant_term(tmp3713) + constant_term(tmp3714), order)
    tmp3716 = Taylor1(constant_term(RotM[1, 3, ea]) * constant_term(a_tidal_tod_x), order)
    tmp3717 = Taylor1(constant_term(RotM[2, 3, ea]) * constant_term(a_tidal_tod_y), order)
    tmp3718 = Taylor1(constant_term(tmp3716) + constant_term(tmp3717), order)
    tmp3719 = Taylor1(constant_term(RotM[3, 3, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_z = Taylor1(constant_term(tmp3718) + constant_term(tmp3719), order)
    accX_mo_tides = Taylor1(constant_term(accX[mo]) + constant_term(a_tidal_x), order)
    accY_mo_tides = Taylor1(constant_term(accY[mo]) + constant_term(a_tidal_y), order)
    accZ_mo_tides = Taylor1(constant_term(accZ[mo]) + constant_term(a_tidal_z), order)
    accX[mo] = Taylor1(identity(constant_term(accX_mo_tides)), order)
    accY[mo] = Taylor1(identity(constant_term(accY_mo_tides)), order)
    accZ[mo] = Taylor1(identity(constant_term(accZ_mo_tides)), order)
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1896 =# Threads.@threads for i = 1:N_ext
            dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
            dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
            dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1901 =# Threads.@threads for i = N_ext + 1:N
            dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
            dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
            dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
        end
    tmp3727 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp3728 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp3729 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp3730 = Taylor1(constant_term(tmp3728) + constant_term(tmp3729), order)
    Iω_x = Taylor1(constant_term(tmp3727) + constant_term(tmp3730), order)
    tmp3732 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp3733 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp3734 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp3735 = Taylor1(constant_term(tmp3733) + constant_term(tmp3734), order)
    Iω_y = Taylor1(constant_term(tmp3732) + constant_term(tmp3735), order)
    tmp3737 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp3738 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp3739 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp3740 = Taylor1(constant_term(tmp3738) + constant_term(tmp3739), order)
    Iω_z = Taylor1(constant_term(tmp3737) + constant_term(tmp3740), order)
    tmp3742 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp3743 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp3742) - constant_term(tmp3743), order)
    tmp3745 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp3746 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp3745) - constant_term(tmp3746), order)
    tmp3748 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp3749 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp3748) - constant_term(tmp3749), order)
    tmp3751 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp3752 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp3753 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp3754 = Taylor1(constant_term(tmp3752) + constant_term(tmp3753), order)
    dIω_x = Taylor1(constant_term(tmp3751) + constant_term(tmp3754), order)
    tmp3756 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp3757 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp3758 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp3759 = Taylor1(constant_term(tmp3757) + constant_term(tmp3758), order)
    dIω_y = Taylor1(constant_term(tmp3756) + constant_term(tmp3759), order)
    tmp3761 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp3762 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp3763 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp3764 = Taylor1(constant_term(tmp3762) + constant_term(tmp3763), order)
    dIω_z = Taylor1(constant_term(tmp3761) + constant_term(tmp3764), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp3769 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3770 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3771 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3772 = Taylor1(constant_term(tmp3770) + constant_term(tmp3771), order)
    er_EM_1 = Taylor1(constant_term(tmp3769) + constant_term(tmp3772), order)
    tmp3774 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3775 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3776 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3777 = Taylor1(constant_term(tmp3775) + constant_term(tmp3776), order)
    er_EM_2 = Taylor1(constant_term(tmp3774) + constant_term(tmp3777), order)
    tmp3779 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3780 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3781 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3782 = Taylor1(constant_term(tmp3780) + constant_term(tmp3781), order)
    er_EM_3 = Taylor1(constant_term(tmp3779) + constant_term(tmp3782), order)
    tmp3784 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3785 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3786 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3787 = Taylor1(constant_term(tmp3785) + constant_term(tmp3786), order)
    p_E_1 = Taylor1(constant_term(tmp3784) + constant_term(tmp3787), order)
    tmp3789 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3790 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3791 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3792 = Taylor1(constant_term(tmp3790) + constant_term(tmp3791), order)
    p_E_2 = Taylor1(constant_term(tmp3789) + constant_term(tmp3792), order)
    tmp3794 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3795 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3796 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3797 = Taylor1(constant_term(tmp3795) + constant_term(tmp3796), order)
    p_E_3 = Taylor1(constant_term(tmp3794) + constant_term(tmp3797), order)
    tmp3799 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp3800 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp3801 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp3802 = Taylor1(constant_term(tmp3800) + constant_term(tmp3801), order)
    I_er_EM_1 = Taylor1(constant_term(tmp3799) + constant_term(tmp3802), order)
    tmp3804 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp3805 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp3806 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp3807 = Taylor1(constant_term(tmp3805) + constant_term(tmp3806), order)
    I_er_EM_2 = Taylor1(constant_term(tmp3804) + constant_term(tmp3807), order)
    tmp3809 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp3810 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp3811 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp3812 = Taylor1(constant_term(tmp3810) + constant_term(tmp3811), order)
    I_er_EM_3 = Taylor1(constant_term(tmp3809) + constant_term(tmp3812), order)
    tmp3814 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp3815 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp3816 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp3817 = Taylor1(constant_term(tmp3815) + constant_term(tmp3816), order)
    I_p_E_1 = Taylor1(constant_term(tmp3814) + constant_term(tmp3817), order)
    tmp3819 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp3820 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp3821 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp3822 = Taylor1(constant_term(tmp3820) + constant_term(tmp3821), order)
    I_p_E_2 = Taylor1(constant_term(tmp3819) + constant_term(tmp3822), order)
    tmp3824 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp3825 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp3826 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp3827 = Taylor1(constant_term(tmp3825) + constant_term(tmp3826), order)
    I_p_E_3 = Taylor1(constant_term(tmp3824) + constant_term(tmp3827), order)
    tmp3829 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp3830 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp3829) - constant_term(tmp3830), order)
    tmp3832 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp3833 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp3832) - constant_term(tmp3833), order)
    tmp3835 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp3836 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp3835) - constant_term(tmp3836), order)
    tmp3838 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp3839 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp3838) - constant_term(tmp3839), order)
    tmp3841 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp3842 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp3841) - constant_term(tmp3842), order)
    tmp3844 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp3845 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp3844) - constant_term(tmp3845), order)
    tmp3847 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp3848 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp3847) - constant_term(tmp3848), order)
    tmp3850 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp3851 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp3850) - constant_term(tmp3851), order)
    tmp3853 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp3854 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp3853) - constant_term(tmp3854), order)
    tmp3856 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp3857 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp3856) - constant_term(tmp3857), order)
    tmp3859 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp3860 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp3859) - constant_term(tmp3860), order)
    tmp3862 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp3863 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp3862) - constant_term(tmp3863), order)
    tmp3867 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp4133 = Taylor1(zero(constant_term(sin_ϕ[ea, mo])), order)
    tmp3868 = Taylor1(constant_term(7) * constant_term(tmp3867), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp3868), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp3873 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    tmp4134 = Taylor1(zero(constant_term(r_p1d2[mo, ea])), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp3873), order)
    tmp3875 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp3876 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp3877 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3876), order)
    tmp3878 = Taylor1(constant_term(tmp3875) + constant_term(tmp3877), order)
    tmp3880 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp3881 = Taylor1(constant_term(tmp3878) - constant_term(tmp3880), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3881), order)
    tmp3883 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp3884 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp3885 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3884), order)
    tmp3886 = Taylor1(constant_term(tmp3883) + constant_term(tmp3885), order)
    tmp3888 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp3889 = Taylor1(constant_term(tmp3886) - constant_term(tmp3888), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3889), order)
    tmp3891 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp3892 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp3893 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3892), order)
    tmp3894 = Taylor1(constant_term(tmp3891) + constant_term(tmp3893), order)
    tmp3896 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp3897 = Taylor1(constant_term(tmp3894) - constant_term(tmp3896), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3897), order)
    tmp3899 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3900 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3901 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3902 = Taylor1(constant_term(tmp3900) + constant_term(tmp3901), order)
    N_1_LMF = Taylor1(constant_term(tmp3899) + constant_term(tmp3902), order)
    tmp3904 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3905 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3906 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3907 = Taylor1(constant_term(tmp3905) + constant_term(tmp3906), order)
    N_2_LMF = Taylor1(constant_term(tmp3904) + constant_term(tmp3907), order)
    tmp3909 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3910 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3911 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3912 = Taylor1(constant_term(tmp3910) + constant_term(tmp3911), order)
    N_3_LMF = Taylor1(constant_term(tmp3909) + constant_term(tmp3912), order)
    tmp3914 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp3915 = Taylor1(constant_term(k_ν) * constant_term(tmp3914), order)
    tmp3916 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp3917 = Taylor1(constant_term(tmp3916) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp3915) - constant_term(tmp3917), order)
    tmp3919 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp3920 = Taylor1(constant_term(k_ν) * constant_term(tmp3919), order)
    tmp3921 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp3922 = Taylor1(constant_term(tmp3921) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp3920) + constant_term(tmp3922), order)
    tmp3924 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp3924), order)
    tmp3926 = Taylor1(constant_term(μ[mo]) * constant_term(N_1_LMF), order)
    tmp3927 = Taylor1(constant_term(N_MfigM_figE_1) + constant_term(tmp3926), order)
    tmp3928 = Taylor1(constant_term(tmp3927) + constant_term(N_cmb_1), order)
    tmp3929 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp3928) - constant_term(tmp3929), order)
    tmp3931 = Taylor1(constant_term(μ[mo]) * constant_term(N_2_LMF), order)
    tmp3932 = Taylor1(constant_term(N_MfigM_figE_2) + constant_term(tmp3931), order)
    tmp3933 = Taylor1(constant_term(tmp3932) + constant_term(N_cmb_2), order)
    tmp3934 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp3933) - constant_term(tmp3934), order)
    tmp3936 = Taylor1(constant_term(μ[mo]) * constant_term(N_3_LMF), order)
    tmp3937 = Taylor1(constant_term(N_MfigM_figE_3) + constant_term(tmp3936), order)
    tmp3938 = Taylor1(constant_term(tmp3937) + constant_term(N_cmb_3), order)
    tmp3939 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp3938) - constant_term(tmp3939), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp3944 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp3945 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp3944) - constant_term(tmp3945), order)
    tmp3947 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp3948 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp3947) - constant_term(tmp3948), order)
    tmp3950 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp3951 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp3950) - constant_term(tmp3951), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp3956 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp4135 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3957 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp3956), order)
    tmp3958 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp4136 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3959 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp3958), order)
    tmp3960 = Taylor1(constant_term(tmp3957) + constant_term(tmp3959), order)
    tmp3961 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp4137 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp3960) / constant_term(tmp3961), order)
    tmp3963 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp4138 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3964 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp3963), order)
    tmp3965 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp4139 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3966 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp3965), order)
    dq[6N + 2] = Taylor1(constant_term(tmp3964) - constant_term(tmp3966), order)
    tmp3968 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp4140 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp3969 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp3968), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp3969), order)
    tmp3971 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp3972 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp3973 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp3974 = Taylor1(constant_term(tmp3972) + constant_term(tmp3973), order)
    dq[6N + 4] = Taylor1(constant_term(tmp3971) + constant_term(tmp3974), order)
    tmp3976 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp3977 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp3978 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp3979 = Taylor1(constant_term(tmp3977) + constant_term(tmp3978), order)
    dq[6N + 5] = Taylor1(constant_term(tmp3976) + constant_term(tmp3979), order)
    tmp3981 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp3982 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp3983 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp3984 = Taylor1(constant_term(tmp3982) + constant_term(tmp3983), order)
    dq[6N + 6] = Taylor1(constant_term(tmp3981) + constant_term(tmp3984), order)
    tmp3986 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp4141 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp3987 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp3986), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp3987)), order)
    tmp3989 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp4142 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp3990 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp3989), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp3990), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    tmp3995 = Taylor1(constant_term(newtonianCoeff[su, ea]) * constant_term(J2_t[su]), order)
    tmp3998 = Taylor1(constant_term(sin_ϕ[su, ea]) ^ float(constant_term(2)), order)
    tmp4143 = Taylor1(zero(constant_term(sin_ϕ[su, ea])), order)
    tmp3999 = Taylor1(constant_term(3) * constant_term(tmp3998), order)
    tmp4000 = Taylor1(constant_term(one_t) - constant_term(tmp3999), order)
    tmp4002 = Taylor1(constant_term(tmp4000) / constant_term(2), order)
    w_LE = Taylor1(constant_term(tmp3995) * constant_term(tmp4002), order)
    tmp4005 = Taylor1(constant_term(0.5) * constant_term(v2[ea]), order)
    tmp4006 = Taylor1(constant_term(tmp4005) + constant_term(newtonianNb_Potential[ea]), order)
    α_TTmTDB = Taylor1(constant_term(tmp4006) + constant_term(w_LE), order)
    v4E = Taylor1(constant_term(v2[ea]) ^ float(constant_term(2)), order)
    tmp4144 = Taylor1(zero(constant_term(v2[ea])), order)
    ϕ_Earth_Newtonian_sq = Taylor1(constant_term(newtonianNb_Potential[ea]) ^ float(constant_term(2)), order)
    tmp4145 = Taylor1(zero(constant_term(newtonianNb_Potential[ea])), order)
    tmp4013 = Taylor1(constant_term(ϕ_Earth_Newtonian_sq) / constant_term(2), order)
    tmp4015 = Taylor1(constant_term(v4E) / constant_term(8), order)
    β_TTmTDB = Taylor1(constant_term(tmp4013) - constant_term(tmp4015), order)
    β_TTmTDB_i_1 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    for i = eachindex(β_TTmTDB_i_1)
        β_TTmTDB_i_1[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4020 = Array{Taylor1{_S}}(undef, size(v2))
    for i = eachindex(tmp4020)
        tmp4020[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4022 = Array{Taylor1{_S}}(undef, size(v2))
    for i = eachindex(tmp4022)
        tmp4022[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4023 = Array{Taylor1{_S}}(undef, size(tmp4020))
    for i = eachindex(tmp4023)
        tmp4023[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    β_TTmTDB_i_2 = Array{Taylor1{_S}}(undef, size(newtonianNb_Potential))
    for i = eachindex(β_TTmTDB_i_2)
        β_TTmTDB_i_2[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4025 = Array{Taylor1{_S}}(undef, size(X))
    for i = eachindex(tmp4025)
        tmp4025[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4026 = Array{Taylor1{_S}}(undef, size(Y))
    for i = eachindex(tmp4026)
        tmp4026[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4027 = Array{Taylor1{_S}}(undef, size(tmp4025))
    for i = eachindex(tmp4027)
        tmp4027[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4028 = Array{Taylor1{_S}}(undef, size(Z))
    for i = eachindex(tmp4028)
        tmp4028[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4029 = Array{Taylor1{_S}}(undef, size(tmp4027))
    for i = eachindex(tmp4029)
        tmp4029[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    β_TTmTDB_i_3 = Array{Taylor1{_S}}(undef, size(tmp4029))
    for i = eachindex(β_TTmTDB_i_3)
        β_TTmTDB_i_3[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    β_TTmTDB_i_4 = Array{Taylor1{_S}}(undef, size(rij_dot_vi_div_rij_sq))
    for i = eachindex(β_TTmTDB_i_4)
        β_TTmTDB_i_4[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4034 = Array{Taylor1{_S}}(undef, size(β_TTmTDB_i_1))
    for i = eachindex(tmp4034)
        tmp4034[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4035 = Array{Taylor1{_S}}(undef, size(β_TTmTDB_i_3))
    for i = eachindex(tmp4035)
        tmp4035[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    β_TTmTDB_i = Array{Taylor1{_S}}(undef, size(tmp4034))
    for i = eachindex(β_TTmTDB_i)
        β_TTmTDB_i[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4037 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    for i = eachindex(tmp4037)
        tmp4037[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_β_TTmTDB = Array{Taylor1{_S}}(undef, size(tmp4037))
    for i = eachindex(temp_β_TTmTDB)
        temp_β_TTmTDB[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    for i = 1:N
        if i == ea
            continue
        else
            β_TTmTDB_i_1[i, ea] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, ea]), order)
            tmp4020[ea] = Taylor1(constant_term(1.5) * constant_term(v2[ea]), order)
            tmp4022[i] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
            tmp4023[ea] = Taylor1(constant_term(tmp4020[ea]) + constant_term(tmp4022[i]), order)
            β_TTmTDB_i_2[i] = Taylor1(constant_term(newtonianNb_Potential[i]) - constant_term(tmp4023[ea]), order)
            tmp4025[i, ea] = Taylor1(constant_term(dq[3 * (N + i) - 2]) * constant_term(X[i, ea]), order)
            tmp4026[i, ea] = Taylor1(constant_term(dq[3 * (N + i) - 1]) * constant_term(Y[i, ea]), order)
            tmp4027[i, ea] = Taylor1(constant_term(tmp4025[i, ea]) + constant_term(tmp4026[i, ea]), order)
            tmp4028[i, ea] = Taylor1(constant_term(dq[3 * (N + i)]) * constant_term(Z[i, ea]), order)
            tmp4029[i, ea] = Taylor1(constant_term(tmp4027[i, ea]) + constant_term(tmp4028[i, ea]), order)
            β_TTmTDB_i_3[i, ea] = Taylor1(constant_term(tmp4029[i, ea]) / constant_term(2), order)
            β_TTmTDB_i_4[i, ea] = Taylor1(constant_term(rij_dot_vi_div_rij_sq[i, ea]) / constant_term(2), order)
            tmp4034[i, ea] = Taylor1(constant_term(β_TTmTDB_i_1[i, ea]) + constant_term(β_TTmTDB_i_2[i]), order)
            tmp4035[i, ea] = Taylor1(constant_term(β_TTmTDB_i_3[i, ea]) + constant_term(β_TTmTDB_i_4[i, ea]), order)
            β_TTmTDB_i[i, ea] = Taylor1(constant_term(tmp4034[i, ea]) + constant_term(tmp4035[i, ea]), order)
            tmp4037[i, ea] = Taylor1(constant_term(newtonian1b_Potential[i, ea]) * constant_term(β_TTmTDB_i[i, ea]), order)
            temp_β_TTmTDB[i, ea] = Taylor1(constant_term(β_TTmTDB) + constant_term(tmp4037[i, ea]), order)
            β_TTmTDB = Taylor1(identity(constant_term(temp_β_TTmTDB[i, ea])), order)
        end
    end
    tmp4039 = Taylor1(constant_term(c_m2) * constant_term(α_TTmTDB), order)
    tmp4040 = Taylor1(constant_term(L_B) - constant_term(tmp4039), order)
    tmp4041 = Taylor1(constant_term(tmp4040) * constant_term(one_plus_L_B_minus_L_G), order)
    tmp4042 = Taylor1(constant_term(c_m4) * constant_term(β_TTmTDB), order)
    tmp4043 = Taylor1(constant_term(tmp4042) - constant_term(L_G), order)
    tmp4044 = Taylor1(constant_term(tmp4041) + constant_term(tmp4043), order)
    dq[6N + 13] = Taylor1(constant_term(daysec) * constant_term(tmp4044), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp2976, tmp2977, tmp2978, tmp2979, tmp2980, tmp2981, tmp2982, tmp2983, tmp2985, tmp2986, tmp2987, tmp2988, tmp2989, tmp2990, tmp2991, tmp2992, tmp2993, tmp2995, tmp2996, tmp2998, tmp2999, tmp3000, tmp3001, tmp3002, tmp3003, tmp3004, tmp3005, tmp3007, tmp3008, tmp3009, tmp3010, tmp3011, tmp3012, tmp3013, tmp3014, tmp3016, tmp3017, tmp3018, tmp3020, tmp3021, tmp3023, tmp3024, tmp3027, tmp3028, tmp3029, tmp3030, tmp3032, tmp3033, tmp3034, tmp3035, tmp3036, tmp3038, tmp3039, tmp3040, tmp3041, tmp3043, tmp3044, tmp3045, tmp3046, tmp3047, tmp3049, tmp3050, tmp3051, tmp3052, tmp3054, tmp3055, tmp3056, tmp3057, tmp3058, tmp3060, tmp3061, tmp3062, tmp3063, tmp3065, tmp3066, tmp3067, tmp3068, tmp3070, tmp3071, tmp3072, tmp3073, tmp3145, tmp3147, tmp3148, tmp3150, tmp3151, tmp3154, tmp3156, tmp3158, tmp3159, tmp3440, tmp3442, tmp3452, tmp3454, tmp3464, tmp3466, tmp3468, tmp3470, tmp3471, tmp3472, tmp3473, tmp3474, tmp3477, tmp3479, tmp3481, tmp3483, tmp3484, tmp3485, tmp3486, tmp3487, tmp3491, tmp3492, tmp3494, tmp3495, tmp3498, tmp3499, tmp3500, tmp3502, tmp3503, tmp3505, tmp3506, tmp3509, tmp3510, tmp3511, tmp3514, tmp3516, tmp3526, tmp3528, tmp3537, tmp3538, tmp3540, tmp3541, tmp3546, tmp3547, tmp3550, tmp3551, tmp3556, tmp3557, tmp3558, tmp3559, tmp3562, tmp3563, tmp3564, tmp3565, tmp3568, tmp3569, tmp3570, tmp3571, tmp3574, tmp3575, tmp3576, tmp3577, tmp3580, tmp3581, tmp3582, tmp3583, tmp3586, tmp3587, tmp3588, tmp3589, tmp3592, tmp3594, tmp3604, tmp3606, tmp3615, tmp3616, tmp3618, tmp3619, tmp3623, tmp3626, tmp3627, tmp3628, tmp3629, tmp3630, tmp3634, tmp3637, tmp3638, tmp3639, tmp3640, tmp3641, tmp3646, tmp3647, tmp3648, tmp3649, tmp3650, tmp3653, tmp3654, tmp3655, tmp3656, tmp3657, tmp3659, tmp3660, tmp3663, tmp3664, tmp3665, tmp3666, tmp3667, tmp3670, tmp3671, tmp3672, tmp3673, tmp3674, tmp3676, tmp3677, tmp3679, tmp3685, tmp3686, tmp3687, tmp3688, tmp3689, tmp3690, tmp3692, tmp3693, tmp3694, tmp3695, tmp3696, tmp3697, tmp3699, tmp3700, tmp3701, tmp3702, tmp3703, tmp3704, tmp3706, tmp3707, tmp3708, tmp3709, tmp3711, tmp3712, tmp3713, tmp3714, tmp3716, tmp3717, tmp3718, tmp3719, tmp3727, tmp3728, tmp3729, tmp3730, tmp3732, tmp3733, tmp3734, tmp3735, tmp3737, tmp3738, tmp3739, tmp3740, tmp3742, tmp3743, tmp3745, tmp3746, tmp3748, tmp3749, tmp3751, tmp3752, tmp3753, tmp3754, tmp3756, tmp3757, tmp3758, tmp3759, tmp3761, tmp3762, tmp3763, tmp3764, tmp3769, tmp3770, tmp3771, tmp3772, tmp3774, tmp3775, tmp3776, tmp3777, tmp3779, tmp3780, tmp3781, tmp3782, tmp3784, tmp3785, tmp3786, tmp3787, tmp3789, tmp3790, tmp3791, tmp3792, tmp3794, tmp3795, tmp3796, tmp3797, tmp3799, tmp3800, tmp3801, tmp3802, tmp3804, tmp3805, tmp3806, tmp3807, tmp3809, tmp3810, tmp3811, tmp3812, tmp3814, tmp3815, tmp3816, tmp3817, tmp3819, tmp3820, tmp3821, tmp3822, tmp3824, tmp3825, tmp3826, tmp3827, tmp3829, tmp3830, tmp3832, tmp3833, tmp3835, tmp3836, tmp3838, tmp3839, tmp3841, tmp3842, tmp3844, tmp3845, tmp3847, tmp3848, tmp3850, tmp3851, tmp3853, tmp3854, tmp3856, tmp3857, tmp3859, tmp3860, tmp3862, tmp3863, tmp3867, tmp3868, tmp3873, tmp3875, tmp3876, tmp3877, tmp3878, tmp3880, tmp3881, tmp3883, tmp3884, tmp3885, tmp3886, tmp3888, tmp3889, tmp3891, tmp3892, tmp3893, tmp3894, tmp3896, tmp3897, tmp3899, tmp3900, tmp3901, tmp3902, tmp3904, tmp3905, tmp3906, tmp3907, tmp3909, tmp3910, tmp3911, tmp3912, tmp3914, tmp3915, tmp3916, tmp3917, tmp3919, tmp3920, tmp3921, tmp3922, tmp3924, tmp3926, tmp3927, tmp3928, tmp3929, tmp3931, tmp3932, tmp3933, tmp3934, tmp3936, tmp3937, tmp3938, tmp3939, tmp3944, tmp3945, tmp3947, tmp3948, tmp3950, tmp3951, tmp3956, tmp3957, tmp3958, tmp3959, tmp3960, tmp3961, tmp3963, tmp3964, tmp3965, tmp3966, tmp3968, tmp3969, tmp3971, tmp3972, tmp3973, tmp3974, tmp3976, tmp3977, tmp3978, tmp3979, tmp3981, tmp3982, tmp3983, tmp3984, tmp3986, tmp3987, tmp3989, tmp3990, tmp3995, tmp3998, tmp3999, tmp4000, tmp4002, tmp4005, tmp4006, tmp4013, tmp4015, tmp4039, tmp4040, tmp4041, tmp4042, tmp4043, tmp4044, ϕ_m, θ_m, ψ_m, tmp4046, tmp4047, tmp4048, tmp4049, tmp4050, tmp4051, tmp4052, tmp4053, tmp4054, tmp4055, tmp4056, tmp4057, tmp4058, tmp4059, tmp4060, tmp4061, tmp4062, tmp4063, tmp4064, tmp4065, tmp4066, tmp4067, tmp4068, tmp4069, tmp4070, tmp4071, tmp4072, tmp4073, tmp4074, ϕ_c, tmp4075, tmp4076, tmp4077, tmp4078, tmp4079, tmp4080, tmp4081, tmp4082, tmp4083, tmp4084, tmp4085, tmp4086, ω_c_CE_1, ω_c_CE_2, ω_c_CE_3, J2M_t, C22M_t, C21M_t, S21M_t, S22M_t, x0s_M, y0s_M, z0s_M, tmp4100, tmp4101, ρ0s2_M, ρ0s_M, z0s2_M, tmp4102, r0s2_M, r0s_M, r0s5_M, tmp4103, x0s_S, y0s_S, z0s_S, tmp4104, tmp4105, ρ0s2_S, ρ0s_S, z0s2_S, tmp4106, r0s2_S, r0s_S, r0s5_S, tmp4107, tmp4108, tmp4109, coeff0_M, tmp4110, tmp4111, coeff0_S, k_20E_div_r0s5_M, k_20E_div_r0s5_S, a_tid_0_M_x, a_tid_0_M_y, a_tid_0_M_z, a_tid_0_S_x, a_tid_0_S_y, a_tid_0_S_z, x1s_M, y1s_M, z1s_M, tmp4112, tmp4113, ρ1s2_M, ρ1s_M, z1s2_M, tmp4114, r1s2_M, r1s_M, r1s5_M, tmp4115, x1s_S, y1s_S, z1s_S, tmp4116, tmp4117, ρ1s2_S, ρ1s_S, z1s2_S, tmp4118, r1s2_S, r1s_S, r1s5_S, tmp4119, coeff1_1_M, coeff1_1_S, coeff2_1_M, coeff2_1_S, coeff3_1_M, coeff3_1_S, k_21E_div_r1s5_M, k_21E_div_r1s5_S, a_tid_1_M_x, a_tid_1_M_y, a_tid_1_M_z, a_tid_1_S_x, a_tid_1_S_y, a_tid_1_S_z, x2s_M, y2s_M, z2s_M, tmp4120, tmp4121, ρ2s2_M, ρ2s_M, z2s2_M, tmp4122, r2s2_M, r2s_M, r2s5_M, tmp4123, x2s_S, y2s_S, z2s_S, tmp4124, tmp4125, ρ2s2_S, ρ2s_S, z2s2_S, tmp4126, r2s2_S, r2s_S, r2s5_S, tmp4127, coeff1_2_M, coeff1_2_S, tmp4128, tmp4129, coeff3_2_M, tmp4130, tmp4131, coeff3_2_S, k_22E_div_r2s5_M, k_22E_div_r2s5_S, a_tid_2_M_x, a_tid_2_M_y, a_tid_2_M_z, a_tid_2_S_x, a_tid_2_S_y, a_tid_2_S_z, RE_div_r_p5, tmp4132, aux_tidacc, a_tidal_coeff_M, a_tidal_coeff_S, a_tidal_tod_x, a_tidal_tod_y, a_tidal_tod_z, a_tidal_x, a_tidal_y, a_tidal_z, accX_mo_tides, accY_mo_tides, accZ_mo_tides, Iω_x, Iω_y, Iω_z, ωxIω_x, ωxIω_y, ωxIω_z, dIω_x, dIω_y, dIω_z, er_EM_I_1, er_EM_I_2, er_EM_I_3, p_E_I_1, p_E_I_2, p_E_I_3, er_EM_1, er_EM_2, er_EM_3, p_E_1, p_E_2, p_E_3, I_er_EM_1, I_er_EM_2, I_er_EM_3, I_p_E_1, I_p_E_2, I_p_E_3, er_EM_cross_I_er_EM_1, er_EM_cross_I_er_EM_2, er_EM_cross_I_er_EM_3, er_EM_cross_I_p_E_1, er_EM_cross_I_p_E_2, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_1, p_E_cross_I_er_EM_2, p_E_cross_I_er_EM_3, p_E_cross_I_p_E_1, p_E_cross_I_p_E_2, p_E_cross_I_p_E_3, tmp4133, one_minus_7sin2ϕEM, two_sinϕEM, tmp4134, N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_1, N_MfigM_figE_2, N_MfigM_figE_3, N_1_LMF, N_2_LMF, N_3_LMF, N_cmb_1, N_cmb_2, N_cmb_3, I_dω_1, I_dω_2, I_dω_3, Ic_ωc_1, Ic_ωc_2, Ic_ωc_3, m_ωm_x_Icωc_1, m_ωm_x_Icωc_2, m_ωm_x_Icωc_3, Ic_dωc_1, Ic_dωc_2, Ic_dωc_3, tmp4135, tmp4136, tmp4137, tmp4138, tmp4139, tmp4140, tmp4141, tmp4142, tmp4143, w_LE, α_TTmTDB, v4E, tmp4144, ϕ_Earth_Newtonian_sq, tmp4145, β_TTmTDB], [newtonX, newtonY, newtonZ, newtonianNb_Potential, v2, pntempX, pntempY, pntempZ, postNewtonX, postNewtonY, postNewtonZ, accX, accY, accZ, N_MfigM_pmA_x, N_MfigM_pmA_y, N_MfigM_pmA_z, temp_N_M_x, temp_N_M_y, temp_N_M_z, N_MfigM, J2_t, tmp3082, tmp3084, tmp3087, tmp3089, tmp3092, tmp3094, tmp3138, tmp4092, tmp3140, tmp4093, tmp3141, tmp3143, tmp4094, tmp4020, tmp4022, tmp4023, β_TTmTDB_i_2], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, _2v2, vi_dot_vj, rij_dot_vi_div_rij_sq, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, X_bf_1, Y_bf_1, Z_bf_1, X_bf_2, Y_bf_2, Z_bf_2, X_bf_3, Y_bf_3, Z_bf_3, X_bf, Y_bf, Z_bf, F_JCS_x, F_JCS_y, F_JCS_z, temp_accX_j, temp_accY_j, temp_accZ_j, temp_accX_i, temp_accY_i, temp_accZ_i, sin_ϕ, cos_ϕ, sin_λ, cos_λ, r_xy, r_p4, F_CS_ξ_36, F_CS_η_36, F_CS_ζ_36, F_J_ξ_36, F_J_ζ_36, F_J_ξ, F_J_ζ, F_CS_ξ, F_CS_η, F_CS_ζ, F_JCS_ξ, F_JCS_η, F_JCS_ζ, mantlef2coref, pn2x, pn2y, pn2z, tmp3102, tmp3105, tmp4087, tmp3107, tmp4088, tmp3108, tmp3110, tmp4089, tmp4090, tmp4091, tmp3118, tmp3119, tmp3130, temp_001, tmp3132, temp_002, tmp3134, temp_003, temp_004, tmp3171, tmp3173, tmp3175, tmp3179, tmp4095, tmp3181, tmp4096, tmp3182, tmp4097, tmp4098, tmp3288, tmp3289, tmp3292, tmp3293, tmp3299, tmp3302, tmp3364, tmp3366, tmp3368, tmp3370, tmp3372, tmp3374, tmp3376, tmp3377, tmp3378, tmp3380, tmp3381, tmp3382, tmp3384, tmp3385, tmp3386, tmp3398, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp3404, Rij_dot_Vi, tmp3407, tmp4099, tmp3410, pn1t2_7, tmp3417, tmp3418, tmp3419, tmp3427, termpnx, sumpnx, tmp3430, termpny, sumpny, tmp3433, termpnz, sumpnz, β_TTmTDB_i_1, tmp4025, tmp4026, tmp4027, tmp4028, tmp4029, β_TTmTDB_i_3, β_TTmTDB_i_4, tmp4034, tmp4035, β_TTmTDB_i, tmp4037, temp_β_TTmTDB], [P_n, dP_n, temp_fjξ, temp_fjζ, temp_rn, sin_mλ, cos_mλ, RotM, tmp3187, tmp3188, tmp3189, tmp3191, tmp3192, tmp3197, tmp3198, tmp3200, tmp3201, tmp3202, tmp3204, tmp3205, tmp3206, tmp3208, tmp3209, tmp3210, tmp3211, tmp3214, tmp3215, tmp3217, tmp3218, tmp3237, tmp3238, tmp3239, tmp3242, tmp3243, tmp3244, tmp3249, tmp3250, tmp3251, tmp3254, tmp3255, tmp3256, tmp3260, tmp3261, tmp3262, tmp3264, tmp3265, tmp3266], [temp_CS_ξ, temp_CS_η, temp_CS_ζ, Cnm_cosmλ, Cnm_sinmλ, Snm_cosmλ, Snm_sinmλ, secϕ_P_nm, P_nm, cosϕ_dP_nm, Rb2p, Gc2p, tmp3220, tmp3223, tmp3225, tmp3227, tmp3228, tmp3229, tmp3232, tmp3233, tmp3234, tmp3236, tmp3240, tmp3241, tmp3245, tmp3246, tmp3248, tmp3252, tmp3253, tmp3257, tmp3258, tmp3263, tmp3267, tmp3268, tmp3274, tmp3275, tmp3276, tmp3277, tmp3279, tmp3280, tmp3281, tmp3282, tmp3284, tmp3285, tmp3286, tmp3304, tmp3305, tmp3306, tmp3307, tmp3309, tmp3310, tmp3311, tmp3312, tmp3314, tmp3315, tmp3316, tmp3317, tmp3319, tmp3320, tmp3321, tmp3322, tmp3324, tmp3325, tmp3326, tmp3327, tmp3329, tmp3330, tmp3331, tmp3332, tmp3334, tmp3335, tmp3336, tmp3337, tmp3339, tmp3340, tmp3341, tmp3342, tmp3344, tmp3345, tmp3346, tmp3347, tmp3349, tmp3350, tmp3351, tmp3352, tmp3354, tmp3355, tmp3356, tmp3357, tmp3359, tmp3360, tmp3361, tmp3362])
end
# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: DE430!
function TaylorIntegration.jetcoeffs!(::Val{DE430!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp2976 = __ralloc.v0[1]
    tmp2977 = __ralloc.v0[2]
    tmp2978 = __ralloc.v0[3]
    tmp2979 = __ralloc.v0[4]
    tmp2980 = __ralloc.v0[5]
    tmp2981 = __ralloc.v0[6]
    tmp2982 = __ralloc.v0[7]
    tmp2983 = __ralloc.v0[8]
    tmp2985 = __ralloc.v0[9]
    tmp2986 = __ralloc.v0[10]
    tmp2987 = __ralloc.v0[11]
    tmp2988 = __ralloc.v0[12]
    tmp2989 = __ralloc.v0[13]
    tmp2990 = __ralloc.v0[14]
    tmp2991 = __ralloc.v0[15]
    tmp2992 = __ralloc.v0[16]
    tmp2993 = __ralloc.v0[17]
    tmp2995 = __ralloc.v0[18]
    tmp2996 = __ralloc.v0[19]
    tmp2998 = __ralloc.v0[20]
    tmp2999 = __ralloc.v0[21]
    tmp3000 = __ralloc.v0[22]
    tmp3001 = __ralloc.v0[23]
    tmp3002 = __ralloc.v0[24]
    tmp3003 = __ralloc.v0[25]
    tmp3004 = __ralloc.v0[26]
    tmp3005 = __ralloc.v0[27]
    tmp3007 = __ralloc.v0[28]
    tmp3008 = __ralloc.v0[29]
    tmp3009 = __ralloc.v0[30]
    tmp3010 = __ralloc.v0[31]
    tmp3011 = __ralloc.v0[32]
    tmp3012 = __ralloc.v0[33]
    tmp3013 = __ralloc.v0[34]
    tmp3014 = __ralloc.v0[35]
    tmp3016 = __ralloc.v0[36]
    tmp3017 = __ralloc.v0[37]
    tmp3018 = __ralloc.v0[38]
    tmp3020 = __ralloc.v0[39]
    tmp3021 = __ralloc.v0[40]
    tmp3023 = __ralloc.v0[41]
    tmp3024 = __ralloc.v0[42]
    tmp3027 = __ralloc.v0[43]
    tmp3028 = __ralloc.v0[44]
    tmp3029 = __ralloc.v0[45]
    tmp3030 = __ralloc.v0[46]
    tmp3032 = __ralloc.v0[47]
    tmp3033 = __ralloc.v0[48]
    tmp3034 = __ralloc.v0[49]
    tmp3035 = __ralloc.v0[50]
    tmp3036 = __ralloc.v0[51]
    tmp3038 = __ralloc.v0[52]
    tmp3039 = __ralloc.v0[53]
    tmp3040 = __ralloc.v0[54]
    tmp3041 = __ralloc.v0[55]
    tmp3043 = __ralloc.v0[56]
    tmp3044 = __ralloc.v0[57]
    tmp3045 = __ralloc.v0[58]
    tmp3046 = __ralloc.v0[59]
    tmp3047 = __ralloc.v0[60]
    tmp3049 = __ralloc.v0[61]
    tmp3050 = __ralloc.v0[62]
    tmp3051 = __ralloc.v0[63]
    tmp3052 = __ralloc.v0[64]
    tmp3054 = __ralloc.v0[65]
    tmp3055 = __ralloc.v0[66]
    tmp3056 = __ralloc.v0[67]
    tmp3057 = __ralloc.v0[68]
    tmp3058 = __ralloc.v0[69]
    tmp3060 = __ralloc.v0[70]
    tmp3061 = __ralloc.v0[71]
    tmp3062 = __ralloc.v0[72]
    tmp3063 = __ralloc.v0[73]
    tmp3065 = __ralloc.v0[74]
    tmp3066 = __ralloc.v0[75]
    tmp3067 = __ralloc.v0[76]
    tmp3068 = __ralloc.v0[77]
    tmp3070 = __ralloc.v0[78]
    tmp3071 = __ralloc.v0[79]
    tmp3072 = __ralloc.v0[80]
    tmp3073 = __ralloc.v0[81]
    tmp3145 = __ralloc.v0[82]
    tmp3147 = __ralloc.v0[83]
    tmp3148 = __ralloc.v0[84]
    tmp3150 = __ralloc.v0[85]
    tmp3151 = __ralloc.v0[86]
    tmp3154 = __ralloc.v0[87]
    tmp3156 = __ralloc.v0[88]
    tmp3158 = __ralloc.v0[89]
    tmp3159 = __ralloc.v0[90]
    tmp3440 = __ralloc.v0[91]
    tmp3442 = __ralloc.v0[92]
    tmp3452 = __ralloc.v0[93]
    tmp3454 = __ralloc.v0[94]
    tmp3464 = __ralloc.v0[95]
    tmp3466 = __ralloc.v0[96]
    tmp3468 = __ralloc.v0[97]
    tmp3470 = __ralloc.v0[98]
    tmp3471 = __ralloc.v0[99]
    tmp3472 = __ralloc.v0[100]
    tmp3473 = __ralloc.v0[101]
    tmp3474 = __ralloc.v0[102]
    tmp3477 = __ralloc.v0[103]
    tmp3479 = __ralloc.v0[104]
    tmp3481 = __ralloc.v0[105]
    tmp3483 = __ralloc.v0[106]
    tmp3484 = __ralloc.v0[107]
    tmp3485 = __ralloc.v0[108]
    tmp3486 = __ralloc.v0[109]
    tmp3487 = __ralloc.v0[110]
    tmp3491 = __ralloc.v0[111]
    tmp3492 = __ralloc.v0[112]
    tmp3494 = __ralloc.v0[113]
    tmp3495 = __ralloc.v0[114]
    tmp3498 = __ralloc.v0[115]
    tmp3499 = __ralloc.v0[116]
    tmp3500 = __ralloc.v0[117]
    tmp3502 = __ralloc.v0[118]
    tmp3503 = __ralloc.v0[119]
    tmp3505 = __ralloc.v0[120]
    tmp3506 = __ralloc.v0[121]
    tmp3509 = __ralloc.v0[122]
    tmp3510 = __ralloc.v0[123]
    tmp3511 = __ralloc.v0[124]
    tmp3514 = __ralloc.v0[125]
    tmp3516 = __ralloc.v0[126]
    tmp3526 = __ralloc.v0[127]
    tmp3528 = __ralloc.v0[128]
    tmp3537 = __ralloc.v0[129]
    tmp3538 = __ralloc.v0[130]
    tmp3540 = __ralloc.v0[131]
    tmp3541 = __ralloc.v0[132]
    tmp3546 = __ralloc.v0[133]
    tmp3547 = __ralloc.v0[134]
    tmp3550 = __ralloc.v0[135]
    tmp3551 = __ralloc.v0[136]
    tmp3556 = __ralloc.v0[137]
    tmp3557 = __ralloc.v0[138]
    tmp3558 = __ralloc.v0[139]
    tmp3559 = __ralloc.v0[140]
    tmp3562 = __ralloc.v0[141]
    tmp3563 = __ralloc.v0[142]
    tmp3564 = __ralloc.v0[143]
    tmp3565 = __ralloc.v0[144]
    tmp3568 = __ralloc.v0[145]
    tmp3569 = __ralloc.v0[146]
    tmp3570 = __ralloc.v0[147]
    tmp3571 = __ralloc.v0[148]
    tmp3574 = __ralloc.v0[149]
    tmp3575 = __ralloc.v0[150]
    tmp3576 = __ralloc.v0[151]
    tmp3577 = __ralloc.v0[152]
    tmp3580 = __ralloc.v0[153]
    tmp3581 = __ralloc.v0[154]
    tmp3582 = __ralloc.v0[155]
    tmp3583 = __ralloc.v0[156]
    tmp3586 = __ralloc.v0[157]
    tmp3587 = __ralloc.v0[158]
    tmp3588 = __ralloc.v0[159]
    tmp3589 = __ralloc.v0[160]
    tmp3592 = __ralloc.v0[161]
    tmp3594 = __ralloc.v0[162]
    tmp3604 = __ralloc.v0[163]
    tmp3606 = __ralloc.v0[164]
    tmp3615 = __ralloc.v0[165]
    tmp3616 = __ralloc.v0[166]
    tmp3618 = __ralloc.v0[167]
    tmp3619 = __ralloc.v0[168]
    tmp3623 = __ralloc.v0[169]
    tmp3626 = __ralloc.v0[170]
    tmp3627 = __ralloc.v0[171]
    tmp3628 = __ralloc.v0[172]
    tmp3629 = __ralloc.v0[173]
    tmp3630 = __ralloc.v0[174]
    tmp3634 = __ralloc.v0[175]
    tmp3637 = __ralloc.v0[176]
    tmp3638 = __ralloc.v0[177]
    tmp3639 = __ralloc.v0[178]
    tmp3640 = __ralloc.v0[179]
    tmp3641 = __ralloc.v0[180]
    tmp3646 = __ralloc.v0[181]
    tmp3647 = __ralloc.v0[182]
    tmp3648 = __ralloc.v0[183]
    tmp3649 = __ralloc.v0[184]
    tmp3650 = __ralloc.v0[185]
    tmp3653 = __ralloc.v0[186]
    tmp3654 = __ralloc.v0[187]
    tmp3655 = __ralloc.v0[188]
    tmp3656 = __ralloc.v0[189]
    tmp3657 = __ralloc.v0[190]
    tmp3659 = __ralloc.v0[191]
    tmp3660 = __ralloc.v0[192]
    tmp3663 = __ralloc.v0[193]
    tmp3664 = __ralloc.v0[194]
    tmp3665 = __ralloc.v0[195]
    tmp3666 = __ralloc.v0[196]
    tmp3667 = __ralloc.v0[197]
    tmp3670 = __ralloc.v0[198]
    tmp3671 = __ralloc.v0[199]
    tmp3672 = __ralloc.v0[200]
    tmp3673 = __ralloc.v0[201]
    tmp3674 = __ralloc.v0[202]
    tmp3676 = __ralloc.v0[203]
    tmp3677 = __ralloc.v0[204]
    tmp3679 = __ralloc.v0[205]
    tmp3685 = __ralloc.v0[206]
    tmp3686 = __ralloc.v0[207]
    tmp3687 = __ralloc.v0[208]
    tmp3688 = __ralloc.v0[209]
    tmp3689 = __ralloc.v0[210]
    tmp3690 = __ralloc.v0[211]
    tmp3692 = __ralloc.v0[212]
    tmp3693 = __ralloc.v0[213]
    tmp3694 = __ralloc.v0[214]
    tmp3695 = __ralloc.v0[215]
    tmp3696 = __ralloc.v0[216]
    tmp3697 = __ralloc.v0[217]
    tmp3699 = __ralloc.v0[218]
    tmp3700 = __ralloc.v0[219]
    tmp3701 = __ralloc.v0[220]
    tmp3702 = __ralloc.v0[221]
    tmp3703 = __ralloc.v0[222]
    tmp3704 = __ralloc.v0[223]
    tmp3706 = __ralloc.v0[224]
    tmp3707 = __ralloc.v0[225]
    tmp3708 = __ralloc.v0[226]
    tmp3709 = __ralloc.v0[227]
    tmp3711 = __ralloc.v0[228]
    tmp3712 = __ralloc.v0[229]
    tmp3713 = __ralloc.v0[230]
    tmp3714 = __ralloc.v0[231]
    tmp3716 = __ralloc.v0[232]
    tmp3717 = __ralloc.v0[233]
    tmp3718 = __ralloc.v0[234]
    tmp3719 = __ralloc.v0[235]
    tmp3727 = __ralloc.v0[236]
    tmp3728 = __ralloc.v0[237]
    tmp3729 = __ralloc.v0[238]
    tmp3730 = __ralloc.v0[239]
    tmp3732 = __ralloc.v0[240]
    tmp3733 = __ralloc.v0[241]
    tmp3734 = __ralloc.v0[242]
    tmp3735 = __ralloc.v0[243]
    tmp3737 = __ralloc.v0[244]
    tmp3738 = __ralloc.v0[245]
    tmp3739 = __ralloc.v0[246]
    tmp3740 = __ralloc.v0[247]
    tmp3742 = __ralloc.v0[248]
    tmp3743 = __ralloc.v0[249]
    tmp3745 = __ralloc.v0[250]
    tmp3746 = __ralloc.v0[251]
    tmp3748 = __ralloc.v0[252]
    tmp3749 = __ralloc.v0[253]
    tmp3751 = __ralloc.v0[254]
    tmp3752 = __ralloc.v0[255]
    tmp3753 = __ralloc.v0[256]
    tmp3754 = __ralloc.v0[257]
    tmp3756 = __ralloc.v0[258]
    tmp3757 = __ralloc.v0[259]
    tmp3758 = __ralloc.v0[260]
    tmp3759 = __ralloc.v0[261]
    tmp3761 = __ralloc.v0[262]
    tmp3762 = __ralloc.v0[263]
    tmp3763 = __ralloc.v0[264]
    tmp3764 = __ralloc.v0[265]
    tmp3769 = __ralloc.v0[266]
    tmp3770 = __ralloc.v0[267]
    tmp3771 = __ralloc.v0[268]
    tmp3772 = __ralloc.v0[269]
    tmp3774 = __ralloc.v0[270]
    tmp3775 = __ralloc.v0[271]
    tmp3776 = __ralloc.v0[272]
    tmp3777 = __ralloc.v0[273]
    tmp3779 = __ralloc.v0[274]
    tmp3780 = __ralloc.v0[275]
    tmp3781 = __ralloc.v0[276]
    tmp3782 = __ralloc.v0[277]
    tmp3784 = __ralloc.v0[278]
    tmp3785 = __ralloc.v0[279]
    tmp3786 = __ralloc.v0[280]
    tmp3787 = __ralloc.v0[281]
    tmp3789 = __ralloc.v0[282]
    tmp3790 = __ralloc.v0[283]
    tmp3791 = __ralloc.v0[284]
    tmp3792 = __ralloc.v0[285]
    tmp3794 = __ralloc.v0[286]
    tmp3795 = __ralloc.v0[287]
    tmp3796 = __ralloc.v0[288]
    tmp3797 = __ralloc.v0[289]
    tmp3799 = __ralloc.v0[290]
    tmp3800 = __ralloc.v0[291]
    tmp3801 = __ralloc.v0[292]
    tmp3802 = __ralloc.v0[293]
    tmp3804 = __ralloc.v0[294]
    tmp3805 = __ralloc.v0[295]
    tmp3806 = __ralloc.v0[296]
    tmp3807 = __ralloc.v0[297]
    tmp3809 = __ralloc.v0[298]
    tmp3810 = __ralloc.v0[299]
    tmp3811 = __ralloc.v0[300]
    tmp3812 = __ralloc.v0[301]
    tmp3814 = __ralloc.v0[302]
    tmp3815 = __ralloc.v0[303]
    tmp3816 = __ralloc.v0[304]
    tmp3817 = __ralloc.v0[305]
    tmp3819 = __ralloc.v0[306]
    tmp3820 = __ralloc.v0[307]
    tmp3821 = __ralloc.v0[308]
    tmp3822 = __ralloc.v0[309]
    tmp3824 = __ralloc.v0[310]
    tmp3825 = __ralloc.v0[311]
    tmp3826 = __ralloc.v0[312]
    tmp3827 = __ralloc.v0[313]
    tmp3829 = __ralloc.v0[314]
    tmp3830 = __ralloc.v0[315]
    tmp3832 = __ralloc.v0[316]
    tmp3833 = __ralloc.v0[317]
    tmp3835 = __ralloc.v0[318]
    tmp3836 = __ralloc.v0[319]
    tmp3838 = __ralloc.v0[320]
    tmp3839 = __ralloc.v0[321]
    tmp3841 = __ralloc.v0[322]
    tmp3842 = __ralloc.v0[323]
    tmp3844 = __ralloc.v0[324]
    tmp3845 = __ralloc.v0[325]
    tmp3847 = __ralloc.v0[326]
    tmp3848 = __ralloc.v0[327]
    tmp3850 = __ralloc.v0[328]
    tmp3851 = __ralloc.v0[329]
    tmp3853 = __ralloc.v0[330]
    tmp3854 = __ralloc.v0[331]
    tmp3856 = __ralloc.v0[332]
    tmp3857 = __ralloc.v0[333]
    tmp3859 = __ralloc.v0[334]
    tmp3860 = __ralloc.v0[335]
    tmp3862 = __ralloc.v0[336]
    tmp3863 = __ralloc.v0[337]
    tmp3867 = __ralloc.v0[338]
    tmp3868 = __ralloc.v0[339]
    tmp3873 = __ralloc.v0[340]
    tmp3875 = __ralloc.v0[341]
    tmp3876 = __ralloc.v0[342]
    tmp3877 = __ralloc.v0[343]
    tmp3878 = __ralloc.v0[344]
    tmp3880 = __ralloc.v0[345]
    tmp3881 = __ralloc.v0[346]
    tmp3883 = __ralloc.v0[347]
    tmp3884 = __ralloc.v0[348]
    tmp3885 = __ralloc.v0[349]
    tmp3886 = __ralloc.v0[350]
    tmp3888 = __ralloc.v0[351]
    tmp3889 = __ralloc.v0[352]
    tmp3891 = __ralloc.v0[353]
    tmp3892 = __ralloc.v0[354]
    tmp3893 = __ralloc.v0[355]
    tmp3894 = __ralloc.v0[356]
    tmp3896 = __ralloc.v0[357]
    tmp3897 = __ralloc.v0[358]
    tmp3899 = __ralloc.v0[359]
    tmp3900 = __ralloc.v0[360]
    tmp3901 = __ralloc.v0[361]
    tmp3902 = __ralloc.v0[362]
    tmp3904 = __ralloc.v0[363]
    tmp3905 = __ralloc.v0[364]
    tmp3906 = __ralloc.v0[365]
    tmp3907 = __ralloc.v0[366]
    tmp3909 = __ralloc.v0[367]
    tmp3910 = __ralloc.v0[368]
    tmp3911 = __ralloc.v0[369]
    tmp3912 = __ralloc.v0[370]
    tmp3914 = __ralloc.v0[371]
    tmp3915 = __ralloc.v0[372]
    tmp3916 = __ralloc.v0[373]
    tmp3917 = __ralloc.v0[374]
    tmp3919 = __ralloc.v0[375]
    tmp3920 = __ralloc.v0[376]
    tmp3921 = __ralloc.v0[377]
    tmp3922 = __ralloc.v0[378]
    tmp3924 = __ralloc.v0[379]
    tmp3926 = __ralloc.v0[380]
    tmp3927 = __ralloc.v0[381]
    tmp3928 = __ralloc.v0[382]
    tmp3929 = __ralloc.v0[383]
    tmp3931 = __ralloc.v0[384]
    tmp3932 = __ralloc.v0[385]
    tmp3933 = __ralloc.v0[386]
    tmp3934 = __ralloc.v0[387]
    tmp3936 = __ralloc.v0[388]
    tmp3937 = __ralloc.v0[389]
    tmp3938 = __ralloc.v0[390]
    tmp3939 = __ralloc.v0[391]
    tmp3944 = __ralloc.v0[392]
    tmp3945 = __ralloc.v0[393]
    tmp3947 = __ralloc.v0[394]
    tmp3948 = __ralloc.v0[395]
    tmp3950 = __ralloc.v0[396]
    tmp3951 = __ralloc.v0[397]
    tmp3956 = __ralloc.v0[398]
    tmp3957 = __ralloc.v0[399]
    tmp3958 = __ralloc.v0[400]
    tmp3959 = __ralloc.v0[401]
    tmp3960 = __ralloc.v0[402]
    tmp3961 = __ralloc.v0[403]
    tmp3963 = __ralloc.v0[404]
    tmp3964 = __ralloc.v0[405]
    tmp3965 = __ralloc.v0[406]
    tmp3966 = __ralloc.v0[407]
    tmp3968 = __ralloc.v0[408]
    tmp3969 = __ralloc.v0[409]
    tmp3971 = __ralloc.v0[410]
    tmp3972 = __ralloc.v0[411]
    tmp3973 = __ralloc.v0[412]
    tmp3974 = __ralloc.v0[413]
    tmp3976 = __ralloc.v0[414]
    tmp3977 = __ralloc.v0[415]
    tmp3978 = __ralloc.v0[416]
    tmp3979 = __ralloc.v0[417]
    tmp3981 = __ralloc.v0[418]
    tmp3982 = __ralloc.v0[419]
    tmp3983 = __ralloc.v0[420]
    tmp3984 = __ralloc.v0[421]
    tmp3986 = __ralloc.v0[422]
    tmp3987 = __ralloc.v0[423]
    tmp3989 = __ralloc.v0[424]
    tmp3990 = __ralloc.v0[425]
    tmp3995 = __ralloc.v0[426]
    tmp3998 = __ralloc.v0[427]
    tmp3999 = __ralloc.v0[428]
    tmp4000 = __ralloc.v0[429]
    tmp4002 = __ralloc.v0[430]
    tmp4005 = __ralloc.v0[431]
    tmp4006 = __ralloc.v0[432]
    tmp4013 = __ralloc.v0[433]
    tmp4015 = __ralloc.v0[434]
    tmp4039 = __ralloc.v0[435]
    tmp4040 = __ralloc.v0[436]
    tmp4041 = __ralloc.v0[437]
    tmp4042 = __ralloc.v0[438]
    tmp4043 = __ralloc.v0[439]
    tmp4044 = __ralloc.v0[440]
    ϕ_m = __ralloc.v0[441]
    θ_m = __ralloc.v0[442]
    ψ_m = __ralloc.v0[443]
    tmp4046 = __ralloc.v0[444]
    tmp4047 = __ralloc.v0[445]
    tmp4048 = __ralloc.v0[446]
    tmp4049 = __ralloc.v0[447]
    tmp4050 = __ralloc.v0[448]
    tmp4051 = __ralloc.v0[449]
    tmp4052 = __ralloc.v0[450]
    tmp4053 = __ralloc.v0[451]
    tmp4054 = __ralloc.v0[452]
    tmp4055 = __ralloc.v0[453]
    tmp4056 = __ralloc.v0[454]
    tmp4057 = __ralloc.v0[455]
    tmp4058 = __ralloc.v0[456]
    tmp4059 = __ralloc.v0[457]
    tmp4060 = __ralloc.v0[458]
    tmp4061 = __ralloc.v0[459]
    tmp4062 = __ralloc.v0[460]
    tmp4063 = __ralloc.v0[461]
    tmp4064 = __ralloc.v0[462]
    tmp4065 = __ralloc.v0[463]
    tmp4066 = __ralloc.v0[464]
    tmp4067 = __ralloc.v0[465]
    tmp4068 = __ralloc.v0[466]
    tmp4069 = __ralloc.v0[467]
    tmp4070 = __ralloc.v0[468]
    tmp4071 = __ralloc.v0[469]
    tmp4072 = __ralloc.v0[470]
    tmp4073 = __ralloc.v0[471]
    tmp4074 = __ralloc.v0[472]
    ϕ_c = __ralloc.v0[473]
    tmp4075 = __ralloc.v0[474]
    tmp4076 = __ralloc.v0[475]
    tmp4077 = __ralloc.v0[476]
    tmp4078 = __ralloc.v0[477]
    tmp4079 = __ralloc.v0[478]
    tmp4080 = __ralloc.v0[479]
    tmp4081 = __ralloc.v0[480]
    tmp4082 = __ralloc.v0[481]
    tmp4083 = __ralloc.v0[482]
    tmp4084 = __ralloc.v0[483]
    tmp4085 = __ralloc.v0[484]
    tmp4086 = __ralloc.v0[485]
    ω_c_CE_1 = __ralloc.v0[486]
    ω_c_CE_2 = __ralloc.v0[487]
    ω_c_CE_3 = __ralloc.v0[488]
    J2M_t = __ralloc.v0[489]
    C22M_t = __ralloc.v0[490]
    C21M_t = __ralloc.v0[491]
    S21M_t = __ralloc.v0[492]
    S22M_t = __ralloc.v0[493]
    x0s_M = __ralloc.v0[494]
    y0s_M = __ralloc.v0[495]
    z0s_M = __ralloc.v0[496]
    tmp4100 = __ralloc.v0[497]
    tmp4101 = __ralloc.v0[498]
    ρ0s2_M = __ralloc.v0[499]
    ρ0s_M = __ralloc.v0[500]
    z0s2_M = __ralloc.v0[501]
    tmp4102 = __ralloc.v0[502]
    r0s2_M = __ralloc.v0[503]
    r0s_M = __ralloc.v0[504]
    r0s5_M = __ralloc.v0[505]
    tmp4103 = __ralloc.v0[506]
    x0s_S = __ralloc.v0[507]
    y0s_S = __ralloc.v0[508]
    z0s_S = __ralloc.v0[509]
    tmp4104 = __ralloc.v0[510]
    tmp4105 = __ralloc.v0[511]
    ρ0s2_S = __ralloc.v0[512]
    ρ0s_S = __ralloc.v0[513]
    z0s2_S = __ralloc.v0[514]
    tmp4106 = __ralloc.v0[515]
    r0s2_S = __ralloc.v0[516]
    r0s_S = __ralloc.v0[517]
    r0s5_S = __ralloc.v0[518]
    tmp4107 = __ralloc.v0[519]
    tmp4108 = __ralloc.v0[520]
    tmp4109 = __ralloc.v0[521]
    coeff0_M = __ralloc.v0[522]
    tmp4110 = __ralloc.v0[523]
    tmp4111 = __ralloc.v0[524]
    coeff0_S = __ralloc.v0[525]
    k_20E_div_r0s5_M = __ralloc.v0[526]
    k_20E_div_r0s5_S = __ralloc.v0[527]
    a_tid_0_M_x = __ralloc.v0[528]
    a_tid_0_M_y = __ralloc.v0[529]
    a_tid_0_M_z = __ralloc.v0[530]
    a_tid_0_S_x = __ralloc.v0[531]
    a_tid_0_S_y = __ralloc.v0[532]
    a_tid_0_S_z = __ralloc.v0[533]
    x1s_M = __ralloc.v0[534]
    y1s_M = __ralloc.v0[535]
    z1s_M = __ralloc.v0[536]
    tmp4112 = __ralloc.v0[537]
    tmp4113 = __ralloc.v0[538]
    ρ1s2_M = __ralloc.v0[539]
    ρ1s_M = __ralloc.v0[540]
    z1s2_M = __ralloc.v0[541]
    tmp4114 = __ralloc.v0[542]
    r1s2_M = __ralloc.v0[543]
    r1s_M = __ralloc.v0[544]
    r1s5_M = __ralloc.v0[545]
    tmp4115 = __ralloc.v0[546]
    x1s_S = __ralloc.v0[547]
    y1s_S = __ralloc.v0[548]
    z1s_S = __ralloc.v0[549]
    tmp4116 = __ralloc.v0[550]
    tmp4117 = __ralloc.v0[551]
    ρ1s2_S = __ralloc.v0[552]
    ρ1s_S = __ralloc.v0[553]
    z1s2_S = __ralloc.v0[554]
    tmp4118 = __ralloc.v0[555]
    r1s2_S = __ralloc.v0[556]
    r1s_S = __ralloc.v0[557]
    r1s5_S = __ralloc.v0[558]
    tmp4119 = __ralloc.v0[559]
    coeff1_1_M = __ralloc.v0[560]
    coeff1_1_S = __ralloc.v0[561]
    coeff2_1_M = __ralloc.v0[562]
    coeff2_1_S = __ralloc.v0[563]
    coeff3_1_M = __ralloc.v0[564]
    coeff3_1_S = __ralloc.v0[565]
    k_21E_div_r1s5_M = __ralloc.v0[566]
    k_21E_div_r1s5_S = __ralloc.v0[567]
    a_tid_1_M_x = __ralloc.v0[568]
    a_tid_1_M_y = __ralloc.v0[569]
    a_tid_1_M_z = __ralloc.v0[570]
    a_tid_1_S_x = __ralloc.v0[571]
    a_tid_1_S_y = __ralloc.v0[572]
    a_tid_1_S_z = __ralloc.v0[573]
    x2s_M = __ralloc.v0[574]
    y2s_M = __ralloc.v0[575]
    z2s_M = __ralloc.v0[576]
    tmp4120 = __ralloc.v0[577]
    tmp4121 = __ralloc.v0[578]
    ρ2s2_M = __ralloc.v0[579]
    ρ2s_M = __ralloc.v0[580]
    z2s2_M = __ralloc.v0[581]
    tmp4122 = __ralloc.v0[582]
    r2s2_M = __ralloc.v0[583]
    r2s_M = __ralloc.v0[584]
    r2s5_M = __ralloc.v0[585]
    tmp4123 = __ralloc.v0[586]
    x2s_S = __ralloc.v0[587]
    y2s_S = __ralloc.v0[588]
    z2s_S = __ralloc.v0[589]
    tmp4124 = __ralloc.v0[590]
    tmp4125 = __ralloc.v0[591]
    ρ2s2_S = __ralloc.v0[592]
    ρ2s_S = __ralloc.v0[593]
    z2s2_S = __ralloc.v0[594]
    tmp4126 = __ralloc.v0[595]
    r2s2_S = __ralloc.v0[596]
    r2s_S = __ralloc.v0[597]
    r2s5_S = __ralloc.v0[598]
    tmp4127 = __ralloc.v0[599]
    coeff1_2_M = __ralloc.v0[600]
    coeff1_2_S = __ralloc.v0[601]
    tmp4128 = __ralloc.v0[602]
    tmp4129 = __ralloc.v0[603]
    coeff3_2_M = __ralloc.v0[604]
    tmp4130 = __ralloc.v0[605]
    tmp4131 = __ralloc.v0[606]
    coeff3_2_S = __ralloc.v0[607]
    k_22E_div_r2s5_M = __ralloc.v0[608]
    k_22E_div_r2s5_S = __ralloc.v0[609]
    a_tid_2_M_x = __ralloc.v0[610]
    a_tid_2_M_y = __ralloc.v0[611]
    a_tid_2_M_z = __ralloc.v0[612]
    a_tid_2_S_x = __ralloc.v0[613]
    a_tid_2_S_y = __ralloc.v0[614]
    a_tid_2_S_z = __ralloc.v0[615]
    RE_div_r_p5 = __ralloc.v0[616]
    tmp4132 = __ralloc.v0[617]
    aux_tidacc = __ralloc.v0[618]
    a_tidal_coeff_M = __ralloc.v0[619]
    a_tidal_coeff_S = __ralloc.v0[620]
    a_tidal_tod_x = __ralloc.v0[621]
    a_tidal_tod_y = __ralloc.v0[622]
    a_tidal_tod_z = __ralloc.v0[623]
    a_tidal_x = __ralloc.v0[624]
    a_tidal_y = __ralloc.v0[625]
    a_tidal_z = __ralloc.v0[626]
    accX_mo_tides = __ralloc.v0[627]
    accY_mo_tides = __ralloc.v0[628]
    accZ_mo_tides = __ralloc.v0[629]
    Iω_x = __ralloc.v0[630]
    Iω_y = __ralloc.v0[631]
    Iω_z = __ralloc.v0[632]
    ωxIω_x = __ralloc.v0[633]
    ωxIω_y = __ralloc.v0[634]
    ωxIω_z = __ralloc.v0[635]
    dIω_x = __ralloc.v0[636]
    dIω_y = __ralloc.v0[637]
    dIω_z = __ralloc.v0[638]
    er_EM_I_1 = __ralloc.v0[639]
    er_EM_I_2 = __ralloc.v0[640]
    er_EM_I_3 = __ralloc.v0[641]
    p_E_I_1 = __ralloc.v0[642]
    p_E_I_2 = __ralloc.v0[643]
    p_E_I_3 = __ralloc.v0[644]
    er_EM_1 = __ralloc.v0[645]
    er_EM_2 = __ralloc.v0[646]
    er_EM_3 = __ralloc.v0[647]
    p_E_1 = __ralloc.v0[648]
    p_E_2 = __ralloc.v0[649]
    p_E_3 = __ralloc.v0[650]
    I_er_EM_1 = __ralloc.v0[651]
    I_er_EM_2 = __ralloc.v0[652]
    I_er_EM_3 = __ralloc.v0[653]
    I_p_E_1 = __ralloc.v0[654]
    I_p_E_2 = __ralloc.v0[655]
    I_p_E_3 = __ralloc.v0[656]
    er_EM_cross_I_er_EM_1 = __ralloc.v0[657]
    er_EM_cross_I_er_EM_2 = __ralloc.v0[658]
    er_EM_cross_I_er_EM_3 = __ralloc.v0[659]
    er_EM_cross_I_p_E_1 = __ralloc.v0[660]
    er_EM_cross_I_p_E_2 = __ralloc.v0[661]
    er_EM_cross_I_p_E_3 = __ralloc.v0[662]
    p_E_cross_I_er_EM_1 = __ralloc.v0[663]
    p_E_cross_I_er_EM_2 = __ralloc.v0[664]
    p_E_cross_I_er_EM_3 = __ralloc.v0[665]
    p_E_cross_I_p_E_1 = __ralloc.v0[666]
    p_E_cross_I_p_E_2 = __ralloc.v0[667]
    p_E_cross_I_p_E_3 = __ralloc.v0[668]
    tmp4133 = __ralloc.v0[669]
    one_minus_7sin2ϕEM = __ralloc.v0[670]
    two_sinϕEM = __ralloc.v0[671]
    tmp4134 = __ralloc.v0[672]
    N_MfigM_figE_factor_div_rEMp5 = __ralloc.v0[673]
    N_MfigM_figE_1 = __ralloc.v0[674]
    N_MfigM_figE_2 = __ralloc.v0[675]
    N_MfigM_figE_3 = __ralloc.v0[676]
    N_1_LMF = __ralloc.v0[677]
    N_2_LMF = __ralloc.v0[678]
    N_3_LMF = __ralloc.v0[679]
    N_cmb_1 = __ralloc.v0[680]
    N_cmb_2 = __ralloc.v0[681]
    N_cmb_3 = __ralloc.v0[682]
    I_dω_1 = __ralloc.v0[683]
    I_dω_2 = __ralloc.v0[684]
    I_dω_3 = __ralloc.v0[685]
    Ic_ωc_1 = __ralloc.v0[686]
    Ic_ωc_2 = __ralloc.v0[687]
    Ic_ωc_3 = __ralloc.v0[688]
    m_ωm_x_Icωc_1 = __ralloc.v0[689]
    m_ωm_x_Icωc_2 = __ralloc.v0[690]
    m_ωm_x_Icωc_3 = __ralloc.v0[691]
    Ic_dωc_1 = __ralloc.v0[692]
    Ic_dωc_2 = __ralloc.v0[693]
    Ic_dωc_3 = __ralloc.v0[694]
    tmp4135 = __ralloc.v0[695]
    tmp4136 = __ralloc.v0[696]
    tmp4137 = __ralloc.v0[697]
    tmp4138 = __ralloc.v0[698]
    tmp4139 = __ralloc.v0[699]
    tmp4140 = __ralloc.v0[700]
    tmp4141 = __ralloc.v0[701]
    tmp4142 = __ralloc.v0[702]
    tmp4143 = __ralloc.v0[703]
    w_LE = __ralloc.v0[704]
    α_TTmTDB = __ralloc.v0[705]
    v4E = __ralloc.v0[706]
    tmp4144 = __ralloc.v0[707]
    ϕ_Earth_Newtonian_sq = __ralloc.v0[708]
    tmp4145 = __ralloc.v0[709]
    β_TTmTDB = __ralloc.v0[710]
    newtonX = __ralloc.v1[1]
    newtonY = __ralloc.v1[2]
    newtonZ = __ralloc.v1[3]
    newtonianNb_Potential = __ralloc.v1[4]
    v2 = __ralloc.v1[5]
    pntempX = __ralloc.v1[6]
    pntempY = __ralloc.v1[7]
    pntempZ = __ralloc.v1[8]
    postNewtonX = __ralloc.v1[9]
    postNewtonY = __ralloc.v1[10]
    postNewtonZ = __ralloc.v1[11]
    accX = __ralloc.v1[12]
    accY = __ralloc.v1[13]
    accZ = __ralloc.v1[14]
    N_MfigM_pmA_x = __ralloc.v1[15]
    N_MfigM_pmA_y = __ralloc.v1[16]
    N_MfigM_pmA_z = __ralloc.v1[17]
    temp_N_M_x = __ralloc.v1[18]
    temp_N_M_y = __ralloc.v1[19]
    temp_N_M_z = __ralloc.v1[20]
    N_MfigM = __ralloc.v1[21]
    J2_t = __ralloc.v1[22]
    tmp3082 = __ralloc.v1[23]
    tmp3084 = __ralloc.v1[24]
    tmp3087 = __ralloc.v1[25]
    tmp3089 = __ralloc.v1[26]
    tmp3092 = __ralloc.v1[27]
    tmp3094 = __ralloc.v1[28]
    tmp3138 = __ralloc.v1[29]
    tmp4092 = __ralloc.v1[30]
    tmp3140 = __ralloc.v1[31]
    tmp4093 = __ralloc.v1[32]
    tmp3141 = __ralloc.v1[33]
    tmp3143 = __ralloc.v1[34]
    tmp4094 = __ralloc.v1[35]
    tmp4020 = __ralloc.v1[36]
    tmp4022 = __ralloc.v1[37]
    tmp4023 = __ralloc.v1[38]
    β_TTmTDB_i_2 = __ralloc.v1[39]
    X = __ralloc.v2[1]
    Y = __ralloc.v2[2]
    Z = __ralloc.v2[3]
    r_p2 = __ralloc.v2[4]
    r_p1d2 = __ralloc.v2[5]
    r_p3d2 = __ralloc.v2[6]
    r_p7d2 = __ralloc.v2[7]
    newtonianCoeff = __ralloc.v2[8]
    U = __ralloc.v2[9]
    V = __ralloc.v2[10]
    W = __ralloc.v2[11]
    _4U_m_3X = __ralloc.v2[12]
    _4V_m_3Y = __ralloc.v2[13]
    _4W_m_3Z = __ralloc.v2[14]
    UU = __ralloc.v2[15]
    VV = __ralloc.v2[16]
    WW = __ralloc.v2[17]
    newtonian1b_Potential = __ralloc.v2[18]
    newton_acc_X = __ralloc.v2[19]
    newton_acc_Y = __ralloc.v2[20]
    newton_acc_Z = __ralloc.v2[21]
    _2v2 = __ralloc.v2[22]
    vi_dot_vj = __ralloc.v2[23]
    rij_dot_vi_div_rij_sq = __ralloc.v2[24]
    pn2 = __ralloc.v2[25]
    U_t_pn2 = __ralloc.v2[26]
    V_t_pn2 = __ralloc.v2[27]
    W_t_pn2 = __ralloc.v2[28]
    pn3 = __ralloc.v2[29]
    pNX_t_pn3 = __ralloc.v2[30]
    pNY_t_pn3 = __ralloc.v2[31]
    pNZ_t_pn3 = __ralloc.v2[32]
    _4ϕj = __ralloc.v2[33]
    ϕi_plus_4ϕj = __ralloc.v2[34]
    sj2_plus_2si2 = __ralloc.v2[35]
    sj2_plus_2si2_minus_4vivj = __ralloc.v2[36]
    ϕs_and_vs = __ralloc.v2[37]
    pn1t1_7 = __ralloc.v2[38]
    pNX_t_X = __ralloc.v2[39]
    pNY_t_Y = __ralloc.v2[40]
    pNZ_t_Z = __ralloc.v2[41]
    pn1 = __ralloc.v2[42]
    X_t_pn1 = __ralloc.v2[43]
    Y_t_pn1 = __ralloc.v2[44]
    Z_t_pn1 = __ralloc.v2[45]
    X_bf_1 = __ralloc.v2[46]
    Y_bf_1 = __ralloc.v2[47]
    Z_bf_1 = __ralloc.v2[48]
    X_bf_2 = __ralloc.v2[49]
    Y_bf_2 = __ralloc.v2[50]
    Z_bf_2 = __ralloc.v2[51]
    X_bf_3 = __ralloc.v2[52]
    Y_bf_3 = __ralloc.v2[53]
    Z_bf_3 = __ralloc.v2[54]
    X_bf = __ralloc.v2[55]
    Y_bf = __ralloc.v2[56]
    Z_bf = __ralloc.v2[57]
    F_JCS_x = __ralloc.v2[58]
    F_JCS_y = __ralloc.v2[59]
    F_JCS_z = __ralloc.v2[60]
    temp_accX_j = __ralloc.v2[61]
    temp_accY_j = __ralloc.v2[62]
    temp_accZ_j = __ralloc.v2[63]
    temp_accX_i = __ralloc.v2[64]
    temp_accY_i = __ralloc.v2[65]
    temp_accZ_i = __ralloc.v2[66]
    sin_ϕ = __ralloc.v2[67]
    cos_ϕ = __ralloc.v2[68]
    sin_λ = __ralloc.v2[69]
    cos_λ = __ralloc.v2[70]
    r_xy = __ralloc.v2[71]
    r_p4 = __ralloc.v2[72]
    F_CS_ξ_36 = __ralloc.v2[73]
    F_CS_η_36 = __ralloc.v2[74]
    F_CS_ζ_36 = __ralloc.v2[75]
    F_J_ξ_36 = __ralloc.v2[76]
    F_J_ζ_36 = __ralloc.v2[77]
    F_J_ξ = __ralloc.v2[78]
    F_J_ζ = __ralloc.v2[79]
    F_CS_ξ = __ralloc.v2[80]
    F_CS_η = __ralloc.v2[81]
    F_CS_ζ = __ralloc.v2[82]
    F_JCS_ξ = __ralloc.v2[83]
    F_JCS_η = __ralloc.v2[84]
    F_JCS_ζ = __ralloc.v2[85]
    mantlef2coref = __ralloc.v2[86]
    pn2x = __ralloc.v2[87]
    pn2y = __ralloc.v2[88]
    pn2z = __ralloc.v2[89]
    tmp3102 = __ralloc.v2[90]
    tmp3105 = __ralloc.v2[91]
    tmp4087 = __ralloc.v2[92]
    tmp3107 = __ralloc.v2[93]
    tmp4088 = __ralloc.v2[94]
    tmp3108 = __ralloc.v2[95]
    tmp3110 = __ralloc.v2[96]
    tmp4089 = __ralloc.v2[97]
    tmp4090 = __ralloc.v2[98]
    tmp4091 = __ralloc.v2[99]
    tmp3118 = __ralloc.v2[100]
    tmp3119 = __ralloc.v2[101]
    tmp3130 = __ralloc.v2[102]
    temp_001 = __ralloc.v2[103]
    tmp3132 = __ralloc.v2[104]
    temp_002 = __ralloc.v2[105]
    tmp3134 = __ralloc.v2[106]
    temp_003 = __ralloc.v2[107]
    temp_004 = __ralloc.v2[108]
    tmp3171 = __ralloc.v2[109]
    tmp3173 = __ralloc.v2[110]
    tmp3175 = __ralloc.v2[111]
    tmp3179 = __ralloc.v2[112]
    tmp4095 = __ralloc.v2[113]
    tmp3181 = __ralloc.v2[114]
    tmp4096 = __ralloc.v2[115]
    tmp3182 = __ralloc.v2[116]
    tmp4097 = __ralloc.v2[117]
    tmp4098 = __ralloc.v2[118]
    tmp3288 = __ralloc.v2[119]
    tmp3289 = __ralloc.v2[120]
    tmp3292 = __ralloc.v2[121]
    tmp3293 = __ralloc.v2[122]
    tmp3299 = __ralloc.v2[123]
    tmp3302 = __ralloc.v2[124]
    tmp3364 = __ralloc.v2[125]
    tmp3366 = __ralloc.v2[126]
    tmp3368 = __ralloc.v2[127]
    tmp3370 = __ralloc.v2[128]
    tmp3372 = __ralloc.v2[129]
    tmp3374 = __ralloc.v2[130]
    tmp3376 = __ralloc.v2[131]
    tmp3377 = __ralloc.v2[132]
    tmp3378 = __ralloc.v2[133]
    tmp3380 = __ralloc.v2[134]
    tmp3381 = __ralloc.v2[135]
    tmp3382 = __ralloc.v2[136]
    tmp3384 = __ralloc.v2[137]
    tmp3385 = __ralloc.v2[138]
    tmp3386 = __ralloc.v2[139]
    tmp3398 = __ralloc.v2[140]
    Xij_t_Ui = __ralloc.v2[141]
    Yij_t_Vi = __ralloc.v2[142]
    Zij_t_Wi = __ralloc.v2[143]
    tmp3404 = __ralloc.v2[144]
    Rij_dot_Vi = __ralloc.v2[145]
    tmp3407 = __ralloc.v2[146]
    tmp4099 = __ralloc.v2[147]
    tmp3410 = __ralloc.v2[148]
    pn1t2_7 = __ralloc.v2[149]
    tmp3417 = __ralloc.v2[150]
    tmp3418 = __ralloc.v2[151]
    tmp3419 = __ralloc.v2[152]
    tmp3427 = __ralloc.v2[153]
    termpnx = __ralloc.v2[154]
    sumpnx = __ralloc.v2[155]
    tmp3430 = __ralloc.v2[156]
    termpny = __ralloc.v2[157]
    sumpny = __ralloc.v2[158]
    tmp3433 = __ralloc.v2[159]
    termpnz = __ralloc.v2[160]
    sumpnz = __ralloc.v2[161]
    β_TTmTDB_i_1 = __ralloc.v2[162]
    tmp4025 = __ralloc.v2[163]
    tmp4026 = __ralloc.v2[164]
    tmp4027 = __ralloc.v2[165]
    tmp4028 = __ralloc.v2[166]
    tmp4029 = __ralloc.v2[167]
    β_TTmTDB_i_3 = __ralloc.v2[168]
    β_TTmTDB_i_4 = __ralloc.v2[169]
    tmp4034 = __ralloc.v2[170]
    tmp4035 = __ralloc.v2[171]
    β_TTmTDB_i = __ralloc.v2[172]
    tmp4037 = __ralloc.v2[173]
    temp_β_TTmTDB = __ralloc.v2[174]
    P_n = __ralloc.v3[1]
    dP_n = __ralloc.v3[2]
    temp_fjξ = __ralloc.v3[3]
    temp_fjζ = __ralloc.v3[4]
    temp_rn = __ralloc.v3[5]
    sin_mλ = __ralloc.v3[6]
    cos_mλ = __ralloc.v3[7]
    RotM = __ralloc.v3[8]
    tmp3187 = __ralloc.v3[9]
    tmp3188 = __ralloc.v3[10]
    tmp3189 = __ralloc.v3[11]
    tmp3191 = __ralloc.v3[12]
    tmp3192 = __ralloc.v3[13]
    tmp3197 = __ralloc.v3[14]
    tmp3198 = __ralloc.v3[15]
    tmp3200 = __ralloc.v3[16]
    tmp3201 = __ralloc.v3[17]
    tmp3202 = __ralloc.v3[18]
    tmp3204 = __ralloc.v3[19]
    tmp3205 = __ralloc.v3[20]
    tmp3206 = __ralloc.v3[21]
    tmp3208 = __ralloc.v3[22]
    tmp3209 = __ralloc.v3[23]
    tmp3210 = __ralloc.v3[24]
    tmp3211 = __ralloc.v3[25]
    tmp3214 = __ralloc.v3[26]
    tmp3215 = __ralloc.v3[27]
    tmp3217 = __ralloc.v3[28]
    tmp3218 = __ralloc.v3[29]
    tmp3237 = __ralloc.v3[30]
    tmp3238 = __ralloc.v3[31]
    tmp3239 = __ralloc.v3[32]
    tmp3242 = __ralloc.v3[33]
    tmp3243 = __ralloc.v3[34]
    tmp3244 = __ralloc.v3[35]
    tmp3249 = __ralloc.v3[36]
    tmp3250 = __ralloc.v3[37]
    tmp3251 = __ralloc.v3[38]
    tmp3254 = __ralloc.v3[39]
    tmp3255 = __ralloc.v3[40]
    tmp3256 = __ralloc.v3[41]
    tmp3260 = __ralloc.v3[42]
    tmp3261 = __ralloc.v3[43]
    tmp3262 = __ralloc.v3[44]
    tmp3264 = __ralloc.v3[45]
    tmp3265 = __ralloc.v3[46]
    tmp3266 = __ralloc.v3[47]
    temp_CS_ξ = __ralloc.v4[1]
    temp_CS_η = __ralloc.v4[2]
    temp_CS_ζ = __ralloc.v4[3]
    Cnm_cosmλ = __ralloc.v4[4]
    Cnm_sinmλ = __ralloc.v4[5]
    Snm_cosmλ = __ralloc.v4[6]
    Snm_sinmλ = __ralloc.v4[7]
    secϕ_P_nm = __ralloc.v4[8]
    P_nm = __ralloc.v4[9]
    cosϕ_dP_nm = __ralloc.v4[10]
    Rb2p = __ralloc.v4[11]
    Gc2p = __ralloc.v4[12]
    tmp3220 = __ralloc.v4[13]
    tmp3223 = __ralloc.v4[14]
    tmp3225 = __ralloc.v4[15]
    tmp3227 = __ralloc.v4[16]
    tmp3228 = __ralloc.v4[17]
    tmp3229 = __ralloc.v4[18]
    tmp3232 = __ralloc.v4[19]
    tmp3233 = __ralloc.v4[20]
    tmp3234 = __ralloc.v4[21]
    tmp3236 = __ralloc.v4[22]
    tmp3240 = __ralloc.v4[23]
    tmp3241 = __ralloc.v4[24]
    tmp3245 = __ralloc.v4[25]
    tmp3246 = __ralloc.v4[26]
    tmp3248 = __ralloc.v4[27]
    tmp3252 = __ralloc.v4[28]
    tmp3253 = __ralloc.v4[29]
    tmp3257 = __ralloc.v4[30]
    tmp3258 = __ralloc.v4[31]
    tmp3263 = __ralloc.v4[32]
    tmp3267 = __ralloc.v4[33]
    tmp3268 = __ralloc.v4[34]
    tmp3274 = __ralloc.v4[35]
    tmp3275 = __ralloc.v4[36]
    tmp3276 = __ralloc.v4[37]
    tmp3277 = __ralloc.v4[38]
    tmp3279 = __ralloc.v4[39]
    tmp3280 = __ralloc.v4[40]
    tmp3281 = __ralloc.v4[41]
    tmp3282 = __ralloc.v4[42]
    tmp3284 = __ralloc.v4[43]
    tmp3285 = __ralloc.v4[44]
    tmp3286 = __ralloc.v4[45]
    tmp3304 = __ralloc.v4[46]
    tmp3305 = __ralloc.v4[47]
    tmp3306 = __ralloc.v4[48]
    tmp3307 = __ralloc.v4[49]
    tmp3309 = __ralloc.v4[50]
    tmp3310 = __ralloc.v4[51]
    tmp3311 = __ralloc.v4[52]
    tmp3312 = __ralloc.v4[53]
    tmp3314 = __ralloc.v4[54]
    tmp3315 = __ralloc.v4[55]
    tmp3316 = __ralloc.v4[56]
    tmp3317 = __ralloc.v4[57]
    tmp3319 = __ralloc.v4[58]
    tmp3320 = __ralloc.v4[59]
    tmp3321 = __ralloc.v4[60]
    tmp3322 = __ralloc.v4[61]
    tmp3324 = __ralloc.v4[62]
    tmp3325 = __ralloc.v4[63]
    tmp3326 = __ralloc.v4[64]
    tmp3327 = __ralloc.v4[65]
    tmp3329 = __ralloc.v4[66]
    tmp3330 = __ralloc.v4[67]
    tmp3331 = __ralloc.v4[68]
    tmp3332 = __ralloc.v4[69]
    tmp3334 = __ralloc.v4[70]
    tmp3335 = __ralloc.v4[71]
    tmp3336 = __ralloc.v4[72]
    tmp3337 = __ralloc.v4[73]
    tmp3339 = __ralloc.v4[74]
    tmp3340 = __ralloc.v4[75]
    tmp3341 = __ralloc.v4[76]
    tmp3342 = __ralloc.v4[77]
    tmp3344 = __ralloc.v4[78]
    tmp3345 = __ralloc.v4[79]
    tmp3346 = __ralloc.v4[80]
    tmp3347 = __ralloc.v4[81]
    tmp3349 = __ralloc.v4[82]
    tmp3350 = __ralloc.v4[83]
    tmp3351 = __ralloc.v4[84]
    tmp3352 = __ralloc.v4[85]
    tmp3354 = __ralloc.v4[86]
    tmp3355 = __ralloc.v4[87]
    tmp3356 = __ralloc.v4[88]
    tmp3357 = __ralloc.v4[89]
    tmp3359 = __ralloc.v4[90]
    tmp3360 = __ralloc.v4[91]
    tmp3361 = __ralloc.v4[92]
    tmp3362 = __ralloc.v4[93]
    local (N, jd0) = params
    local __t = Taylor1(numtype(t), t.order)
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local params_bwd = (N_bwd, jd0)
    local qq_bwd = Taylor1.(constant_term.(q[union(nbodyind(N, 1:N_bwd), 6N + 1:6N + 13)]), t.order)::Vector{S}
    local dqq_bwd = similar(qq_bwd)
    local xaux_bwd = similar(qq_bwd)
    local jc = TaylorIntegration.jetcoeffs!(NBP_pN_A_J23E_J23M_J2S_threads!, t, qq_bwd, dqq_bwd, xaux_bwd, params_bwd)
    local q_del_τ_M = special_eval(qq_bwd, __t - τ_M)
    local q_del_τ_0 = special_eval(qq_bwd, __t - τ_0p)
    local q_del_τ_1 = special_eval(qq_bwd, __t - τ_1p)
    local q_del_τ_2 = special_eval(qq_bwd, __t - τ_2p)
    local eulang_del_τ_M = q_del_τ_M[6N_bwd + 1:6N_bwd + 3]::Vector{S}
    local ω_m_del_τ_M = q_del_τ_M[6N_bwd + 4:6N_bwd + 6]::Vector{S}
    local I_m_t = ITM(q_del_τ_M, eulang_del_τ_M, ω_m_del_τ_M)::Matrix{S}
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    local q_ME_τ_0 = q_del_τ_0[3mo - 2:3mo] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_ME_τ_1 = q_del_τ_1[3mo - 2:3mo] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_ME_τ_2 = q_del_τ_2[3mo - 2:3mo] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local q_SE_τ_0 = q_del_τ_0[3su - 2:3su] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_SE_τ_1 = q_del_τ_1[3su - 2:3su] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_SE_τ_2 = q_del_τ_2[3su - 2:3su] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local R30 = RotM[:, :, ea]
    local R31 = Rz(-ω_E * τ_1) * RotM[:, :, ea]
    local R32 = Rz(-ω_E * τ_2) * RotM[:, :, ea]
    local r_star_M_0 = R30 * q_ME_τ_0
    local r_star_M_1 = R31 * q_ME_τ_1
    local r_star_M_2 = R32 * q_ME_τ_2
    local r_star_S_0 = R30 * q_SE_τ_0
    local r_star_S_1 = R31 * q_SE_τ_1
    local r_star_S_2 = R32 * q_SE_τ_2
    for ord = 0:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp4046, tmp2976, ϕ_m, ord)
        TaylorSeries.sincos!(tmp4047, tmp2977, ψ_m, ord)
        TaylorSeries.mul!(tmp2978, tmp2976, tmp2977, ord)
        TaylorSeries.sincos!(tmp4048, tmp2979, θ_m, ord)
        TaylorSeries.sincos!(tmp2980, tmp4049, ϕ_m, ord)
        TaylorSeries.mul!(tmp2981, tmp2979, tmp2980, ord)
        TaylorSeries.sincos!(tmp2982, tmp4050, ψ_m, ord)
        TaylorSeries.mul!(tmp2983, tmp2981, tmp2982, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp2978, tmp2983, ord)
        TaylorSeries.sincos!(tmp4051, tmp2985, θ_m, ord)
        TaylorSeries.subst!(tmp2986, tmp2985, ord)
        TaylorSeries.sincos!(tmp4052, tmp2987, ψ_m, ord)
        TaylorSeries.mul!(tmp2988, tmp2986, tmp2987, ord)
        TaylorSeries.sincos!(tmp2989, tmp4053, ϕ_m, ord)
        TaylorSeries.mul!(tmp2990, tmp2988, tmp2989, ord)
        TaylorSeries.sincos!(tmp4054, tmp2991, ϕ_m, ord)
        TaylorSeries.sincos!(tmp2992, tmp4055, ψ_m, ord)
        TaylorSeries.mul!(tmp2993, tmp2991, tmp2992, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp2990, tmp2993, ord)
        TaylorSeries.sincos!(tmp2995, tmp4056, θ_m, ord)
        TaylorSeries.sincos!(tmp2996, tmp4057, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp2995, tmp2996, ord)
        TaylorSeries.sincos!(tmp4058, tmp2998, ψ_m, ord)
        TaylorSeries.sincos!(tmp2999, tmp4059, ϕ_m, ord)
        TaylorSeries.mul!(tmp3000, tmp2998, tmp2999, ord)
        TaylorSeries.sincos!(tmp4060, tmp3001, θ_m, ord)
        TaylorSeries.sincos!(tmp4061, tmp3002, ϕ_m, ord)
        TaylorSeries.mul!(tmp3003, tmp3001, tmp3002, ord)
        TaylorSeries.sincos!(tmp3004, tmp4062, ψ_m, ord)
        TaylorSeries.mul!(tmp3005, tmp3003, tmp3004, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp3000, tmp3005, ord)
        TaylorSeries.sincos!(tmp4063, tmp3007, θ_m, ord)
        TaylorSeries.sincos!(tmp4064, tmp3008, ϕ_m, ord)
        TaylorSeries.mul!(tmp3009, tmp3007, tmp3008, ord)
        TaylorSeries.sincos!(tmp4065, tmp3010, ψ_m, ord)
        TaylorSeries.mul!(tmp3011, tmp3009, tmp3010, ord)
        TaylorSeries.sincos!(tmp3012, tmp4066, ϕ_m, ord)
        TaylorSeries.sincos!(tmp3013, tmp4067, ψ_m, ord)
        TaylorSeries.mul!(tmp3014, tmp3012, tmp3013, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp3011, tmp3014, ord)
        TaylorSeries.sincos!(tmp4068, tmp3016, ϕ_m, ord)
        TaylorSeries.subst!(tmp3017, tmp3016, ord)
        TaylorSeries.sincos!(tmp3018, tmp4069, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp3017, tmp3018, ord)
        TaylorSeries.sincos!(tmp3020, tmp4070, θ_m, ord)
        TaylorSeries.sincos!(tmp3021, tmp4071, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp3020, tmp3021, ord)
        TaylorSeries.sincos!(tmp4072, tmp3023, ψ_m, ord)
        TaylorSeries.sincos!(tmp3024, tmp4073, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp3023, tmp3024, ord)
        TaylorSeries.sincos!(tmp4074, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp4075, tmp3027, ϕ_c, ord)
        TaylorSeries.mul!(tmp3028, RotM[1, 1, mo], tmp3027, ord)
        TaylorSeries.sincos!(tmp3029, tmp4076, ϕ_c, ord)
        TaylorSeries.mul!(tmp3030, RotM[1, 2, mo], tmp3029, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp3028, tmp3030, ord)
        TaylorSeries.subst!(tmp3032, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp3033, tmp4077, ϕ_c, ord)
        TaylorSeries.mul!(tmp3034, tmp3032, tmp3033, ord)
        TaylorSeries.sincos!(tmp4078, tmp3035, ϕ_c, ord)
        TaylorSeries.mul!(tmp3036, RotM[1, 2, mo], tmp3035, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp3034, tmp3036, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp4079, tmp3038, ϕ_c, ord)
        TaylorSeries.mul!(tmp3039, RotM[2, 1, mo], tmp3038, ord)
        TaylorSeries.sincos!(tmp3040, tmp4080, ϕ_c, ord)
        TaylorSeries.mul!(tmp3041, RotM[2, 2, mo], tmp3040, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp3039, tmp3041, ord)
        TaylorSeries.subst!(tmp3043, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp3044, tmp4081, ϕ_c, ord)
        TaylorSeries.mul!(tmp3045, tmp3043, tmp3044, ord)
        TaylorSeries.sincos!(tmp4082, tmp3046, ϕ_c, ord)
        TaylorSeries.mul!(tmp3047, RotM[2, 2, mo], tmp3046, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp3045, tmp3047, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp4083, tmp3049, ϕ_c, ord)
        TaylorSeries.mul!(tmp3050, RotM[3, 1, mo], tmp3049, ord)
        TaylorSeries.sincos!(tmp3051, tmp4084, ϕ_c, ord)
        TaylorSeries.mul!(tmp3052, RotM[3, 2, mo], tmp3051, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp3050, tmp3052, ord)
        TaylorSeries.subst!(tmp3054, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp3055, tmp4085, ϕ_c, ord)
        TaylorSeries.mul!(tmp3056, tmp3054, tmp3055, ord)
        TaylorSeries.sincos!(tmp4086, tmp3057, ϕ_c, ord)
        TaylorSeries.mul!(tmp3058, RotM[3, 2, mo], tmp3057, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp3056, tmp3058, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp3060, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp3061, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp3062, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp3063, tmp3061, tmp3062, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp3060, tmp3063, ord)
        TaylorSeries.mul!(tmp3065, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp3066, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp3067, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp3068, tmp3066, tmp3067, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp3065, tmp3068, ord)
        TaylorSeries.mul!(tmp3070, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp3071, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp3072, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp3073, tmp3071, tmp3072, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp3070, tmp3073, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        for j = 1:N
            TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
            TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
            TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
            TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
        end
        for j = 1:N_ext
            TaylorSeries.identity!(accX[j], zero_q_1, ord)
            TaylorSeries.identity!(accY[j], zero_q_1, ord)
            TaylorSeries.identity!(accZ[j], zero_q_1, ord)
        end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1286 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                        TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                        TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                        TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.mul!(tmp3082[3j - 2], 4, dq[3j - 2], ord)
                        TaylorSeries.mul!(tmp3084[3i - 2], 3, dq[3i - 2], ord)
                        TaylorSeries.subst!(_4U_m_3X[i, j], tmp3082[3j - 2], tmp3084[3i - 2], ord)
                        TaylorSeries.mul!(tmp3087[3j - 1], 4, dq[3j - 1], ord)
                        TaylorSeries.mul!(tmp3089[3i - 1], 3, dq[3i - 1], ord)
                        TaylorSeries.subst!(_4V_m_3Y[i, j], tmp3087[3j - 1], tmp3089[3i - 1], ord)
                        TaylorSeries.mul!(tmp3092[3j], 4, dq[3j], ord)
                        TaylorSeries.mul!(tmp3094[3i], 3, dq[3i], ord)
                        TaylorSeries.subst!(_4W_m_3Z[i, j], tmp3092[3j], tmp3094[3i], ord)
                        TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                        TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                        TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                        TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.add!(tmp3102[i, j], UU[i, j], VV[i, j], ord)
                        TaylorSeries.add!(vi_dot_vj[i, j], tmp3102[i, j], WW[i, j], ord)
                        TaylorSeries.pow!(tmp3105[i, j], X[i, j], tmp4087[i, j], 2, ord)
                        TaylorSeries.pow!(tmp3107[i, j], Y[i, j], tmp4088[i, j], 2, ord)
                        TaylorSeries.add!(tmp3108[i, j], tmp3105[i, j], tmp3107[i, j], ord)
                        TaylorSeries.pow!(tmp3110[i, j], Z[i, j], tmp4089[i, j], 2, ord)
                        TaylorSeries.add!(r_p2[i, j], tmp3108[i, j], tmp3110[i, j], ord)
                        TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                        TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], tmp4090[i, j], 1.5, ord)
                        TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], tmp4091[i, j], 3.5, ord)
                        TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                        TaylorSeries.add!(tmp3118[i, j], pn2x[i, j], pn2y[i, j], ord)
                        TaylorSeries.add!(tmp3119[i, j], tmp3118[i, j], pn2z[i, j], ord)
                        TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp3119[i, j], ord)
                        TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                        TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                        TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                        TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                        TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                        TaylorSeries.mul!(tmp3130[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp3130[i, j], ord)
                        TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                        TaylorSeries.mul!(tmp3132[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp3132[i, j], ord)
                        TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                        TaylorSeries.mul!(tmp3134[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp3134[i, j], ord)
                        TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                        TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                        TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                    end
                end
                TaylorSeries.pow!(tmp3138[3j - 2], dq[3j - 2], tmp4092[3j - 2], 2, ord)
                TaylorSeries.pow!(tmp3140[3j - 1], dq[3j - 1], tmp4093[3j - 1], 2, ord)
                TaylorSeries.add!(tmp3141[3j - 2], tmp3138[3j - 2], tmp3140[3j - 1], ord)
                TaylorSeries.pow!(tmp3143[3j], dq[3j], tmp4094[3j], 2, ord)
                TaylorSeries.add!(v2[j], tmp3141[3j - 2], tmp3143[3j], ord)
            end
        TaylorSeries.add!(tmp3145, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp3147, tmp3145, 2, ord)
        TaylorSeries.subst!(tmp3148, I_M_t[3, 3], tmp3147, ord)
        TaylorSeries.div!(J2M_t, tmp3148, μ[mo], ord)
        TaylorSeries.subst!(tmp3150, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp3151, tmp3150, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp3151, 4, ord)
        TaylorSeries.subst!(tmp3154, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp3154, μ[mo], ord)
        TaylorSeries.subst!(tmp3156, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp3156, μ[mo], ord)
        TaylorSeries.subst!(tmp3158, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp3159, tmp3158, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp3159, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1380 =# Threads.@threads for j = 1:N_ext
                for i = 1:N_ext
                    if i == j
                        continue
                    else
                        if UJ_interaction[i, j]
                            TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                            TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                            TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                            TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                            TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                            TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                            TaylorSeries.add!(tmp3171[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                            TaylorSeries.add!(X_bf[i, j], tmp3171[i, j], X_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp3173[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                            TaylorSeries.add!(Y_bf[i, j], tmp3173[i, j], Y_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp3175[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                            TaylorSeries.add!(Z_bf[i, j], tmp3175[i, j], Z_bf_3[i, j], ord)
                            TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.pow!(tmp3179[i, j], X_bf[i, j], tmp4095[i, j], 2, ord)
                            TaylorSeries.pow!(tmp3181[i, j], Y_bf[i, j], tmp4096[i, j], 2, ord)
                            TaylorSeries.add!(tmp3182[i, j], tmp3179[i, j], tmp3181[i, j], ord)
                            TaylorSeries.sqrt!(r_xy[i, j], tmp3182[i, j], ord)
                            TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                            TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                            TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                            for n = 2:n1SEM[j]
                                TaylorSeries.mul!(tmp3187[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3188[i, j, n], tmp3187[i, j, n], fact1_jsem[n], ord)
                                TaylorSeries.mul!(tmp3189[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                                TaylorSeries.subst!(P_n[i, j, n + 1], tmp3188[i, j, n], tmp3189[i, j, n - 1], ord)
                                TaylorSeries.mul!(tmp3191[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3192[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                                TaylorSeries.add!(dP_n[i, j, n + 1], tmp3191[i, j, n], tmp3192[i, j, n], ord)
                                TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], tmp4097[i, j], fact5_jsem[n], ord)
                            end
                            TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], tmp4098[i, j], 2, ord)
                            TaylorSeries.mul!(tmp3197[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                            TaylorSeries.mul!(tmp3198[i, j, 3], tmp3197[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ξ[i, j], tmp3198[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.subst!(tmp3200[i, j, 3], dP_n[i, j, 3], ord)
                            TaylorSeries.mul!(tmp3201[i, j, 3], tmp3200[i, j, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp3202[i, j, 3], tmp3201[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ζ[i, j], tmp3202[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n1SEM[j]
                                TaylorSeries.mul!(tmp3204[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                                TaylorSeries.mul!(tmp3205[i, j, n + 1], tmp3204[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp3206[i, j, n + 1], tmp3205[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjξ[i, j, n], tmp3206[i, j, n + 1], F_J_ξ_36[i, j], ord)
                                TaylorSeries.subst!(tmp3208[i, j, n + 1], dP_n[i, j, n + 1], ord)
                                TaylorSeries.mul!(tmp3209[i, j, n + 1], tmp3208[i, j, n + 1], cos_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3210[i, j, n + 1], tmp3209[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp3211[i, j, n + 1], tmp3210[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjζ[i, j, n], tmp3211[i, j, n + 1], F_J_ζ_36[i, j], ord)
                                TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                                TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                            end
                            if j == mo
                                for m = 1:n1SEM[mo]
                                    if m == 1
                                        TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                        TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                        TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                        TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                    else
                                        TaylorSeries.mul!(tmp3214[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp3215[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.add!(sin_mλ[i, j, m], tmp3214[i, j, m - 1], tmp3215[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp3217[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp3218[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.subst!(cos_mλ[i, j, m], tmp3217[i, j, m - 1], tmp3218[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp3220[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp3220[i, j, m - 1, m - 1], lnm5[m], ord)
                                        TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3223[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp3223[i, j, m, m], lnm3[m], ord)
                                    end
                                    for n = m + 1:n1SEM[mo]
                                        if n == m + 1
                                            TaylorSeries.mul!(tmp3225[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp3225[i, j, n - 1, m], lnm1[n, m], ord)
                                        else
                                            TaylorSeries.mul!(tmp3227[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(tmp3228[i, j, n - 1, m], tmp3227[i, j, n - 1, m], lnm1[n, m], ord)
                                            TaylorSeries.mul!(tmp3229[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                            TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp3228[i, j, n - 1, m], tmp3229[i, j, n - 2, m], ord)
                                        end
                                        TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3232[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3233[i, j, n, m], tmp3232[i, j, n, m], lnm3[n], ord)
                                        TaylorSeries.mul!(tmp3234[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                        TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp3233[i, j, n, m], tmp3234[i, j, n - 1, m], ord)
                                    end
                                end
                                TaylorSeries.mul!(tmp3236[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                                TaylorSeries.mul!(tmp3237[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3238[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp3239[i, j, 1], tmp3237[i, j, 1], tmp3238[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3240[i, j, 2, 1], tmp3236[i, j, 2, 1], tmp3239[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3241[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                                TaylorSeries.mul!(tmp3242[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3243[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp3244[i, j, 2], tmp3242[i, j, 2], tmp3243[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3245[i, j, 2, 2], tmp3241[i, j, 2, 2], tmp3244[i, j, 2], ord)
                                TaylorSeries.add!(tmp3246[i, j, 2, 1], tmp3240[i, j, 2, 1], tmp3245[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ξ[i, j], tmp3246[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp3248[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                                TaylorSeries.mul!(tmp3249[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3250[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.subst!(tmp3251[i, j, 1], tmp3249[i, j, 1], tmp3250[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3252[i, j, 2, 1], tmp3248[i, j, 2, 1], tmp3251[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3253[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                                TaylorSeries.mul!(tmp3254[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3255[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.subst!(tmp3256[i, j, 2], tmp3254[i, j, 2], tmp3255[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3257[i, j, 2, 2], tmp3253[i, j, 2, 2], tmp3256[i, j, 2], ord)
                                TaylorSeries.add!(tmp3258[i, j, 2, 1], tmp3252[i, j, 2, 1], tmp3257[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_η[i, j], tmp3258[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp3260[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3261[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp3262[i, j, 1], tmp3260[i, j, 1], tmp3261[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3263[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp3262[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3264[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3265[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp3266[i, j, 2], tmp3264[i, j, 2], tmp3265[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3267[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp3266[i, j, 2], ord)
                                TaylorSeries.add!(tmp3268[i, j, 2, 1], tmp3263[i, j, 2, 1], tmp3267[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ζ[i, j], tmp3268[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                                for n = 3:n2M
                                    for m = 1:n
                                        TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(tmp3274[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                        TaylorSeries.add!(tmp3275[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3276[i, j, n, m], tmp3274[i, j, n, m], tmp3275[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3277[i, j, n, m], tmp3276[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp3277[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                        TaylorSeries.mul!(tmp3279[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                        TaylorSeries.subst!(tmp3280[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3281[i, j, n, m], tmp3279[i, j, n, m], tmp3280[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3282[i, j, n, m], tmp3281[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp3282[i, j, n, m], F_CS_η_36[i, j], ord)
                                        TaylorSeries.add!(tmp3284[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3285[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp3284[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3286[i, j, n, m], tmp3285[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp3286[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                        TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                    end
                                end
                                TaylorSeries.add!(tmp3288[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.add!(tmp3289[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ξ[i, j], tmp3288[i, j], tmp3289[i, j], ord)
                                TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                                TaylorSeries.add!(tmp3292[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                                TaylorSeries.add!(tmp3293[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], tmp3292[i, j], tmp3293[i, j], ord)
                            else
                                TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            end
                            TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                            TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                            TaylorSeries.subst!(tmp3299[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp3299[i, j], cos_λ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                            TaylorSeries.subst!(tmp3302[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp3302[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                            TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp3304[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3305[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3306[i, j, 1, 1], tmp3304[i, j, 1, 1], tmp3305[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3307[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp3306[i, j, 1, 1], tmp3307[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3309[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3310[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3311[i, j, 2, 1], tmp3309[i, j, 2, 1], tmp3310[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3312[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp3311[i, j, 2, 1], tmp3312[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3314[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3315[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3316[i, j, 3, 1], tmp3314[i, j, 3, 1], tmp3315[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3317[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp3316[i, j, 3, 1], tmp3317[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3319[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3320[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3321[i, j, 1, 1], tmp3319[i, j, 1, 1], tmp3320[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3322[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp3321[i, j, 1, 1], tmp3322[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3324[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3325[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3326[i, j, 2, 1], tmp3324[i, j, 2, 1], tmp3325[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3327[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp3326[i, j, 2, 1], tmp3327[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3329[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3330[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3331[i, j, 3, 1], tmp3329[i, j, 3, 1], tmp3330[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3332[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp3331[i, j, 3, 1], tmp3332[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3334[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3335[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3336[i, j, 1, 1], tmp3334[i, j, 1, 1], tmp3335[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3337[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp3336[i, j, 1, 1], tmp3337[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3339[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3340[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3341[i, j, 2, 1], tmp3339[i, j, 2, 1], tmp3340[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3342[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp3341[i, j, 2, 1], tmp3342[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3344[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3345[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3346[i, j, 3, 1], tmp3344[i, j, 3, 1], tmp3345[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3347[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp3346[i, j, 3, 1], tmp3347[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3349[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                            TaylorSeries.mul!(tmp3350[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                            TaylorSeries.add!(tmp3351[i, j, 1, 1], tmp3349[i, j, 1, 1], tmp3350[i, j, 2, 1], ord)
                            TaylorSeries.mul!(tmp3352[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                            TaylorSeries.add!(F_JCS_x[i, j], tmp3351[i, j, 1, 1], tmp3352[i, j, 3, 1], ord)
                            TaylorSeries.mul!(tmp3354[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3355[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                            TaylorSeries.add!(tmp3356[i, j, 1, 2], tmp3354[i, j, 1, 2], tmp3355[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3357[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                            TaylorSeries.add!(F_JCS_y[i, j], tmp3356[i, j, 1, 2], tmp3357[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3359[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3360[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                            TaylorSeries.add!(tmp3361[i, j, 1, 3], tmp3359[i, j, 1, 3], tmp3360[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3362[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                            TaylorSeries.add!(F_JCS_z[i, j], tmp3361[i, j, 1, 3], tmp3362[i, j, 3, 3], ord)
                        end
                    end
                end
            end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp3364[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp3364[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp3366[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp3366[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp3368[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp3368[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp3370[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp3370[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp3372[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp3372[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp3374[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp3374[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp3376[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp3377[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp3378[i, j], tmp3376[i, j], tmp3377[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp3378[i, j], ord)
                            TaylorSeries.mul!(tmp3380[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp3381[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp3382[i, j], tmp3380[i, j], tmp3381[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp3382[i, j], ord)
                            TaylorSeries.mul!(tmp3384[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp3385[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp3386[i, j], tmp3384[i, j], tmp3385[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp3386[i, j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], N_MfigM_pmA_x[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], N_MfigM_pmA_y[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], N_MfigM_pmA_z[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1619 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                        TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                        TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                        TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                        TaylorSeries.mul!(tmp3398[i, j], 4, vi_dot_vj[i, j], ord)
                        TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp3398[i, j], ord)
                        TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                        TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                        TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                        TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                        TaylorSeries.add!(tmp3404[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                        TaylorSeries.add!(Rij_dot_Vi[i, j], tmp3404[i, j], Zij_t_Wi[i, j], ord)
                        TaylorSeries.pow!(tmp3407[i, j], Rij_dot_Vi[i, j], tmp4099[i, j], 2, ord)
                        TaylorSeries.div!(rij_dot_vi_div_rij_sq[i, j], tmp3407[i, j], r_p2[i, j], ord)
                        TaylorSeries.mul!(tmp3410[i, j], 1.5, rij_dot_vi_div_rij_sq[i, j], ord)
                        TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp3410[i, j], ord)
                        TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                    end
                end
                TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1658 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                        TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                        TaylorSeries.add!(tmp3417[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                        TaylorSeries.add!(tmp3418[i, j], tmp3417[i, j], pNZ_t_Z[i, j], ord)
                        TaylorSeries.mul!(tmp3419[i, j], 0.5, tmp3418[i, j], ord)
                        TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp3419[i, j], ord)
                        TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                        TaylorSeries.add!(tmp3427[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp3427[i, j], ord)
                        TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                        TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                        TaylorSeries.add!(tmp3430[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp3430[i, j], ord)
                        TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                        TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                        TaylorSeries.add!(tmp3433[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp3433[i, j], ord)
                        TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                        TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                    end
                end
                TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
            end
        TaylorSeries.identity!(x0s_M, r_star_M_0[1], ord)
        TaylorSeries.identity!(y0s_M, r_star_M_0[2], ord)
        TaylorSeries.identity!(z0s_M, r_star_M_0[3], ord)
        TaylorSeries.pow!(tmp3440, x0s_M, tmp4100, 2, ord)
        TaylorSeries.pow!(tmp3442, y0s_M, tmp4101, 2, ord)
        TaylorSeries.add!(ρ0s2_M, tmp3440, tmp3442, ord)
        TaylorSeries.sqrt!(ρ0s_M, ρ0s2_M, ord)
        TaylorSeries.pow!(z0s2_M, z0s_M, tmp4102, 2, ord)
        TaylorSeries.add!(r0s2_M, ρ0s2_M, z0s2_M, ord)
        TaylorSeries.sqrt!(r0s_M, r0s2_M, ord)
        TaylorSeries.pow!(r0s5_M, r0s_M, tmp4103, 5, ord)
        TaylorSeries.identity!(x0s_S, r_star_S_0[1], ord)
        TaylorSeries.identity!(y0s_S, r_star_S_0[2], ord)
        TaylorSeries.identity!(z0s_S, r_star_S_0[3], ord)
        TaylorSeries.pow!(tmp3452, x0s_S, tmp4104, 2, ord)
        TaylorSeries.pow!(tmp3454, y0s_S, tmp4105, 2, ord)
        TaylorSeries.add!(ρ0s2_S, tmp3452, tmp3454, ord)
        TaylorSeries.sqrt!(ρ0s_S, ρ0s2_S, ord)
        TaylorSeries.pow!(z0s2_S, z0s_S, tmp4106, 2, ord)
        TaylorSeries.add!(r0s2_S, ρ0s2_S, z0s2_S, ord)
        TaylorSeries.sqrt!(r0s_S, r0s2_S, ord)
        TaylorSeries.pow!(r0s5_S, r0s_S, tmp4107, 5, ord)
        TaylorSeries.mul!(tmp3464, Z_bf[mo, ea], r_star_M_0[3], ord)
        TaylorSeries.pow!(tmp3466, tmp3464, tmp4108, 2, ord)
        TaylorSeries.mul!(tmp3468, r_xy[mo, ea], ρ0s_M, ord)
        TaylorSeries.pow!(tmp3470, tmp3468, tmp4109, 2, ord)
        TaylorSeries.mul!(tmp3471, 0.5, tmp3470, ord)
        TaylorSeries.add!(tmp3472, tmp3466, tmp3471, ord)
        TaylorSeries.div!(tmp3473, tmp3472, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp3474, 5, tmp3473, ord)
        TaylorSeries.subst!(coeff0_M, r0s2_M, tmp3474, ord)
        TaylorSeries.mul!(tmp3477, Z_bf[mo, ea], r_star_S_0[3], ord)
        TaylorSeries.pow!(tmp3479, tmp3477, tmp4110, 2, ord)
        TaylorSeries.mul!(tmp3481, r_xy[mo, ea], ρ0s_S, ord)
        TaylorSeries.pow!(tmp3483, tmp3481, tmp4111, 2, ord)
        TaylorSeries.mul!(tmp3484, 0.5, tmp3483, ord)
        TaylorSeries.add!(tmp3485, tmp3479, tmp3484, ord)
        TaylorSeries.div!(tmp3486, tmp3485, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp3487, 5, tmp3486, ord)
        TaylorSeries.subst!(coeff0_S, r0s2_S, tmp3487, ord)
        TaylorSeries.div!(k_20E_div_r0s5_M, k_20E, r0s5_M, ord)
        TaylorSeries.div!(k_20E_div_r0s5_S, k_20E, r0s5_S, ord)
        TaylorSeries.add!(tmp3491, ρ0s2_M, coeff0_M, ord)
        TaylorSeries.mul!(tmp3492, k_20E_div_r0s5_M, tmp3491, ord)
        TaylorSeries.mul!(a_tid_0_M_x, tmp3492, X_bf[mo, ea], ord)
        TaylorSeries.add!(tmp3494, ρ0s2_M, coeff0_M, ord)
        TaylorSeries.mul!(tmp3495, k_20E_div_r0s5_M, tmp3494, ord)
        TaylorSeries.mul!(a_tid_0_M_y, tmp3495, Y_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp3498, 2, z0s2_M, ord)
        TaylorSeries.add!(tmp3499, tmp3498, coeff0_M, ord)
        TaylorSeries.mul!(tmp3500, k_20E_div_r0s5_M, tmp3499, ord)
        TaylorSeries.mul!(a_tid_0_M_z, tmp3500, Z_bf[mo, ea], ord)
        TaylorSeries.add!(tmp3502, ρ0s2_S, coeff0_S, ord)
        TaylorSeries.mul!(tmp3503, k_20E_div_r0s5_S, tmp3502, ord)
        TaylorSeries.mul!(a_tid_0_S_x, tmp3503, X_bf[mo, ea], ord)
        TaylorSeries.add!(tmp3505, ρ0s2_S, coeff0_S, ord)
        TaylorSeries.mul!(tmp3506, k_20E_div_r0s5_S, tmp3505, ord)
        TaylorSeries.mul!(a_tid_0_S_y, tmp3506, Y_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp3509, 2, z0s2_S, ord)
        TaylorSeries.add!(tmp3510, tmp3509, coeff0_S, ord)
        TaylorSeries.mul!(tmp3511, k_20E_div_r0s5_S, tmp3510, ord)
        TaylorSeries.mul!(a_tid_0_S_z, tmp3511, Z_bf[mo, ea], ord)
        TaylorSeries.identity!(x1s_M, r_star_M_1[1], ord)
        TaylorSeries.identity!(y1s_M, r_star_M_1[2], ord)
        TaylorSeries.identity!(z1s_M, r_star_M_1[3], ord)
        TaylorSeries.pow!(tmp3514, x1s_M, tmp4112, 2, ord)
        TaylorSeries.pow!(tmp3516, y1s_M, tmp4113, 2, ord)
        TaylorSeries.add!(ρ1s2_M, tmp3514, tmp3516, ord)
        TaylorSeries.sqrt!(ρ1s_M, ρ1s2_M, ord)
        TaylorSeries.pow!(z1s2_M, z1s_M, tmp4114, 2, ord)
        TaylorSeries.add!(r1s2_M, ρ1s2_M, z1s2_M, ord)
        TaylorSeries.sqrt!(r1s_M, r1s2_M, ord)
        TaylorSeries.pow!(r1s5_M, r1s_M, tmp4115, 5, ord)
        TaylorSeries.identity!(x1s_S, r_star_S_1[1], ord)
        TaylorSeries.identity!(y1s_S, r_star_S_1[2], ord)
        TaylorSeries.identity!(z1s_S, r_star_S_1[3], ord)
        TaylorSeries.pow!(tmp3526, x1s_S, tmp4116, 2, ord)
        TaylorSeries.pow!(tmp3528, y1s_S, tmp4117, 2, ord)
        TaylorSeries.add!(ρ1s2_S, tmp3526, tmp3528, ord)
        TaylorSeries.sqrt!(ρ1s_S, ρ1s2_S, ord)
        TaylorSeries.pow!(z1s2_S, z1s_S, tmp4118, 2, ord)
        TaylorSeries.add!(r1s2_S, ρ1s2_S, z1s2_S, ord)
        TaylorSeries.sqrt!(r1s_S, r1s2_S, ord)
        TaylorSeries.pow!(r1s5_S, r1s_S, tmp4119, 5, ord)
        TaylorSeries.mul!(tmp3537, X_bf[mo, ea], r_star_M_1[1], ord)
        TaylorSeries.mul!(tmp3538, Y_bf[mo, ea], r_star_M_1[2], ord)
        TaylorSeries.add!(coeff1_1_M, tmp3537, tmp3538, ord)
        TaylorSeries.mul!(tmp3540, X_bf[mo, ea], r_star_S_1[1], ord)
        TaylorSeries.mul!(tmp3541, Y_bf[mo, ea], r_star_S_1[2], ord)
        TaylorSeries.add!(coeff1_1_S, tmp3540, tmp3541, ord)
        TaylorSeries.mul!(coeff2_1_M, Z_bf[mo, ea], r_star_M_1[3], ord)
        TaylorSeries.mul!(coeff2_1_S, Z_bf[mo, ea], r_star_S_1[3], ord)
        TaylorSeries.mul!(tmp3546, 10, coeff1_1_M, ord)
        TaylorSeries.mul!(tmp3547, tmp3546, coeff2_1_M, ord)
        TaylorSeries.div!(coeff3_1_M, tmp3547, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp3550, 10, coeff1_1_S, ord)
        TaylorSeries.mul!(tmp3551, tmp3550, coeff2_1_S, ord)
        TaylorSeries.div!(coeff3_1_S, tmp3551, r_p2[mo, ea], ord)
        TaylorSeries.div!(k_21E_div_r1s5_M, k_21E, r1s5_M, ord)
        TaylorSeries.div!(k_21E_div_r1s5_S, k_21E, r1s5_S, ord)
        TaylorSeries.mul!(tmp3556, 2, coeff2_1_M, ord)
        TaylorSeries.mul!(tmp3557, tmp3556, r_star_M_1[1], ord)
        TaylorSeries.mul!(tmp3558, coeff3_1_M, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3559, tmp3557, tmp3558, ord)
        TaylorSeries.mul!(a_tid_1_M_x, k_21E_div_r1s5_M, tmp3559, ord)
        TaylorSeries.mul!(tmp3562, 2, coeff2_1_M, ord)
        TaylorSeries.mul!(tmp3563, tmp3562, r_star_M_1[2], ord)
        TaylorSeries.mul!(tmp3564, coeff3_1_M, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3565, tmp3563, tmp3564, ord)
        TaylorSeries.mul!(a_tid_1_M_y, k_21E_div_r1s5_M, tmp3565, ord)
        TaylorSeries.mul!(tmp3568, 2, coeff1_1_M, ord)
        TaylorSeries.mul!(tmp3569, tmp3568, r_star_M_1[3], ord)
        TaylorSeries.mul!(tmp3570, coeff3_1_M, Z_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3571, tmp3569, tmp3570, ord)
        TaylorSeries.mul!(a_tid_1_M_z, k_21E_div_r1s5_M, tmp3571, ord)
        TaylorSeries.mul!(tmp3574, 2, coeff2_1_S, ord)
        TaylorSeries.mul!(tmp3575, tmp3574, r_star_S_1[1], ord)
        TaylorSeries.mul!(tmp3576, coeff3_1_S, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3577, tmp3575, tmp3576, ord)
        TaylorSeries.mul!(a_tid_1_S_x, k_21E_div_r1s5_S, tmp3577, ord)
        TaylorSeries.mul!(tmp3580, 2, coeff2_1_S, ord)
        TaylorSeries.mul!(tmp3581, tmp3580, r_star_S_1[2], ord)
        TaylorSeries.mul!(tmp3582, coeff3_1_S, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3583, tmp3581, tmp3582, ord)
        TaylorSeries.mul!(a_tid_1_S_y, k_21E_div_r1s5_S, tmp3583, ord)
        TaylorSeries.mul!(tmp3586, 2, coeff1_1_S, ord)
        TaylorSeries.mul!(tmp3587, tmp3586, r_star_S_1[3], ord)
        TaylorSeries.mul!(tmp3588, coeff3_1_S, Z_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3589, tmp3587, tmp3588, ord)
        TaylorSeries.mul!(a_tid_1_S_z, k_21E_div_r1s5_S, tmp3589, ord)
        TaylorSeries.identity!(x2s_M, r_star_M_2[1], ord)
        TaylorSeries.identity!(y2s_M, r_star_M_2[2], ord)
        TaylorSeries.identity!(z2s_M, r_star_M_2[3], ord)
        TaylorSeries.pow!(tmp3592, x2s_M, tmp4120, 2, ord)
        TaylorSeries.pow!(tmp3594, y2s_M, tmp4121, 2, ord)
        TaylorSeries.add!(ρ2s2_M, tmp3592, tmp3594, ord)
        TaylorSeries.sqrt!(ρ2s_M, ρ2s2_M, ord)
        TaylorSeries.pow!(z2s2_M, z2s_M, tmp4122, 2, ord)
        TaylorSeries.add!(r2s2_M, ρ2s2_M, z2s2_M, ord)
        TaylorSeries.sqrt!(r2s_M, r2s2_M, ord)
        TaylorSeries.pow!(r2s5_M, r2s_M, tmp4123, 5, ord)
        TaylorSeries.identity!(x2s_S, r_star_S_2[1], ord)
        TaylorSeries.identity!(y2s_S, r_star_S_2[2], ord)
        TaylorSeries.identity!(z2s_S, r_star_S_2[3], ord)
        TaylorSeries.pow!(tmp3604, x2s_S, tmp4124, 2, ord)
        TaylorSeries.pow!(tmp3606, y2s_S, tmp4125, 2, ord)
        TaylorSeries.add!(ρ2s2_S, tmp3604, tmp3606, ord)
        TaylorSeries.sqrt!(ρ2s_S, ρ2s2_S, ord)
        TaylorSeries.pow!(z2s2_S, z2s_S, tmp4126, 2, ord)
        TaylorSeries.add!(r2s2_S, ρ2s2_S, z2s2_S, ord)
        TaylorSeries.sqrt!(r2s_S, r2s2_S, ord)
        TaylorSeries.pow!(r2s5_S, r2s_S, tmp4127, 5, ord)
        TaylorSeries.mul!(tmp3615, X_bf[mo, ea], r_star_M_2[1], ord)
        TaylorSeries.mul!(tmp3616, Y_bf[mo, ea], r_star_M_2[2], ord)
        TaylorSeries.add!(coeff1_2_M, tmp3615, tmp3616, ord)
        TaylorSeries.mul!(tmp3618, X_bf[mo, ea], r_star_S_2[1], ord)
        TaylorSeries.mul!(tmp3619, Y_bf[mo, ea], r_star_S_2[2], ord)
        TaylorSeries.add!(coeff1_2_S, tmp3618, tmp3619, ord)
        TaylorSeries.pow!(tmp3623, coeff1_2_M, tmp4128, 2, ord)
        TaylorSeries.pow!(tmp3626, r_xy[mo, ea], tmp4129, 2, ord)
        TaylorSeries.mul!(tmp3627, 0.5, tmp3626, ord)
        TaylorSeries.mul!(tmp3628, tmp3627, ρ2s2_M, ord)
        TaylorSeries.subst!(tmp3629, tmp3623, tmp3628, ord)
        TaylorSeries.mul!(tmp3630, 5, tmp3629, ord)
        TaylorSeries.div!(coeff3_2_M, tmp3630, r_p2[mo, ea], ord)
        TaylorSeries.pow!(tmp3634, coeff1_2_S, tmp4130, 2, ord)
        TaylorSeries.pow!(tmp3637, r_xy[mo, ea], tmp4131, 2, ord)
        TaylorSeries.mul!(tmp3638, 0.5, tmp3637, ord)
        TaylorSeries.mul!(tmp3639, tmp3638, ρ2s2_S, ord)
        TaylorSeries.subst!(tmp3640, tmp3634, tmp3639, ord)
        TaylorSeries.mul!(tmp3641, 5, tmp3640, ord)
        TaylorSeries.div!(coeff3_2_S, tmp3641, r_p2[mo, ea], ord)
        TaylorSeries.div!(k_22E_div_r2s5_M, k_22E, r2s5_M, ord)
        TaylorSeries.div!(k_22E_div_r2s5_S, k_22E, r2s5_S, ord)
        TaylorSeries.mul!(tmp3646, 2, coeff1_2_M, ord)
        TaylorSeries.mul!(tmp3647, tmp3646, r_star_M_2[1], ord)
        TaylorSeries.add!(tmp3648, ρ2s2_M, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp3649, tmp3648, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3650, tmp3647, tmp3649, ord)
        TaylorSeries.mul!(a_tid_2_M_x, k_22E_div_r2s5_M, tmp3650, ord)
        TaylorSeries.mul!(tmp3653, 2, coeff1_2_M, ord)
        TaylorSeries.mul!(tmp3654, tmp3653, r_star_M_2[2], ord)
        TaylorSeries.add!(tmp3655, ρ2s2_M, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp3656, tmp3655, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3657, tmp3654, tmp3656, ord)
        TaylorSeries.mul!(a_tid_2_M_y, k_22E_div_r2s5_M, tmp3657, ord)
        TaylorSeries.subst!(tmp3659, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp3660, k_22E_div_r2s5_M, tmp3659, ord)
        TaylorSeries.mul!(a_tid_2_M_z, tmp3660, Z_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp3663, 2, coeff1_2_S, ord)
        TaylorSeries.mul!(tmp3664, tmp3663, r_star_S_2[1], ord)
        TaylorSeries.add!(tmp3665, ρ2s2_S, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp3666, tmp3665, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3667, tmp3664, tmp3666, ord)
        TaylorSeries.mul!(a_tid_2_S_x, k_22E_div_r2s5_S, tmp3667, ord)
        TaylorSeries.mul!(tmp3670, 2, coeff1_2_S, ord)
        TaylorSeries.mul!(tmp3671, tmp3670, r_star_S_2[2], ord)
        TaylorSeries.add!(tmp3672, ρ2s2_S, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp3673, tmp3672, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3674, tmp3671, tmp3673, ord)
        TaylorSeries.mul!(a_tid_2_S_y, k_22E_div_r2s5_S, tmp3674, ord)
        TaylorSeries.subst!(tmp3676, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp3677, k_22E_div_r2s5_S, tmp3676, ord)
        TaylorSeries.mul!(a_tid_2_S_z, tmp3677, Z_bf[mo, ea], ord)
        TaylorSeries.div!(tmp3679, RE_au, r_p1d2[mo, ea], ord)
        TaylorSeries.pow!(RE_div_r_p5, tmp3679, tmp4132, 5, ord)
        TaylorSeries.mul!(aux_tidacc, tid_num_coeff, RE_div_r_p5, ord)
        TaylorSeries.mul!(a_tidal_coeff_M, μ[mo], aux_tidacc, ord)
        TaylorSeries.mul!(a_tidal_coeff_S, μ[su], aux_tidacc, ord)
        TaylorSeries.add!(tmp3685, a_tid_0_M_x, a_tid_1_M_x, ord)
        TaylorSeries.add!(tmp3686, tmp3685, a_tid_2_M_x, ord)
        TaylorSeries.mul!(tmp3687, a_tidal_coeff_M, tmp3686, ord)
        TaylorSeries.add!(tmp3688, a_tid_0_S_x, a_tid_1_S_x, ord)
        TaylorSeries.add!(tmp3689, tmp3688, a_tid_2_S_x, ord)
        TaylorSeries.mul!(tmp3690, a_tidal_coeff_S, tmp3689, ord)
        TaylorSeries.add!(a_tidal_tod_x, tmp3687, tmp3690, ord)
        TaylorSeries.add!(tmp3692, a_tid_0_M_y, a_tid_1_M_y, ord)
        TaylorSeries.add!(tmp3693, tmp3692, a_tid_2_M_y, ord)
        TaylorSeries.mul!(tmp3694, a_tidal_coeff_M, tmp3693, ord)
        TaylorSeries.add!(tmp3695, a_tid_0_S_y, a_tid_1_S_y, ord)
        TaylorSeries.add!(tmp3696, tmp3695, a_tid_2_S_y, ord)
        TaylorSeries.mul!(tmp3697, a_tidal_coeff_S, tmp3696, ord)
        TaylorSeries.add!(a_tidal_tod_y, tmp3694, tmp3697, ord)
        TaylorSeries.add!(tmp3699, a_tid_0_M_z, a_tid_1_M_z, ord)
        TaylorSeries.add!(tmp3700, tmp3699, a_tid_2_M_z, ord)
        TaylorSeries.mul!(tmp3701, a_tidal_coeff_M, tmp3700, ord)
        TaylorSeries.add!(tmp3702, a_tid_0_S_z, a_tid_1_S_z, ord)
        TaylorSeries.add!(tmp3703, tmp3702, a_tid_2_S_z, ord)
        TaylorSeries.mul!(tmp3704, a_tidal_coeff_S, tmp3703, ord)
        TaylorSeries.add!(a_tidal_tod_z, tmp3701, tmp3704, ord)
        TaylorSeries.mul!(tmp3706, RotM[1, 1, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp3707, RotM[2, 1, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp3708, tmp3706, tmp3707, ord)
        TaylorSeries.mul!(tmp3709, RotM[3, 1, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_x, tmp3708, tmp3709, ord)
        TaylorSeries.mul!(tmp3711, RotM[1, 2, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp3712, RotM[2, 2, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp3713, tmp3711, tmp3712, ord)
        TaylorSeries.mul!(tmp3714, RotM[3, 2, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_y, tmp3713, tmp3714, ord)
        TaylorSeries.mul!(tmp3716, RotM[1, 3, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp3717, RotM[2, 3, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp3718, tmp3716, tmp3717, ord)
        TaylorSeries.mul!(tmp3719, RotM[3, 3, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_z, tmp3718, tmp3719, ord)
        TaylorSeries.add!(accX_mo_tides, accX[mo], a_tidal_x, ord)
        TaylorSeries.add!(accY_mo_tides, accY[mo], a_tidal_y, ord)
        TaylorSeries.add!(accZ_mo_tides, accZ[mo], a_tidal_z, ord)
        TaylorSeries.identity!(accX[mo], accX_mo_tides, ord)
        TaylorSeries.identity!(accY[mo], accY_mo_tides, ord)
        TaylorSeries.identity!(accZ[mo], accZ_mo_tides, ord)
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1896 =# Threads.@threads for i = 1:N_ext
                TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
                TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
                TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1901 =# Threads.@threads for i = N_ext + 1:N
                TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
            end
        TaylorSeries.mul!(tmp3727, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3728, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3729, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3730, tmp3728, tmp3729, ord)
        TaylorSeries.add!(Iω_x, tmp3727, tmp3730, ord)
        TaylorSeries.mul!(tmp3732, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3733, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3734, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3735, tmp3733, tmp3734, ord)
        TaylorSeries.add!(Iω_y, tmp3732, tmp3735, ord)
        TaylorSeries.mul!(tmp3737, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3738, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3739, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3740, tmp3738, tmp3739, ord)
        TaylorSeries.add!(Iω_z, tmp3737, tmp3740, ord)
        TaylorSeries.mul!(tmp3742, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp3743, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp3742, tmp3743, ord)
        TaylorSeries.mul!(tmp3745, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp3746, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp3745, tmp3746, ord)
        TaylorSeries.mul!(tmp3748, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp3749, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp3748, tmp3749, ord)
        TaylorSeries.mul!(tmp3751, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3752, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3753, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3754, tmp3752, tmp3753, ord)
        TaylorSeries.add!(dIω_x, tmp3751, tmp3754, ord)
        TaylorSeries.mul!(tmp3756, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3757, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3758, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3759, tmp3757, tmp3758, ord)
        TaylorSeries.add!(dIω_y, tmp3756, tmp3759, ord)
        TaylorSeries.mul!(tmp3761, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3762, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3763, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3764, tmp3762, tmp3763, ord)
        TaylorSeries.add!(dIω_z, tmp3761, tmp3764, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp3769, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3770, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3771, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3772, tmp3770, tmp3771, ord)
        TaylorSeries.add!(er_EM_1, tmp3769, tmp3772, ord)
        TaylorSeries.mul!(tmp3774, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3775, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3776, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3777, tmp3775, tmp3776, ord)
        TaylorSeries.add!(er_EM_2, tmp3774, tmp3777, ord)
        TaylorSeries.mul!(tmp3779, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3780, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3781, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3782, tmp3780, tmp3781, ord)
        TaylorSeries.add!(er_EM_3, tmp3779, tmp3782, ord)
        TaylorSeries.mul!(tmp3784, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3785, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3786, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3787, tmp3785, tmp3786, ord)
        TaylorSeries.add!(p_E_1, tmp3784, tmp3787, ord)
        TaylorSeries.mul!(tmp3789, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3790, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3791, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3792, tmp3790, tmp3791, ord)
        TaylorSeries.add!(p_E_2, tmp3789, tmp3792, ord)
        TaylorSeries.mul!(tmp3794, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3795, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3796, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3797, tmp3795, tmp3796, ord)
        TaylorSeries.add!(p_E_3, tmp3794, tmp3797, ord)
        TaylorSeries.mul!(tmp3799, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3800, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3801, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3802, tmp3800, tmp3801, ord)
        TaylorSeries.add!(I_er_EM_1, tmp3799, tmp3802, ord)
        TaylorSeries.mul!(tmp3804, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3805, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3806, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3807, tmp3805, tmp3806, ord)
        TaylorSeries.add!(I_er_EM_2, tmp3804, tmp3807, ord)
        TaylorSeries.mul!(tmp3809, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3810, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3811, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3812, tmp3810, tmp3811, ord)
        TaylorSeries.add!(I_er_EM_3, tmp3809, tmp3812, ord)
        TaylorSeries.mul!(tmp3814, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3815, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3816, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3817, tmp3815, tmp3816, ord)
        TaylorSeries.add!(I_p_E_1, tmp3814, tmp3817, ord)
        TaylorSeries.mul!(tmp3819, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3820, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3821, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3822, tmp3820, tmp3821, ord)
        TaylorSeries.add!(I_p_E_2, tmp3819, tmp3822, ord)
        TaylorSeries.mul!(tmp3824, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3825, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3826, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3827, tmp3825, tmp3826, ord)
        TaylorSeries.add!(I_p_E_3, tmp3824, tmp3827, ord)
        TaylorSeries.mul!(tmp3829, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3830, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp3829, tmp3830, ord)
        TaylorSeries.mul!(tmp3832, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3833, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp3832, tmp3833, ord)
        TaylorSeries.mul!(tmp3835, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3836, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp3835, tmp3836, ord)
        TaylorSeries.mul!(tmp3838, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp3839, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp3838, tmp3839, ord)
        TaylorSeries.mul!(tmp3841, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp3842, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp3841, tmp3842, ord)
        TaylorSeries.mul!(tmp3844, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp3845, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp3844, tmp3845, ord)
        TaylorSeries.mul!(tmp3847, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3848, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp3847, tmp3848, ord)
        TaylorSeries.mul!(tmp3850, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3851, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp3850, tmp3851, ord)
        TaylorSeries.mul!(tmp3853, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3854, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp3853, tmp3854, ord)
        TaylorSeries.mul!(tmp3856, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp3857, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp3856, tmp3857, ord)
        TaylorSeries.mul!(tmp3859, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp3860, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp3859, tmp3860, ord)
        TaylorSeries.mul!(tmp3862, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp3863, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp3862, tmp3863, ord)
        TaylorSeries.pow!(tmp3867, sin_ϕ[ea, mo], tmp4133, 2, ord)
        TaylorSeries.mul!(tmp3868, 7, tmp3867, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp3868, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp3873, r_p1d2[mo, ea], tmp4134, 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp3873, ord)
        TaylorSeries.mul!(tmp3875, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp3876, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3877, two_sinϕEM, tmp3876, ord)
        TaylorSeries.add!(tmp3878, tmp3875, tmp3877, ord)
        TaylorSeries.mul!(tmp3880, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp3881, tmp3878, tmp3880, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp3881, ord)
        TaylorSeries.mul!(tmp3883, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp3884, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3885, two_sinϕEM, tmp3884, ord)
        TaylorSeries.add!(tmp3886, tmp3883, tmp3885, ord)
        TaylorSeries.mul!(tmp3888, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp3889, tmp3886, tmp3888, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp3889, ord)
        TaylorSeries.mul!(tmp3891, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp3892, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3893, two_sinϕEM, tmp3892, ord)
        TaylorSeries.add!(tmp3894, tmp3891, tmp3893, ord)
        TaylorSeries.mul!(tmp3896, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp3897, tmp3894, tmp3896, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp3897, ord)
        TaylorSeries.mul!(tmp3899, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3900, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3901, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3902, tmp3900, tmp3901, ord)
        TaylorSeries.add!(N_1_LMF, tmp3899, tmp3902, ord)
        TaylorSeries.mul!(tmp3904, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3905, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3906, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3907, tmp3905, tmp3906, ord)
        TaylorSeries.add!(N_2_LMF, tmp3904, tmp3907, ord)
        TaylorSeries.mul!(tmp3909, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3910, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3911, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3912, tmp3910, tmp3911, ord)
        TaylorSeries.add!(N_3_LMF, tmp3909, tmp3912, ord)
        TaylorSeries.subst!(tmp3914, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3915, k_ν, tmp3914, ord)
        TaylorSeries.mul!(tmp3916, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp3917, tmp3916, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp3915, tmp3917, ord)
        TaylorSeries.subst!(tmp3919, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3920, k_ν, tmp3919, ord)
        TaylorSeries.mul!(tmp3921, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp3922, tmp3921, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp3920, tmp3922, ord)
        TaylorSeries.subst!(tmp3924, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp3924, ord)
        TaylorSeries.mul!(tmp3926, μ[mo], N_1_LMF, ord)
        TaylorSeries.add!(tmp3927, N_MfigM_figE_1, tmp3926, ord)
        TaylorSeries.add!(tmp3928, tmp3927, N_cmb_1, ord)
        TaylorSeries.add!(tmp3929, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp3928, tmp3929, ord)
        TaylorSeries.mul!(tmp3931, μ[mo], N_2_LMF, ord)
        TaylorSeries.add!(tmp3932, N_MfigM_figE_2, tmp3931, ord)
        TaylorSeries.add!(tmp3933, tmp3932, N_cmb_2, ord)
        TaylorSeries.add!(tmp3934, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp3933, tmp3934, ord)
        TaylorSeries.mul!(tmp3936, μ[mo], N_3_LMF, ord)
        TaylorSeries.add!(tmp3937, N_MfigM_figE_3, tmp3936, ord)
        TaylorSeries.add!(tmp3938, tmp3937, N_cmb_3, ord)
        TaylorSeries.add!(tmp3939, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp3938, tmp3939, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp3944, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp3945, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp3944, tmp3945, ord)
        TaylorSeries.mul!(tmp3947, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp3948, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp3947, tmp3948, ord)
        TaylorSeries.mul!(tmp3950, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp3951, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp3950, tmp3951, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp3956, tmp4135, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3957, q[6N + 4], tmp3956, ord)
        TaylorSeries.sincos!(tmp4136, tmp3958, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3959, q[6N + 5], tmp3958, ord)
        TaylorSeries.add!(tmp3960, tmp3957, tmp3959, ord)
        TaylorSeries.sincos!(tmp3961, tmp4137, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp3960, tmp3961, ord)
        TaylorSeries.sincos!(tmp4138, tmp3963, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3964, q[6N + 4], tmp3963, ord)
        TaylorSeries.sincos!(tmp3965, tmp4139, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3966, q[6N + 5], tmp3965, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp3964, tmp3966, ord)
        TaylorSeries.sincos!(tmp4140, tmp3968, q[6N + 2], ord)
        TaylorSeries.mul!(tmp3969, dq[6N + 1], tmp3968, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp3969, ord)
        TaylorSeries.mul!(tmp3971, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3972, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3973, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3974, tmp3972, tmp3973, ord)
        TaylorSeries.add!(dq[6N + 4], tmp3971, tmp3974, ord)
        TaylorSeries.mul!(tmp3976, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3977, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3978, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3979, tmp3977, tmp3978, ord)
        TaylorSeries.add!(dq[6N + 5], tmp3976, tmp3979, ord)
        TaylorSeries.mul!(tmp3981, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3982, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3983, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3984, tmp3982, tmp3983, ord)
        TaylorSeries.add!(dq[6N + 6], tmp3981, tmp3984, ord)
        TaylorSeries.sincos!(tmp3986, tmp4141, q[6N + 8], ord)
        TaylorSeries.div!(tmp3987, ω_c_CE_2, tmp3986, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp3987, ord)
        TaylorSeries.sincos!(tmp4142, tmp3989, q[6N + 8], ord)
        TaylorSeries.mul!(tmp3990, dq[6N + 9], tmp3989, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp3990, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.mul!(tmp3995, newtonianCoeff[su, ea], J2_t[su], ord)
        TaylorSeries.pow!(tmp3998, sin_ϕ[su, ea], tmp4143, 2, ord)
        TaylorSeries.mul!(tmp3999, 3, tmp3998, ord)
        TaylorSeries.subst!(tmp4000, one_t, tmp3999, ord)
        TaylorSeries.div!(tmp4002, tmp4000, 2, ord)
        TaylorSeries.mul!(w_LE, tmp3995, tmp4002, ord)
        TaylorSeries.mul!(tmp4005, 0.5, v2[ea], ord)
        TaylorSeries.add!(tmp4006, tmp4005, newtonianNb_Potential[ea], ord)
        TaylorSeries.add!(α_TTmTDB, tmp4006, w_LE, ord)
        TaylorSeries.pow!(v4E, v2[ea], tmp4144, 2, ord)
        TaylorSeries.pow!(ϕ_Earth_Newtonian_sq, newtonianNb_Potential[ea], tmp4145, 2, ord)
        TaylorSeries.div!(tmp4013, ϕ_Earth_Newtonian_sq, 2, ord)
        TaylorSeries.div!(tmp4015, v4E, 8, ord)
        TaylorSeries.subst!(β_TTmTDB, tmp4013, tmp4015, ord)
        for i = 1:N
            if i == ea
                continue
            else
                TaylorSeries.mul!(β_TTmTDB_i_1[i, ea], 4, vi_dot_vj[i, ea], ord)
                TaylorSeries.mul!(tmp4020[ea], 1.5, v2[ea], ord)
                TaylorSeries.mul!(tmp4022[i], 2, v2[i], ord)
                TaylorSeries.add!(tmp4023[ea], tmp4020[ea], tmp4022[i], ord)
                TaylorSeries.subst!(β_TTmTDB_i_2[i], newtonianNb_Potential[i], tmp4023[ea], ord)
                TaylorSeries.mul!(tmp4025[i, ea], dq[3 * (N + i) - 2], X[i, ea], ord)
                TaylorSeries.mul!(tmp4026[i, ea], dq[3 * (N + i) - 1], Y[i, ea], ord)
                TaylorSeries.add!(tmp4027[i, ea], tmp4025[i, ea], tmp4026[i, ea], ord)
                TaylorSeries.mul!(tmp4028[i, ea], dq[3 * (N + i)], Z[i, ea], ord)
                TaylorSeries.add!(tmp4029[i, ea], tmp4027[i, ea], tmp4028[i, ea], ord)
                TaylorSeries.div!(β_TTmTDB_i_3[i, ea], tmp4029[i, ea], 2, ord)
                TaylorSeries.div!(β_TTmTDB_i_4[i, ea], rij_dot_vi_div_rij_sq[i, ea], 2, ord)
                TaylorSeries.add!(tmp4034[i, ea], β_TTmTDB_i_1[i, ea], β_TTmTDB_i_2[i], ord)
                TaylorSeries.add!(tmp4035[i, ea], β_TTmTDB_i_3[i, ea], β_TTmTDB_i_4[i, ea], ord)
                TaylorSeries.add!(β_TTmTDB_i[i, ea], tmp4034[i, ea], tmp4035[i, ea], ord)
                TaylorSeries.mul!(tmp4037[i, ea], newtonian1b_Potential[i, ea], β_TTmTDB_i[i, ea], ord)
                TaylorSeries.add!(temp_β_TTmTDB[i, ea], β_TTmTDB, tmp4037[i, ea], ord)
                TaylorSeries.identity!(β_TTmTDB, temp_β_TTmTDB[i, ea], ord)
            end
        end
        TaylorSeries.mul!(tmp4039, c_m2, α_TTmTDB, ord)
        TaylorSeries.subst!(tmp4040, L_B, tmp4039, ord)
        TaylorSeries.mul!(tmp4041, tmp4040, one_plus_L_B_minus_L_G, ord)
        TaylorSeries.mul!(tmp4042, c_m4, β_TTmTDB, ord)
        TaylorSeries.subst!(tmp4043, tmp4042, L_G, ord)
        TaylorSeries.add!(tmp4044, tmp4041, tmp4043, ord)
        TaylorSeries.mul!(dq[6N + 13], daysec, tmp4044, ord)
        for __idx = eachindex(q)
            TaylorIntegration.solcoeff!(q[__idx], dq[__idx], ordnext)
        end
    end
    return nothing
end