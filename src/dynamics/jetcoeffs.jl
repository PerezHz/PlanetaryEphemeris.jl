### LASCIATE OGNE SPERANZA, VOI CH'INTRATE ###
### ABANDON ALL HOPE, YE WHO ENTER HERE ###

# DO NOT MODIFY THIS FILE BY HAND

# Methods of TaylorIntegration.jetcoeffs! and TaylorIntegration._allocate_jetcoeffs! generated by @taylorize for the functions in
# src/dynamical_model.jl

# To update the functions do the following:
# 1.- Update the corresponding function in src/dynamical_model.jl
# 2.- using TaylorIntegration
# 2.- ex = :(paste here the modified function)
# 3.- x, y = TaylorIntegration._make_parsed_coeffs(ex)
# 4.- Paste x and y in this file

# TaylorIntegration._allocate_jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S_threads!
function TaylorIntegration._allocate_jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp1133 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1867 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1134 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1868 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1135 = Taylor1(constant_term(tmp1133) * constant_term(tmp1134), order)
    tmp1136 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1869 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1137 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1870 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1138 = Taylor1(constant_term(tmp1136) * constant_term(tmp1137), order)
    tmp1139 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1871 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1140 = Taylor1(constant_term(tmp1138) * constant_term(tmp1139), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp1135) - constant_term(tmp1140), order)
    tmp1142 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1872 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1143 = Taylor1(-(constant_term(tmp1142)), order)
    tmp1144 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1873 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1145 = Taylor1(constant_term(tmp1143) * constant_term(tmp1144), order)
    tmp1146 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1874 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1147 = Taylor1(constant_term(tmp1145) * constant_term(tmp1146), order)
    tmp1148 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1875 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1149 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1876 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1150 = Taylor1(constant_term(tmp1148) * constant_term(tmp1149), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp1147) - constant_term(tmp1150), order)
    tmp1152 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1877 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1153 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1878 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp1152) * constant_term(tmp1153), order)
    tmp1155 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1879 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1156 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1880 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1157 = Taylor1(constant_term(tmp1155) * constant_term(tmp1156), order)
    tmp1158 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1881 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1159 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1882 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1160 = Taylor1(constant_term(tmp1158) * constant_term(tmp1159), order)
    tmp1161 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1883 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1162 = Taylor1(constant_term(tmp1160) * constant_term(tmp1161), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp1157) + constant_term(tmp1162), order)
    tmp1164 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1884 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1165 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1885 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1166 = Taylor1(constant_term(tmp1164) * constant_term(tmp1165), order)
    tmp1167 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1886 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1168 = Taylor1(constant_term(tmp1166) * constant_term(tmp1167), order)
    tmp1169 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1887 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1170 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1888 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1171 = Taylor1(constant_term(tmp1169) * constant_term(tmp1170), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp1168) - constant_term(tmp1171), order)
    tmp1173 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1889 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1174 = Taylor1(-(constant_term(tmp1173)), order)
    tmp1175 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1890 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp1174) * constant_term(tmp1175), order)
    tmp1177 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1891 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1178 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1892 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp1177) * constant_term(tmp1178), order)
    tmp1180 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1893 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1181 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1894 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp1180) * constant_term(tmp1181), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp1895 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp1184 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1896 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1185 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp1184), order)
    tmp1186 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1897 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1187 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp1186), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp1185) + constant_term(tmp1187), order)
    tmp1189 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp1190 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1898 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1191 = Taylor1(constant_term(tmp1189) * constant_term(tmp1190), order)
    tmp1192 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1899 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1193 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp1192), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp1191) + constant_term(tmp1193), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp1195 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1900 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1196 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp1195), order)
    tmp1197 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1901 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1198 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp1197), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp1196) + constant_term(tmp1198), order)
    tmp1200 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp1201 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1902 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1202 = Taylor1(constant_term(tmp1200) * constant_term(tmp1201), order)
    tmp1203 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1903 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1204 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp1203), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp1202) + constant_term(tmp1204), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp1206 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1904 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1207 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp1206), order)
    tmp1208 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1905 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1209 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp1208), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp1207) + constant_term(tmp1209), order)
    tmp1211 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp1212 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1906 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1213 = Taylor1(constant_term(tmp1211) * constant_term(tmp1212), order)
    tmp1214 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1907 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1215 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp1214), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp1213) + constant_term(tmp1215), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp1217 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp1218 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp1219 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp1220 = Taylor1(constant_term(tmp1218) + constant_term(tmp1219), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp1217) + constant_term(tmp1220), order)
    tmp1222 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp1223 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp1224 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp1225 = Taylor1(constant_term(tmp1223) + constant_term(tmp1224), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp1222) + constant_term(tmp1225), order)
    tmp1227 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp1228 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp1229 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp1230 = Taylor1(constant_term(tmp1228) + constant_term(tmp1229), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp1227) + constant_term(tmp1230), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:309 =# Threads.@threads for j = 1:N
            newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
            dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
            dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:321 =# Threads.@threads for j = 1:N_ext
            accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp1295 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1295)
        tmp1295[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1297 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1297)
        tmp1297[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1298 = Array{Taylor1{_S}}(undef, size(tmp1295))
    for i = CartesianIndices(tmp1298)
        tmp1298[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1300 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1300)
        tmp1300[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1239 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1239)
        tmp1239[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1241 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1241)
        tmp1241[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1244 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1244)
        tmp1244[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1246 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1246)
        tmp1246[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1249 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1249)
        tmp1249[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1251 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp1251)
        tmp1251[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(pn2x)
        pn2x[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(pn2y)
        pn2y[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(pn2z)
        pn2z[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1259 = Array{Taylor1{_S}}(undef, size(UU))
    for i = CartesianIndices(tmp1259)
        tmp1259[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1262 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp1262)
        tmp1262[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1264 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp1264)
        tmp1264[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1265 = Array{Taylor1{_S}}(undef, size(tmp1262))
    for i = CartesianIndices(tmp1265)
        tmp1265[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1267 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp1267)
        tmp1267[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1275 = Array{Taylor1{_S}}(undef, size(pn2x))
    for i = CartesianIndices(tmp1275)
        tmp1275[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1276 = Array{Taylor1{_S}}(undef, size(tmp1275))
    for i = CartesianIndices(tmp1276)
        tmp1276[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1287 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp1287)
        tmp1287[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp1287))
    for i = CartesianIndices(temp_001)
        temp_001[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1289 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp1289)
        tmp1289[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp1289))
    for i = CartesianIndices(temp_002)
        temp_002[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1291 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp1291)
        tmp1291[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp1291))
    for i = CartesianIndices(temp_003)
        temp_003[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    for i = CartesianIndices(temp_004)
        temp_004[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:327 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                    Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                    Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                    U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                    V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                    W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                    tmp1239[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                    tmp1241[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                    _4U_m_3X[i, j] = Taylor1(constant_term(tmp1239[3j - 2]) - constant_term(tmp1241[3i - 2]), order)
                    tmp1244[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                    tmp1246[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                    _4V_m_3Y[i, j] = Taylor1(constant_term(tmp1244[3j - 1]) - constant_term(tmp1246[3i - 1]), order)
                    tmp1249[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                    tmp1251[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                    _4W_m_3Z[i, j] = Taylor1(constant_term(tmp1249[3j]) - constant_term(tmp1251[3i]), order)
                    pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                    pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                    pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                    UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                    VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                    WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                    tmp1259[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                    vi_dot_vj[i, j] = Taylor1(constant_term(tmp1259[i, j]) + constant_term(WW[i, j]), order)
                    tmp1262[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                    tmp1264[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                    tmp1265[i, j] = Taylor1(constant_term(tmp1262[i, j]) + constant_term(tmp1264[i, j]), order)
                    tmp1267[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                    r_p2[i, j] = Taylor1(constant_term(tmp1265[i, j]) + constant_term(tmp1267[i, j]), order)
                    r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                    r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                    r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                    newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                    tmp1275[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                    tmp1276[i, j] = Taylor1(constant_term(tmp1275[i, j]) + constant_term(pn2z[i, j]), order)
                    pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp1276[i, j]), order)
                    newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                    pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                    U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                    V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                    W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                    tmp1287[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp1287[i, j]), order)
                    newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                    tmp1289[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp1289[i, j]), order)
                    newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                    tmp1291[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp1291[i, j]), order)
                    newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                    temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                    newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
                end
            end
            tmp1295[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
            tmp1297[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
            tmp1298[3j - 2] = Taylor1(constant_term(tmp1295[3j - 2]) + constant_term(tmp1297[3j - 1]), order)
            tmp1300[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
            v2[j] = Taylor1(constant_term(tmp1298[3j - 2]) + constant_term(tmp1300[3j]), order)
        end
    tmp1302 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp1304 = Taylor1(constant_term(tmp1302) / constant_term(2), order)
    tmp1305 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp1304), order)
    J2M_t = Taylor1(constant_term(tmp1305) / constant_term(μ[mo]), order)
    tmp1307 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp1308 = Taylor1(constant_term(tmp1307) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp1308) / constant_term(4), order)
    tmp1311 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp1311) / constant_term(μ[mo]), order)
    tmp1313 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp1313) / constant_term(μ[mo]), order)
    tmp1315 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp1316 = Taylor1(constant_term(tmp1315) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp1316) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp1328 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    for i = CartesianIndices(tmp1328)
        tmp1328[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1330 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    for i = CartesianIndices(tmp1330)
        tmp1330[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1332 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    for i = CartesianIndices(tmp1332)
        tmp1332[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1336 = Array{Taylor1{_S}}(undef, size(X_bf))
    for i = CartesianIndices(tmp1336)
        tmp1336[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1338 = Array{Taylor1{_S}}(undef, size(Y_bf))
    for i = CartesianIndices(tmp1338)
        tmp1338[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1339 = Array{Taylor1{_S}}(undef, size(tmp1336))
    for i = CartesianIndices(tmp1339)
        tmp1339[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1354 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp1354)
        tmp1354[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1355 = Array{Taylor1{_S}}(undef, size(tmp1354))
    for i = CartesianIndices(tmp1355)
        tmp1355[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1357 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = CartesianIndices(tmp1357)
        tmp1357[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1358 = Array{Taylor1{_S}}(undef, size(tmp1357))
    for i = CartesianIndices(tmp1358)
        tmp1358[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1359 = Array{Taylor1{_S}}(undef, size(tmp1358))
    for i = CartesianIndices(tmp1359)
        tmp1359[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1456 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    for i = CartesianIndices(tmp1456)
        tmp1456[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1459 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    for i = CartesianIndices(tmp1459)
        tmp1459[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1461 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1461)
        tmp1461[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1462 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1462)
        tmp1462[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1463 = Array{Taylor1{_S}}(undef, size(tmp1461))
    for i = CartesianIndices(tmp1463)
        tmp1463[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1464 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1464)
        tmp1464[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1466 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1466)
        tmp1466[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1467 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1467)
        tmp1467[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1468 = Array{Taylor1{_S}}(undef, size(tmp1466))
    for i = CartesianIndices(tmp1468)
        tmp1468[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1469 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1469)
        tmp1469[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1471 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1471)
        tmp1471[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1472 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1472)
        tmp1472[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1473 = Array{Taylor1{_S}}(undef, size(tmp1471))
    for i = CartesianIndices(tmp1473)
        tmp1473[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1474 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1474)
        tmp1474[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1476 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1476)
        tmp1476[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1477 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1477)
        tmp1477[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1478 = Array{Taylor1{_S}}(undef, size(tmp1476))
    for i = CartesianIndices(tmp1478)
        tmp1478[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1479 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1479)
        tmp1479[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1481 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1481)
        tmp1481[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1482 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1482)
        tmp1482[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1483 = Array{Taylor1{_S}}(undef, size(tmp1481))
    for i = CartesianIndices(tmp1483)
        tmp1483[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1484 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1484)
        tmp1484[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1486 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1486)
        tmp1486[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1487 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1487)
        tmp1487[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1488 = Array{Taylor1{_S}}(undef, size(tmp1486))
    for i = CartesianIndices(tmp1488)
        tmp1488[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1489 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1489)
        tmp1489[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1491 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1491)
        tmp1491[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1492 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1492)
        tmp1492[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1493 = Array{Taylor1{_S}}(undef, size(tmp1491))
    for i = CartesianIndices(tmp1493)
        tmp1493[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1494 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1494)
        tmp1494[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1496 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1496)
        tmp1496[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1497 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1497)
        tmp1497[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1498 = Array{Taylor1{_S}}(undef, size(tmp1496))
    for i = CartesianIndices(tmp1498)
        tmp1498[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1499 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1499)
        tmp1499[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1501 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1501)
        tmp1501[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1502 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1502)
        tmp1502[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1503 = Array{Taylor1{_S}}(undef, size(tmp1501))
    for i = CartesianIndices(tmp1503)
        tmp1503[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1504 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp1504)
        tmp1504[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1506 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1506)
        tmp1506[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1507 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1507)
        tmp1507[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1508 = Array{Taylor1{_S}}(undef, size(tmp1506))
    for i = CartesianIndices(tmp1508)
        tmp1508[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1509 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1509)
        tmp1509[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1511 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1511)
        tmp1511[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1512 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1512)
        tmp1512[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1513 = Array{Taylor1{_S}}(undef, size(tmp1511))
    for i = CartesianIndices(tmp1513)
        tmp1513[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1514 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1514)
        tmp1514[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1516 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1516)
        tmp1516[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1517 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1517)
        tmp1517[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1518 = Array{Taylor1{_S}}(undef, size(tmp1516))
    for i = CartesianIndices(tmp1518)
        tmp1518[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1519 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp1519)
        tmp1519[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1344 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp1344)
        tmp1344[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1345 = Array{Taylor1{_S}}(undef, size(tmp1344))
    for i = CartesianIndices(tmp1345)
        tmp1345[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1346 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp1346)
        tmp1346[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1348 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = CartesianIndices(tmp1348)
        tmp1348[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1349 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp1349)
        tmp1349[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1361 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp1361)
        tmp1361[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1362 = Array{Taylor1{_S}}(undef, size(tmp1361))
    for i = CartesianIndices(tmp1362)
        tmp1362[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1363 = Array{Taylor1{_S}}(undef, size(tmp1362))
    for i = CartesianIndices(tmp1363)
        tmp1363[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1365 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = CartesianIndices(tmp1365)
        tmp1365[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1366 = Array{Taylor1{_S}}(undef, size(tmp1365))
    for i = CartesianIndices(tmp1366)
        tmp1366[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1367 = Array{Taylor1{_S}}(undef, size(tmp1366))
    for i = CartesianIndices(tmp1367)
        tmp1367[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1368 = Array{Taylor1{_S}}(undef, size(tmp1367))
    for i = CartesianIndices(tmp1368)
        tmp1368[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1393 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = CartesianIndices(tmp1393)
        tmp1393[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1394 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp1394)
        tmp1394[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1395 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp1395)
        tmp1395[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1396 = Array{Taylor1{_S}}(undef, size(tmp1394))
    for i = CartesianIndices(tmp1396)
        tmp1396[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1397 = Array{Taylor1{_S}}(undef, size(tmp1393))
    for i = CartesianIndices(tmp1397)
        tmp1397[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1398 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = CartesianIndices(tmp1398)
        tmp1398[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1399 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp1399)
        tmp1399[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1400 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp1400)
        tmp1400[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1401 = Array{Taylor1{_S}}(undef, size(tmp1399))
    for i = CartesianIndices(tmp1401)
        tmp1401[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1402 = Array{Taylor1{_S}}(undef, size(tmp1398))
    for i = CartesianIndices(tmp1402)
        tmp1402[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1403 = Array{Taylor1{_S}}(undef, size(tmp1397))
    for i = CartesianIndices(tmp1403)
        tmp1403[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1405 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1405)
        tmp1405[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1406 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp1406)
        tmp1406[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1407 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp1407)
        tmp1407[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1408 = Array{Taylor1{_S}}(undef, size(tmp1406))
    for i = CartesianIndices(tmp1408)
        tmp1408[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1409 = Array{Taylor1{_S}}(undef, size(tmp1405))
    for i = CartesianIndices(tmp1409)
        tmp1409[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1410 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1410)
        tmp1410[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1411 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp1411)
        tmp1411[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1412 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp1412)
        tmp1412[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1413 = Array{Taylor1{_S}}(undef, size(tmp1411))
    for i = CartesianIndices(tmp1413)
        tmp1413[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1414 = Array{Taylor1{_S}}(undef, size(tmp1410))
    for i = CartesianIndices(tmp1414)
        tmp1414[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1415 = Array{Taylor1{_S}}(undef, size(tmp1409))
    for i = CartesianIndices(tmp1415)
        tmp1415[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1417 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp1417)
        tmp1417[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1418 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp1418)
        tmp1418[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1419 = Array{Taylor1{_S}}(undef, size(tmp1417))
    for i = CartesianIndices(tmp1419)
        tmp1419[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1420 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = CartesianIndices(tmp1420)
        tmp1420[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1421 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp1421)
        tmp1421[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1422 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp1422)
        tmp1422[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1423 = Array{Taylor1{_S}}(undef, size(tmp1421))
    for i = CartesianIndices(tmp1423)
        tmp1423[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1424 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = CartesianIndices(tmp1424)
        tmp1424[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1425 = Array{Taylor1{_S}}(undef, size(tmp1420))
    for i = CartesianIndices(tmp1425)
        tmp1425[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1445 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    for i = CartesianIndices(tmp1445)
        tmp1445[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1446 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    for i = CartesianIndices(tmp1446)
        tmp1446[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1449 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    for i = CartesianIndices(tmp1449)
        tmp1449[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1450 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    for i = CartesianIndices(tmp1450)
        tmp1450[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1371 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp1371)
        tmp1371[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1372 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp1372)
        tmp1372[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1374 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp1374)
        tmp1374[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1375 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp1375)
        tmp1375[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1377 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1377)
        tmp1377[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1380 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1380)
        tmp1380[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1389 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1389)
        tmp1389[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1390 = Array{Taylor1{_S}}(undef, size(tmp1389))
    for i = CartesianIndices(tmp1390)
        tmp1390[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1391 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1391)
        tmp1391[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1382 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1382)
        tmp1382[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1384 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1384)
        tmp1384[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1385 = Array{Taylor1{_S}}(undef, size(tmp1384))
    for i = CartesianIndices(tmp1385)
        tmp1385[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1386 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1386)
        tmp1386[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1431 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = CartesianIndices(tmp1431)
        tmp1431[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1432 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    for i = CartesianIndices(tmp1432)
        tmp1432[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1433 = Array{Taylor1{_S}}(undef, size(tmp1431))
    for i = CartesianIndices(tmp1433)
        tmp1433[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1434 = Array{Taylor1{_S}}(undef, size(tmp1433))
    for i = CartesianIndices(tmp1434)
        tmp1434[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1436 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp1436)
        tmp1436[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1437 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    for i = CartesianIndices(tmp1437)
        tmp1437[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1438 = Array{Taylor1{_S}}(undef, size(tmp1436))
    for i = CartesianIndices(tmp1438)
        tmp1438[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1439 = Array{Taylor1{_S}}(undef, size(tmp1438))
    for i = CartesianIndices(tmp1439)
        tmp1439[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1441 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    for i = CartesianIndices(tmp1441)
        tmp1441[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1442 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = CartesianIndices(tmp1442)
        tmp1442[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1443 = Array{Taylor1{_S}}(undef, size(tmp1442))
    for i = CartesianIndices(tmp1443)
        tmp1443[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:418 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                        X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                        X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                        Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                        Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                        Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                        Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                        Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                        Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                        tmp1328[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                        X_bf[i, j] = Taylor1(constant_term(tmp1328[i, j]) + constant_term(X_bf_3[i, j]), order)
                        tmp1330[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                        Y_bf[i, j] = Taylor1(constant_term(tmp1330[i, j]) + constant_term(Y_bf_3[i, j]), order)
                        tmp1332[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                        Z_bf[i, j] = Taylor1(constant_term(tmp1332[i, j]) + constant_term(Z_bf_3[i, j]), order)
                        sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                        tmp1336[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp1338[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp1339[i, j] = Taylor1(constant_term(tmp1336[i, j]) + constant_term(tmp1338[i, j]), order)
                        r_xy[i, j] = Taylor1(sqrt(constant_term(tmp1339[i, j])), order)
                        cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                        sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                        P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                        dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                        for n = 2:n1SEM[j]
                            tmp1344[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp1345[i, j, n] = Taylor1(constant_term(tmp1344[i, j, n]) * constant_term(fact1_jsem[n]), order)
                            tmp1346[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                            P_n[i, j, n + 1] = Taylor1(constant_term(tmp1345[i, j, n]) - constant_term(tmp1346[i, j, n - 1]), order)
                            tmp1348[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp1349[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                            dP_n[i, j, n + 1] = Taylor1(constant_term(tmp1348[i, j, n]) + constant_term(tmp1349[i, j, n]), order)
                            temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                        end
                        r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                        tmp1354[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                        tmp1355[i, j, 3] = Taylor1(constant_term(tmp1354[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ξ[i, j] = Taylor1(constant_term(tmp1355[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        tmp1357[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                        tmp1358[i, j, 3] = Taylor1(constant_term(tmp1357[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                        tmp1359[i, j, 3] = Taylor1(constant_term(tmp1358[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ζ[i, j] = Taylor1(constant_term(tmp1359[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n1SEM[j]
                            tmp1361[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                            tmp1362[i, j, n + 1] = Taylor1(constant_term(tmp1361[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp1363[i, j, n + 1] = Taylor1(constant_term(tmp1362[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjξ[i, j, n] = Taylor1(constant_term(tmp1363[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp1365[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                            tmp1366[i, j, n + 1] = Taylor1(constant_term(tmp1365[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                            tmp1367[i, j, n + 1] = Taylor1(constant_term(tmp1366[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp1368[i, j, n + 1] = Taylor1(constant_term(tmp1367[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjζ[i, j, n] = Taylor1(constant_term(tmp1368[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                            F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                            F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                    cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                    secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                    P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                    cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                                else
                                    tmp1371[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    tmp1372[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    sin_mλ[i, j, m] = Taylor1(constant_term(tmp1371[i, j, m - 1]) + constant_term(tmp1372[i, j, m - 1]), order)
                                    tmp1374[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    tmp1375[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    cos_mλ[i, j, m] = Taylor1(constant_term(tmp1374[i, j, m - 1]) - constant_term(tmp1375[i, j, m - 1]), order)
                                    tmp1377[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp1377[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                    P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp1380[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                    cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp1380[i, j, m, m]) * constant_term(lnm3[m]), order)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        tmp1382[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp1382[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    else
                                        tmp1384[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        tmp1385[i, j, n - 1, m] = Taylor1(constant_term(tmp1384[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                        tmp1386[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp1385[i, j, n - 1, m]) + constant_term(tmp1386[i, j, n - 2, m]), order)
                                    end
                                    P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp1389[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp1390[i, j, n, m] = Taylor1(constant_term(tmp1389[i, j, n, m]) * constant_term(lnm3[n]), order)
                                    tmp1391[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                    cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp1390[i, j, n, m]) + constant_term(tmp1391[i, j, n - 1, m]), order)
                                end
                            end
                            tmp1393[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                            tmp1394[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp1395[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp1396[i, j, 1] = Taylor1(constant_term(tmp1394[i, j, 1]) + constant_term(tmp1395[i, j, 1]), order)
                            tmp1397[i, j, 2, 1] = Taylor1(constant_term(tmp1393[i, j, 2, 1]) * constant_term(tmp1396[i, j, 1]), order)
                            tmp1398[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                            tmp1399[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp1400[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp1401[i, j, 2] = Taylor1(constant_term(tmp1399[i, j, 2]) + constant_term(tmp1400[i, j, 2]), order)
                            tmp1402[i, j, 2, 2] = Taylor1(constant_term(tmp1398[i, j, 2, 2]) * constant_term(tmp1401[i, j, 2]), order)
                            tmp1403[i, j, 2, 1] = Taylor1(constant_term(tmp1397[i, j, 2, 1]) + constant_term(tmp1402[i, j, 2, 2]), order)
                            F_CS_ξ[i, j] = Taylor1(constant_term(tmp1403[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp1405[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                            tmp1406[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp1407[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp1408[i, j, 1] = Taylor1(constant_term(tmp1406[i, j, 1]) - constant_term(tmp1407[i, j, 1]), order)
                            tmp1409[i, j, 2, 1] = Taylor1(constant_term(tmp1405[i, j, 2, 1]) * constant_term(tmp1408[i, j, 1]), order)
                            tmp1410[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                            tmp1411[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp1412[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp1413[i, j, 2] = Taylor1(constant_term(tmp1411[i, j, 2]) - constant_term(tmp1412[i, j, 2]), order)
                            tmp1414[i, j, 2, 2] = Taylor1(constant_term(tmp1410[i, j, 2, 2]) * constant_term(tmp1413[i, j, 2]), order)
                            tmp1415[i, j, 2, 1] = Taylor1(constant_term(tmp1409[i, j, 2, 1]) + constant_term(tmp1414[i, j, 2, 2]), order)
                            F_CS_η[i, j] = Taylor1(constant_term(tmp1415[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp1417[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp1418[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp1419[i, j, 1] = Taylor1(constant_term(tmp1417[i, j, 1]) + constant_term(tmp1418[i, j, 1]), order)
                            tmp1420[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp1419[i, j, 1]), order)
                            tmp1421[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp1422[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp1423[i, j, 2] = Taylor1(constant_term(tmp1421[i, j, 2]) + constant_term(tmp1422[i, j, 2]), order)
                            tmp1424[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp1423[i, j, 2]), order)
                            tmp1425[i, j, 2, 1] = Taylor1(constant_term(tmp1420[i, j, 2, 1]) + constant_term(tmp1424[i, j, 2, 2]), order)
                            F_CS_ζ[i, j] = Taylor1(constant_term(tmp1425[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            for n = 3:n2M
                                for m = 1:n
                                    Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    tmp1431[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                    tmp1432[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp1433[i, j, n, m] = Taylor1(constant_term(tmp1431[i, j, n, m]) * constant_term(tmp1432[i, j, n, m]), order)
                                    tmp1434[i, j, n, m] = Taylor1(constant_term(tmp1433[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp1434[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                    tmp1436[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                    tmp1437[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                    tmp1438[i, j, n, m] = Taylor1(constant_term(tmp1436[i, j, n, m]) * constant_term(tmp1437[i, j, n, m]), order)
                                    tmp1439[i, j, n, m] = Taylor1(constant_term(tmp1438[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp1439[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                    tmp1441[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp1442[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp1441[i, j, n, m]), order)
                                    tmp1443[i, j, n, m] = Taylor1(constant_term(tmp1442[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp1443[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                    F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                    F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                    F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                                end
                            end
                            tmp1445[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp1446[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                            F_JCS_ξ[i, j] = Taylor1(constant_term(tmp1445[i, j]) + constant_term(tmp1446[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                            tmp1449[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                            tmp1450[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(tmp1449[i, j]) + constant_term(tmp1450[i, j]), order)
                        else
                            F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        end
                        Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                        tmp1456[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp1456[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                        tmp1459[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp1459[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                        Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                        tmp1461[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp1462[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp1463[i, j, 1, 1] = Taylor1(constant_term(tmp1461[i, j, 1, 1]) + constant_term(tmp1462[i, j, 1, 2]), order)
                        tmp1464[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp1463[i, j, 1, 1]) + constant_term(tmp1464[i, j, 1, 3]), order)
                        tmp1466[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp1467[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp1468[i, j, 2, 1] = Taylor1(constant_term(tmp1466[i, j, 2, 1]) + constant_term(tmp1467[i, j, 2, 2]), order)
                        tmp1469[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp1468[i, j, 2, 1]) + constant_term(tmp1469[i, j, 2, 3]), order)
                        tmp1471[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp1472[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp1473[i, j, 3, 1] = Taylor1(constant_term(tmp1471[i, j, 3, 1]) + constant_term(tmp1472[i, j, 3, 2]), order)
                        tmp1474[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp1473[i, j, 3, 1]) + constant_term(tmp1474[i, j, 3, 3]), order)
                        tmp1476[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp1477[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp1478[i, j, 1, 1] = Taylor1(constant_term(tmp1476[i, j, 1, 1]) + constant_term(tmp1477[i, j, 1, 2]), order)
                        tmp1479[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp1478[i, j, 1, 1]) + constant_term(tmp1479[i, j, 1, 3]), order)
                        tmp1481[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp1482[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp1483[i, j, 2, 1] = Taylor1(constant_term(tmp1481[i, j, 2, 1]) + constant_term(tmp1482[i, j, 2, 2]), order)
                        tmp1484[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp1483[i, j, 2, 1]) + constant_term(tmp1484[i, j, 2, 3]), order)
                        tmp1486[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp1487[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp1488[i, j, 3, 1] = Taylor1(constant_term(tmp1486[i, j, 3, 1]) + constant_term(tmp1487[i, j, 3, 2]), order)
                        tmp1489[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp1488[i, j, 3, 1]) + constant_term(tmp1489[i, j, 3, 3]), order)
                        tmp1491[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp1492[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp1493[i, j, 1, 1] = Taylor1(constant_term(tmp1491[i, j, 1, 1]) + constant_term(tmp1492[i, j, 1, 2]), order)
                        tmp1494[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp1493[i, j, 1, 1]) + constant_term(tmp1494[i, j, 1, 3]), order)
                        tmp1496[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp1497[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp1498[i, j, 2, 1] = Taylor1(constant_term(tmp1496[i, j, 2, 1]) + constant_term(tmp1497[i, j, 2, 2]), order)
                        tmp1499[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp1498[i, j, 2, 1]) + constant_term(tmp1499[i, j, 2, 3]), order)
                        tmp1501[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp1502[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp1503[i, j, 3, 1] = Taylor1(constant_term(tmp1501[i, j, 3, 1]) + constant_term(tmp1502[i, j, 3, 2]), order)
                        tmp1504[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp1503[i, j, 3, 1]) + constant_term(tmp1504[i, j, 3, 3]), order)
                        tmp1506[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                        tmp1507[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                        tmp1508[i, j, 1, 1] = Taylor1(constant_term(tmp1506[i, j, 1, 1]) + constant_term(tmp1507[i, j, 2, 1]), order)
                        tmp1509[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                        F_JCS_x[i, j] = Taylor1(constant_term(tmp1508[i, j, 1, 1]) + constant_term(tmp1509[i, j, 3, 1]), order)
                        tmp1511[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                        tmp1512[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                        tmp1513[i, j, 1, 2] = Taylor1(constant_term(tmp1511[i, j, 1, 2]) + constant_term(tmp1512[i, j, 2, 2]), order)
                        tmp1514[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                        F_JCS_y[i, j] = Taylor1(constant_term(tmp1513[i, j, 1, 2]) + constant_term(tmp1514[i, j, 3, 2]), order)
                        tmp1516[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                        tmp1517[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                        tmp1518[i, j, 1, 3] = Taylor1(constant_term(tmp1516[i, j, 1, 3]) + constant_term(tmp1517[i, j, 2, 3]), order)
                        tmp1519[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                        F_JCS_z[i, j] = Taylor1(constant_term(tmp1518[i, j, 1, 3]) + constant_term(tmp1519[i, j, 3, 3]), order)
                    end
                end
            end
        end
    tmp1521 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    for i = CartesianIndices(tmp1521)
        tmp1521[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1523 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    for i = CartesianIndices(tmp1523)
        tmp1523[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1525 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    for i = CartesianIndices(tmp1525)
        tmp1525[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1527 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    for i = CartesianIndices(tmp1527)
        tmp1527[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1529 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    for i = CartesianIndices(tmp1529)
        tmp1529[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1531 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    for i = CartesianIndices(tmp1531)
        tmp1531[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1533 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp1533)
        tmp1533[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1534 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp1534)
        tmp1534[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1535 = Array{Taylor1{_S}}(undef, size(tmp1533))
    for i = CartesianIndices(tmp1535)
        tmp1535[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1537 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp1537)
        tmp1537[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1538 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp1538)
        tmp1538[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1539 = Array{Taylor1{_S}}(undef, size(tmp1537))
    for i = CartesianIndices(tmp1539)
        tmp1539[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1541 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp1541)
        tmp1541[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1542 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp1542)
        tmp1542[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1543 = Array{Taylor1{_S}}(undef, size(tmp1541))
    for i = CartesianIndices(tmp1543)
        tmp1543[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp1521[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp1521[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp1523[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp1523[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp1525[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp1525[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp1527[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp1527[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp1529[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp1529[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp1531[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp1531[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp1533[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp1534[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp1535[i, j] = Taylor1(constant_term(tmp1533[i, j]) - constant_term(tmp1534[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1535[i, j]), order)
                        tmp1537[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp1538[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp1539[i, j] = Taylor1(constant_term(tmp1537[i, j]) - constant_term(tmp1538[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1539[i, j]), order)
                        tmp1541[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp1542[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp1543[i, j] = Taylor1(constant_term(tmp1541[i, j]) - constant_term(tmp1542[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1543[i, j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp1555 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    for i = CartesianIndices(tmp1555)
        tmp1555[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(Xij_t_Ui)
        Xij_t_Ui[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(Yij_t_Vi)
        Yij_t_Vi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(Zij_t_Wi)
        Zij_t_Wi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1561 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    for i = CartesianIndices(tmp1561)
        tmp1561[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp1561))
    for i = CartesianIndices(Rij_dot_Vi)
        Rij_dot_Vi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1564 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    for i = CartesianIndices(tmp1564)
        tmp1564[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp1564))
    for i = CartesianIndices(pn1t7)
        pn1t7[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1567 = Array{Taylor1{_S}}(undef, size(pn1t7))
    for i = CartesianIndices(tmp1567)
        tmp1567[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    for i = CartesianIndices(pn1t2_7)
        pn1t2_7[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:658 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                    ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                    _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                    sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                    tmp1555[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                    sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp1555[i, j]), order)
                    ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                    Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                    Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                    Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                    tmp1561[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                    Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp1561[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                    tmp1564[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                    pn1t7[i, j] = Taylor1(constant_term(tmp1564[i, j]) / constant_term(r_p2[i, j]), order)
                    tmp1567[i, j] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i, j]), order)
                    pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp1567[i, j]), order)
                    pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
                end
            end
            pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp1574 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    for i = CartesianIndices(tmp1574)
        tmp1574[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1575 = Array{Taylor1{_S}}(undef, size(tmp1574))
    for i = CartesianIndices(tmp1575)
        tmp1575[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1576 = Array{Taylor1{_S}}(undef, size(tmp1575))
    for i = CartesianIndices(tmp1576)
        tmp1576[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1584 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    for i = CartesianIndices(tmp1584)
        tmp1584[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    for i = CartesianIndices(termpnx)
        termpnx[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    for i = CartesianIndices(sumpnx)
        sumpnx[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1587 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    for i = CartesianIndices(tmp1587)
        tmp1587[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    for i = CartesianIndices(termpny)
        termpny[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    for i = CartesianIndices(sumpny)
        sumpny[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp1590 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    for i = CartesianIndices(tmp1590)
        tmp1590[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    for i = CartesianIndices(termpnz)
        termpnz[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    for i = CartesianIndices(sumpnz)
        sumpnz[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:697 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                    pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                    pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                    tmp1574[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                    tmp1575[i, j] = Taylor1(constant_term(tmp1574[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                    tmp1576[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp1575[i, j]), order)
                    pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp1576[i, j]), order)
                    X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                    Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                    Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                    pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                    pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                    pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                    tmp1584[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                    termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp1584[i, j]), order)
                    sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                    pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                    tmp1587[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                    termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp1587[i, j]), order)
                    sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                    pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                    tmp1590[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                    termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp1590[i, j]), order)
                    sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                    pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
                end
            end
            postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
            postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
            postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:743 =# Threads.@threads for i = 1:N_ext
            dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
            dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
            dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:748 =# Threads.@threads for i = N_ext + 1:N
            dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
            dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
            dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
        end
    tmp1599 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp1600 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp1601 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp1602 = Taylor1(constant_term(tmp1600) + constant_term(tmp1601), order)
    Iω_x = Taylor1(constant_term(tmp1599) + constant_term(tmp1602), order)
    tmp1604 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp1605 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp1606 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp1607 = Taylor1(constant_term(tmp1605) + constant_term(tmp1606), order)
    Iω_y = Taylor1(constant_term(tmp1604) + constant_term(tmp1607), order)
    tmp1609 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp1610 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp1611 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp1612 = Taylor1(constant_term(tmp1610) + constant_term(tmp1611), order)
    Iω_z = Taylor1(constant_term(tmp1609) + constant_term(tmp1612), order)
    tmp1614 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp1615 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp1614) - constant_term(tmp1615), order)
    tmp1617 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp1618 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp1617) - constant_term(tmp1618), order)
    tmp1620 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp1621 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp1620) - constant_term(tmp1621), order)
    tmp1623 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp1624 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp1625 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp1626 = Taylor1(constant_term(tmp1624) + constant_term(tmp1625), order)
    dIω_x = Taylor1(constant_term(tmp1623) + constant_term(tmp1626), order)
    tmp1628 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp1629 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp1630 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp1631 = Taylor1(constant_term(tmp1629) + constant_term(tmp1630), order)
    dIω_y = Taylor1(constant_term(tmp1628) + constant_term(tmp1631), order)
    tmp1633 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp1634 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp1635 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp1636 = Taylor1(constant_term(tmp1634) + constant_term(tmp1635), order)
    dIω_z = Taylor1(constant_term(tmp1633) + constant_term(tmp1636), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp1641 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1642 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1643 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1644 = Taylor1(constant_term(tmp1642) + constant_term(tmp1643), order)
    er_EM_1 = Taylor1(constant_term(tmp1641) + constant_term(tmp1644), order)
    tmp1646 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1647 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1648 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1649 = Taylor1(constant_term(tmp1647) + constant_term(tmp1648), order)
    er_EM_2 = Taylor1(constant_term(tmp1646) + constant_term(tmp1649), order)
    tmp1651 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1652 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1653 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1654 = Taylor1(constant_term(tmp1652) + constant_term(tmp1653), order)
    er_EM_3 = Taylor1(constant_term(tmp1651) + constant_term(tmp1654), order)
    tmp1656 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1657 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1658 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1659 = Taylor1(constant_term(tmp1657) + constant_term(tmp1658), order)
    p_E_1 = Taylor1(constant_term(tmp1656) + constant_term(tmp1659), order)
    tmp1661 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1662 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1663 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1664 = Taylor1(constant_term(tmp1662) + constant_term(tmp1663), order)
    p_E_2 = Taylor1(constant_term(tmp1661) + constant_term(tmp1664), order)
    tmp1666 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1667 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1668 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1669 = Taylor1(constant_term(tmp1667) + constant_term(tmp1668), order)
    p_E_3 = Taylor1(constant_term(tmp1666) + constant_term(tmp1669), order)
    tmp1671 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp1672 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp1673 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp1674 = Taylor1(constant_term(tmp1672) + constant_term(tmp1673), order)
    I_er_EM_1 = Taylor1(constant_term(tmp1671) + constant_term(tmp1674), order)
    tmp1676 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp1677 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp1678 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp1679 = Taylor1(constant_term(tmp1677) + constant_term(tmp1678), order)
    I_er_EM_2 = Taylor1(constant_term(tmp1676) + constant_term(tmp1679), order)
    tmp1681 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp1682 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp1683 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp1684 = Taylor1(constant_term(tmp1682) + constant_term(tmp1683), order)
    I_er_EM_3 = Taylor1(constant_term(tmp1681) + constant_term(tmp1684), order)
    tmp1686 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp1687 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp1688 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp1689 = Taylor1(constant_term(tmp1687) + constant_term(tmp1688), order)
    I_p_E_1 = Taylor1(constant_term(tmp1686) + constant_term(tmp1689), order)
    tmp1691 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp1692 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp1693 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp1694 = Taylor1(constant_term(tmp1692) + constant_term(tmp1693), order)
    I_p_E_2 = Taylor1(constant_term(tmp1691) + constant_term(tmp1694), order)
    tmp1696 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp1697 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp1698 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp1699 = Taylor1(constant_term(tmp1697) + constant_term(tmp1698), order)
    I_p_E_3 = Taylor1(constant_term(tmp1696) + constant_term(tmp1699), order)
    tmp1701 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp1702 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp1701) - constant_term(tmp1702), order)
    tmp1704 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp1705 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp1704) - constant_term(tmp1705), order)
    tmp1707 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp1708 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp1707) - constant_term(tmp1708), order)
    tmp1710 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp1711 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp1710) - constant_term(tmp1711), order)
    tmp1713 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp1714 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp1713) - constant_term(tmp1714), order)
    tmp1716 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp1717 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp1716) - constant_term(tmp1717), order)
    tmp1719 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp1720 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp1719) - constant_term(tmp1720), order)
    tmp1722 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp1723 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp1722) - constant_term(tmp1723), order)
    tmp1725 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp1726 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp1725) - constant_term(tmp1726), order)
    tmp1728 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp1729 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp1728) - constant_term(tmp1729), order)
    tmp1731 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp1732 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp1731) - constant_term(tmp1732), order)
    tmp1734 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp1735 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp1734) - constant_term(tmp1735), order)
    tmp1739 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp1740 = Taylor1(constant_term(7) * constant_term(tmp1739), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp1740), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp1745 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp1745), order)
    tmp1747 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp1748 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp1749 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1748), order)
    tmp1750 = Taylor1(constant_term(tmp1747) + constant_term(tmp1749), order)
    tmp1752 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp1753 = Taylor1(constant_term(tmp1750) - constant_term(tmp1752), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1753), order)
    tmp1755 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp1756 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp1757 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1756), order)
    tmp1758 = Taylor1(constant_term(tmp1755) + constant_term(tmp1757), order)
    tmp1760 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp1761 = Taylor1(constant_term(tmp1758) - constant_term(tmp1760), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1761), order)
    tmp1763 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp1764 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp1765 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1764), order)
    tmp1766 = Taylor1(constant_term(tmp1763) + constant_term(tmp1765), order)
    tmp1768 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp1769 = Taylor1(constant_term(tmp1766) - constant_term(tmp1768), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1769), order)
    tmp1771 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1772 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1773 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1774 = Taylor1(constant_term(tmp1772) + constant_term(tmp1773), order)
    N_1_LMF = Taylor1(constant_term(tmp1771) + constant_term(tmp1774), order)
    tmp1776 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1777 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1778 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1779 = Taylor1(constant_term(tmp1777) + constant_term(tmp1778), order)
    N_2_LMF = Taylor1(constant_term(tmp1776) + constant_term(tmp1779), order)
    tmp1781 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1782 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1783 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1784 = Taylor1(constant_term(tmp1782) + constant_term(tmp1783), order)
    N_3_LMF = Taylor1(constant_term(tmp1781) + constant_term(tmp1784), order)
    tmp1786 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp1787 = Taylor1(constant_term(k_ν) * constant_term(tmp1786), order)
    tmp1788 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp1789 = Taylor1(constant_term(tmp1788) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp1787) - constant_term(tmp1789), order)
    tmp1791 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp1792 = Taylor1(constant_term(k_ν) * constant_term(tmp1791), order)
    tmp1793 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp1794 = Taylor1(constant_term(tmp1793) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp1792) + constant_term(tmp1794), order)
    tmp1796 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp1796), order)
    tmp1798 = Taylor1(constant_term(μ[mo]) * constant_term(N_1_LMF), order)
    tmp1799 = Taylor1(constant_term(N_MfigM_figE_1) + constant_term(tmp1798), order)
    tmp1800 = Taylor1(constant_term(tmp1799) + constant_term(N_cmb_1), order)
    tmp1801 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp1800) - constant_term(tmp1801), order)
    tmp1803 = Taylor1(constant_term(μ[mo]) * constant_term(N_2_LMF), order)
    tmp1804 = Taylor1(constant_term(N_MfigM_figE_2) + constant_term(tmp1803), order)
    tmp1805 = Taylor1(constant_term(tmp1804) + constant_term(N_cmb_2), order)
    tmp1806 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp1805) - constant_term(tmp1806), order)
    tmp1808 = Taylor1(constant_term(μ[mo]) * constant_term(N_3_LMF), order)
    tmp1809 = Taylor1(constant_term(N_MfigM_figE_3) + constant_term(tmp1808), order)
    tmp1810 = Taylor1(constant_term(tmp1809) + constant_term(N_cmb_3), order)
    tmp1811 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp1810) - constant_term(tmp1811), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp1816 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp1817 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp1816) - constant_term(tmp1817), order)
    tmp1819 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp1820 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp1819) - constant_term(tmp1820), order)
    tmp1822 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp1823 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp1822) - constant_term(tmp1823), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp1828 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1908 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1829 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp1828), order)
    tmp1830 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1909 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1831 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp1830), order)
    tmp1832 = Taylor1(constant_term(tmp1829) + constant_term(tmp1831), order)
    tmp1833 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp1910 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp1832) / constant_term(tmp1833), order)
    tmp1835 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1911 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1836 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp1835), order)
    tmp1837 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1912 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1838 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp1837), order)
    dq[6N + 2] = Taylor1(constant_term(tmp1836) - constant_term(tmp1838), order)
    tmp1840 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp1913 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp1841 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp1840), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp1841), order)
    tmp1843 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp1844 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp1845 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp1846 = Taylor1(constant_term(tmp1844) + constant_term(tmp1845), order)
    dq[6N + 4] = Taylor1(constant_term(tmp1843) + constant_term(tmp1846), order)
    tmp1848 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp1849 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp1850 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp1851 = Taylor1(constant_term(tmp1849) + constant_term(tmp1850), order)
    dq[6N + 5] = Taylor1(constant_term(tmp1848) + constant_term(tmp1851), order)
    tmp1853 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp1854 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp1855 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp1856 = Taylor1(constant_term(tmp1854) + constant_term(tmp1855), order)
    dq[6N + 6] = Taylor1(constant_term(tmp1853) + constant_term(tmp1856), order)
    tmp1858 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp1914 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp1859 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp1858), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp1859)), order)
    tmp1861 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp1915 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp1862 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp1861), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp1862), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    dq[6N + 13] = Taylor1(identity(constant_term(zero_q_1)), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp1133, tmp1134, tmp1135, tmp1136, tmp1137, tmp1138, tmp1139, tmp1140, tmp1142, tmp1143, tmp1144, tmp1145, tmp1146, tmp1147, tmp1148, tmp1149, tmp1150, tmp1152, tmp1153, tmp1155, tmp1156, tmp1157, tmp1158, tmp1159, tmp1160, tmp1161, tmp1162, tmp1164, tmp1165, tmp1166, tmp1167, tmp1168, tmp1169, tmp1170, tmp1171, tmp1173, tmp1174, tmp1175, tmp1177, tmp1178, tmp1180, tmp1181, tmp1184, tmp1185, tmp1186, tmp1187, tmp1189, tmp1190, tmp1191, tmp1192, tmp1193, tmp1195, tmp1196, tmp1197, tmp1198, tmp1200, tmp1201, tmp1202, tmp1203, tmp1204, tmp1206, tmp1207, tmp1208, tmp1209, tmp1211, tmp1212, tmp1213, tmp1214, tmp1215, tmp1217, tmp1218, tmp1219, tmp1220, tmp1222, tmp1223, tmp1224, tmp1225, tmp1227, tmp1228, tmp1229, tmp1230, tmp1302, tmp1304, tmp1305, tmp1307, tmp1308, tmp1311, tmp1313, tmp1315, tmp1316, tmp1599, tmp1600, tmp1601, tmp1602, tmp1604, tmp1605, tmp1606, tmp1607, tmp1609, tmp1610, tmp1611, tmp1612, tmp1614, tmp1615, tmp1617, tmp1618, tmp1620, tmp1621, tmp1623, tmp1624, tmp1625, tmp1626, tmp1628, tmp1629, tmp1630, tmp1631, tmp1633, tmp1634, tmp1635, tmp1636, tmp1641, tmp1642, tmp1643, tmp1644, tmp1646, tmp1647, tmp1648, tmp1649, tmp1651, tmp1652, tmp1653, tmp1654, tmp1656, tmp1657, tmp1658, tmp1659, tmp1661, tmp1662, tmp1663, tmp1664, tmp1666, tmp1667, tmp1668, tmp1669, tmp1671, tmp1672, tmp1673, tmp1674, tmp1676, tmp1677, tmp1678, tmp1679, tmp1681, tmp1682, tmp1683, tmp1684, tmp1686, tmp1687, tmp1688, tmp1689, tmp1691, tmp1692, tmp1693, tmp1694, tmp1696, tmp1697, tmp1698, tmp1699, tmp1701, tmp1702, tmp1704, tmp1705, tmp1707, tmp1708, tmp1710, tmp1711, tmp1713, tmp1714, tmp1716, tmp1717, tmp1719, tmp1720, tmp1722, tmp1723, tmp1725, tmp1726, tmp1728, tmp1729, tmp1731, tmp1732, tmp1734, tmp1735, tmp1739, tmp1740, tmp1745, tmp1747, tmp1748, tmp1749, tmp1750, tmp1752, tmp1753, tmp1755, tmp1756, tmp1757, tmp1758, tmp1760, tmp1761, tmp1763, tmp1764, tmp1765, tmp1766, tmp1768, tmp1769, tmp1771, tmp1772, tmp1773, tmp1774, tmp1776, tmp1777, tmp1778, tmp1779, tmp1781, tmp1782, tmp1783, tmp1784, tmp1786, tmp1787, tmp1788, tmp1789, tmp1791, tmp1792, tmp1793, tmp1794, tmp1796, tmp1798, tmp1799, tmp1800, tmp1801, tmp1803, tmp1804, tmp1805, tmp1806, tmp1808, tmp1809, tmp1810, tmp1811, tmp1816, tmp1817, tmp1819, tmp1820, tmp1822, tmp1823, tmp1828, tmp1829, tmp1830, tmp1831, tmp1832, tmp1833, tmp1835, tmp1836, tmp1837, tmp1838, tmp1840, tmp1841, tmp1843, tmp1844, tmp1845, tmp1846, tmp1848, tmp1849, tmp1850, tmp1851, tmp1853, tmp1854, tmp1855, tmp1856, tmp1858, tmp1859, tmp1861, tmp1862, ϕ_m, θ_m, ψ_m, tmp1867, tmp1868, tmp1869, tmp1870, tmp1871, tmp1872, tmp1873, tmp1874, tmp1875, tmp1876, tmp1877, tmp1878, tmp1879, tmp1880, tmp1881, tmp1882, tmp1883, tmp1884, tmp1885, tmp1886, tmp1887, tmp1888, tmp1889, tmp1890, tmp1891, tmp1892, tmp1893, tmp1894, tmp1895, ϕ_c, tmp1896, tmp1897, tmp1898, tmp1899, tmp1900, tmp1901, tmp1902, tmp1903, tmp1904, tmp1905, tmp1906, tmp1907, ω_c_CE_1, ω_c_CE_2, ω_c_CE_3, J2M_t, C22M_t, C21M_t, S21M_t, S22M_t, Iω_x, Iω_y, Iω_z, ωxIω_x, ωxIω_y, ωxIω_z, dIω_x, dIω_y, dIω_z, er_EM_I_1, er_EM_I_2, er_EM_I_3, p_E_I_1, p_E_I_2, p_E_I_3, er_EM_1, er_EM_2, er_EM_3, p_E_1, p_E_2, p_E_3, I_er_EM_1, I_er_EM_2, I_er_EM_3, I_p_E_1, I_p_E_2, I_p_E_3, er_EM_cross_I_er_EM_1, er_EM_cross_I_er_EM_2, er_EM_cross_I_er_EM_3, er_EM_cross_I_p_E_1, er_EM_cross_I_p_E_2, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_1, p_E_cross_I_er_EM_2, p_E_cross_I_er_EM_3, p_E_cross_I_p_E_1, p_E_cross_I_p_E_2, p_E_cross_I_p_E_3, one_minus_7sin2ϕEM, two_sinϕEM, N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_1, N_MfigM_figE_2, N_MfigM_figE_3, N_1_LMF, N_2_LMF, N_3_LMF, N_cmb_1, N_cmb_2, N_cmb_3, I_dω_1, I_dω_2, I_dω_3, Ic_ωc_1, Ic_ωc_2, Ic_ωc_3, m_ωm_x_Icωc_1, m_ωm_x_Icωc_2, m_ωm_x_Icωc_3, Ic_dωc_1, Ic_dωc_2, Ic_dωc_3, tmp1908, tmp1909, tmp1910, tmp1911, tmp1912, tmp1913, tmp1914, tmp1915], [newtonX, newtonY, newtonZ, newtonianNb_Potential, v2, pntempX, pntempY, pntempZ, postNewtonX, postNewtonY, postNewtonZ, accX, accY, accZ, N_MfigM_pmA_x, N_MfigM_pmA_y, N_MfigM_pmA_z, temp_N_M_x, temp_N_M_y, temp_N_M_z, N_MfigM, J2_t, tmp1239, tmp1241, tmp1244, tmp1246, tmp1249, tmp1251, tmp1295, tmp1297, tmp1298, tmp1300], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, _2v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, X_bf_1, Y_bf_1, Z_bf_1, X_bf_2, Y_bf_2, Z_bf_2, X_bf_3, Y_bf_3, Z_bf_3, X_bf, Y_bf, Z_bf, F_JCS_x, F_JCS_y, F_JCS_z, temp_accX_j, temp_accY_j, temp_accZ_j, temp_accX_i, temp_accY_i, temp_accZ_i, sin_ϕ, cos_ϕ, sin_λ, cos_λ, r_xy, r_p4, F_CS_ξ_36, F_CS_η_36, F_CS_ζ_36, F_J_ξ_36, F_J_ζ_36, F_J_ξ, F_J_ζ, F_CS_ξ, F_CS_η, F_CS_ζ, F_JCS_ξ, F_JCS_η, F_JCS_ζ, mantlef2coref, pn2x, pn2y, pn2z, tmp1259, tmp1262, tmp1264, tmp1265, tmp1267, tmp1275, tmp1276, tmp1287, temp_001, tmp1289, temp_002, tmp1291, temp_003, temp_004, tmp1328, tmp1330, tmp1332, tmp1336, tmp1338, tmp1339, tmp1445, tmp1446, tmp1449, tmp1450, tmp1456, tmp1459, tmp1521, tmp1523, tmp1525, tmp1527, tmp1529, tmp1531, tmp1533, tmp1534, tmp1535, tmp1537, tmp1538, tmp1539, tmp1541, tmp1542, tmp1543, tmp1555, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp1561, Rij_dot_Vi, tmp1564, pn1t7, tmp1567, pn1t2_7, tmp1574, tmp1575, tmp1576, tmp1584, termpnx, sumpnx, tmp1587, termpny, sumpny, tmp1590, termpnz, sumpnz], [P_n, dP_n, temp_fjξ, temp_fjζ, temp_rn, sin_mλ, cos_mλ, RotM, tmp1344, tmp1345, tmp1346, tmp1348, tmp1349, tmp1354, tmp1355, tmp1357, tmp1358, tmp1359, tmp1361, tmp1362, tmp1363, tmp1365, tmp1366, tmp1367, tmp1368, tmp1371, tmp1372, tmp1374, tmp1375, tmp1394, tmp1395, tmp1396, tmp1399, tmp1400, tmp1401, tmp1406, tmp1407, tmp1408, tmp1411, tmp1412, tmp1413, tmp1417, tmp1418, tmp1419, tmp1421, tmp1422, tmp1423], [temp_CS_ξ, temp_CS_η, temp_CS_ζ, Cnm_cosmλ, Cnm_sinmλ, Snm_cosmλ, Snm_sinmλ, secϕ_P_nm, P_nm, cosϕ_dP_nm, Rb2p, Gc2p, tmp1377, tmp1380, tmp1382, tmp1384, tmp1385, tmp1386, tmp1389, tmp1390, tmp1391, tmp1393, tmp1397, tmp1398, tmp1402, tmp1403, tmp1405, tmp1409, tmp1410, tmp1414, tmp1415, tmp1420, tmp1424, tmp1425, tmp1431, tmp1432, tmp1433, tmp1434, tmp1436, tmp1437, tmp1438, tmp1439, tmp1441, tmp1442, tmp1443, tmp1461, tmp1462, tmp1463, tmp1464, tmp1466, tmp1467, tmp1468, tmp1469, tmp1471, tmp1472, tmp1473, tmp1474, tmp1476, tmp1477, tmp1478, tmp1479, tmp1481, tmp1482, tmp1483, tmp1484, tmp1486, tmp1487, tmp1488, tmp1489, tmp1491, tmp1492, tmp1493, tmp1494, tmp1496, tmp1497, tmp1498, tmp1499, tmp1501, tmp1502, tmp1503, tmp1504, tmp1506, tmp1507, tmp1508, tmp1509, tmp1511, tmp1512, tmp1513, tmp1514, tmp1516, tmp1517, tmp1518, tmp1519])
end
# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S_threads!
function TaylorIntegration.jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp1133 = __ralloc.v0[1]
    tmp1134 = __ralloc.v0[2]
    tmp1135 = __ralloc.v0[3]
    tmp1136 = __ralloc.v0[4]
    tmp1137 = __ralloc.v0[5]
    tmp1138 = __ralloc.v0[6]
    tmp1139 = __ralloc.v0[7]
    tmp1140 = __ralloc.v0[8]
    tmp1142 = __ralloc.v0[9]
    tmp1143 = __ralloc.v0[10]
    tmp1144 = __ralloc.v0[11]
    tmp1145 = __ralloc.v0[12]
    tmp1146 = __ralloc.v0[13]
    tmp1147 = __ralloc.v0[14]
    tmp1148 = __ralloc.v0[15]
    tmp1149 = __ralloc.v0[16]
    tmp1150 = __ralloc.v0[17]
    tmp1152 = __ralloc.v0[18]
    tmp1153 = __ralloc.v0[19]
    tmp1155 = __ralloc.v0[20]
    tmp1156 = __ralloc.v0[21]
    tmp1157 = __ralloc.v0[22]
    tmp1158 = __ralloc.v0[23]
    tmp1159 = __ralloc.v0[24]
    tmp1160 = __ralloc.v0[25]
    tmp1161 = __ralloc.v0[26]
    tmp1162 = __ralloc.v0[27]
    tmp1164 = __ralloc.v0[28]
    tmp1165 = __ralloc.v0[29]
    tmp1166 = __ralloc.v0[30]
    tmp1167 = __ralloc.v0[31]
    tmp1168 = __ralloc.v0[32]
    tmp1169 = __ralloc.v0[33]
    tmp1170 = __ralloc.v0[34]
    tmp1171 = __ralloc.v0[35]
    tmp1173 = __ralloc.v0[36]
    tmp1174 = __ralloc.v0[37]
    tmp1175 = __ralloc.v0[38]
    tmp1177 = __ralloc.v0[39]
    tmp1178 = __ralloc.v0[40]
    tmp1180 = __ralloc.v0[41]
    tmp1181 = __ralloc.v0[42]
    tmp1184 = __ralloc.v0[43]
    tmp1185 = __ralloc.v0[44]
    tmp1186 = __ralloc.v0[45]
    tmp1187 = __ralloc.v0[46]
    tmp1189 = __ralloc.v0[47]
    tmp1190 = __ralloc.v0[48]
    tmp1191 = __ralloc.v0[49]
    tmp1192 = __ralloc.v0[50]
    tmp1193 = __ralloc.v0[51]
    tmp1195 = __ralloc.v0[52]
    tmp1196 = __ralloc.v0[53]
    tmp1197 = __ralloc.v0[54]
    tmp1198 = __ralloc.v0[55]
    tmp1200 = __ralloc.v0[56]
    tmp1201 = __ralloc.v0[57]
    tmp1202 = __ralloc.v0[58]
    tmp1203 = __ralloc.v0[59]
    tmp1204 = __ralloc.v0[60]
    tmp1206 = __ralloc.v0[61]
    tmp1207 = __ralloc.v0[62]
    tmp1208 = __ralloc.v0[63]
    tmp1209 = __ralloc.v0[64]
    tmp1211 = __ralloc.v0[65]
    tmp1212 = __ralloc.v0[66]
    tmp1213 = __ralloc.v0[67]
    tmp1214 = __ralloc.v0[68]
    tmp1215 = __ralloc.v0[69]
    tmp1217 = __ralloc.v0[70]
    tmp1218 = __ralloc.v0[71]
    tmp1219 = __ralloc.v0[72]
    tmp1220 = __ralloc.v0[73]
    tmp1222 = __ralloc.v0[74]
    tmp1223 = __ralloc.v0[75]
    tmp1224 = __ralloc.v0[76]
    tmp1225 = __ralloc.v0[77]
    tmp1227 = __ralloc.v0[78]
    tmp1228 = __ralloc.v0[79]
    tmp1229 = __ralloc.v0[80]
    tmp1230 = __ralloc.v0[81]
    tmp1302 = __ralloc.v0[82]
    tmp1304 = __ralloc.v0[83]
    tmp1305 = __ralloc.v0[84]
    tmp1307 = __ralloc.v0[85]
    tmp1308 = __ralloc.v0[86]
    tmp1311 = __ralloc.v0[87]
    tmp1313 = __ralloc.v0[88]
    tmp1315 = __ralloc.v0[89]
    tmp1316 = __ralloc.v0[90]
    tmp1599 = __ralloc.v0[91]
    tmp1600 = __ralloc.v0[92]
    tmp1601 = __ralloc.v0[93]
    tmp1602 = __ralloc.v0[94]
    tmp1604 = __ralloc.v0[95]
    tmp1605 = __ralloc.v0[96]
    tmp1606 = __ralloc.v0[97]
    tmp1607 = __ralloc.v0[98]
    tmp1609 = __ralloc.v0[99]
    tmp1610 = __ralloc.v0[100]
    tmp1611 = __ralloc.v0[101]
    tmp1612 = __ralloc.v0[102]
    tmp1614 = __ralloc.v0[103]
    tmp1615 = __ralloc.v0[104]
    tmp1617 = __ralloc.v0[105]
    tmp1618 = __ralloc.v0[106]
    tmp1620 = __ralloc.v0[107]
    tmp1621 = __ralloc.v0[108]
    tmp1623 = __ralloc.v0[109]
    tmp1624 = __ralloc.v0[110]
    tmp1625 = __ralloc.v0[111]
    tmp1626 = __ralloc.v0[112]
    tmp1628 = __ralloc.v0[113]
    tmp1629 = __ralloc.v0[114]
    tmp1630 = __ralloc.v0[115]
    tmp1631 = __ralloc.v0[116]
    tmp1633 = __ralloc.v0[117]
    tmp1634 = __ralloc.v0[118]
    tmp1635 = __ralloc.v0[119]
    tmp1636 = __ralloc.v0[120]
    tmp1641 = __ralloc.v0[121]
    tmp1642 = __ralloc.v0[122]
    tmp1643 = __ralloc.v0[123]
    tmp1644 = __ralloc.v0[124]
    tmp1646 = __ralloc.v0[125]
    tmp1647 = __ralloc.v0[126]
    tmp1648 = __ralloc.v0[127]
    tmp1649 = __ralloc.v0[128]
    tmp1651 = __ralloc.v0[129]
    tmp1652 = __ralloc.v0[130]
    tmp1653 = __ralloc.v0[131]
    tmp1654 = __ralloc.v0[132]
    tmp1656 = __ralloc.v0[133]
    tmp1657 = __ralloc.v0[134]
    tmp1658 = __ralloc.v0[135]
    tmp1659 = __ralloc.v0[136]
    tmp1661 = __ralloc.v0[137]
    tmp1662 = __ralloc.v0[138]
    tmp1663 = __ralloc.v0[139]
    tmp1664 = __ralloc.v0[140]
    tmp1666 = __ralloc.v0[141]
    tmp1667 = __ralloc.v0[142]
    tmp1668 = __ralloc.v0[143]
    tmp1669 = __ralloc.v0[144]
    tmp1671 = __ralloc.v0[145]
    tmp1672 = __ralloc.v0[146]
    tmp1673 = __ralloc.v0[147]
    tmp1674 = __ralloc.v0[148]
    tmp1676 = __ralloc.v0[149]
    tmp1677 = __ralloc.v0[150]
    tmp1678 = __ralloc.v0[151]
    tmp1679 = __ralloc.v0[152]
    tmp1681 = __ralloc.v0[153]
    tmp1682 = __ralloc.v0[154]
    tmp1683 = __ralloc.v0[155]
    tmp1684 = __ralloc.v0[156]
    tmp1686 = __ralloc.v0[157]
    tmp1687 = __ralloc.v0[158]
    tmp1688 = __ralloc.v0[159]
    tmp1689 = __ralloc.v0[160]
    tmp1691 = __ralloc.v0[161]
    tmp1692 = __ralloc.v0[162]
    tmp1693 = __ralloc.v0[163]
    tmp1694 = __ralloc.v0[164]
    tmp1696 = __ralloc.v0[165]
    tmp1697 = __ralloc.v0[166]
    tmp1698 = __ralloc.v0[167]
    tmp1699 = __ralloc.v0[168]
    tmp1701 = __ralloc.v0[169]
    tmp1702 = __ralloc.v0[170]
    tmp1704 = __ralloc.v0[171]
    tmp1705 = __ralloc.v0[172]
    tmp1707 = __ralloc.v0[173]
    tmp1708 = __ralloc.v0[174]
    tmp1710 = __ralloc.v0[175]
    tmp1711 = __ralloc.v0[176]
    tmp1713 = __ralloc.v0[177]
    tmp1714 = __ralloc.v0[178]
    tmp1716 = __ralloc.v0[179]
    tmp1717 = __ralloc.v0[180]
    tmp1719 = __ralloc.v0[181]
    tmp1720 = __ralloc.v0[182]
    tmp1722 = __ralloc.v0[183]
    tmp1723 = __ralloc.v0[184]
    tmp1725 = __ralloc.v0[185]
    tmp1726 = __ralloc.v0[186]
    tmp1728 = __ralloc.v0[187]
    tmp1729 = __ralloc.v0[188]
    tmp1731 = __ralloc.v0[189]
    tmp1732 = __ralloc.v0[190]
    tmp1734 = __ralloc.v0[191]
    tmp1735 = __ralloc.v0[192]
    tmp1739 = __ralloc.v0[193]
    tmp1740 = __ralloc.v0[194]
    tmp1745 = __ralloc.v0[195]
    tmp1747 = __ralloc.v0[196]
    tmp1748 = __ralloc.v0[197]
    tmp1749 = __ralloc.v0[198]
    tmp1750 = __ralloc.v0[199]
    tmp1752 = __ralloc.v0[200]
    tmp1753 = __ralloc.v0[201]
    tmp1755 = __ralloc.v0[202]
    tmp1756 = __ralloc.v0[203]
    tmp1757 = __ralloc.v0[204]
    tmp1758 = __ralloc.v0[205]
    tmp1760 = __ralloc.v0[206]
    tmp1761 = __ralloc.v0[207]
    tmp1763 = __ralloc.v0[208]
    tmp1764 = __ralloc.v0[209]
    tmp1765 = __ralloc.v0[210]
    tmp1766 = __ralloc.v0[211]
    tmp1768 = __ralloc.v0[212]
    tmp1769 = __ralloc.v0[213]
    tmp1771 = __ralloc.v0[214]
    tmp1772 = __ralloc.v0[215]
    tmp1773 = __ralloc.v0[216]
    tmp1774 = __ralloc.v0[217]
    tmp1776 = __ralloc.v0[218]
    tmp1777 = __ralloc.v0[219]
    tmp1778 = __ralloc.v0[220]
    tmp1779 = __ralloc.v0[221]
    tmp1781 = __ralloc.v0[222]
    tmp1782 = __ralloc.v0[223]
    tmp1783 = __ralloc.v0[224]
    tmp1784 = __ralloc.v0[225]
    tmp1786 = __ralloc.v0[226]
    tmp1787 = __ralloc.v0[227]
    tmp1788 = __ralloc.v0[228]
    tmp1789 = __ralloc.v0[229]
    tmp1791 = __ralloc.v0[230]
    tmp1792 = __ralloc.v0[231]
    tmp1793 = __ralloc.v0[232]
    tmp1794 = __ralloc.v0[233]
    tmp1796 = __ralloc.v0[234]
    tmp1798 = __ralloc.v0[235]
    tmp1799 = __ralloc.v0[236]
    tmp1800 = __ralloc.v0[237]
    tmp1801 = __ralloc.v0[238]
    tmp1803 = __ralloc.v0[239]
    tmp1804 = __ralloc.v0[240]
    tmp1805 = __ralloc.v0[241]
    tmp1806 = __ralloc.v0[242]
    tmp1808 = __ralloc.v0[243]
    tmp1809 = __ralloc.v0[244]
    tmp1810 = __ralloc.v0[245]
    tmp1811 = __ralloc.v0[246]
    tmp1816 = __ralloc.v0[247]
    tmp1817 = __ralloc.v0[248]
    tmp1819 = __ralloc.v0[249]
    tmp1820 = __ralloc.v0[250]
    tmp1822 = __ralloc.v0[251]
    tmp1823 = __ralloc.v0[252]
    tmp1828 = __ralloc.v0[253]
    tmp1829 = __ralloc.v0[254]
    tmp1830 = __ralloc.v0[255]
    tmp1831 = __ralloc.v0[256]
    tmp1832 = __ralloc.v0[257]
    tmp1833 = __ralloc.v0[258]
    tmp1835 = __ralloc.v0[259]
    tmp1836 = __ralloc.v0[260]
    tmp1837 = __ralloc.v0[261]
    tmp1838 = __ralloc.v0[262]
    tmp1840 = __ralloc.v0[263]
    tmp1841 = __ralloc.v0[264]
    tmp1843 = __ralloc.v0[265]
    tmp1844 = __ralloc.v0[266]
    tmp1845 = __ralloc.v0[267]
    tmp1846 = __ralloc.v0[268]
    tmp1848 = __ralloc.v0[269]
    tmp1849 = __ralloc.v0[270]
    tmp1850 = __ralloc.v0[271]
    tmp1851 = __ralloc.v0[272]
    tmp1853 = __ralloc.v0[273]
    tmp1854 = __ralloc.v0[274]
    tmp1855 = __ralloc.v0[275]
    tmp1856 = __ralloc.v0[276]
    tmp1858 = __ralloc.v0[277]
    tmp1859 = __ralloc.v0[278]
    tmp1861 = __ralloc.v0[279]
    tmp1862 = __ralloc.v0[280]
    ϕ_m = __ralloc.v0[281]
    θ_m = __ralloc.v0[282]
    ψ_m = __ralloc.v0[283]
    tmp1867 = __ralloc.v0[284]
    tmp1868 = __ralloc.v0[285]
    tmp1869 = __ralloc.v0[286]
    tmp1870 = __ralloc.v0[287]
    tmp1871 = __ralloc.v0[288]
    tmp1872 = __ralloc.v0[289]
    tmp1873 = __ralloc.v0[290]
    tmp1874 = __ralloc.v0[291]
    tmp1875 = __ralloc.v0[292]
    tmp1876 = __ralloc.v0[293]
    tmp1877 = __ralloc.v0[294]
    tmp1878 = __ralloc.v0[295]
    tmp1879 = __ralloc.v0[296]
    tmp1880 = __ralloc.v0[297]
    tmp1881 = __ralloc.v0[298]
    tmp1882 = __ralloc.v0[299]
    tmp1883 = __ralloc.v0[300]
    tmp1884 = __ralloc.v0[301]
    tmp1885 = __ralloc.v0[302]
    tmp1886 = __ralloc.v0[303]
    tmp1887 = __ralloc.v0[304]
    tmp1888 = __ralloc.v0[305]
    tmp1889 = __ralloc.v0[306]
    tmp1890 = __ralloc.v0[307]
    tmp1891 = __ralloc.v0[308]
    tmp1892 = __ralloc.v0[309]
    tmp1893 = __ralloc.v0[310]
    tmp1894 = __ralloc.v0[311]
    tmp1895 = __ralloc.v0[312]
    ϕ_c = __ralloc.v0[313]
    tmp1896 = __ralloc.v0[314]
    tmp1897 = __ralloc.v0[315]
    tmp1898 = __ralloc.v0[316]
    tmp1899 = __ralloc.v0[317]
    tmp1900 = __ralloc.v0[318]
    tmp1901 = __ralloc.v0[319]
    tmp1902 = __ralloc.v0[320]
    tmp1903 = __ralloc.v0[321]
    tmp1904 = __ralloc.v0[322]
    tmp1905 = __ralloc.v0[323]
    tmp1906 = __ralloc.v0[324]
    tmp1907 = __ralloc.v0[325]
    ω_c_CE_1 = __ralloc.v0[326]
    ω_c_CE_2 = __ralloc.v0[327]
    ω_c_CE_3 = __ralloc.v0[328]
    J2M_t = __ralloc.v0[329]
    C22M_t = __ralloc.v0[330]
    C21M_t = __ralloc.v0[331]
    S21M_t = __ralloc.v0[332]
    S22M_t = __ralloc.v0[333]
    Iω_x = __ralloc.v0[334]
    Iω_y = __ralloc.v0[335]
    Iω_z = __ralloc.v0[336]
    ωxIω_x = __ralloc.v0[337]
    ωxIω_y = __ralloc.v0[338]
    ωxIω_z = __ralloc.v0[339]
    dIω_x = __ralloc.v0[340]
    dIω_y = __ralloc.v0[341]
    dIω_z = __ralloc.v0[342]
    er_EM_I_1 = __ralloc.v0[343]
    er_EM_I_2 = __ralloc.v0[344]
    er_EM_I_3 = __ralloc.v0[345]
    p_E_I_1 = __ralloc.v0[346]
    p_E_I_2 = __ralloc.v0[347]
    p_E_I_3 = __ralloc.v0[348]
    er_EM_1 = __ralloc.v0[349]
    er_EM_2 = __ralloc.v0[350]
    er_EM_3 = __ralloc.v0[351]
    p_E_1 = __ralloc.v0[352]
    p_E_2 = __ralloc.v0[353]
    p_E_3 = __ralloc.v0[354]
    I_er_EM_1 = __ralloc.v0[355]
    I_er_EM_2 = __ralloc.v0[356]
    I_er_EM_3 = __ralloc.v0[357]
    I_p_E_1 = __ralloc.v0[358]
    I_p_E_2 = __ralloc.v0[359]
    I_p_E_3 = __ralloc.v0[360]
    er_EM_cross_I_er_EM_1 = __ralloc.v0[361]
    er_EM_cross_I_er_EM_2 = __ralloc.v0[362]
    er_EM_cross_I_er_EM_3 = __ralloc.v0[363]
    er_EM_cross_I_p_E_1 = __ralloc.v0[364]
    er_EM_cross_I_p_E_2 = __ralloc.v0[365]
    er_EM_cross_I_p_E_3 = __ralloc.v0[366]
    p_E_cross_I_er_EM_1 = __ralloc.v0[367]
    p_E_cross_I_er_EM_2 = __ralloc.v0[368]
    p_E_cross_I_er_EM_3 = __ralloc.v0[369]
    p_E_cross_I_p_E_1 = __ralloc.v0[370]
    p_E_cross_I_p_E_2 = __ralloc.v0[371]
    p_E_cross_I_p_E_3 = __ralloc.v0[372]
    one_minus_7sin2ϕEM = __ralloc.v0[373]
    two_sinϕEM = __ralloc.v0[374]
    N_MfigM_figE_factor_div_rEMp5 = __ralloc.v0[375]
    N_MfigM_figE_1 = __ralloc.v0[376]
    N_MfigM_figE_2 = __ralloc.v0[377]
    N_MfigM_figE_3 = __ralloc.v0[378]
    N_1_LMF = __ralloc.v0[379]
    N_2_LMF = __ralloc.v0[380]
    N_3_LMF = __ralloc.v0[381]
    N_cmb_1 = __ralloc.v0[382]
    N_cmb_2 = __ralloc.v0[383]
    N_cmb_3 = __ralloc.v0[384]
    I_dω_1 = __ralloc.v0[385]
    I_dω_2 = __ralloc.v0[386]
    I_dω_3 = __ralloc.v0[387]
    Ic_ωc_1 = __ralloc.v0[388]
    Ic_ωc_2 = __ralloc.v0[389]
    Ic_ωc_3 = __ralloc.v0[390]
    m_ωm_x_Icωc_1 = __ralloc.v0[391]
    m_ωm_x_Icωc_2 = __ralloc.v0[392]
    m_ωm_x_Icωc_3 = __ralloc.v0[393]
    Ic_dωc_1 = __ralloc.v0[394]
    Ic_dωc_2 = __ralloc.v0[395]
    Ic_dωc_3 = __ralloc.v0[396]
    tmp1908 = __ralloc.v0[397]
    tmp1909 = __ralloc.v0[398]
    tmp1910 = __ralloc.v0[399]
    tmp1911 = __ralloc.v0[400]
    tmp1912 = __ralloc.v0[401]
    tmp1913 = __ralloc.v0[402]
    tmp1914 = __ralloc.v0[403]
    tmp1915 = __ralloc.v0[404]
    newtonX = __ralloc.v1[1]
    newtonY = __ralloc.v1[2]
    newtonZ = __ralloc.v1[3]
    newtonianNb_Potential = __ralloc.v1[4]
    v2 = __ralloc.v1[5]
    pntempX = __ralloc.v1[6]
    pntempY = __ralloc.v1[7]
    pntempZ = __ralloc.v1[8]
    postNewtonX = __ralloc.v1[9]
    postNewtonY = __ralloc.v1[10]
    postNewtonZ = __ralloc.v1[11]
    accX = __ralloc.v1[12]
    accY = __ralloc.v1[13]
    accZ = __ralloc.v1[14]
    N_MfigM_pmA_x = __ralloc.v1[15]
    N_MfigM_pmA_y = __ralloc.v1[16]
    N_MfigM_pmA_z = __ralloc.v1[17]
    temp_N_M_x = __ralloc.v1[18]
    temp_N_M_y = __ralloc.v1[19]
    temp_N_M_z = __ralloc.v1[20]
    N_MfigM = __ralloc.v1[21]
    J2_t = __ralloc.v1[22]
    tmp1239 = __ralloc.v1[23]
    tmp1241 = __ralloc.v1[24]
    tmp1244 = __ralloc.v1[25]
    tmp1246 = __ralloc.v1[26]
    tmp1249 = __ralloc.v1[27]
    tmp1251 = __ralloc.v1[28]
    tmp1295 = __ralloc.v1[29]
    tmp1297 = __ralloc.v1[30]
    tmp1298 = __ralloc.v1[31]
    tmp1300 = __ralloc.v1[32]
    X = __ralloc.v2[1]
    Y = __ralloc.v2[2]
    Z = __ralloc.v2[3]
    r_p2 = __ralloc.v2[4]
    r_p1d2 = __ralloc.v2[5]
    r_p3d2 = __ralloc.v2[6]
    r_p7d2 = __ralloc.v2[7]
    newtonianCoeff = __ralloc.v2[8]
    U = __ralloc.v2[9]
    V = __ralloc.v2[10]
    W = __ralloc.v2[11]
    _4U_m_3X = __ralloc.v2[12]
    _4V_m_3Y = __ralloc.v2[13]
    _4W_m_3Z = __ralloc.v2[14]
    UU = __ralloc.v2[15]
    VV = __ralloc.v2[16]
    WW = __ralloc.v2[17]
    newtonian1b_Potential = __ralloc.v2[18]
    newton_acc_X = __ralloc.v2[19]
    newton_acc_Y = __ralloc.v2[20]
    newton_acc_Z = __ralloc.v2[21]
    _2v2 = __ralloc.v2[22]
    vi_dot_vj = __ralloc.v2[23]
    pn2 = __ralloc.v2[24]
    U_t_pn2 = __ralloc.v2[25]
    V_t_pn2 = __ralloc.v2[26]
    W_t_pn2 = __ralloc.v2[27]
    pn3 = __ralloc.v2[28]
    pNX_t_pn3 = __ralloc.v2[29]
    pNY_t_pn3 = __ralloc.v2[30]
    pNZ_t_pn3 = __ralloc.v2[31]
    _4ϕj = __ralloc.v2[32]
    ϕi_plus_4ϕj = __ralloc.v2[33]
    sj2_plus_2si2 = __ralloc.v2[34]
    sj2_plus_2si2_minus_4vivj = __ralloc.v2[35]
    ϕs_and_vs = __ralloc.v2[36]
    pn1t1_7 = __ralloc.v2[37]
    pNX_t_X = __ralloc.v2[38]
    pNY_t_Y = __ralloc.v2[39]
    pNZ_t_Z = __ralloc.v2[40]
    pn1 = __ralloc.v2[41]
    X_t_pn1 = __ralloc.v2[42]
    Y_t_pn1 = __ralloc.v2[43]
    Z_t_pn1 = __ralloc.v2[44]
    X_bf_1 = __ralloc.v2[45]
    Y_bf_1 = __ralloc.v2[46]
    Z_bf_1 = __ralloc.v2[47]
    X_bf_2 = __ralloc.v2[48]
    Y_bf_2 = __ralloc.v2[49]
    Z_bf_2 = __ralloc.v2[50]
    X_bf_3 = __ralloc.v2[51]
    Y_bf_3 = __ralloc.v2[52]
    Z_bf_3 = __ralloc.v2[53]
    X_bf = __ralloc.v2[54]
    Y_bf = __ralloc.v2[55]
    Z_bf = __ralloc.v2[56]
    F_JCS_x = __ralloc.v2[57]
    F_JCS_y = __ralloc.v2[58]
    F_JCS_z = __ralloc.v2[59]
    temp_accX_j = __ralloc.v2[60]
    temp_accY_j = __ralloc.v2[61]
    temp_accZ_j = __ralloc.v2[62]
    temp_accX_i = __ralloc.v2[63]
    temp_accY_i = __ralloc.v2[64]
    temp_accZ_i = __ralloc.v2[65]
    sin_ϕ = __ralloc.v2[66]
    cos_ϕ = __ralloc.v2[67]
    sin_λ = __ralloc.v2[68]
    cos_λ = __ralloc.v2[69]
    r_xy = __ralloc.v2[70]
    r_p4 = __ralloc.v2[71]
    F_CS_ξ_36 = __ralloc.v2[72]
    F_CS_η_36 = __ralloc.v2[73]
    F_CS_ζ_36 = __ralloc.v2[74]
    F_J_ξ_36 = __ralloc.v2[75]
    F_J_ζ_36 = __ralloc.v2[76]
    F_J_ξ = __ralloc.v2[77]
    F_J_ζ = __ralloc.v2[78]
    F_CS_ξ = __ralloc.v2[79]
    F_CS_η = __ralloc.v2[80]
    F_CS_ζ = __ralloc.v2[81]
    F_JCS_ξ = __ralloc.v2[82]
    F_JCS_η = __ralloc.v2[83]
    F_JCS_ζ = __ralloc.v2[84]
    mantlef2coref = __ralloc.v2[85]
    pn2x = __ralloc.v2[86]
    pn2y = __ralloc.v2[87]
    pn2z = __ralloc.v2[88]
    tmp1259 = __ralloc.v2[89]
    tmp1262 = __ralloc.v2[90]
    tmp1264 = __ralloc.v2[91]
    tmp1265 = __ralloc.v2[92]
    tmp1267 = __ralloc.v2[93]
    tmp1275 = __ralloc.v2[94]
    tmp1276 = __ralloc.v2[95]
    tmp1287 = __ralloc.v2[96]
    temp_001 = __ralloc.v2[97]
    tmp1289 = __ralloc.v2[98]
    temp_002 = __ralloc.v2[99]
    tmp1291 = __ralloc.v2[100]
    temp_003 = __ralloc.v2[101]
    temp_004 = __ralloc.v2[102]
    tmp1328 = __ralloc.v2[103]
    tmp1330 = __ralloc.v2[104]
    tmp1332 = __ralloc.v2[105]
    tmp1336 = __ralloc.v2[106]
    tmp1338 = __ralloc.v2[107]
    tmp1339 = __ralloc.v2[108]
    tmp1445 = __ralloc.v2[109]
    tmp1446 = __ralloc.v2[110]
    tmp1449 = __ralloc.v2[111]
    tmp1450 = __ralloc.v2[112]
    tmp1456 = __ralloc.v2[113]
    tmp1459 = __ralloc.v2[114]
    tmp1521 = __ralloc.v2[115]
    tmp1523 = __ralloc.v2[116]
    tmp1525 = __ralloc.v2[117]
    tmp1527 = __ralloc.v2[118]
    tmp1529 = __ralloc.v2[119]
    tmp1531 = __ralloc.v2[120]
    tmp1533 = __ralloc.v2[121]
    tmp1534 = __ralloc.v2[122]
    tmp1535 = __ralloc.v2[123]
    tmp1537 = __ralloc.v2[124]
    tmp1538 = __ralloc.v2[125]
    tmp1539 = __ralloc.v2[126]
    tmp1541 = __ralloc.v2[127]
    tmp1542 = __ralloc.v2[128]
    tmp1543 = __ralloc.v2[129]
    tmp1555 = __ralloc.v2[130]
    Xij_t_Ui = __ralloc.v2[131]
    Yij_t_Vi = __ralloc.v2[132]
    Zij_t_Wi = __ralloc.v2[133]
    tmp1561 = __ralloc.v2[134]
    Rij_dot_Vi = __ralloc.v2[135]
    tmp1564 = __ralloc.v2[136]
    pn1t7 = __ralloc.v2[137]
    tmp1567 = __ralloc.v2[138]
    pn1t2_7 = __ralloc.v2[139]
    tmp1574 = __ralloc.v2[140]
    tmp1575 = __ralloc.v2[141]
    tmp1576 = __ralloc.v2[142]
    tmp1584 = __ralloc.v2[143]
    termpnx = __ralloc.v2[144]
    sumpnx = __ralloc.v2[145]
    tmp1587 = __ralloc.v2[146]
    termpny = __ralloc.v2[147]
    sumpny = __ralloc.v2[148]
    tmp1590 = __ralloc.v2[149]
    termpnz = __ralloc.v2[150]
    sumpnz = __ralloc.v2[151]
    P_n = __ralloc.v3[1]
    dP_n = __ralloc.v3[2]
    temp_fjξ = __ralloc.v3[3]
    temp_fjζ = __ralloc.v3[4]
    temp_rn = __ralloc.v3[5]
    sin_mλ = __ralloc.v3[6]
    cos_mλ = __ralloc.v3[7]
    RotM = __ralloc.v3[8]
    tmp1344 = __ralloc.v3[9]
    tmp1345 = __ralloc.v3[10]
    tmp1346 = __ralloc.v3[11]
    tmp1348 = __ralloc.v3[12]
    tmp1349 = __ralloc.v3[13]
    tmp1354 = __ralloc.v3[14]
    tmp1355 = __ralloc.v3[15]
    tmp1357 = __ralloc.v3[16]
    tmp1358 = __ralloc.v3[17]
    tmp1359 = __ralloc.v3[18]
    tmp1361 = __ralloc.v3[19]
    tmp1362 = __ralloc.v3[20]
    tmp1363 = __ralloc.v3[21]
    tmp1365 = __ralloc.v3[22]
    tmp1366 = __ralloc.v3[23]
    tmp1367 = __ralloc.v3[24]
    tmp1368 = __ralloc.v3[25]
    tmp1371 = __ralloc.v3[26]
    tmp1372 = __ralloc.v3[27]
    tmp1374 = __ralloc.v3[28]
    tmp1375 = __ralloc.v3[29]
    tmp1394 = __ralloc.v3[30]
    tmp1395 = __ralloc.v3[31]
    tmp1396 = __ralloc.v3[32]
    tmp1399 = __ralloc.v3[33]
    tmp1400 = __ralloc.v3[34]
    tmp1401 = __ralloc.v3[35]
    tmp1406 = __ralloc.v3[36]
    tmp1407 = __ralloc.v3[37]
    tmp1408 = __ralloc.v3[38]
    tmp1411 = __ralloc.v3[39]
    tmp1412 = __ralloc.v3[40]
    tmp1413 = __ralloc.v3[41]
    tmp1417 = __ralloc.v3[42]
    tmp1418 = __ralloc.v3[43]
    tmp1419 = __ralloc.v3[44]
    tmp1421 = __ralloc.v3[45]
    tmp1422 = __ralloc.v3[46]
    tmp1423 = __ralloc.v3[47]
    temp_CS_ξ = __ralloc.v4[1]
    temp_CS_η = __ralloc.v4[2]
    temp_CS_ζ = __ralloc.v4[3]
    Cnm_cosmλ = __ralloc.v4[4]
    Cnm_sinmλ = __ralloc.v4[5]
    Snm_cosmλ = __ralloc.v4[6]
    Snm_sinmλ = __ralloc.v4[7]
    secϕ_P_nm = __ralloc.v4[8]
    P_nm = __ralloc.v4[9]
    cosϕ_dP_nm = __ralloc.v4[10]
    Rb2p = __ralloc.v4[11]
    Gc2p = __ralloc.v4[12]
    tmp1377 = __ralloc.v4[13]
    tmp1380 = __ralloc.v4[14]
    tmp1382 = __ralloc.v4[15]
    tmp1384 = __ralloc.v4[16]
    tmp1385 = __ralloc.v4[17]
    tmp1386 = __ralloc.v4[18]
    tmp1389 = __ralloc.v4[19]
    tmp1390 = __ralloc.v4[20]
    tmp1391 = __ralloc.v4[21]
    tmp1393 = __ralloc.v4[22]
    tmp1397 = __ralloc.v4[23]
    tmp1398 = __ralloc.v4[24]
    tmp1402 = __ralloc.v4[25]
    tmp1403 = __ralloc.v4[26]
    tmp1405 = __ralloc.v4[27]
    tmp1409 = __ralloc.v4[28]
    tmp1410 = __ralloc.v4[29]
    tmp1414 = __ralloc.v4[30]
    tmp1415 = __ralloc.v4[31]
    tmp1420 = __ralloc.v4[32]
    tmp1424 = __ralloc.v4[33]
    tmp1425 = __ralloc.v4[34]
    tmp1431 = __ralloc.v4[35]
    tmp1432 = __ralloc.v4[36]
    tmp1433 = __ralloc.v4[37]
    tmp1434 = __ralloc.v4[38]
    tmp1436 = __ralloc.v4[39]
    tmp1437 = __ralloc.v4[40]
    tmp1438 = __ralloc.v4[41]
    tmp1439 = __ralloc.v4[42]
    tmp1441 = __ralloc.v4[43]
    tmp1442 = __ralloc.v4[44]
    tmp1443 = __ralloc.v4[45]
    tmp1461 = __ralloc.v4[46]
    tmp1462 = __ralloc.v4[47]
    tmp1463 = __ralloc.v4[48]
    tmp1464 = __ralloc.v4[49]
    tmp1466 = __ralloc.v4[50]
    tmp1467 = __ralloc.v4[51]
    tmp1468 = __ralloc.v4[52]
    tmp1469 = __ralloc.v4[53]
    tmp1471 = __ralloc.v4[54]
    tmp1472 = __ralloc.v4[55]
    tmp1473 = __ralloc.v4[56]
    tmp1474 = __ralloc.v4[57]
    tmp1476 = __ralloc.v4[58]
    tmp1477 = __ralloc.v4[59]
    tmp1478 = __ralloc.v4[60]
    tmp1479 = __ralloc.v4[61]
    tmp1481 = __ralloc.v4[62]
    tmp1482 = __ralloc.v4[63]
    tmp1483 = __ralloc.v4[64]
    tmp1484 = __ralloc.v4[65]
    tmp1486 = __ralloc.v4[66]
    tmp1487 = __ralloc.v4[67]
    tmp1488 = __ralloc.v4[68]
    tmp1489 = __ralloc.v4[69]
    tmp1491 = __ralloc.v4[70]
    tmp1492 = __ralloc.v4[71]
    tmp1493 = __ralloc.v4[72]
    tmp1494 = __ralloc.v4[73]
    tmp1496 = __ralloc.v4[74]
    tmp1497 = __ralloc.v4[75]
    tmp1498 = __ralloc.v4[76]
    tmp1499 = __ralloc.v4[77]
    tmp1501 = __ralloc.v4[78]
    tmp1502 = __ralloc.v4[79]
    tmp1503 = __ralloc.v4[80]
    tmp1504 = __ralloc.v4[81]
    tmp1506 = __ralloc.v4[82]
    tmp1507 = __ralloc.v4[83]
    tmp1508 = __ralloc.v4[84]
    tmp1509 = __ralloc.v4[85]
    tmp1511 = __ralloc.v4[86]
    tmp1512 = __ralloc.v4[87]
    tmp1513 = __ralloc.v4[88]
    tmp1514 = __ralloc.v4[89]
    tmp1516 = __ralloc.v4[90]
    tmp1517 = __ralloc.v4[91]
    tmp1518 = __ralloc.v4[92]
    tmp1519 = __ralloc.v4[93]
    local (N, jd0) = params
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    TaylorSeries.zero!(N_MfigM[1])
    (N_MfigM[1]).coeffs[1] = identity(constant_term(zero_q_1))
    TaylorSeries.zero!(N_MfigM[2])
    (N_MfigM[2]).coeffs[1] = identity(constant_term(zero_q_1))
    TaylorSeries.zero!(N_MfigM[3])
    (N_MfigM[3]).coeffs[1] = identity(constant_term(zero_q_1))
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    TaylorSeries.zero!(ϕ_m)
    ϕ_m.coeffs[1] = identity(constant_term(q[6N + 1]))
    TaylorSeries.zero!(θ_m)
    θ_m.coeffs[1] = identity(constant_term(q[6N + 2]))
    TaylorSeries.zero!(ψ_m)
    ψ_m.coeffs[1] = identity(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1133)
    tmp1133.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1867)
    tmp1867.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1134)
    tmp1134.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1868)
    tmp1868.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1135)
    tmp1135.coeffs[1] = constant_term(tmp1133) * constant_term(tmp1134)
    TaylorSeries.zero!(tmp1136)
    tmp1136.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp1869)
    tmp1869.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp1137)
    tmp1137.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1870)
    tmp1870.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1138)
    tmp1138.coeffs[1] = constant_term(tmp1136) * constant_term(tmp1137)
    TaylorSeries.zero!(tmp1139)
    tmp1139.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1871)
    tmp1871.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1140)
    tmp1140.coeffs[1] = constant_term(tmp1138) * constant_term(tmp1139)
    TaylorSeries.zero!(RotM[1, 1, mo])
    (RotM[1, 1, mo]).coeffs[1] = constant_term(tmp1135) - constant_term(tmp1140)
    TaylorSeries.zero!(tmp1142)
    tmp1142.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp1872)
    tmp1872.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp1143)
    tmp1143.coeffs[1] = -(constant_term(tmp1142))
    TaylorSeries.zero!(tmp1144)
    tmp1144.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1873)
    tmp1873.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1145)
    tmp1145.coeffs[1] = constant_term(tmp1143) * constant_term(tmp1144)
    TaylorSeries.zero!(tmp1146)
    tmp1146.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1874)
    tmp1874.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1147)
    tmp1147.coeffs[1] = constant_term(tmp1145) * constant_term(tmp1146)
    TaylorSeries.zero!(tmp1148)
    tmp1148.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1875)
    tmp1875.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1149)
    tmp1149.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1876)
    tmp1876.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1150)
    tmp1150.coeffs[1] = constant_term(tmp1148) * constant_term(tmp1149)
    TaylorSeries.zero!(RotM[2, 1, mo])
    (RotM[2, 1, mo]).coeffs[1] = constant_term(tmp1147) - constant_term(tmp1150)
    TaylorSeries.zero!(tmp1152)
    tmp1152.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp1877)
    tmp1877.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp1153)
    tmp1153.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1878)
    tmp1878.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(RotM[3, 1, mo])
    (RotM[3, 1, mo]).coeffs[1] = constant_term(tmp1152) * constant_term(tmp1153)
    TaylorSeries.zero!(tmp1155)
    tmp1155.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1879)
    tmp1879.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1156)
    tmp1156.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1880)
    tmp1880.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1157)
    tmp1157.coeffs[1] = constant_term(tmp1155) * constant_term(tmp1156)
    TaylorSeries.zero!(tmp1158)
    tmp1158.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp1881)
    tmp1881.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp1159)
    tmp1159.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1882)
    tmp1882.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1160)
    tmp1160.coeffs[1] = constant_term(tmp1158) * constant_term(tmp1159)
    TaylorSeries.zero!(tmp1161)
    tmp1161.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1883)
    tmp1883.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1162)
    tmp1162.coeffs[1] = constant_term(tmp1160) * constant_term(tmp1161)
    TaylorSeries.zero!(RotM[1, 2, mo])
    (RotM[1, 2, mo]).coeffs[1] = constant_term(tmp1157) + constant_term(tmp1162)
    TaylorSeries.zero!(tmp1164)
    tmp1164.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp1884)
    tmp1884.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp1165)
    tmp1165.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1885)
    tmp1885.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1166)
    tmp1166.coeffs[1] = constant_term(tmp1164) * constant_term(tmp1165)
    TaylorSeries.zero!(tmp1167)
    tmp1167.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1886)
    tmp1886.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1168)
    tmp1168.coeffs[1] = constant_term(tmp1166) * constant_term(tmp1167)
    TaylorSeries.zero!(tmp1169)
    tmp1169.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1887)
    tmp1887.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1170)
    tmp1170.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1888)
    tmp1888.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1171)
    tmp1171.coeffs[1] = constant_term(tmp1169) * constant_term(tmp1170)
    TaylorSeries.zero!(RotM[2, 2, mo])
    (RotM[2, 2, mo]).coeffs[1] = constant_term(tmp1168) - constant_term(tmp1171)
    TaylorSeries.zero!(tmp1173)
    tmp1173.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1889)
    tmp1889.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp1174)
    tmp1174.coeffs[1] = -(constant_term(tmp1173))
    TaylorSeries.zero!(tmp1175)
    tmp1175.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp1890)
    tmp1890.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(RotM[3, 2, mo])
    (RotM[3, 2, mo]).coeffs[1] = constant_term(tmp1174) * constant_term(tmp1175)
    TaylorSeries.zero!(tmp1177)
    tmp1177.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp1891)
    tmp1891.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp1178)
    tmp1178.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1892)
    tmp1892.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(RotM[1, 3, mo])
    (RotM[1, 3, mo]).coeffs[1] = constant_term(tmp1177) * constant_term(tmp1178)
    TaylorSeries.zero!(tmp1180)
    tmp1180.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1893)
    tmp1893.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp1181)
    tmp1181.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp1894)
    tmp1894.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(RotM[2, 3, mo])
    (RotM[2, 3, mo]).coeffs[1] = constant_term(tmp1180) * constant_term(tmp1181)
    TaylorSeries.zero!(RotM[3, 3, mo])
    (RotM[3, 3, mo]).coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp1895)
    tmp1895.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(ϕ_c)
    ϕ_c.coeffs[1] = identity(constant_term(q[6N + 7]))
    TaylorSeries.zero!(tmp1184)
    tmp1184.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1896)
    tmp1896.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1185)
    tmp1185.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(tmp1184)
    TaylorSeries.zero!(tmp1186)
    tmp1186.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1897)
    tmp1897.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1187)
    tmp1187.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp1186)
    TaylorSeries.zero!(mantlef2coref[1, 1])
    (mantlef2coref[1, 1]).coeffs[1] = constant_term(tmp1185) + constant_term(tmp1187)
    TaylorSeries.zero!(tmp1189)
    tmp1189.coeffs[1] = -(constant_term(RotM[1, 1, mo]))
    TaylorSeries.zero!(tmp1190)
    tmp1190.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1898)
    tmp1898.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1191)
    tmp1191.coeffs[1] = constant_term(tmp1189) * constant_term(tmp1190)
    TaylorSeries.zero!(tmp1192)
    tmp1192.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1899)
    tmp1899.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1193)
    tmp1193.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp1192)
    TaylorSeries.zero!(mantlef2coref[2, 1])
    (mantlef2coref[2, 1]).coeffs[1] = constant_term(tmp1191) + constant_term(tmp1193)
    TaylorSeries.zero!(mantlef2coref[3, 1])
    (mantlef2coref[3, 1]).coeffs[1] = identity(constant_term(RotM[1, 3, mo]))
    TaylorSeries.zero!(tmp1195)
    tmp1195.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1900)
    tmp1900.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1196)
    tmp1196.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(tmp1195)
    TaylorSeries.zero!(tmp1197)
    tmp1197.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1901)
    tmp1901.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1198)
    tmp1198.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp1197)
    TaylorSeries.zero!(mantlef2coref[1, 2])
    (mantlef2coref[1, 2]).coeffs[1] = constant_term(tmp1196) + constant_term(tmp1198)
    TaylorSeries.zero!(tmp1200)
    tmp1200.coeffs[1] = -(constant_term(RotM[2, 1, mo]))
    TaylorSeries.zero!(tmp1201)
    tmp1201.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1902)
    tmp1902.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1202)
    tmp1202.coeffs[1] = constant_term(tmp1200) * constant_term(tmp1201)
    TaylorSeries.zero!(tmp1203)
    tmp1203.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1903)
    tmp1903.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1204)
    tmp1204.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp1203)
    TaylorSeries.zero!(mantlef2coref[2, 2])
    (mantlef2coref[2, 2]).coeffs[1] = constant_term(tmp1202) + constant_term(tmp1204)
    TaylorSeries.zero!(mantlef2coref[3, 2])
    (mantlef2coref[3, 2]).coeffs[1] = identity(constant_term(RotM[2, 3, mo]))
    TaylorSeries.zero!(tmp1206)
    tmp1206.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1904)
    tmp1904.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1207)
    tmp1207.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(tmp1206)
    TaylorSeries.zero!(tmp1208)
    tmp1208.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1905)
    tmp1905.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1209)
    tmp1209.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp1208)
    TaylorSeries.zero!(mantlef2coref[1, 3])
    (mantlef2coref[1, 3]).coeffs[1] = constant_term(tmp1207) + constant_term(tmp1209)
    TaylorSeries.zero!(tmp1211)
    tmp1211.coeffs[1] = -(constant_term(RotM[3, 1, mo]))
    TaylorSeries.zero!(tmp1212)
    tmp1212.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1906)
    tmp1906.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1213)
    tmp1213.coeffs[1] = constant_term(tmp1211) * constant_term(tmp1212)
    TaylorSeries.zero!(tmp1214)
    tmp1214.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1907)
    tmp1907.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp1215)
    tmp1215.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp1214)
    TaylorSeries.zero!(mantlef2coref[2, 3])
    (mantlef2coref[2, 3]).coeffs[1] = constant_term(tmp1213) + constant_term(tmp1215)
    TaylorSeries.zero!(mantlef2coref[3, 3])
    (mantlef2coref[3, 3]).coeffs[1] = identity(constant_term(RotM[3, 3, mo]))
    TaylorSeries.zero!(tmp1217)
    tmp1217.coeffs[1] = constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10])
    TaylorSeries.zero!(tmp1218)
    tmp1218.coeffs[1] = constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11])
    TaylorSeries.zero!(tmp1219)
    tmp1219.coeffs[1] = constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp1220)
    tmp1220.coeffs[1] = constant_term(tmp1218) + constant_term(tmp1219)
    TaylorSeries.zero!(ω_c_CE_1)
    ω_c_CE_1.coeffs[1] = constant_term(tmp1217) + constant_term(tmp1220)
    TaylorSeries.zero!(tmp1222)
    tmp1222.coeffs[1] = constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10])
    TaylorSeries.zero!(tmp1223)
    tmp1223.coeffs[1] = constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11])
    TaylorSeries.zero!(tmp1224)
    tmp1224.coeffs[1] = constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp1225)
    tmp1225.coeffs[1] = constant_term(tmp1223) + constant_term(tmp1224)
    TaylorSeries.zero!(ω_c_CE_2)
    ω_c_CE_2.coeffs[1] = constant_term(tmp1222) + constant_term(tmp1225)
    TaylorSeries.zero!(tmp1227)
    tmp1227.coeffs[1] = constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10])
    TaylorSeries.zero!(tmp1228)
    tmp1228.coeffs[1] = constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11])
    TaylorSeries.zero!(tmp1229)
    tmp1229.coeffs[1] = constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp1230)
    tmp1230.coeffs[1] = constant_term(tmp1228) + constant_term(tmp1229)
    TaylorSeries.zero!(ω_c_CE_3)
    ω_c_CE_3.coeffs[1] = constant_term(tmp1227) + constant_term(tmp1230)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    TaylorSeries.zero!(J2_t[su])
    (J2_t[su]).coeffs[1] = identity(constant_term(J2S_t))
    TaylorSeries.zero!(J2_t[ea])
    (J2_t[ea]).coeffs[1] = identity(constant_term(J2E_t))
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:309 =# Threads.@threads for j = 1:N
            TaylorSeries.zero!(newtonX[j])
            (newtonX[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(newtonY[j])
            (newtonY[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(newtonZ[j])
            (newtonZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(newtonianNb_Potential[j])
            (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(dq[3j - 2])
            (dq[3j - 2]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 2]))
            TaylorSeries.zero!(dq[3j - 1])
            (dq[3j - 1]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 1]))
            TaylorSeries.zero!(dq[3j])
            (dq[3j]).coeffs[1] = identity(constant_term(q[3 * (N + j)]))
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:321 =# Threads.@threads for j = 1:N_ext
            TaylorSeries.zero!(accX[j])
            (accX[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(accY[j])
            (accY[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(accZ[j])
            (accZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:327 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.zero!(X[i, j])
                    (X[i, j]).coeffs[1] = constant_term(q[3i - 2]) - constant_term(q[3j - 2])
                    TaylorSeries.zero!(Y[i, j])
                    (Y[i, j]).coeffs[1] = constant_term(q[3i - 1]) - constant_term(q[3j - 1])
                    TaylorSeries.zero!(Z[i, j])
                    (Z[i, j]).coeffs[1] = constant_term(q[3i]) - constant_term(q[3j])
                    TaylorSeries.zero!(U[i, j])
                    (U[i, j]).coeffs[1] = constant_term(dq[3i - 2]) - constant_term(dq[3j - 2])
                    TaylorSeries.zero!(V[i, j])
                    (V[i, j]).coeffs[1] = constant_term(dq[3i - 1]) - constant_term(dq[3j - 1])
                    TaylorSeries.zero!(W[i, j])
                    (W[i, j]).coeffs[1] = constant_term(dq[3i]) - constant_term(dq[3j])
                    TaylorSeries.zero!(tmp1239[3j - 2])
                    (tmp1239[3j - 2]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 2])
                    TaylorSeries.zero!(tmp1241[3i - 2])
                    (tmp1241[3i - 2]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 2])
                    TaylorSeries.zero!(_4U_m_3X[i, j])
                    (_4U_m_3X[i, j]).coeffs[1] = constant_term(tmp1239[3j - 2]) - constant_term(tmp1241[3i - 2])
                    TaylorSeries.zero!(tmp1244[3j - 1])
                    (tmp1244[3j - 1]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 1])
                    TaylorSeries.zero!(tmp1246[3i - 1])
                    (tmp1246[3i - 1]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 1])
                    TaylorSeries.zero!(_4V_m_3Y[i, j])
                    (_4V_m_3Y[i, j]).coeffs[1] = constant_term(tmp1244[3j - 1]) - constant_term(tmp1246[3i - 1])
                    TaylorSeries.zero!(tmp1249[3j])
                    (tmp1249[3j]).coeffs[1] = constant_term(4) * constant_term(dq[3j])
                    TaylorSeries.zero!(tmp1251[3i])
                    (tmp1251[3i]).coeffs[1] = constant_term(3) * constant_term(dq[3i])
                    TaylorSeries.zero!(_4W_m_3Z[i, j])
                    (_4W_m_3Z[i, j]).coeffs[1] = constant_term(tmp1249[3j]) - constant_term(tmp1251[3i])
                    TaylorSeries.zero!(pn2x[i, j])
                    (pn2x[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j])
                    TaylorSeries.zero!(pn2y[i, j])
                    (pn2y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j])
                    TaylorSeries.zero!(pn2z[i, j])
                    (pn2z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j])
                    TaylorSeries.zero!(UU[i, j])
                    (UU[i, j]).coeffs[1] = constant_term(dq[3i - 2]) * constant_term(dq[3j - 2])
                    TaylorSeries.zero!(VV[i, j])
                    (VV[i, j]).coeffs[1] = constant_term(dq[3i - 1]) * constant_term(dq[3j - 1])
                    TaylorSeries.zero!(WW[i, j])
                    (WW[i, j]).coeffs[1] = constant_term(dq[3i]) * constant_term(dq[3j])
                    TaylorSeries.zero!(tmp1259[i, j])
                    (tmp1259[i, j]).coeffs[1] = constant_term(UU[i, j]) + constant_term(VV[i, j])
                    TaylorSeries.zero!(vi_dot_vj[i, j])
                    (vi_dot_vj[i, j]).coeffs[1] = constant_term(tmp1259[i, j]) + constant_term(WW[i, j])
                    TaylorSeries.zero!(tmp1262[i, j])
                    (tmp1262[i, j]).coeffs[1] = constant_term(X[i, j]) ^ float(constant_term(2))
                    TaylorSeries.zero!(tmp1264[i, j])
                    (tmp1264[i, j]).coeffs[1] = constant_term(Y[i, j]) ^ float(constant_term(2))
                    TaylorSeries.zero!(tmp1265[i, j])
                    (tmp1265[i, j]).coeffs[1] = constant_term(tmp1262[i, j]) + constant_term(tmp1264[i, j])
                    TaylorSeries.zero!(tmp1267[i, j])
                    (tmp1267[i, j]).coeffs[1] = constant_term(Z[i, j]) ^ float(constant_term(2))
                    TaylorSeries.zero!(r_p2[i, j])
                    (r_p2[i, j]).coeffs[1] = constant_term(tmp1265[i, j]) + constant_term(tmp1267[i, j])
                    TaylorSeries.zero!(r_p1d2[i, j])
                    (r_p1d2[i, j]).coeffs[1] = sqrt(constant_term(r_p2[i, j]))
                    TaylorSeries.zero!(r_p3d2[i, j])
                    (r_p3d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(1.5))
                    TaylorSeries.zero!(r_p7d2[i, j])
                    (r_p7d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(3.5))
                    TaylorSeries.zero!(newtonianCoeff[i, j])
                    (newtonianCoeff[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i, j])
                    TaylorSeries.zero!(tmp1275[i, j])
                    (tmp1275[i, j]).coeffs[1] = constant_term(pn2x[i, j]) + constant_term(pn2y[i, j])
                    TaylorSeries.zero!(tmp1276[i, j])
                    (tmp1276[i, j]).coeffs[1] = constant_term(tmp1275[i, j]) + constant_term(pn2z[i, j])
                    TaylorSeries.zero!(pn2[i, j])
                    (pn2[i, j]).coeffs[1] = constant_term(newtonianCoeff[i, j]) * constant_term(tmp1276[i, j])
                    TaylorSeries.zero!(newton_acc_X[i, j])
                    (newton_acc_X[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(newton_acc_Y[i, j])
                    (newton_acc_Y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(newton_acc_Z[i, j])
                    (newton_acc_Z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(newtonian1b_Potential[i, j])
                    (newtonian1b_Potential[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i, j])
                    TaylorSeries.zero!(pn3[i, j])
                    (pn3[i, j]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i, j])
                    TaylorSeries.zero!(U_t_pn2[i, j])
                    (U_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(U[i, j])
                    TaylorSeries.zero!(V_t_pn2[i, j])
                    (V_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(V[i, j])
                    TaylorSeries.zero!(W_t_pn2[i, j])
                    (W_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(W[i, j])
                    TaylorSeries.zero!(tmp1287[i, j])
                    (tmp1287[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(temp_001[i, j])
                    (temp_001[i, j]).coeffs[1] = constant_term(newtonX[j]) + constant_term(tmp1287[i, j])
                    TaylorSeries.zero!(newtonX[j])
                    (newtonX[j]).coeffs[1] = identity(constant_term(temp_001[i, j]))
                    TaylorSeries.zero!(tmp1289[i, j])
                    (tmp1289[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(temp_002[i, j])
                    (temp_002[i, j]).coeffs[1] = constant_term(newtonY[j]) + constant_term(tmp1289[i, j])
                    TaylorSeries.zero!(newtonY[j])
                    (newtonY[j]).coeffs[1] = identity(constant_term(temp_002[i, j]))
                    TaylorSeries.zero!(tmp1291[i, j])
                    (tmp1291[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(temp_003[i, j])
                    (temp_003[i, j]).coeffs[1] = constant_term(newtonZ[j]) + constant_term(tmp1291[i, j])
                    TaylorSeries.zero!(newtonZ[j])
                    (newtonZ[j]).coeffs[1] = identity(constant_term(temp_003[i, j]))
                    TaylorSeries.zero!(temp_004[i, j])
                    (temp_004[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j])
                    TaylorSeries.zero!(newtonianNb_Potential[j])
                    (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(temp_004[i, j]))
                end
            end
            TaylorSeries.zero!(tmp1295[3j - 2])
            (tmp1295[3j - 2]).coeffs[1] = constant_term(dq[3j - 2]) ^ float(constant_term(2))
            TaylorSeries.zero!(tmp1297[3j - 1])
            (tmp1297[3j - 1]).coeffs[1] = constant_term(dq[3j - 1]) ^ float(constant_term(2))
            TaylorSeries.zero!(tmp1298[3j - 2])
            (tmp1298[3j - 2]).coeffs[1] = constant_term(tmp1295[3j - 2]) + constant_term(tmp1297[3j - 1])
            TaylorSeries.zero!(tmp1300[3j])
            (tmp1300[3j]).coeffs[1] = constant_term(dq[3j]) ^ float(constant_term(2))
            TaylorSeries.zero!(v2[j])
            (v2[j]).coeffs[1] = constant_term(tmp1298[3j - 2]) + constant_term(tmp1300[3j])
        end
    TaylorSeries.zero!(tmp1302)
    tmp1302.coeffs[1] = constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2])
    TaylorSeries.zero!(tmp1304)
    tmp1304.coeffs[1] = constant_term(tmp1302) / constant_term(2)
    TaylorSeries.zero!(tmp1305)
    tmp1305.coeffs[1] = constant_term(I_M_t[3, 3]) - constant_term(tmp1304)
    TaylorSeries.zero!(J2M_t)
    J2M_t.coeffs[1] = constant_term(tmp1305) / constant_term(μ[mo])
    TaylorSeries.zero!(tmp1307)
    tmp1307.coeffs[1] = constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1])
    TaylorSeries.zero!(tmp1308)
    tmp1308.coeffs[1] = constant_term(tmp1307) / constant_term(μ[mo])
    TaylorSeries.zero!(C22M_t)
    C22M_t.coeffs[1] = constant_term(tmp1308) / constant_term(4)
    TaylorSeries.zero!(tmp1311)
    tmp1311.coeffs[1] = -(constant_term(I_M_t[1, 3]))
    TaylorSeries.zero!(C21M_t)
    C21M_t.coeffs[1] = constant_term(tmp1311) / constant_term(μ[mo])
    TaylorSeries.zero!(tmp1313)
    tmp1313.coeffs[1] = -(constant_term(I_M_t[3, 2]))
    TaylorSeries.zero!(S21M_t)
    S21M_t.coeffs[1] = constant_term(tmp1313) / constant_term(μ[mo])
    TaylorSeries.zero!(tmp1315)
    tmp1315.coeffs[1] = -(constant_term(I_M_t[2, 1]))
    TaylorSeries.zero!(tmp1316)
    tmp1316.coeffs[1] = constant_term(tmp1315) / constant_term(μ[mo])
    TaylorSeries.zero!(S22M_t)
    S22M_t.coeffs[1] = constant_term(tmp1316) / constant_term(2)
    TaylorSeries.zero!(J2_t[mo])
    (J2_t[mo]).coeffs[1] = identity(constant_term(J2M_t))
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:418 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.zero!(X_bf_1[i, j])
                        (X_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[1, 1, j])
                        TaylorSeries.zero!(X_bf_2[i, j])
                        (X_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[1, 2, j])
                        TaylorSeries.zero!(X_bf_3[i, j])
                        (X_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[1, 3, j])
                        TaylorSeries.zero!(Y_bf_1[i, j])
                        (Y_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[2, 1, j])
                        TaylorSeries.zero!(Y_bf_2[i, j])
                        (Y_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[2, 2, j])
                        TaylorSeries.zero!(Y_bf_3[i, j])
                        (Y_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[2, 3, j])
                        TaylorSeries.zero!(Z_bf_1[i, j])
                        (Z_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[3, 1, j])
                        TaylorSeries.zero!(Z_bf_2[i, j])
                        (Z_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[3, 2, j])
                        TaylorSeries.zero!(Z_bf_3[i, j])
                        (Z_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[3, 3, j])
                        TaylorSeries.zero!(tmp1328[i, j])
                        (tmp1328[i, j]).coeffs[1] = constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j])
                        TaylorSeries.zero!(X_bf[i, j])
                        (X_bf[i, j]).coeffs[1] = constant_term(tmp1328[i, j]) + constant_term(X_bf_3[i, j])
                        TaylorSeries.zero!(tmp1330[i, j])
                        (tmp1330[i, j]).coeffs[1] = constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j])
                        TaylorSeries.zero!(Y_bf[i, j])
                        (Y_bf[i, j]).coeffs[1] = constant_term(tmp1330[i, j]) + constant_term(Y_bf_3[i, j])
                        TaylorSeries.zero!(tmp1332[i, j])
                        (tmp1332[i, j]).coeffs[1] = constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j])
                        TaylorSeries.zero!(Z_bf[i, j])
                        (Z_bf[i, j]).coeffs[1] = constant_term(tmp1332[i, j]) + constant_term(Z_bf_3[i, j])
                        TaylorSeries.zero!(sin_ϕ[i, j])
                        (sin_ϕ[i, j]).coeffs[1] = constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j])
                        TaylorSeries.zero!(tmp1336[i, j])
                        (tmp1336[i, j]).coeffs[1] = constant_term(X_bf[i, j]) ^ float(constant_term(2))
                        TaylorSeries.zero!(tmp1338[i, j])
                        (tmp1338[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) ^ float(constant_term(2))
                        TaylorSeries.zero!(tmp1339[i, j])
                        (tmp1339[i, j]).coeffs[1] = constant_term(tmp1336[i, j]) + constant_term(tmp1338[i, j])
                        TaylorSeries.zero!(r_xy[i, j])
                        (r_xy[i, j]).coeffs[1] = sqrt(constant_term(tmp1339[i, j]))
                        TaylorSeries.zero!(cos_ϕ[i, j])
                        (cos_ϕ[i, j]).coeffs[1] = constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j])
                        TaylorSeries.zero!(sin_λ[i, j])
                        (sin_λ[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j])
                        TaylorSeries.zero!(cos_λ[i, j])
                        (cos_λ[i, j]).coeffs[1] = constant_term(X_bf[i, j]) / constant_term(r_xy[i, j])
                        TaylorSeries.zero!(P_n[i, j, 1])
                        (P_n[i, j, 1]).coeffs[1] = identity(constant_term(one_t))
                        TaylorSeries.zero!(P_n[i, j, 2])
                        (P_n[i, j, 2]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                        TaylorSeries.zero!(dP_n[i, j, 1])
                        (dP_n[i, j, 1]).coeffs[1] = identity(constant_term(zero_q_1))
                        TaylorSeries.zero!(dP_n[i, j, 2])
                        (dP_n[i, j, 2]).coeffs[1] = identity(constant_term(one_t))
                        for n = 2:n1SEM[j]
                            TaylorSeries.zero!(tmp1344[i, j, n])
                            (tmp1344[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                            TaylorSeries.zero!(tmp1345[i, j, n])
                            (tmp1345[i, j, n]).coeffs[1] = constant_term(tmp1344[i, j, n]) * constant_term(fact1_jsem[n])
                            TaylorSeries.zero!(tmp1346[i, j, n - 1])
                            (tmp1346[i, j, n - 1]).coeffs[1] = constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n])
                            TaylorSeries.zero!(P_n[i, j, n + 1])
                            (P_n[i, j, n + 1]).coeffs[1] = constant_term(tmp1345[i, j, n]) - constant_term(tmp1346[i, j, n - 1])
                            TaylorSeries.zero!(tmp1348[i, j, n])
                            (tmp1348[i, j, n]).coeffs[1] = constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                            TaylorSeries.zero!(tmp1349[i, j, n])
                            (tmp1349[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n])
                            TaylorSeries.zero!(dP_n[i, j, n + 1])
                            (dP_n[i, j, n + 1]).coeffs[1] = constant_term(tmp1348[i, j, n]) + constant_term(tmp1349[i, j, n])
                            TaylorSeries.zero!(temp_rn[i, j, n])
                            (temp_rn[i, j, n]).coeffs[1] = constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n]))
                        end
                        TaylorSeries.zero!(r_p4[i, j])
                        (r_p4[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(2))
                        TaylorSeries.zero!(tmp1354[i, j, 3])
                        (tmp1354[i, j, 3]).coeffs[1] = constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2])
                        TaylorSeries.zero!(tmp1355[i, j, 3])
                        (tmp1355[i, j, 3]).coeffs[1] = constant_term(tmp1354[i, j, 3]) * constant_term(J2_t[j])
                        TaylorSeries.zero!(F_J_ξ[i, j])
                        (F_J_ξ[i, j]).coeffs[1] = constant_term(tmp1355[i, j, 3]) / constant_term(r_p4[i, j])
                        TaylorSeries.zero!(tmp1357[i, j, 3])
                        (tmp1357[i, j, 3]).coeffs[1] = -(constant_term(dP_n[i, j, 3]))
                        TaylorSeries.zero!(tmp1358[i, j, 3])
                        (tmp1358[i, j, 3]).coeffs[1] = constant_term(tmp1357[i, j, 3]) * constant_term(cos_ϕ[i, j])
                        TaylorSeries.zero!(tmp1359[i, j, 3])
                        (tmp1359[i, j, 3]).coeffs[1] = constant_term(tmp1358[i, j, 3]) * constant_term(J2_t[j])
                        TaylorSeries.zero!(F_J_ζ[i, j])
                        (F_J_ζ[i, j]).coeffs[1] = constant_term(tmp1359[i, j, 3]) / constant_term(r_p4[i, j])
                        TaylorSeries.zero!(F_J_ξ_36[i, j])
                        (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        TaylorSeries.zero!(F_J_ζ_36[i, j])
                        (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        for n = 3:n1SEM[j]
                            TaylorSeries.zero!(tmp1361[i, j, n + 1])
                            (tmp1361[i, j, n + 1]).coeffs[1] = constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n])
                            TaylorSeries.zero!(tmp1362[i, j, n + 1])
                            (tmp1362[i, j, n + 1]).coeffs[1] = constant_term(tmp1361[i, j, n + 1]) * constant_term(JSEM[j, n])
                            TaylorSeries.zero!(tmp1363[i, j, n + 1])
                            (tmp1363[i, j, n + 1]).coeffs[1] = constant_term(tmp1362[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                            TaylorSeries.zero!(temp_fjξ[i, j, n])
                            (temp_fjξ[i, j, n]).coeffs[1] = constant_term(tmp1363[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j])
                            TaylorSeries.zero!(tmp1365[i, j, n + 1])
                            (tmp1365[i, j, n + 1]).coeffs[1] = -(constant_term(dP_n[i, j, n + 1]))
                            TaylorSeries.zero!(tmp1366[i, j, n + 1])
                            (tmp1366[i, j, n + 1]).coeffs[1] = constant_term(tmp1365[i, j, n + 1]) * constant_term(cos_ϕ[i, j])
                            TaylorSeries.zero!(tmp1367[i, j, n + 1])
                            (tmp1367[i, j, n + 1]).coeffs[1] = constant_term(tmp1366[i, j, n + 1]) * constant_term(JSEM[j, n])
                            TaylorSeries.zero!(tmp1368[i, j, n + 1])
                            (tmp1368[i, j, n + 1]).coeffs[1] = constant_term(tmp1367[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                            TaylorSeries.zero!(temp_fjζ[i, j, n])
                            (temp_fjζ[i, j, n]).coeffs[1] = constant_term(tmp1368[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j])
                            TaylorSeries.zero!(F_J_ξ_36[i, j])
                            (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjξ[i, j, n]))
                            TaylorSeries.zero!(F_J_ζ_36[i, j])
                            (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjζ[i, j, n]))
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    TaylorSeries.zero!(sin_mλ[i, j, 1])
                                    (sin_mλ[i, j, 1]).coeffs[1] = identity(constant_term(sin_λ[i, j]))
                                    TaylorSeries.zero!(cos_mλ[i, j, 1])
                                    (cos_mλ[i, j, 1]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                                    TaylorSeries.zero!(secϕ_P_nm[i, j, 1, 1])
                                    (secϕ_P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(one_t))
                                    TaylorSeries.zero!(P_nm[i, j, 1, 1])
                                    (P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                                    TaylorSeries.zero!(cosϕ_dP_nm[i, j, 1, 1])
                                    (cosϕ_dP_nm[i, j, 1, 1]).coeffs[1] = constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1])
                                else
                                    TaylorSeries.zero!(tmp1371[i, j, m - 1])
                                    (tmp1371[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                    TaylorSeries.zero!(tmp1372[i, j, m - 1])
                                    (tmp1372[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                    TaylorSeries.zero!(sin_mλ[i, j, m])
                                    (sin_mλ[i, j, m]).coeffs[1] = constant_term(tmp1371[i, j, m - 1]) + constant_term(tmp1372[i, j, m - 1])
                                    TaylorSeries.zero!(tmp1374[i, j, m - 1])
                                    (tmp1374[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                    TaylorSeries.zero!(tmp1375[i, j, m - 1])
                                    (tmp1375[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                    TaylorSeries.zero!(cos_mλ[i, j, m])
                                    (cos_mλ[i, j, m]).coeffs[1] = constant_term(tmp1374[i, j, m - 1]) - constant_term(tmp1375[i, j, m - 1])
                                    TaylorSeries.zero!(tmp1377[i, j, m - 1, m - 1])
                                    (tmp1377[i, j, m - 1, m - 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j])
                                    TaylorSeries.zero!(secϕ_P_nm[i, j, m, m])
                                    (secϕ_P_nm[i, j, m, m]).coeffs[1] = constant_term(tmp1377[i, j, m - 1, m - 1]) * constant_term(lnm5[m])
                                    TaylorSeries.zero!(P_nm[i, j, m, m])
                                    (P_nm[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j])
                                    TaylorSeries.zero!(tmp1380[i, j, m, m])
                                    (tmp1380[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j])
                                    TaylorSeries.zero!(cosϕ_dP_nm[i, j, m, m])
                                    (cosϕ_dP_nm[i, j, m, m]).coeffs[1] = constant_term(tmp1380[i, j, m, m]) * constant_term(lnm3[m])
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        TaylorSeries.zero!(tmp1382[i, j, n - 1, m])
                                        (tmp1382[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                        TaylorSeries.zero!(secϕ_P_nm[i, j, n, m])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp1382[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                    else
                                        TaylorSeries.zero!(tmp1384[i, j, n - 1, m])
                                        (tmp1384[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                        TaylorSeries.zero!(tmp1385[i, j, n - 1, m])
                                        (tmp1385[i, j, n - 1, m]).coeffs[1] = constant_term(tmp1384[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                        TaylorSeries.zero!(tmp1386[i, j, n - 2, m])
                                        (tmp1386[i, j, n - 2, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m])
                                        TaylorSeries.zero!(secϕ_P_nm[i, j, n, m])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp1385[i, j, n - 1, m]) + constant_term(tmp1386[i, j, n - 2, m])
                                    end
                                    TaylorSeries.zero!(P_nm[i, j, n, m])
                                    (P_nm[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j])
                                    TaylorSeries.zero!(tmp1389[i, j, n, m])
                                    (tmp1389[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j])
                                    TaylorSeries.zero!(tmp1390[i, j, n, m])
                                    (tmp1390[i, j, n, m]).coeffs[1] = constant_term(tmp1389[i, j, n, m]) * constant_term(lnm3[n])
                                    TaylorSeries.zero!(tmp1391[i, j, n - 1, m])
                                    (tmp1391[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m])
                                    TaylorSeries.zero!(cosϕ_dP_nm[i, j, n, m])
                                    (cosϕ_dP_nm[i, j, n, m]).coeffs[1] = constant_term(tmp1390[i, j, n, m]) + constant_term(tmp1391[i, j, n - 1, m])
                                end
                            end
                            TaylorSeries.zero!(tmp1393[i, j, 2, 1])
                            (tmp1393[i, j, 2, 1]).coeffs[1] = constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2])
                            TaylorSeries.zero!(tmp1394[i, j, 1])
                            (tmp1394[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp1395[i, j, 1])
                            (tmp1395[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp1396[i, j, 1])
                            (tmp1396[i, j, 1]).coeffs[1] = constant_term(tmp1394[i, j, 1]) + constant_term(tmp1395[i, j, 1])
                            TaylorSeries.zero!(tmp1397[i, j, 2, 1])
                            (tmp1397[i, j, 2, 1]).coeffs[1] = constant_term(tmp1393[i, j, 2, 1]) * constant_term(tmp1396[i, j, 1])
                            TaylorSeries.zero!(tmp1398[i, j, 2, 2])
                            (tmp1398[i, j, 2, 2]).coeffs[1] = constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2])
                            TaylorSeries.zero!(tmp1399[i, j, 2])
                            (tmp1399[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp1400[i, j, 2])
                            (tmp1400[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp1401[i, j, 2])
                            (tmp1401[i, j, 2]).coeffs[1] = constant_term(tmp1399[i, j, 2]) + constant_term(tmp1400[i, j, 2])
                            TaylorSeries.zero!(tmp1402[i, j, 2, 2])
                            (tmp1402[i, j, 2, 2]).coeffs[1] = constant_term(tmp1398[i, j, 2, 2]) * constant_term(tmp1401[i, j, 2])
                            TaylorSeries.zero!(tmp1403[i, j, 2, 1])
                            (tmp1403[i, j, 2, 1]).coeffs[1] = constant_term(tmp1397[i, j, 2, 1]) + constant_term(tmp1402[i, j, 2, 2])
                            TaylorSeries.zero!(F_CS_ξ[i, j])
                            (F_CS_ξ[i, j]).coeffs[1] = constant_term(tmp1403[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            TaylorSeries.zero!(tmp1405[i, j, 2, 1])
                            (tmp1405[i, j, 2, 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1])
                            TaylorSeries.zero!(tmp1406[i, j, 1])
                            (tmp1406[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp1407[i, j, 1])
                            (tmp1407[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp1408[i, j, 1])
                            (tmp1408[i, j, 1]).coeffs[1] = constant_term(tmp1406[i, j, 1]) - constant_term(tmp1407[i, j, 1])
                            TaylorSeries.zero!(tmp1409[i, j, 2, 1])
                            (tmp1409[i, j, 2, 1]).coeffs[1] = constant_term(tmp1405[i, j, 2, 1]) * constant_term(tmp1408[i, j, 1])
                            TaylorSeries.zero!(tmp1410[i, j, 2, 2])
                            (tmp1410[i, j, 2, 2]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2])
                            TaylorSeries.zero!(tmp1411[i, j, 2])
                            (tmp1411[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp1412[i, j, 2])
                            (tmp1412[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp1413[i, j, 2])
                            (tmp1413[i, j, 2]).coeffs[1] = constant_term(tmp1411[i, j, 2]) - constant_term(tmp1412[i, j, 2])
                            TaylorSeries.zero!(tmp1414[i, j, 2, 2])
                            (tmp1414[i, j, 2, 2]).coeffs[1] = constant_term(tmp1410[i, j, 2, 2]) * constant_term(tmp1413[i, j, 2])
                            TaylorSeries.zero!(tmp1415[i, j, 2, 1])
                            (tmp1415[i, j, 2, 1]).coeffs[1] = constant_term(tmp1409[i, j, 2, 1]) + constant_term(tmp1414[i, j, 2, 2])
                            TaylorSeries.zero!(F_CS_η[i, j])
                            (F_CS_η[i, j]).coeffs[1] = constant_term(tmp1415[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            TaylorSeries.zero!(tmp1417[i, j, 1])
                            (tmp1417[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp1418[i, j, 1])
                            (tmp1418[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp1419[i, j, 1])
                            (tmp1419[i, j, 1]).coeffs[1] = constant_term(tmp1417[i, j, 1]) + constant_term(tmp1418[i, j, 1])
                            TaylorSeries.zero!(tmp1420[i, j, 2, 1])
                            (tmp1420[i, j, 2, 1]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp1419[i, j, 1])
                            TaylorSeries.zero!(tmp1421[i, j, 2])
                            (tmp1421[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp1422[i, j, 2])
                            (tmp1422[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp1423[i, j, 2])
                            (tmp1423[i, j, 2]).coeffs[1] = constant_term(tmp1421[i, j, 2]) + constant_term(tmp1422[i, j, 2])
                            TaylorSeries.zero!(tmp1424[i, j, 2, 2])
                            (tmp1424[i, j, 2, 2]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp1423[i, j, 2])
                            TaylorSeries.zero!(tmp1425[i, j, 2, 1])
                            (tmp1425[i, j, 2, 1]).coeffs[1] = constant_term(tmp1420[i, j, 2, 1]) + constant_term(tmp1424[i, j, 2, 2])
                            TaylorSeries.zero!(F_CS_ζ[i, j])
                            (F_CS_ζ[i, j]).coeffs[1] = constant_term(tmp1425[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            TaylorSeries.zero!(F_CS_ξ_36[i, j])
                            (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            TaylorSeries.zero!(F_CS_η_36[i, j])
                            (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            TaylorSeries.zero!(F_CS_ζ_36[i, j])
                            (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            for n = 3:n2M
                                for m = 1:n
                                    TaylorSeries.zero!(Cnm_cosmλ[i, j, n, m])
                                    (Cnm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m])
                                    TaylorSeries.zero!(Cnm_sinmλ[i, j, n, m])
                                    (Cnm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m])
                                    TaylorSeries.zero!(Snm_cosmλ[i, j, n, m])
                                    (Snm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m])
                                    TaylorSeries.zero!(Snm_sinmλ[i, j, n, m])
                                    (Snm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m])
                                    TaylorSeries.zero!(tmp1431[i, j, n, m])
                                    (tmp1431[i, j, n, m]).coeffs[1] = constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n])
                                    TaylorSeries.zero!(tmp1432[i, j, n, m])
                                    (tmp1432[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                    TaylorSeries.zero!(tmp1433[i, j, n, m])
                                    (tmp1433[i, j, n, m]).coeffs[1] = constant_term(tmp1431[i, j, n, m]) * constant_term(tmp1432[i, j, n, m])
                                    TaylorSeries.zero!(tmp1434[i, j, n, m])
                                    (tmp1434[i, j, n, m]).coeffs[1] = constant_term(tmp1433[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    TaylorSeries.zero!(temp_CS_ξ[i, j, n, m])
                                    (temp_CS_ξ[i, j, n, m]).coeffs[1] = constant_term(tmp1434[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j])
                                    TaylorSeries.zero!(tmp1436[i, j, n, m])
                                    (tmp1436[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m])
                                    TaylorSeries.zero!(tmp1437[i, j, n, m])
                                    (tmp1437[i, j, n, m]).coeffs[1] = constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m])
                                    TaylorSeries.zero!(tmp1438[i, j, n, m])
                                    (tmp1438[i, j, n, m]).coeffs[1] = constant_term(tmp1436[i, j, n, m]) * constant_term(tmp1437[i, j, n, m])
                                    TaylorSeries.zero!(tmp1439[i, j, n, m])
                                    (tmp1439[i, j, n, m]).coeffs[1] = constant_term(tmp1438[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    TaylorSeries.zero!(temp_CS_η[i, j, n, m])
                                    (temp_CS_η[i, j, n, m]).coeffs[1] = constant_term(tmp1439[i, j, n, m]) + constant_term(F_CS_η_36[i, j])
                                    TaylorSeries.zero!(tmp1441[i, j, n, m])
                                    (tmp1441[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                    TaylorSeries.zero!(tmp1442[i, j, n, m])
                                    (tmp1442[i, j, n, m]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp1441[i, j, n, m])
                                    TaylorSeries.zero!(tmp1443[i, j, n, m])
                                    (tmp1443[i, j, n, m]).coeffs[1] = constant_term(tmp1442[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    TaylorSeries.zero!(temp_CS_ζ[i, j, n, m])
                                    (temp_CS_ζ[i, j, n, m]).coeffs[1] = constant_term(tmp1443[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j])
                                    TaylorSeries.zero!(F_CS_ξ_36[i, j])
                                    (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ξ[i, j, n, m]))
                                    TaylorSeries.zero!(F_CS_η_36[i, j])
                                    (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_η[i, j, n, m]))
                                    TaylorSeries.zero!(F_CS_ζ_36[i, j])
                                    (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ζ[i, j, n, m]))
                                end
                            end
                            TaylorSeries.zero!(tmp1445[i, j])
                            (tmp1445[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                            TaylorSeries.zero!(tmp1446[i, j])
                            (tmp1446[i, j]).coeffs[1] = constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j])
                            TaylorSeries.zero!(F_JCS_ξ[i, j])
                            (F_JCS_ξ[i, j]).coeffs[1] = constant_term(tmp1445[i, j]) + constant_term(tmp1446[i, j])
                            TaylorSeries.zero!(F_JCS_η[i, j])
                            (F_JCS_η[i, j]).coeffs[1] = constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j])
                            TaylorSeries.zero!(tmp1449[i, j])
                            (tmp1449[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                            TaylorSeries.zero!(tmp1450[i, j])
                            (tmp1450[i, j]).coeffs[1] = constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j])
                            TaylorSeries.zero!(F_JCS_ζ[i, j])
                            (F_JCS_ζ[i, j]).coeffs[1] = constant_term(tmp1449[i, j]) + constant_term(tmp1450[i, j])
                        else
                            TaylorSeries.zero!(F_JCS_ξ[i, j])
                            (F_JCS_ξ[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                            TaylorSeries.zero!(F_JCS_η[i, j])
                            (F_JCS_η[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            TaylorSeries.zero!(F_JCS_ζ[i, j])
                            (F_JCS_ζ[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                        end
                        TaylorSeries.zero!(Rb2p[i, j, 1, 1])
                        (Rb2p[i, j, 1, 1]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j])
                        TaylorSeries.zero!(Rb2p[i, j, 2, 1])
                        (Rb2p[i, j, 2, 1]).coeffs[1] = -(constant_term(sin_λ[i, j]))
                        TaylorSeries.zero!(tmp1456[i, j])
                        (tmp1456[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                        TaylorSeries.zero!(Rb2p[i, j, 3, 1])
                        (Rb2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp1456[i, j]) * constant_term(cos_λ[i, j])
                        TaylorSeries.zero!(Rb2p[i, j, 1, 2])
                        (Rb2p[i, j, 1, 2]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j])
                        TaylorSeries.zero!(Rb2p[i, j, 2, 2])
                        (Rb2p[i, j, 2, 2]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                        TaylorSeries.zero!(tmp1459[i, j])
                        (tmp1459[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                        TaylorSeries.zero!(Rb2p[i, j, 3, 2])
                        (Rb2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp1459[i, j]) * constant_term(sin_λ[i, j])
                        TaylorSeries.zero!(Rb2p[i, j, 1, 3])
                        (Rb2p[i, j, 1, 3]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                        TaylorSeries.zero!(Rb2p[i, j, 2, 3])
                        (Rb2p[i, j, 2, 3]).coeffs[1] = identity(constant_term(zero_q_1))
                        TaylorSeries.zero!(Rb2p[i, j, 3, 3])
                        (Rb2p[i, j, 3, 3]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                        TaylorSeries.zero!(tmp1461[i, j, 1, 1])
                        (tmp1461[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j])
                        TaylorSeries.zero!(tmp1462[i, j, 1, 2])
                        (tmp1462[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j])
                        TaylorSeries.zero!(tmp1463[i, j, 1, 1])
                        (tmp1463[i, j, 1, 1]).coeffs[1] = constant_term(tmp1461[i, j, 1, 1]) + constant_term(tmp1462[i, j, 1, 2])
                        TaylorSeries.zero!(tmp1464[i, j, 1, 3])
                        (tmp1464[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j])
                        TaylorSeries.zero!(Gc2p[i, j, 1, 1])
                        (Gc2p[i, j, 1, 1]).coeffs[1] = constant_term(tmp1463[i, j, 1, 1]) + constant_term(tmp1464[i, j, 1, 3])
                        TaylorSeries.zero!(tmp1466[i, j, 2, 1])
                        (tmp1466[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j])
                        TaylorSeries.zero!(tmp1467[i, j, 2, 2])
                        (tmp1467[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j])
                        TaylorSeries.zero!(tmp1468[i, j, 2, 1])
                        (tmp1468[i, j, 2, 1]).coeffs[1] = constant_term(tmp1466[i, j, 2, 1]) + constant_term(tmp1467[i, j, 2, 2])
                        TaylorSeries.zero!(tmp1469[i, j, 2, 3])
                        (tmp1469[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j])
                        TaylorSeries.zero!(Gc2p[i, j, 2, 1])
                        (Gc2p[i, j, 2, 1]).coeffs[1] = constant_term(tmp1468[i, j, 2, 1]) + constant_term(tmp1469[i, j, 2, 3])
                        TaylorSeries.zero!(tmp1471[i, j, 3, 1])
                        (tmp1471[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j])
                        TaylorSeries.zero!(tmp1472[i, j, 3, 2])
                        (tmp1472[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j])
                        TaylorSeries.zero!(tmp1473[i, j, 3, 1])
                        (tmp1473[i, j, 3, 1]).coeffs[1] = constant_term(tmp1471[i, j, 3, 1]) + constant_term(tmp1472[i, j, 3, 2])
                        TaylorSeries.zero!(tmp1474[i, j, 3, 3])
                        (tmp1474[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j])
                        TaylorSeries.zero!(Gc2p[i, j, 3, 1])
                        (Gc2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp1473[i, j, 3, 1]) + constant_term(tmp1474[i, j, 3, 3])
                        TaylorSeries.zero!(tmp1476[i, j, 1, 1])
                        (tmp1476[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j])
                        TaylorSeries.zero!(tmp1477[i, j, 1, 2])
                        (tmp1477[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j])
                        TaylorSeries.zero!(tmp1478[i, j, 1, 1])
                        (tmp1478[i, j, 1, 1]).coeffs[1] = constant_term(tmp1476[i, j, 1, 1]) + constant_term(tmp1477[i, j, 1, 2])
                        TaylorSeries.zero!(tmp1479[i, j, 1, 3])
                        (tmp1479[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j])
                        TaylorSeries.zero!(Gc2p[i, j, 1, 2])
                        (Gc2p[i, j, 1, 2]).coeffs[1] = constant_term(tmp1478[i, j, 1, 1]) + constant_term(tmp1479[i, j, 1, 3])
                        TaylorSeries.zero!(tmp1481[i, j, 2, 1])
                        (tmp1481[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j])
                        TaylorSeries.zero!(tmp1482[i, j, 2, 2])
                        (tmp1482[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j])
                        TaylorSeries.zero!(tmp1483[i, j, 2, 1])
                        (tmp1483[i, j, 2, 1]).coeffs[1] = constant_term(tmp1481[i, j, 2, 1]) + constant_term(tmp1482[i, j, 2, 2])
                        TaylorSeries.zero!(tmp1484[i, j, 2, 3])
                        (tmp1484[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j])
                        TaylorSeries.zero!(Gc2p[i, j, 2, 2])
                        (Gc2p[i, j, 2, 2]).coeffs[1] = constant_term(tmp1483[i, j, 2, 1]) + constant_term(tmp1484[i, j, 2, 3])
                        TaylorSeries.zero!(tmp1486[i, j, 3, 1])
                        (tmp1486[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j])
                        TaylorSeries.zero!(tmp1487[i, j, 3, 2])
                        (tmp1487[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j])
                        TaylorSeries.zero!(tmp1488[i, j, 3, 1])
                        (tmp1488[i, j, 3, 1]).coeffs[1] = constant_term(tmp1486[i, j, 3, 1]) + constant_term(tmp1487[i, j, 3, 2])
                        TaylorSeries.zero!(tmp1489[i, j, 3, 3])
                        (tmp1489[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j])
                        TaylorSeries.zero!(Gc2p[i, j, 3, 2])
                        (Gc2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp1488[i, j, 3, 1]) + constant_term(tmp1489[i, j, 3, 3])
                        TaylorSeries.zero!(tmp1491[i, j, 1, 1])
                        (tmp1491[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j])
                        TaylorSeries.zero!(tmp1492[i, j, 1, 2])
                        (tmp1492[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j])
                        TaylorSeries.zero!(tmp1493[i, j, 1, 1])
                        (tmp1493[i, j, 1, 1]).coeffs[1] = constant_term(tmp1491[i, j, 1, 1]) + constant_term(tmp1492[i, j, 1, 2])
                        TaylorSeries.zero!(tmp1494[i, j, 1, 3])
                        (tmp1494[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j])
                        TaylorSeries.zero!(Gc2p[i, j, 1, 3])
                        (Gc2p[i, j, 1, 3]).coeffs[1] = constant_term(tmp1493[i, j, 1, 1]) + constant_term(tmp1494[i, j, 1, 3])
                        TaylorSeries.zero!(tmp1496[i, j, 2, 1])
                        (tmp1496[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j])
                        TaylorSeries.zero!(tmp1497[i, j, 2, 2])
                        (tmp1497[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j])
                        TaylorSeries.zero!(tmp1498[i, j, 2, 1])
                        (tmp1498[i, j, 2, 1]).coeffs[1] = constant_term(tmp1496[i, j, 2, 1]) + constant_term(tmp1497[i, j, 2, 2])
                        TaylorSeries.zero!(tmp1499[i, j, 2, 3])
                        (tmp1499[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j])
                        TaylorSeries.zero!(Gc2p[i, j, 2, 3])
                        (Gc2p[i, j, 2, 3]).coeffs[1] = constant_term(tmp1498[i, j, 2, 1]) + constant_term(tmp1499[i, j, 2, 3])
                        TaylorSeries.zero!(tmp1501[i, j, 3, 1])
                        (tmp1501[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j])
                        TaylorSeries.zero!(tmp1502[i, j, 3, 2])
                        (tmp1502[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j])
                        TaylorSeries.zero!(tmp1503[i, j, 3, 1])
                        (tmp1503[i, j, 3, 1]).coeffs[1] = constant_term(tmp1501[i, j, 3, 1]) + constant_term(tmp1502[i, j, 3, 2])
                        TaylorSeries.zero!(tmp1504[i, j, 3, 3])
                        (tmp1504[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j])
                        TaylorSeries.zero!(Gc2p[i, j, 3, 3])
                        (Gc2p[i, j, 3, 3]).coeffs[1] = constant_term(tmp1503[i, j, 3, 1]) + constant_term(tmp1504[i, j, 3, 3])
                        TaylorSeries.zero!(tmp1506[i, j, 1, 1])
                        (tmp1506[i, j, 1, 1]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1])
                        TaylorSeries.zero!(tmp1507[i, j, 2, 1])
                        (tmp1507[i, j, 2, 1]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1])
                        TaylorSeries.zero!(tmp1508[i, j, 1, 1])
                        (tmp1508[i, j, 1, 1]).coeffs[1] = constant_term(tmp1506[i, j, 1, 1]) + constant_term(tmp1507[i, j, 2, 1])
                        TaylorSeries.zero!(tmp1509[i, j, 3, 1])
                        (tmp1509[i, j, 3, 1]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1])
                        TaylorSeries.zero!(F_JCS_x[i, j])
                        (F_JCS_x[i, j]).coeffs[1] = constant_term(tmp1508[i, j, 1, 1]) + constant_term(tmp1509[i, j, 3, 1])
                        TaylorSeries.zero!(tmp1511[i, j, 1, 2])
                        (tmp1511[i, j, 1, 2]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2])
                        TaylorSeries.zero!(tmp1512[i, j, 2, 2])
                        (tmp1512[i, j, 2, 2]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2])
                        TaylorSeries.zero!(tmp1513[i, j, 1, 2])
                        (tmp1513[i, j, 1, 2]).coeffs[1] = constant_term(tmp1511[i, j, 1, 2]) + constant_term(tmp1512[i, j, 2, 2])
                        TaylorSeries.zero!(tmp1514[i, j, 3, 2])
                        (tmp1514[i, j, 3, 2]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2])
                        TaylorSeries.zero!(F_JCS_y[i, j])
                        (F_JCS_y[i, j]).coeffs[1] = constant_term(tmp1513[i, j, 1, 2]) + constant_term(tmp1514[i, j, 3, 2])
                        TaylorSeries.zero!(tmp1516[i, j, 1, 3])
                        (tmp1516[i, j, 1, 3]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3])
                        TaylorSeries.zero!(tmp1517[i, j, 2, 3])
                        (tmp1517[i, j, 2, 3]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3])
                        TaylorSeries.zero!(tmp1518[i, j, 1, 3])
                        (tmp1518[i, j, 1, 3]).coeffs[1] = constant_term(tmp1516[i, j, 1, 3]) + constant_term(tmp1517[i, j, 2, 3])
                        TaylorSeries.zero!(tmp1519[i, j, 3, 3])
                        (tmp1519[i, j, 3, 3]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3])
                        TaylorSeries.zero!(F_JCS_z[i, j])
                        (F_JCS_z[i, j]).coeffs[1] = constant_term(tmp1518[i, j, 1, 3]) + constant_term(tmp1519[i, j, 3, 3])
                    end
                end
            end
        end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    TaylorSeries.zero!(tmp1521[i, j])
                    (tmp1521[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_x[i, j])
                    TaylorSeries.zero!(temp_accX_j[i, j])
                    (temp_accX_j[i, j]).coeffs[1] = constant_term(accX[j]) - constant_term(tmp1521[i, j])
                    TaylorSeries.zero!(accX[j])
                    (accX[j]).coeffs[1] = identity(constant_term(temp_accX_j[i, j]))
                    TaylorSeries.zero!(tmp1523[i, j])
                    (tmp1523[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_y[i, j])
                    TaylorSeries.zero!(temp_accY_j[i, j])
                    (temp_accY_j[i, j]).coeffs[1] = constant_term(accY[j]) - constant_term(tmp1523[i, j])
                    TaylorSeries.zero!(accY[j])
                    (accY[j]).coeffs[1] = identity(constant_term(temp_accY_j[i, j]))
                    TaylorSeries.zero!(tmp1525[i, j])
                    (tmp1525[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_z[i, j])
                    TaylorSeries.zero!(temp_accZ_j[i, j])
                    (temp_accZ_j[i, j]).coeffs[1] = constant_term(accZ[j]) - constant_term(tmp1525[i, j])
                    TaylorSeries.zero!(accZ[j])
                    (accZ[j]).coeffs[1] = identity(constant_term(temp_accZ_j[i, j]))
                    TaylorSeries.zero!(tmp1527[i, j])
                    (tmp1527[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_x[i, j])
                    TaylorSeries.zero!(temp_accX_i[i, j])
                    (temp_accX_i[i, j]).coeffs[1] = constant_term(accX[i]) + constant_term(tmp1527[i, j])
                    TaylorSeries.zero!(accX[i])
                    (accX[i]).coeffs[1] = identity(constant_term(temp_accX_i[i, j]))
                    TaylorSeries.zero!(tmp1529[i, j])
                    (tmp1529[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_y[i, j])
                    TaylorSeries.zero!(temp_accY_i[i, j])
                    (temp_accY_i[i, j]).coeffs[1] = constant_term(accY[i]) + constant_term(tmp1529[i, j])
                    TaylorSeries.zero!(accY[i])
                    (accY[i]).coeffs[1] = identity(constant_term(temp_accY_i[i, j]))
                    TaylorSeries.zero!(tmp1531[i, j])
                    (tmp1531[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_z[i, j])
                    TaylorSeries.zero!(temp_accZ_i[i, j])
                    (temp_accZ_i[i, j]).coeffs[1] = constant_term(accZ[i]) + constant_term(tmp1531[i, j])
                    TaylorSeries.zero!(accZ[i])
                    (accZ[i]).coeffs[1] = identity(constant_term(temp_accZ_i[i, j]))
                    if j == mo
                        TaylorSeries.zero!(tmp1533[i, j])
                        (tmp1533[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j])
                        TaylorSeries.zero!(tmp1534[i, j])
                        (tmp1534[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j])
                        TaylorSeries.zero!(tmp1535[i, j])
                        (tmp1535[i, j]).coeffs[1] = constant_term(tmp1533[i, j]) - constant_term(tmp1534[i, j])
                        TaylorSeries.zero!(N_MfigM_pmA_x[i])
                        (N_MfigM_pmA_x[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp1535[i, j])
                        TaylorSeries.zero!(tmp1537[i, j])
                        (tmp1537[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j])
                        TaylorSeries.zero!(tmp1538[i, j])
                        (tmp1538[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_z[i, j])
                        TaylorSeries.zero!(tmp1539[i, j])
                        (tmp1539[i, j]).coeffs[1] = constant_term(tmp1537[i, j]) - constant_term(tmp1538[i, j])
                        TaylorSeries.zero!(N_MfigM_pmA_y[i])
                        (N_MfigM_pmA_y[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp1539[i, j])
                        TaylorSeries.zero!(tmp1541[i, j])
                        (tmp1541[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_y[i, j])
                        TaylorSeries.zero!(tmp1542[i, j])
                        (tmp1542[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j])
                        TaylorSeries.zero!(tmp1543[i, j])
                        (tmp1543[i, j]).coeffs[1] = constant_term(tmp1541[i, j]) - constant_term(tmp1542[i, j])
                        TaylorSeries.zero!(N_MfigM_pmA_z[i])
                        (N_MfigM_pmA_z[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp1543[i, j])
                        TaylorSeries.zero!(temp_N_M_x[i])
                        (temp_N_M_x[i]).coeffs[1] = constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i])
                        TaylorSeries.zero!(N_MfigM[1])
                        (N_MfigM[1]).coeffs[1] = identity(constant_term(temp_N_M_x[i]))
                        TaylorSeries.zero!(temp_N_M_y[i])
                        (temp_N_M_y[i]).coeffs[1] = constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i])
                        TaylorSeries.zero!(N_MfigM[2])
                        (N_MfigM[2]).coeffs[1] = identity(constant_term(temp_N_M_y[i]))
                        TaylorSeries.zero!(temp_N_M_z[i])
                        (temp_N_M_z[i]).coeffs[1] = constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i])
                        TaylorSeries.zero!(N_MfigM[3])
                        (N_MfigM[3]).coeffs[1] = identity(constant_term(temp_N_M_z[i]))
                    end
                end
            end
        end
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:658 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.zero!(_4ϕj[i, j])
                    (_4ϕj[i, j]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[j])
                    TaylorSeries.zero!(ϕi_plus_4ϕj[i, j])
                    (ϕi_plus_4ϕj[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j])
                    TaylorSeries.zero!(_2v2[i, j])
                    (_2v2[i, j]).coeffs[1] = constant_term(2) * constant_term(v2[i])
                    TaylorSeries.zero!(sj2_plus_2si2[i, j])
                    (sj2_plus_2si2[i, j]).coeffs[1] = constant_term(v2[j]) + constant_term(_2v2[i, j])
                    TaylorSeries.zero!(tmp1555[i, j])
                    (tmp1555[i, j]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i, j])
                    TaylorSeries.zero!(sj2_plus_2si2_minus_4vivj[i, j])
                    (sj2_plus_2si2_minus_4vivj[i, j]).coeffs[1] = constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp1555[i, j])
                    TaylorSeries.zero!(ϕs_and_vs[i, j])
                    (ϕs_and_vs[i, j]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j])
                    TaylorSeries.zero!(Xij_t_Ui[i, j])
                    (Xij_t_Ui[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(dq[3i - 2])
                    TaylorSeries.zero!(Yij_t_Vi[i, j])
                    (Yij_t_Vi[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(dq[3i - 1])
                    TaylorSeries.zero!(Zij_t_Wi[i, j])
                    (Zij_t_Wi[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(dq[3i])
                    TaylorSeries.zero!(tmp1561[i, j])
                    (tmp1561[i, j]).coeffs[1] = constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j])
                    TaylorSeries.zero!(Rij_dot_Vi[i, j])
                    (Rij_dot_Vi[i, j]).coeffs[1] = constant_term(tmp1561[i, j]) + constant_term(Zij_t_Wi[i, j])
                    TaylorSeries.zero!(tmp1564[i, j])
                    (tmp1564[i, j]).coeffs[1] = constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2))
                    TaylorSeries.zero!(pn1t7[i, j])
                    (pn1t7[i, j]).coeffs[1] = constant_term(tmp1564[i, j]) / constant_term(r_p2[i, j])
                    TaylorSeries.zero!(tmp1567[i, j])
                    (tmp1567[i, j]).coeffs[1] = constant_term(1.5) * constant_term(pn1t7[i, j])
                    TaylorSeries.zero!(pn1t2_7[i, j])
                    (pn1t2_7[i, j]).coeffs[1] = constant_term(ϕs_and_vs[i, j]) - constant_term(tmp1567[i, j])
                    TaylorSeries.zero!(pn1t1_7[i, j])
                    (pn1t1_7[i, j]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i, j])
                end
            end
            TaylorSeries.zero!(pntempX[j])
            (pntempX[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(pntempY[j])
            (pntempY[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(pntempZ[j])
            (pntempZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:697 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.zero!(pNX_t_X[i, j])
                    (pNX_t_X[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(X[i, j])
                    TaylorSeries.zero!(pNY_t_Y[i, j])
                    (pNY_t_Y[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(Y[i, j])
                    TaylorSeries.zero!(pNZ_t_Z[i, j])
                    (pNZ_t_Z[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(Z[i, j])
                    TaylorSeries.zero!(tmp1574[i, j])
                    (tmp1574[i, j]).coeffs[1] = constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j])
                    TaylorSeries.zero!(tmp1575[i, j])
                    (tmp1575[i, j]).coeffs[1] = constant_term(tmp1574[i, j]) + constant_term(pNZ_t_Z[i, j])
                    TaylorSeries.zero!(tmp1576[i, j])
                    (tmp1576[i, j]).coeffs[1] = constant_term(0.5) * constant_term(tmp1575[i, j])
                    TaylorSeries.zero!(pn1[i, j])
                    (pn1[i, j]).coeffs[1] = constant_term(pn1t1_7[i, j]) + constant_term(tmp1576[i, j])
                    TaylorSeries.zero!(X_t_pn1[i, j])
                    (X_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j])
                    TaylorSeries.zero!(Y_t_pn1[i, j])
                    (Y_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j])
                    TaylorSeries.zero!(Z_t_pn1[i, j])
                    (Z_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j])
                    TaylorSeries.zero!(pNX_t_pn3[i, j])
                    (pNX_t_pn3[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(pn3[i, j])
                    TaylorSeries.zero!(pNY_t_pn3[i, j])
                    (pNY_t_pn3[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(pn3[i, j])
                    TaylorSeries.zero!(pNZ_t_pn3[i, j])
                    (pNZ_t_pn3[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(pn3[i, j])
                    TaylorSeries.zero!(tmp1584[i, j])
                    (tmp1584[i, j]).coeffs[1] = constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j])
                    TaylorSeries.zero!(termpnx[i, j])
                    (termpnx[i, j]).coeffs[1] = constant_term(X_t_pn1[i, j]) + constant_term(tmp1584[i, j])
                    TaylorSeries.zero!(sumpnx[i, j])
                    (sumpnx[i, j]).coeffs[1] = constant_term(pntempX[j]) + constant_term(termpnx[i, j])
                    TaylorSeries.zero!(pntempX[j])
                    (pntempX[j]).coeffs[1] = identity(constant_term(sumpnx[i, j]))
                    TaylorSeries.zero!(tmp1587[i, j])
                    (tmp1587[i, j]).coeffs[1] = constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j])
                    TaylorSeries.zero!(termpny[i, j])
                    (termpny[i, j]).coeffs[1] = constant_term(Y_t_pn1[i, j]) + constant_term(tmp1587[i, j])
                    TaylorSeries.zero!(sumpny[i, j])
                    (sumpny[i, j]).coeffs[1] = constant_term(pntempY[j]) + constant_term(termpny[i, j])
                    TaylorSeries.zero!(pntempY[j])
                    (pntempY[j]).coeffs[1] = identity(constant_term(sumpny[i, j]))
                    TaylorSeries.zero!(tmp1590[i, j])
                    (tmp1590[i, j]).coeffs[1] = constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j])
                    TaylorSeries.zero!(termpnz[i, j])
                    (termpnz[i, j]).coeffs[1] = constant_term(Z_t_pn1[i, j]) + constant_term(tmp1590[i, j])
                    TaylorSeries.zero!(sumpnz[i, j])
                    (sumpnz[i, j]).coeffs[1] = constant_term(pntempZ[j]) + constant_term(termpnz[i, j])
                    TaylorSeries.zero!(pntempZ[j])
                    (pntempZ[j]).coeffs[1] = identity(constant_term(sumpnz[i, j]))
                end
            end
            TaylorSeries.zero!(postNewtonX[j])
            (postNewtonX[j]).coeffs[1] = constant_term(pntempX[j]) * constant_term(c_m2)
            TaylorSeries.zero!(postNewtonY[j])
            (postNewtonY[j]).coeffs[1] = constant_term(pntempY[j]) * constant_term(c_m2)
            TaylorSeries.zero!(postNewtonZ[j])
            (postNewtonZ[j]).coeffs[1] = constant_term(pntempZ[j]) * constant_term(c_m2)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:743 =# Threads.@threads for i = 1:N_ext
            TaylorSeries.zero!(dq[3 * (N + i) - 2])
            (dq[3 * (N + i) - 2]).coeffs[1] = constant_term(postNewtonX[i]) + constant_term(accX[i])
            TaylorSeries.zero!(dq[3 * (N + i) - 1])
            (dq[3 * (N + i) - 1]).coeffs[1] = constant_term(postNewtonY[i]) + constant_term(accY[i])
            TaylorSeries.zero!(dq[3 * (N + i)])
            (dq[3 * (N + i)]).coeffs[1] = constant_term(postNewtonZ[i]) + constant_term(accZ[i])
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:748 =# Threads.@threads for i = N_ext + 1:N
            TaylorSeries.zero!(dq[3 * (N + i) - 2])
            (dq[3 * (N + i) - 2]).coeffs[1] = identity(constant_term(postNewtonX[i]))
            TaylorSeries.zero!(dq[3 * (N + i) - 1])
            (dq[3 * (N + i) - 1]).coeffs[1] = identity(constant_term(postNewtonY[i]))
            TaylorSeries.zero!(dq[3 * (N + i)])
            (dq[3 * (N + i)]).coeffs[1] = identity(constant_term(postNewtonZ[i]))
        end
    TaylorSeries.zero!(tmp1599)
    tmp1599.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp1600)
    tmp1600.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp1601)
    tmp1601.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp1602)
    tmp1602.coeffs[1] = constant_term(tmp1600) + constant_term(tmp1601)
    TaylorSeries.zero!(Iω_x)
    Iω_x.coeffs[1] = constant_term(tmp1599) + constant_term(tmp1602)
    TaylorSeries.zero!(tmp1604)
    tmp1604.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp1605)
    tmp1605.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp1606)
    tmp1606.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp1607)
    tmp1607.coeffs[1] = constant_term(tmp1605) + constant_term(tmp1606)
    TaylorSeries.zero!(Iω_y)
    Iω_y.coeffs[1] = constant_term(tmp1604) + constant_term(tmp1607)
    TaylorSeries.zero!(tmp1609)
    tmp1609.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp1610)
    tmp1610.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp1611)
    tmp1611.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp1612)
    tmp1612.coeffs[1] = constant_term(tmp1610) + constant_term(tmp1611)
    TaylorSeries.zero!(Iω_z)
    Iω_z.coeffs[1] = constant_term(tmp1609) + constant_term(tmp1612)
    TaylorSeries.zero!(tmp1614)
    tmp1614.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_z)
    TaylorSeries.zero!(tmp1615)
    tmp1615.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_y)
    TaylorSeries.zero!(ωxIω_x)
    ωxIω_x.coeffs[1] = constant_term(tmp1614) - constant_term(tmp1615)
    TaylorSeries.zero!(tmp1617)
    tmp1617.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_x)
    TaylorSeries.zero!(tmp1618)
    tmp1618.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_z)
    TaylorSeries.zero!(ωxIω_y)
    ωxIω_y.coeffs[1] = constant_term(tmp1617) - constant_term(tmp1618)
    TaylorSeries.zero!(tmp1620)
    tmp1620.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_y)
    TaylorSeries.zero!(tmp1621)
    tmp1621.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_x)
    TaylorSeries.zero!(ωxIω_z)
    ωxIω_z.coeffs[1] = constant_term(tmp1620) - constant_term(tmp1621)
    TaylorSeries.zero!(tmp1623)
    tmp1623.coeffs[1] = constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp1624)
    tmp1624.coeffs[1] = constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp1625)
    tmp1625.coeffs[1] = constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp1626)
    tmp1626.coeffs[1] = constant_term(tmp1624) + constant_term(tmp1625)
    TaylorSeries.zero!(dIω_x)
    dIω_x.coeffs[1] = constant_term(tmp1623) + constant_term(tmp1626)
    TaylorSeries.zero!(tmp1628)
    tmp1628.coeffs[1] = constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp1629)
    tmp1629.coeffs[1] = constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp1630)
    tmp1630.coeffs[1] = constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp1631)
    tmp1631.coeffs[1] = constant_term(tmp1629) + constant_term(tmp1630)
    TaylorSeries.zero!(dIω_y)
    dIω_y.coeffs[1] = constant_term(tmp1628) + constant_term(tmp1631)
    TaylorSeries.zero!(tmp1633)
    tmp1633.coeffs[1] = constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp1634)
    tmp1634.coeffs[1] = constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp1635)
    tmp1635.coeffs[1] = constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp1636)
    tmp1636.coeffs[1] = constant_term(tmp1634) + constant_term(tmp1635)
    TaylorSeries.zero!(dIω_z)
    dIω_z.coeffs[1] = constant_term(tmp1633) + constant_term(tmp1636)
    TaylorSeries.zero!(er_EM_I_1)
    er_EM_I_1.coeffs[1] = constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo])
    TaylorSeries.zero!(er_EM_I_2)
    er_EM_I_2.coeffs[1] = constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo])
    TaylorSeries.zero!(er_EM_I_3)
    er_EM_I_3.coeffs[1] = constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo])
    TaylorSeries.zero!(p_E_I_1)
    p_E_I_1.coeffs[1] = identity(constant_term(RotM[3, 1, ea]))
    TaylorSeries.zero!(p_E_I_2)
    p_E_I_2.coeffs[1] = identity(constant_term(RotM[3, 2, ea]))
    TaylorSeries.zero!(p_E_I_3)
    p_E_I_3.coeffs[1] = identity(constant_term(RotM[3, 3, ea]))
    TaylorSeries.zero!(tmp1641)
    tmp1641.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1)
    TaylorSeries.zero!(tmp1642)
    tmp1642.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2)
    TaylorSeries.zero!(tmp1643)
    tmp1643.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3)
    TaylorSeries.zero!(tmp1644)
    tmp1644.coeffs[1] = constant_term(tmp1642) + constant_term(tmp1643)
    TaylorSeries.zero!(er_EM_1)
    er_EM_1.coeffs[1] = constant_term(tmp1641) + constant_term(tmp1644)
    TaylorSeries.zero!(tmp1646)
    tmp1646.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1)
    TaylorSeries.zero!(tmp1647)
    tmp1647.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2)
    TaylorSeries.zero!(tmp1648)
    tmp1648.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3)
    TaylorSeries.zero!(tmp1649)
    tmp1649.coeffs[1] = constant_term(tmp1647) + constant_term(tmp1648)
    TaylorSeries.zero!(er_EM_2)
    er_EM_2.coeffs[1] = constant_term(tmp1646) + constant_term(tmp1649)
    TaylorSeries.zero!(tmp1651)
    tmp1651.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1)
    TaylorSeries.zero!(tmp1652)
    tmp1652.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2)
    TaylorSeries.zero!(tmp1653)
    tmp1653.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3)
    TaylorSeries.zero!(tmp1654)
    tmp1654.coeffs[1] = constant_term(tmp1652) + constant_term(tmp1653)
    TaylorSeries.zero!(er_EM_3)
    er_EM_3.coeffs[1] = constant_term(tmp1651) + constant_term(tmp1654)
    TaylorSeries.zero!(tmp1656)
    tmp1656.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1)
    TaylorSeries.zero!(tmp1657)
    tmp1657.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2)
    TaylorSeries.zero!(tmp1658)
    tmp1658.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3)
    TaylorSeries.zero!(tmp1659)
    tmp1659.coeffs[1] = constant_term(tmp1657) + constant_term(tmp1658)
    TaylorSeries.zero!(p_E_1)
    p_E_1.coeffs[1] = constant_term(tmp1656) + constant_term(tmp1659)
    TaylorSeries.zero!(tmp1661)
    tmp1661.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1)
    TaylorSeries.zero!(tmp1662)
    tmp1662.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2)
    TaylorSeries.zero!(tmp1663)
    tmp1663.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3)
    TaylorSeries.zero!(tmp1664)
    tmp1664.coeffs[1] = constant_term(tmp1662) + constant_term(tmp1663)
    TaylorSeries.zero!(p_E_2)
    p_E_2.coeffs[1] = constant_term(tmp1661) + constant_term(tmp1664)
    TaylorSeries.zero!(tmp1666)
    tmp1666.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1)
    TaylorSeries.zero!(tmp1667)
    tmp1667.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2)
    TaylorSeries.zero!(tmp1668)
    tmp1668.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3)
    TaylorSeries.zero!(tmp1669)
    tmp1669.coeffs[1] = constant_term(tmp1667) + constant_term(tmp1668)
    TaylorSeries.zero!(p_E_3)
    p_E_3.coeffs[1] = constant_term(tmp1666) + constant_term(tmp1669)
    TaylorSeries.zero!(tmp1671)
    tmp1671.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(er_EM_1)
    TaylorSeries.zero!(tmp1672)
    tmp1672.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(er_EM_2)
    TaylorSeries.zero!(tmp1673)
    tmp1673.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(er_EM_3)
    TaylorSeries.zero!(tmp1674)
    tmp1674.coeffs[1] = constant_term(tmp1672) + constant_term(tmp1673)
    TaylorSeries.zero!(I_er_EM_1)
    I_er_EM_1.coeffs[1] = constant_term(tmp1671) + constant_term(tmp1674)
    TaylorSeries.zero!(tmp1676)
    tmp1676.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(er_EM_1)
    TaylorSeries.zero!(tmp1677)
    tmp1677.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(er_EM_2)
    TaylorSeries.zero!(tmp1678)
    tmp1678.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(er_EM_3)
    TaylorSeries.zero!(tmp1679)
    tmp1679.coeffs[1] = constant_term(tmp1677) + constant_term(tmp1678)
    TaylorSeries.zero!(I_er_EM_2)
    I_er_EM_2.coeffs[1] = constant_term(tmp1676) + constant_term(tmp1679)
    TaylorSeries.zero!(tmp1681)
    tmp1681.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(er_EM_1)
    TaylorSeries.zero!(tmp1682)
    tmp1682.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(er_EM_2)
    TaylorSeries.zero!(tmp1683)
    tmp1683.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(er_EM_3)
    TaylorSeries.zero!(tmp1684)
    tmp1684.coeffs[1] = constant_term(tmp1682) + constant_term(tmp1683)
    TaylorSeries.zero!(I_er_EM_3)
    I_er_EM_3.coeffs[1] = constant_term(tmp1681) + constant_term(tmp1684)
    TaylorSeries.zero!(tmp1686)
    tmp1686.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(p_E_1)
    TaylorSeries.zero!(tmp1687)
    tmp1687.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(p_E_2)
    TaylorSeries.zero!(tmp1688)
    tmp1688.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(p_E_3)
    TaylorSeries.zero!(tmp1689)
    tmp1689.coeffs[1] = constant_term(tmp1687) + constant_term(tmp1688)
    TaylorSeries.zero!(I_p_E_1)
    I_p_E_1.coeffs[1] = constant_term(tmp1686) + constant_term(tmp1689)
    TaylorSeries.zero!(tmp1691)
    tmp1691.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(p_E_1)
    TaylorSeries.zero!(tmp1692)
    tmp1692.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(p_E_2)
    TaylorSeries.zero!(tmp1693)
    tmp1693.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(p_E_3)
    TaylorSeries.zero!(tmp1694)
    tmp1694.coeffs[1] = constant_term(tmp1692) + constant_term(tmp1693)
    TaylorSeries.zero!(I_p_E_2)
    I_p_E_2.coeffs[1] = constant_term(tmp1691) + constant_term(tmp1694)
    TaylorSeries.zero!(tmp1696)
    tmp1696.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(p_E_1)
    TaylorSeries.zero!(tmp1697)
    tmp1697.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(p_E_2)
    TaylorSeries.zero!(tmp1698)
    tmp1698.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(p_E_3)
    TaylorSeries.zero!(tmp1699)
    tmp1699.coeffs[1] = constant_term(tmp1697) + constant_term(tmp1698)
    TaylorSeries.zero!(I_p_E_3)
    I_p_E_3.coeffs[1] = constant_term(tmp1696) + constant_term(tmp1699)
    TaylorSeries.zero!(tmp1701)
    tmp1701.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_3)
    TaylorSeries.zero!(tmp1702)
    tmp1702.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_2)
    TaylorSeries.zero!(er_EM_cross_I_er_EM_1)
    er_EM_cross_I_er_EM_1.coeffs[1] = constant_term(tmp1701) - constant_term(tmp1702)
    TaylorSeries.zero!(tmp1704)
    tmp1704.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_1)
    TaylorSeries.zero!(tmp1705)
    tmp1705.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_3)
    TaylorSeries.zero!(er_EM_cross_I_er_EM_2)
    er_EM_cross_I_er_EM_2.coeffs[1] = constant_term(tmp1704) - constant_term(tmp1705)
    TaylorSeries.zero!(tmp1707)
    tmp1707.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_2)
    TaylorSeries.zero!(tmp1708)
    tmp1708.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_1)
    TaylorSeries.zero!(er_EM_cross_I_er_EM_3)
    er_EM_cross_I_er_EM_3.coeffs[1] = constant_term(tmp1707) - constant_term(tmp1708)
    TaylorSeries.zero!(tmp1710)
    tmp1710.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_3)
    TaylorSeries.zero!(tmp1711)
    tmp1711.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_2)
    TaylorSeries.zero!(er_EM_cross_I_p_E_1)
    er_EM_cross_I_p_E_1.coeffs[1] = constant_term(tmp1710) - constant_term(tmp1711)
    TaylorSeries.zero!(tmp1713)
    tmp1713.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_1)
    TaylorSeries.zero!(tmp1714)
    tmp1714.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_3)
    TaylorSeries.zero!(er_EM_cross_I_p_E_2)
    er_EM_cross_I_p_E_2.coeffs[1] = constant_term(tmp1713) - constant_term(tmp1714)
    TaylorSeries.zero!(tmp1716)
    tmp1716.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_2)
    TaylorSeries.zero!(tmp1717)
    tmp1717.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_1)
    TaylorSeries.zero!(er_EM_cross_I_p_E_3)
    er_EM_cross_I_p_E_3.coeffs[1] = constant_term(tmp1716) - constant_term(tmp1717)
    TaylorSeries.zero!(tmp1719)
    tmp1719.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_3)
    TaylorSeries.zero!(tmp1720)
    tmp1720.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_2)
    TaylorSeries.zero!(p_E_cross_I_er_EM_1)
    p_E_cross_I_er_EM_1.coeffs[1] = constant_term(tmp1719) - constant_term(tmp1720)
    TaylorSeries.zero!(tmp1722)
    tmp1722.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_1)
    TaylorSeries.zero!(tmp1723)
    tmp1723.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_3)
    TaylorSeries.zero!(p_E_cross_I_er_EM_2)
    p_E_cross_I_er_EM_2.coeffs[1] = constant_term(tmp1722) - constant_term(tmp1723)
    TaylorSeries.zero!(tmp1725)
    tmp1725.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_2)
    TaylorSeries.zero!(tmp1726)
    tmp1726.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_1)
    TaylorSeries.zero!(p_E_cross_I_er_EM_3)
    p_E_cross_I_er_EM_3.coeffs[1] = constant_term(tmp1725) - constant_term(tmp1726)
    TaylorSeries.zero!(tmp1728)
    tmp1728.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_3)
    TaylorSeries.zero!(tmp1729)
    tmp1729.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_2)
    TaylorSeries.zero!(p_E_cross_I_p_E_1)
    p_E_cross_I_p_E_1.coeffs[1] = constant_term(tmp1728) - constant_term(tmp1729)
    TaylorSeries.zero!(tmp1731)
    tmp1731.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_1)
    TaylorSeries.zero!(tmp1732)
    tmp1732.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_3)
    TaylorSeries.zero!(p_E_cross_I_p_E_2)
    p_E_cross_I_p_E_2.coeffs[1] = constant_term(tmp1731) - constant_term(tmp1732)
    TaylorSeries.zero!(tmp1734)
    tmp1734.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_2)
    TaylorSeries.zero!(tmp1735)
    tmp1735.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_1)
    TaylorSeries.zero!(p_E_cross_I_p_E_3)
    p_E_cross_I_p_E_3.coeffs[1] = constant_term(tmp1734) - constant_term(tmp1735)
    TaylorSeries.zero!(tmp1739)
    tmp1739.coeffs[1] = constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp1740)
    tmp1740.coeffs[1] = constant_term(7) * constant_term(tmp1739)
    TaylorSeries.zero!(one_minus_7sin2ϕEM)
    one_minus_7sin2ϕEM.coeffs[1] = constant_term(one_t) - constant_term(tmp1740)
    TaylorSeries.zero!(two_sinϕEM)
    two_sinϕEM.coeffs[1] = constant_term(2) * constant_term(sin_ϕ[ea, mo])
    TaylorSeries.zero!(tmp1745)
    tmp1745.coeffs[1] = constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5))
    TaylorSeries.zero!(N_MfigM_figE_factor_div_rEMp5)
    N_MfigM_figE_factor_div_rEMp5.coeffs[1] = constant_term(N_MfigM_figE_factor) / constant_term(tmp1745)
    TaylorSeries.zero!(tmp1747)
    tmp1747.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1)
    TaylorSeries.zero!(tmp1748)
    tmp1748.coeffs[1] = constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1)
    TaylorSeries.zero!(tmp1749)
    tmp1749.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp1748)
    TaylorSeries.zero!(tmp1750)
    tmp1750.coeffs[1] = constant_term(tmp1747) + constant_term(tmp1749)
    TaylorSeries.zero!(tmp1752)
    tmp1752.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_1)
    TaylorSeries.zero!(tmp1753)
    tmp1753.coeffs[1] = constant_term(tmp1750) - constant_term(tmp1752)
    TaylorSeries.zero!(N_MfigM_figE_1)
    N_MfigM_figE_1.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1753)
    TaylorSeries.zero!(tmp1755)
    tmp1755.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2)
    TaylorSeries.zero!(tmp1756)
    tmp1756.coeffs[1] = constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2)
    TaylorSeries.zero!(tmp1757)
    tmp1757.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp1756)
    TaylorSeries.zero!(tmp1758)
    tmp1758.coeffs[1] = constant_term(tmp1755) + constant_term(tmp1757)
    TaylorSeries.zero!(tmp1760)
    tmp1760.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_2)
    TaylorSeries.zero!(tmp1761)
    tmp1761.coeffs[1] = constant_term(tmp1758) - constant_term(tmp1760)
    TaylorSeries.zero!(N_MfigM_figE_2)
    N_MfigM_figE_2.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1761)
    TaylorSeries.zero!(tmp1763)
    tmp1763.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3)
    TaylorSeries.zero!(tmp1764)
    tmp1764.coeffs[1] = constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3)
    TaylorSeries.zero!(tmp1765)
    tmp1765.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp1764)
    TaylorSeries.zero!(tmp1766)
    tmp1766.coeffs[1] = constant_term(tmp1763) + constant_term(tmp1765)
    TaylorSeries.zero!(tmp1768)
    tmp1768.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_3)
    TaylorSeries.zero!(tmp1769)
    tmp1769.coeffs[1] = constant_term(tmp1766) - constant_term(tmp1768)
    TaylorSeries.zero!(N_MfigM_figE_3)
    N_MfigM_figE_3.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1769)
    TaylorSeries.zero!(tmp1771)
    tmp1771.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1])
    TaylorSeries.zero!(tmp1772)
    tmp1772.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2])
    TaylorSeries.zero!(tmp1773)
    tmp1773.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3])
    TaylorSeries.zero!(tmp1774)
    tmp1774.coeffs[1] = constant_term(tmp1772) + constant_term(tmp1773)
    TaylorSeries.zero!(N_1_LMF)
    N_1_LMF.coeffs[1] = constant_term(tmp1771) + constant_term(tmp1774)
    TaylorSeries.zero!(tmp1776)
    tmp1776.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1])
    TaylorSeries.zero!(tmp1777)
    tmp1777.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2])
    TaylorSeries.zero!(tmp1778)
    tmp1778.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3])
    TaylorSeries.zero!(tmp1779)
    tmp1779.coeffs[1] = constant_term(tmp1777) + constant_term(tmp1778)
    TaylorSeries.zero!(N_2_LMF)
    N_2_LMF.coeffs[1] = constant_term(tmp1776) + constant_term(tmp1779)
    TaylorSeries.zero!(tmp1781)
    tmp1781.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1])
    TaylorSeries.zero!(tmp1782)
    tmp1782.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2])
    TaylorSeries.zero!(tmp1783)
    tmp1783.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3])
    TaylorSeries.zero!(tmp1784)
    tmp1784.coeffs[1] = constant_term(tmp1782) + constant_term(tmp1783)
    TaylorSeries.zero!(N_3_LMF)
    N_3_LMF.coeffs[1] = constant_term(tmp1781) + constant_term(tmp1784)
    TaylorSeries.zero!(tmp1786)
    tmp1786.coeffs[1] = constant_term(q[6N + 10]) - constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp1787)
    tmp1787.coeffs[1] = constant_term(k_ν) * constant_term(tmp1786)
    TaylorSeries.zero!(tmp1788)
    tmp1788.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp1789)
    tmp1789.coeffs[1] = constant_term(tmp1788) * constant_term(q[6N + 11])
    TaylorSeries.zero!(N_cmb_1)
    N_cmb_1.coeffs[1] = constant_term(tmp1787) - constant_term(tmp1789)
    TaylorSeries.zero!(tmp1791)
    tmp1791.coeffs[1] = constant_term(q[6N + 11]) - constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp1792)
    tmp1792.coeffs[1] = constant_term(k_ν) * constant_term(tmp1791)
    TaylorSeries.zero!(tmp1793)
    tmp1793.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp1794)
    tmp1794.coeffs[1] = constant_term(tmp1793) * constant_term(q[6N + 10])
    TaylorSeries.zero!(N_cmb_2)
    N_cmb_2.coeffs[1] = constant_term(tmp1792) + constant_term(tmp1794)
    TaylorSeries.zero!(tmp1796)
    tmp1796.coeffs[1] = constant_term(q[6N + 12]) - constant_term(q[6N + 6])
    TaylorSeries.zero!(N_cmb_3)
    N_cmb_3.coeffs[1] = constant_term(k_ν) * constant_term(tmp1796)
    TaylorSeries.zero!(tmp1798)
    tmp1798.coeffs[1] = constant_term(μ[mo]) * constant_term(N_1_LMF)
    TaylorSeries.zero!(tmp1799)
    tmp1799.coeffs[1] = constant_term(N_MfigM_figE_1) + constant_term(tmp1798)
    TaylorSeries.zero!(tmp1800)
    tmp1800.coeffs[1] = constant_term(tmp1799) + constant_term(N_cmb_1)
    TaylorSeries.zero!(tmp1801)
    tmp1801.coeffs[1] = constant_term(dIω_x) + constant_term(ωxIω_x)
    TaylorSeries.zero!(I_dω_1)
    I_dω_1.coeffs[1] = constant_term(tmp1800) - constant_term(tmp1801)
    TaylorSeries.zero!(tmp1803)
    tmp1803.coeffs[1] = constant_term(μ[mo]) * constant_term(N_2_LMF)
    TaylorSeries.zero!(tmp1804)
    tmp1804.coeffs[1] = constant_term(N_MfigM_figE_2) + constant_term(tmp1803)
    TaylorSeries.zero!(tmp1805)
    tmp1805.coeffs[1] = constant_term(tmp1804) + constant_term(N_cmb_2)
    TaylorSeries.zero!(tmp1806)
    tmp1806.coeffs[1] = constant_term(dIω_y) + constant_term(ωxIω_y)
    TaylorSeries.zero!(I_dω_2)
    I_dω_2.coeffs[1] = constant_term(tmp1805) - constant_term(tmp1806)
    TaylorSeries.zero!(tmp1808)
    tmp1808.coeffs[1] = constant_term(μ[mo]) * constant_term(N_3_LMF)
    TaylorSeries.zero!(tmp1809)
    tmp1809.coeffs[1] = constant_term(N_MfigM_figE_3) + constant_term(tmp1808)
    TaylorSeries.zero!(tmp1810)
    tmp1810.coeffs[1] = constant_term(tmp1809) + constant_term(N_cmb_3)
    TaylorSeries.zero!(tmp1811)
    tmp1811.coeffs[1] = constant_term(dIω_z) + constant_term(ωxIω_z)
    TaylorSeries.zero!(I_dω_3)
    I_dω_3.coeffs[1] = constant_term(tmp1810) - constant_term(tmp1811)
    TaylorSeries.zero!(Ic_ωc_1)
    Ic_ωc_1.coeffs[1] = constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10])
    TaylorSeries.zero!(Ic_ωc_2)
    Ic_ωc_2.coeffs[1] = constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11])
    TaylorSeries.zero!(Ic_ωc_3)
    Ic_ωc_3.coeffs[1] = constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp1816)
    tmp1816.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_2)
    TaylorSeries.zero!(tmp1817)
    tmp1817.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_3)
    TaylorSeries.zero!(m_ωm_x_Icωc_1)
    m_ωm_x_Icωc_1.coeffs[1] = constant_term(tmp1816) - constant_term(tmp1817)
    TaylorSeries.zero!(tmp1819)
    tmp1819.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_3)
    TaylorSeries.zero!(tmp1820)
    tmp1820.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_1)
    TaylorSeries.zero!(m_ωm_x_Icωc_2)
    m_ωm_x_Icωc_2.coeffs[1] = constant_term(tmp1819) - constant_term(tmp1820)
    TaylorSeries.zero!(tmp1822)
    tmp1822.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_1)
    TaylorSeries.zero!(tmp1823)
    tmp1823.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_2)
    TaylorSeries.zero!(m_ωm_x_Icωc_3)
    m_ωm_x_Icωc_3.coeffs[1] = constant_term(tmp1822) - constant_term(tmp1823)
    TaylorSeries.zero!(Ic_dωc_1)
    Ic_dωc_1.coeffs[1] = constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1)
    TaylorSeries.zero!(Ic_dωc_2)
    Ic_dωc_2.coeffs[1] = constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2)
    TaylorSeries.zero!(Ic_dωc_3)
    Ic_dωc_3.coeffs[1] = constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3)
    TaylorSeries.zero!(tmp1828)
    tmp1828.coeffs[1] = sin(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1908)
    tmp1908.coeffs[1] = cos(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1829)
    tmp1829.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp1828)
    TaylorSeries.zero!(tmp1830)
    tmp1830.coeffs[1] = cos(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1909)
    tmp1909.coeffs[1] = sin(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1831)
    tmp1831.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp1830)
    TaylorSeries.zero!(tmp1832)
    tmp1832.coeffs[1] = constant_term(tmp1829) + constant_term(tmp1831)
    TaylorSeries.zero!(tmp1833)
    tmp1833.coeffs[1] = sin(constant_term(q[6N + 2]))
    TaylorSeries.zero!(tmp1910)
    tmp1910.coeffs[1] = cos(constant_term(q[6N + 2]))
    TaylorSeries.zero!(dq[6N + 1])
    (dq[6N + 1]).coeffs[1] = constant_term(tmp1832) / constant_term(tmp1833)
    TaylorSeries.zero!(tmp1835)
    tmp1835.coeffs[1] = cos(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1911)
    tmp1911.coeffs[1] = sin(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1836)
    tmp1836.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp1835)
    TaylorSeries.zero!(tmp1837)
    tmp1837.coeffs[1] = sin(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1912)
    tmp1912.coeffs[1] = cos(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp1838)
    tmp1838.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp1837)
    TaylorSeries.zero!(dq[6N + 2])
    (dq[6N + 2]).coeffs[1] = constant_term(tmp1836) - constant_term(tmp1838)
    TaylorSeries.zero!(tmp1840)
    tmp1840.coeffs[1] = cos(constant_term(q[6N + 2]))
    TaylorSeries.zero!(tmp1913)
    tmp1913.coeffs[1] = sin(constant_term(q[6N + 2]))
    TaylorSeries.zero!(tmp1841)
    tmp1841.coeffs[1] = constant_term(dq[6N + 1]) * constant_term(tmp1840)
    TaylorSeries.zero!(dq[6N + 3])
    (dq[6N + 3]).coeffs[1] = constant_term(q[6N + 6]) - constant_term(tmp1841)
    TaylorSeries.zero!(tmp1843)
    tmp1843.coeffs[1] = constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1)
    TaylorSeries.zero!(tmp1844)
    tmp1844.coeffs[1] = constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2)
    TaylorSeries.zero!(tmp1845)
    tmp1845.coeffs[1] = constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3)
    TaylorSeries.zero!(tmp1846)
    tmp1846.coeffs[1] = constant_term(tmp1844) + constant_term(tmp1845)
    TaylorSeries.zero!(dq[6N + 4])
    (dq[6N + 4]).coeffs[1] = constant_term(tmp1843) + constant_term(tmp1846)
    TaylorSeries.zero!(tmp1848)
    tmp1848.coeffs[1] = constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1)
    TaylorSeries.zero!(tmp1849)
    tmp1849.coeffs[1] = constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2)
    TaylorSeries.zero!(tmp1850)
    tmp1850.coeffs[1] = constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3)
    TaylorSeries.zero!(tmp1851)
    tmp1851.coeffs[1] = constant_term(tmp1849) + constant_term(tmp1850)
    TaylorSeries.zero!(dq[6N + 5])
    (dq[6N + 5]).coeffs[1] = constant_term(tmp1848) + constant_term(tmp1851)
    TaylorSeries.zero!(tmp1853)
    tmp1853.coeffs[1] = constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1)
    TaylorSeries.zero!(tmp1854)
    tmp1854.coeffs[1] = constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2)
    TaylorSeries.zero!(tmp1855)
    tmp1855.coeffs[1] = constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3)
    TaylorSeries.zero!(tmp1856)
    tmp1856.coeffs[1] = constant_term(tmp1854) + constant_term(tmp1855)
    TaylorSeries.zero!(dq[6N + 6])
    (dq[6N + 6]).coeffs[1] = constant_term(tmp1853) + constant_term(tmp1856)
    TaylorSeries.zero!(tmp1858)
    tmp1858.coeffs[1] = sin(constant_term(q[6N + 8]))
    TaylorSeries.zero!(tmp1914)
    tmp1914.coeffs[1] = cos(constant_term(q[6N + 8]))
    TaylorSeries.zero!(tmp1859)
    tmp1859.coeffs[1] = constant_term(ω_c_CE_2) / constant_term(tmp1858)
    TaylorSeries.zero!(dq[6N + 9])
    (dq[6N + 9]).coeffs[1] = -(constant_term(tmp1859))
    TaylorSeries.zero!(tmp1861)
    tmp1861.coeffs[1] = cos(constant_term(q[6N + 8]))
    TaylorSeries.zero!(tmp1915)
    tmp1915.coeffs[1] = sin(constant_term(q[6N + 8]))
    TaylorSeries.zero!(tmp1862)
    tmp1862.coeffs[1] = constant_term(dq[6N + 9]) * constant_term(tmp1861)
    TaylorSeries.zero!(dq[6N + 7])
    (dq[6N + 7]).coeffs[1] = constant_term(ω_c_CE_3) - constant_term(tmp1862)
    TaylorSeries.zero!(dq[6N + 8])
    (dq[6N + 8]).coeffs[1] = identity(constant_term(ω_c_CE_1))
    TaylorSeries.zero!(dq[6N + 10])
    (dq[6N + 10]).coeffs[1] = constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1)
    TaylorSeries.zero!(dq[6N + 11])
    (dq[6N + 11]).coeffs[1] = constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2)
    TaylorSeries.zero!(dq[6N + 12])
    (dq[6N + 12]).coeffs[1] = constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3)
    TaylorSeries.zero!(dq[6N + 13])
    (dq[6N + 13]).coeffs[1] = identity(constant_term(zero_q_1))
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp1867, tmp1133, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1868, tmp1134, ψ_m, ord)
        TaylorSeries.mul!(tmp1135, tmp1133, tmp1134, ord)
        TaylorSeries.sincos!(tmp1869, tmp1136, θ_m, ord)
        TaylorSeries.sincos!(tmp1137, tmp1870, ϕ_m, ord)
        TaylorSeries.mul!(tmp1138, tmp1136, tmp1137, ord)
        TaylorSeries.sincos!(tmp1139, tmp1871, ψ_m, ord)
        TaylorSeries.mul!(tmp1140, tmp1138, tmp1139, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp1135, tmp1140, ord)
        TaylorSeries.sincos!(tmp1872, tmp1142, θ_m, ord)
        TaylorSeries.subst!(tmp1143, tmp1142, ord)
        TaylorSeries.sincos!(tmp1873, tmp1144, ψ_m, ord)
        TaylorSeries.mul!(tmp1145, tmp1143, tmp1144, ord)
        TaylorSeries.sincos!(tmp1146, tmp1874, ϕ_m, ord)
        TaylorSeries.mul!(tmp1147, tmp1145, tmp1146, ord)
        TaylorSeries.sincos!(tmp1875, tmp1148, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1149, tmp1876, ψ_m, ord)
        TaylorSeries.mul!(tmp1150, tmp1148, tmp1149, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp1147, tmp1150, ord)
        TaylorSeries.sincos!(tmp1152, tmp1877, θ_m, ord)
        TaylorSeries.sincos!(tmp1153, tmp1878, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp1152, tmp1153, ord)
        TaylorSeries.sincos!(tmp1879, tmp1155, ψ_m, ord)
        TaylorSeries.sincos!(tmp1156, tmp1880, ϕ_m, ord)
        TaylorSeries.mul!(tmp1157, tmp1155, tmp1156, ord)
        TaylorSeries.sincos!(tmp1881, tmp1158, θ_m, ord)
        TaylorSeries.sincos!(tmp1882, tmp1159, ϕ_m, ord)
        TaylorSeries.mul!(tmp1160, tmp1158, tmp1159, ord)
        TaylorSeries.sincos!(tmp1161, tmp1883, ψ_m, ord)
        TaylorSeries.mul!(tmp1162, tmp1160, tmp1161, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp1157, tmp1162, ord)
        TaylorSeries.sincos!(tmp1884, tmp1164, θ_m, ord)
        TaylorSeries.sincos!(tmp1885, tmp1165, ϕ_m, ord)
        TaylorSeries.mul!(tmp1166, tmp1164, tmp1165, ord)
        TaylorSeries.sincos!(tmp1886, tmp1167, ψ_m, ord)
        TaylorSeries.mul!(tmp1168, tmp1166, tmp1167, ord)
        TaylorSeries.sincos!(tmp1169, tmp1887, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1170, tmp1888, ψ_m, ord)
        TaylorSeries.mul!(tmp1171, tmp1169, tmp1170, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp1168, tmp1171, ord)
        TaylorSeries.sincos!(tmp1889, tmp1173, ϕ_m, ord)
        TaylorSeries.subst!(tmp1174, tmp1173, ord)
        TaylorSeries.sincos!(tmp1175, tmp1890, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp1174, tmp1175, ord)
        TaylorSeries.sincos!(tmp1177, tmp1891, θ_m, ord)
        TaylorSeries.sincos!(tmp1178, tmp1892, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp1177, tmp1178, ord)
        TaylorSeries.sincos!(tmp1893, tmp1180, ψ_m, ord)
        TaylorSeries.sincos!(tmp1181, tmp1894, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp1180, tmp1181, ord)
        TaylorSeries.sincos!(tmp1895, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp1896, tmp1184, ϕ_c, ord)
        TaylorSeries.mul!(tmp1185, RotM[1, 1, mo], tmp1184, ord)
        TaylorSeries.sincos!(tmp1186, tmp1897, ϕ_c, ord)
        TaylorSeries.mul!(tmp1187, RotM[1, 2, mo], tmp1186, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp1185, tmp1187, ord)
        TaylorSeries.subst!(tmp1189, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp1190, tmp1898, ϕ_c, ord)
        TaylorSeries.mul!(tmp1191, tmp1189, tmp1190, ord)
        TaylorSeries.sincos!(tmp1899, tmp1192, ϕ_c, ord)
        TaylorSeries.mul!(tmp1193, RotM[1, 2, mo], tmp1192, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp1191, tmp1193, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp1900, tmp1195, ϕ_c, ord)
        TaylorSeries.mul!(tmp1196, RotM[2, 1, mo], tmp1195, ord)
        TaylorSeries.sincos!(tmp1197, tmp1901, ϕ_c, ord)
        TaylorSeries.mul!(tmp1198, RotM[2, 2, mo], tmp1197, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp1196, tmp1198, ord)
        TaylorSeries.subst!(tmp1200, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp1201, tmp1902, ϕ_c, ord)
        TaylorSeries.mul!(tmp1202, tmp1200, tmp1201, ord)
        TaylorSeries.sincos!(tmp1903, tmp1203, ϕ_c, ord)
        TaylorSeries.mul!(tmp1204, RotM[2, 2, mo], tmp1203, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp1202, tmp1204, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp1904, tmp1206, ϕ_c, ord)
        TaylorSeries.mul!(tmp1207, RotM[3, 1, mo], tmp1206, ord)
        TaylorSeries.sincos!(tmp1208, tmp1905, ϕ_c, ord)
        TaylorSeries.mul!(tmp1209, RotM[3, 2, mo], tmp1208, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp1207, tmp1209, ord)
        TaylorSeries.subst!(tmp1211, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp1212, tmp1906, ϕ_c, ord)
        TaylorSeries.mul!(tmp1213, tmp1211, tmp1212, ord)
        TaylorSeries.sincos!(tmp1907, tmp1214, ϕ_c, ord)
        TaylorSeries.mul!(tmp1215, RotM[3, 2, mo], tmp1214, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp1213, tmp1215, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp1217, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1218, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1219, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1220, tmp1218, tmp1219, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp1217, tmp1220, ord)
        TaylorSeries.mul!(tmp1222, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1223, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1224, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1225, tmp1223, tmp1224, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp1222, tmp1225, ord)
        TaylorSeries.mul!(tmp1227, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1228, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1229, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1230, tmp1228, tmp1229, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp1227, tmp1230, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:309 =# Threads.@threads for j = 1:N
                TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
                TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
                TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
                TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:321 =# Threads.@threads for j = 1:N_ext
                TaylorSeries.identity!(accX[j], zero_q_1, ord)
                TaylorSeries.identity!(accY[j], zero_q_1, ord)
                TaylorSeries.identity!(accZ[j], zero_q_1, ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:327 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                        TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                        TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                        TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.mul!(tmp1239[3j - 2], 4, dq[3j - 2], ord)
                        TaylorSeries.mul!(tmp1241[3i - 2], 3, dq[3i - 2], ord)
                        TaylorSeries.subst!(_4U_m_3X[i, j], tmp1239[3j - 2], tmp1241[3i - 2], ord)
                        TaylorSeries.mul!(tmp1244[3j - 1], 4, dq[3j - 1], ord)
                        TaylorSeries.mul!(tmp1246[3i - 1], 3, dq[3i - 1], ord)
                        TaylorSeries.subst!(_4V_m_3Y[i, j], tmp1244[3j - 1], tmp1246[3i - 1], ord)
                        TaylorSeries.mul!(tmp1249[3j], 4, dq[3j], ord)
                        TaylorSeries.mul!(tmp1251[3i], 3, dq[3i], ord)
                        TaylorSeries.subst!(_4W_m_3Z[i, j], tmp1249[3j], tmp1251[3i], ord)
                        TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                        TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                        TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                        TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.add!(tmp1259[i, j], UU[i, j], VV[i, j], ord)
                        TaylorSeries.add!(vi_dot_vj[i, j], tmp1259[i, j], WW[i, j], ord)
                        TaylorSeries.pow!(tmp1262[i, j], X[i, j], 2, ord)
                        TaylorSeries.pow!(tmp1264[i, j], Y[i, j], 2, ord)
                        TaylorSeries.add!(tmp1265[i, j], tmp1262[i, j], tmp1264[i, j], ord)
                        TaylorSeries.pow!(tmp1267[i, j], Z[i, j], 2, ord)
                        TaylorSeries.add!(r_p2[i, j], tmp1265[i, j], tmp1267[i, j], ord)
                        TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                        TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], 1.5, ord)
                        TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], 3.5, ord)
                        TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                        TaylorSeries.add!(tmp1275[i, j], pn2x[i, j], pn2y[i, j], ord)
                        TaylorSeries.add!(tmp1276[i, j], tmp1275[i, j], pn2z[i, j], ord)
                        TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp1276[i, j], ord)
                        TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                        TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                        TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                        TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                        TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                        TaylorSeries.mul!(tmp1287[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp1287[i, j], ord)
                        TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                        TaylorSeries.mul!(tmp1289[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp1289[i, j], ord)
                        TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                        TaylorSeries.mul!(tmp1291[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp1291[i, j], ord)
                        TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                        TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                        TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                    end
                end
                TaylorSeries.pow!(tmp1295[3j - 2], dq[3j - 2], 2, ord)
                TaylorSeries.pow!(tmp1297[3j - 1], dq[3j - 1], 2, ord)
                TaylorSeries.add!(tmp1298[3j - 2], tmp1295[3j - 2], tmp1297[3j - 1], ord)
                TaylorSeries.pow!(tmp1300[3j], dq[3j], 2, ord)
                TaylorSeries.add!(v2[j], tmp1298[3j - 2], tmp1300[3j], ord)
            end
        TaylorSeries.add!(tmp1302, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp1304, tmp1302, 2, ord)
        TaylorSeries.subst!(tmp1305, I_M_t[3, 3], tmp1304, ord)
        TaylorSeries.div!(J2M_t, tmp1305, μ[mo], ord)
        TaylorSeries.subst!(tmp1307, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp1308, tmp1307, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp1308, 4, ord)
        TaylorSeries.subst!(tmp1311, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp1311, μ[mo], ord)
        TaylorSeries.subst!(tmp1313, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp1313, μ[mo], ord)
        TaylorSeries.subst!(tmp1315, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp1316, tmp1315, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp1316, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:418 =# Threads.@threads for j = 1:N_ext
                for i = 1:N_ext
                    if i == j
                        continue
                    else
                        if UJ_interaction[i, j]
                            TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                            TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                            TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                            TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                            TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                            TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                            TaylorSeries.add!(tmp1328[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                            TaylorSeries.add!(X_bf[i, j], tmp1328[i, j], X_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp1330[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                            TaylorSeries.add!(Y_bf[i, j], tmp1330[i, j], Y_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp1332[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                            TaylorSeries.add!(Z_bf[i, j], tmp1332[i, j], Z_bf_3[i, j], ord)
                            TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.pow!(tmp1336[i, j], X_bf[i, j], 2, ord)
                            TaylorSeries.pow!(tmp1338[i, j], Y_bf[i, j], 2, ord)
                            TaylorSeries.add!(tmp1339[i, j], tmp1336[i, j], tmp1338[i, j], ord)
                            TaylorSeries.sqrt!(r_xy[i, j], tmp1339[i, j], ord)
                            TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                            TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                            TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                            for n = 2:n1SEM[j]
                                TaylorSeries.mul!(tmp1344[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp1345[i, j, n], tmp1344[i, j, n], fact1_jsem[n], ord)
                                TaylorSeries.mul!(tmp1346[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                                TaylorSeries.subst!(P_n[i, j, n + 1], tmp1345[i, j, n], tmp1346[i, j, n - 1], ord)
                                TaylorSeries.mul!(tmp1348[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp1349[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                                TaylorSeries.add!(dP_n[i, j, n + 1], tmp1348[i, j, n], tmp1349[i, j, n], ord)
                                TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], fact5_jsem[n], ord)
                            end
                            TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], 2, ord)
                            TaylorSeries.mul!(tmp1354[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                            TaylorSeries.mul!(tmp1355[i, j, 3], tmp1354[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ξ[i, j], tmp1355[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.subst!(tmp1357[i, j, 3], dP_n[i, j, 3], ord)
                            TaylorSeries.mul!(tmp1358[i, j, 3], tmp1357[i, j, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1359[i, j, 3], tmp1358[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ζ[i, j], tmp1359[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n1SEM[j]
                                TaylorSeries.mul!(tmp1361[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                                TaylorSeries.mul!(tmp1362[i, j, n + 1], tmp1361[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp1363[i, j, n + 1], tmp1362[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjξ[i, j, n], tmp1363[i, j, n + 1], F_J_ξ_36[i, j], ord)
                                TaylorSeries.subst!(tmp1365[i, j, n + 1], dP_n[i, j, n + 1], ord)
                                TaylorSeries.mul!(tmp1366[i, j, n + 1], tmp1365[i, j, n + 1], cos_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp1367[i, j, n + 1], tmp1366[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp1368[i, j, n + 1], tmp1367[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjζ[i, j, n], tmp1368[i, j, n + 1], F_J_ζ_36[i, j], ord)
                                TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                                TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                            end
                            if j == mo
                                for m = 1:n1SEM[mo]
                                    if m == 1
                                        TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                        TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                        TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                        TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                    else
                                        TaylorSeries.mul!(tmp1371[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp1372[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.add!(sin_mλ[i, j, m], tmp1371[i, j, m - 1], tmp1372[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp1374[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp1375[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.subst!(cos_mλ[i, j, m], tmp1374[i, j, m - 1], tmp1375[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp1377[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp1377[i, j, m - 1, m - 1], lnm5[m], ord)
                                        TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp1380[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp1380[i, j, m, m], lnm3[m], ord)
                                    end
                                    for n = m + 1:n1SEM[mo]
                                        if n == m + 1
                                            TaylorSeries.mul!(tmp1382[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp1382[i, j, n - 1, m], lnm1[n, m], ord)
                                        else
                                            TaylorSeries.mul!(tmp1384[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(tmp1385[i, j, n - 1, m], tmp1384[i, j, n - 1, m], lnm1[n, m], ord)
                                            TaylorSeries.mul!(tmp1386[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                            TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp1385[i, j, n - 1, m], tmp1386[i, j, n - 2, m], ord)
                                        end
                                        TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp1389[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp1390[i, j, n, m], tmp1389[i, j, n, m], lnm3[n], ord)
                                        TaylorSeries.mul!(tmp1391[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                        TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp1390[i, j, n, m], tmp1391[i, j, n - 1, m], ord)
                                    end
                                end
                                TaylorSeries.mul!(tmp1393[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                                TaylorSeries.mul!(tmp1394[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1395[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp1396[i, j, 1], tmp1394[i, j, 1], tmp1395[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1397[i, j, 2, 1], tmp1393[i, j, 2, 1], tmp1396[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1398[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                                TaylorSeries.mul!(tmp1399[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1400[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp1401[i, j, 2], tmp1399[i, j, 2], tmp1400[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1402[i, j, 2, 2], tmp1398[i, j, 2, 2], tmp1401[i, j, 2], ord)
                                TaylorSeries.add!(tmp1403[i, j, 2, 1], tmp1397[i, j, 2, 1], tmp1402[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ξ[i, j], tmp1403[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp1405[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                                TaylorSeries.mul!(tmp1406[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1407[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.subst!(tmp1408[i, j, 1], tmp1406[i, j, 1], tmp1407[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1409[i, j, 2, 1], tmp1405[i, j, 2, 1], tmp1408[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1410[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                                TaylorSeries.mul!(tmp1411[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1412[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.subst!(tmp1413[i, j, 2], tmp1411[i, j, 2], tmp1412[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1414[i, j, 2, 2], tmp1410[i, j, 2, 2], tmp1413[i, j, 2], ord)
                                TaylorSeries.add!(tmp1415[i, j, 2, 1], tmp1409[i, j, 2, 1], tmp1414[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_η[i, j], tmp1415[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp1417[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1418[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp1419[i, j, 1], tmp1417[i, j, 1], tmp1418[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1420[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp1419[i, j, 1], ord)
                                TaylorSeries.mul!(tmp1421[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1422[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp1423[i, j, 2], tmp1421[i, j, 2], tmp1422[i, j, 2], ord)
                                TaylorSeries.mul!(tmp1424[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp1423[i, j, 2], ord)
                                TaylorSeries.add!(tmp1425[i, j, 2, 1], tmp1420[i, j, 2, 1], tmp1424[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ζ[i, j], tmp1425[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                                for n = 3:n2M
                                    for m = 1:n
                                        TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(tmp1431[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                        TaylorSeries.add!(tmp1432[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp1433[i, j, n, m], tmp1431[i, j, n, m], tmp1432[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp1434[i, j, n, m], tmp1433[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp1434[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                        TaylorSeries.mul!(tmp1436[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                        TaylorSeries.subst!(tmp1437[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp1438[i, j, n, m], tmp1436[i, j, n, m], tmp1437[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp1439[i, j, n, m], tmp1438[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp1439[i, j, n, m], F_CS_η_36[i, j], ord)
                                        TaylorSeries.add!(tmp1441[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp1442[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp1441[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp1443[i, j, n, m], tmp1442[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp1443[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                        TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                    end
                                end
                                TaylorSeries.add!(tmp1445[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.add!(tmp1446[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ξ[i, j], tmp1445[i, j], tmp1446[i, j], ord)
                                TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                                TaylorSeries.add!(tmp1449[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                                TaylorSeries.add!(tmp1450[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], tmp1449[i, j], tmp1450[i, j], ord)
                            else
                                TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            end
                            TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                            TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                            TaylorSeries.subst!(tmp1456[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp1456[i, j], cos_λ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                            TaylorSeries.subst!(tmp1459[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp1459[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                            TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1461[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp1462[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp1463[i, j, 1, 1], tmp1461[i, j, 1, 1], tmp1462[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp1464[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp1463[i, j, 1, 1], tmp1464[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp1466[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp1467[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp1468[i, j, 2, 1], tmp1466[i, j, 2, 1], tmp1467[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp1469[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp1468[i, j, 2, 1], tmp1469[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp1471[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp1472[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp1473[i, j, 3, 1], tmp1471[i, j, 3, 1], tmp1472[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp1474[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp1473[i, j, 3, 1], tmp1474[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp1476[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp1477[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp1478[i, j, 1, 1], tmp1476[i, j, 1, 1], tmp1477[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp1479[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp1478[i, j, 1, 1], tmp1479[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp1481[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp1482[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp1483[i, j, 2, 1], tmp1481[i, j, 2, 1], tmp1482[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp1484[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp1483[i, j, 2, 1], tmp1484[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp1486[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp1487[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp1488[i, j, 3, 1], tmp1486[i, j, 3, 1], tmp1487[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp1489[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp1488[i, j, 3, 1], tmp1489[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp1491[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp1492[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp1493[i, j, 1, 1], tmp1491[i, j, 1, 1], tmp1492[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp1494[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp1493[i, j, 1, 1], tmp1494[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp1496[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp1497[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp1498[i, j, 2, 1], tmp1496[i, j, 2, 1], tmp1497[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp1499[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp1498[i, j, 2, 1], tmp1499[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp1501[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp1502[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp1503[i, j, 3, 1], tmp1501[i, j, 3, 1], tmp1502[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp1504[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp1503[i, j, 3, 1], tmp1504[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp1506[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                            TaylorSeries.mul!(tmp1507[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                            TaylorSeries.add!(tmp1508[i, j, 1, 1], tmp1506[i, j, 1, 1], tmp1507[i, j, 2, 1], ord)
                            TaylorSeries.mul!(tmp1509[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                            TaylorSeries.add!(F_JCS_x[i, j], tmp1508[i, j, 1, 1], tmp1509[i, j, 3, 1], ord)
                            TaylorSeries.mul!(tmp1511[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp1512[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                            TaylorSeries.add!(tmp1513[i, j, 1, 2], tmp1511[i, j, 1, 2], tmp1512[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp1514[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                            TaylorSeries.add!(F_JCS_y[i, j], tmp1513[i, j, 1, 2], tmp1514[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp1516[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp1517[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                            TaylorSeries.add!(tmp1518[i, j, 1, 3], tmp1516[i, j, 1, 3], tmp1517[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp1519[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                            TaylorSeries.add!(F_JCS_z[i, j], tmp1518[i, j, 1, 3], tmp1519[i, j, 3, 3], ord)
                        end
                    end
                end
            end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp1521[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp1521[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp1523[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp1523[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp1525[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp1525[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp1527[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp1527[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp1529[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp1529[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp1531[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp1531[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp1533[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp1534[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp1535[i, j], tmp1533[i, j], tmp1534[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp1535[i, j], ord)
                            TaylorSeries.mul!(tmp1537[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp1538[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp1539[i, j], tmp1537[i, j], tmp1538[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp1539[i, j], ord)
                            TaylorSeries.mul!(tmp1541[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp1542[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp1543[i, j], tmp1541[i, j], tmp1542[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp1543[i, j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], N_MfigM_pmA_x[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], N_MfigM_pmA_y[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], N_MfigM_pmA_z[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:658 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                        TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                        TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                        TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                        TaylorSeries.mul!(tmp1555[i, j], 4, vi_dot_vj[i, j], ord)
                        TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp1555[i, j], ord)
                        TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                        TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                        TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                        TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                        TaylorSeries.add!(tmp1561[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                        TaylorSeries.add!(Rij_dot_Vi[i, j], tmp1561[i, j], Zij_t_Wi[i, j], ord)
                        TaylorSeries.pow!(tmp1564[i, j], Rij_dot_Vi[i, j], 2, ord)
                        TaylorSeries.div!(pn1t7[i, j], tmp1564[i, j], r_p2[i, j], ord)
                        TaylorSeries.mul!(tmp1567[i, j], 1.5, pn1t7[i, j], ord)
                        TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp1567[i, j], ord)
                        TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                    end
                end
                TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:697 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                        TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                        TaylorSeries.add!(tmp1574[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                        TaylorSeries.add!(tmp1575[i, j], tmp1574[i, j], pNZ_t_Z[i, j], ord)
                        TaylorSeries.mul!(tmp1576[i, j], 0.5, tmp1575[i, j], ord)
                        TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp1576[i, j], ord)
                        TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                        TaylorSeries.add!(tmp1584[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp1584[i, j], ord)
                        TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                        TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                        TaylorSeries.add!(tmp1587[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp1587[i, j], ord)
                        TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                        TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                        TaylorSeries.add!(tmp1590[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp1590[i, j], ord)
                        TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                        TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                    end
                end
                TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:743 =# Threads.@threads for i = 1:N_ext
                TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
                TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
                TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:748 =# Threads.@threads for i = N_ext + 1:N
                TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
            end
        TaylorSeries.mul!(tmp1599, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1600, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1601, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1602, tmp1600, tmp1601, ord)
        TaylorSeries.add!(Iω_x, tmp1599, tmp1602, ord)
        TaylorSeries.mul!(tmp1604, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1605, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1606, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1607, tmp1605, tmp1606, ord)
        TaylorSeries.add!(Iω_y, tmp1604, tmp1607, ord)
        TaylorSeries.mul!(tmp1609, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1610, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1611, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1612, tmp1610, tmp1611, ord)
        TaylorSeries.add!(Iω_z, tmp1609, tmp1612, ord)
        TaylorSeries.mul!(tmp1614, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp1615, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp1614, tmp1615, ord)
        TaylorSeries.mul!(tmp1617, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp1618, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp1617, tmp1618, ord)
        TaylorSeries.mul!(tmp1620, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp1621, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp1620, tmp1621, ord)
        TaylorSeries.mul!(tmp1623, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1624, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1625, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1626, tmp1624, tmp1625, ord)
        TaylorSeries.add!(dIω_x, tmp1623, tmp1626, ord)
        TaylorSeries.mul!(tmp1628, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1629, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1630, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1631, tmp1629, tmp1630, ord)
        TaylorSeries.add!(dIω_y, tmp1628, tmp1631, ord)
        TaylorSeries.mul!(tmp1633, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1634, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1635, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1636, tmp1634, tmp1635, ord)
        TaylorSeries.add!(dIω_z, tmp1633, tmp1636, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp1641, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1642, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1643, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1644, tmp1642, tmp1643, ord)
        TaylorSeries.add!(er_EM_1, tmp1641, tmp1644, ord)
        TaylorSeries.mul!(tmp1646, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1647, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1648, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1649, tmp1647, tmp1648, ord)
        TaylorSeries.add!(er_EM_2, tmp1646, tmp1649, ord)
        TaylorSeries.mul!(tmp1651, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1652, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1653, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1654, tmp1652, tmp1653, ord)
        TaylorSeries.add!(er_EM_3, tmp1651, tmp1654, ord)
        TaylorSeries.mul!(tmp1656, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1657, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1658, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1659, tmp1657, tmp1658, ord)
        TaylorSeries.add!(p_E_1, tmp1656, tmp1659, ord)
        TaylorSeries.mul!(tmp1661, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1662, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1663, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1664, tmp1662, tmp1663, ord)
        TaylorSeries.add!(p_E_2, tmp1661, tmp1664, ord)
        TaylorSeries.mul!(tmp1666, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1667, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1668, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1669, tmp1667, tmp1668, ord)
        TaylorSeries.add!(p_E_3, tmp1666, tmp1669, ord)
        TaylorSeries.mul!(tmp1671, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1672, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1673, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1674, tmp1672, tmp1673, ord)
        TaylorSeries.add!(I_er_EM_1, tmp1671, tmp1674, ord)
        TaylorSeries.mul!(tmp1676, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1677, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1678, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1679, tmp1677, tmp1678, ord)
        TaylorSeries.add!(I_er_EM_2, tmp1676, tmp1679, ord)
        TaylorSeries.mul!(tmp1681, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1682, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1683, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1684, tmp1682, tmp1683, ord)
        TaylorSeries.add!(I_er_EM_3, tmp1681, tmp1684, ord)
        TaylorSeries.mul!(tmp1686, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1687, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1688, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1689, tmp1687, tmp1688, ord)
        TaylorSeries.add!(I_p_E_1, tmp1686, tmp1689, ord)
        TaylorSeries.mul!(tmp1691, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1692, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1693, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1694, tmp1692, tmp1693, ord)
        TaylorSeries.add!(I_p_E_2, tmp1691, tmp1694, ord)
        TaylorSeries.mul!(tmp1696, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1697, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1698, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1699, tmp1697, tmp1698, ord)
        TaylorSeries.add!(I_p_E_3, tmp1696, tmp1699, ord)
        TaylorSeries.mul!(tmp1701, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1702, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp1701, tmp1702, ord)
        TaylorSeries.mul!(tmp1704, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1705, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp1704, tmp1705, ord)
        TaylorSeries.mul!(tmp1707, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1708, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp1707, tmp1708, ord)
        TaylorSeries.mul!(tmp1710, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp1711, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp1710, tmp1711, ord)
        TaylorSeries.mul!(tmp1713, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp1714, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp1713, tmp1714, ord)
        TaylorSeries.mul!(tmp1716, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp1717, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp1716, tmp1717, ord)
        TaylorSeries.mul!(tmp1719, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1720, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp1719, tmp1720, ord)
        TaylorSeries.mul!(tmp1722, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1723, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp1722, tmp1723, ord)
        TaylorSeries.mul!(tmp1725, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1726, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp1725, tmp1726, ord)
        TaylorSeries.mul!(tmp1728, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp1729, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp1728, tmp1729, ord)
        TaylorSeries.mul!(tmp1731, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp1732, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp1731, tmp1732, ord)
        TaylorSeries.mul!(tmp1734, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp1735, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp1734, tmp1735, ord)
        TaylorSeries.pow!(tmp1739, sin_ϕ[ea, mo], 2, ord)
        TaylorSeries.mul!(tmp1740, 7, tmp1739, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp1740, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp1745, r_p1d2[mo, ea], 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp1745, ord)
        TaylorSeries.mul!(tmp1747, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp1748, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1749, two_sinϕEM, tmp1748, ord)
        TaylorSeries.add!(tmp1750, tmp1747, tmp1749, ord)
        TaylorSeries.mul!(tmp1752, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp1753, tmp1750, tmp1752, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp1753, ord)
        TaylorSeries.mul!(tmp1755, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp1756, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1757, two_sinϕEM, tmp1756, ord)
        TaylorSeries.add!(tmp1758, tmp1755, tmp1757, ord)
        TaylorSeries.mul!(tmp1760, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp1761, tmp1758, tmp1760, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp1761, ord)
        TaylorSeries.mul!(tmp1763, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp1764, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1765, two_sinϕEM, tmp1764, ord)
        TaylorSeries.add!(tmp1766, tmp1763, tmp1765, ord)
        TaylorSeries.mul!(tmp1768, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp1769, tmp1766, tmp1768, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp1769, ord)
        TaylorSeries.mul!(tmp1771, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1772, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1773, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1774, tmp1772, tmp1773, ord)
        TaylorSeries.add!(N_1_LMF, tmp1771, tmp1774, ord)
        TaylorSeries.mul!(tmp1776, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1777, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1778, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1779, tmp1777, tmp1778, ord)
        TaylorSeries.add!(N_2_LMF, tmp1776, tmp1779, ord)
        TaylorSeries.mul!(tmp1781, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1782, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1783, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1784, tmp1782, tmp1783, ord)
        TaylorSeries.add!(N_3_LMF, tmp1781, tmp1784, ord)
        TaylorSeries.subst!(tmp1786, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1787, k_ν, tmp1786, ord)
        TaylorSeries.mul!(tmp1788, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp1789, tmp1788, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp1787, tmp1789, ord)
        TaylorSeries.subst!(tmp1791, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1792, k_ν, tmp1791, ord)
        TaylorSeries.mul!(tmp1793, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp1794, tmp1793, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp1792, tmp1794, ord)
        TaylorSeries.subst!(tmp1796, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp1796, ord)
        TaylorSeries.mul!(tmp1798, μ[mo], N_1_LMF, ord)
        TaylorSeries.add!(tmp1799, N_MfigM_figE_1, tmp1798, ord)
        TaylorSeries.add!(tmp1800, tmp1799, N_cmb_1, ord)
        TaylorSeries.add!(tmp1801, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp1800, tmp1801, ord)
        TaylorSeries.mul!(tmp1803, μ[mo], N_2_LMF, ord)
        TaylorSeries.add!(tmp1804, N_MfigM_figE_2, tmp1803, ord)
        TaylorSeries.add!(tmp1805, tmp1804, N_cmb_2, ord)
        TaylorSeries.add!(tmp1806, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp1805, tmp1806, ord)
        TaylorSeries.mul!(tmp1808, μ[mo], N_3_LMF, ord)
        TaylorSeries.add!(tmp1809, N_MfigM_figE_3, tmp1808, ord)
        TaylorSeries.add!(tmp1810, tmp1809, N_cmb_3, ord)
        TaylorSeries.add!(tmp1811, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp1810, tmp1811, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp1816, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp1817, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp1816, tmp1817, ord)
        TaylorSeries.mul!(tmp1819, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp1820, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp1819, tmp1820, ord)
        TaylorSeries.mul!(tmp1822, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp1823, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp1822, tmp1823, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp1828, tmp1908, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1829, q[6N + 4], tmp1828, ord)
        TaylorSeries.sincos!(tmp1909, tmp1830, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1831, q[6N + 5], tmp1830, ord)
        TaylorSeries.add!(tmp1832, tmp1829, tmp1831, ord)
        TaylorSeries.sincos!(tmp1833, tmp1910, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp1832, tmp1833, ord)
        TaylorSeries.sincos!(tmp1911, tmp1835, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1836, q[6N + 4], tmp1835, ord)
        TaylorSeries.sincos!(tmp1837, tmp1912, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1838, q[6N + 5], tmp1837, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp1836, tmp1838, ord)
        TaylorSeries.sincos!(tmp1913, tmp1840, q[6N + 2], ord)
        TaylorSeries.mul!(tmp1841, dq[6N + 1], tmp1840, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp1841, ord)
        TaylorSeries.mul!(tmp1843, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1844, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1845, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1846, tmp1844, tmp1845, ord)
        TaylorSeries.add!(dq[6N + 4], tmp1843, tmp1846, ord)
        TaylorSeries.mul!(tmp1848, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1849, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1850, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1851, tmp1849, tmp1850, ord)
        TaylorSeries.add!(dq[6N + 5], tmp1848, tmp1851, ord)
        TaylorSeries.mul!(tmp1853, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1854, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1855, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1856, tmp1854, tmp1855, ord)
        TaylorSeries.add!(dq[6N + 6], tmp1853, tmp1856, ord)
        TaylorSeries.sincos!(tmp1858, tmp1914, q[6N + 8], ord)
        TaylorSeries.div!(tmp1859, ω_c_CE_2, tmp1858, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp1859, ord)
        TaylorSeries.sincos!(tmp1915, tmp1861, q[6N + 8], ord)
        TaylorSeries.mul!(tmp1862, dq[6N + 9], tmp1861, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp1862, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.identity!(dq[6N + 13], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end

# TaylorIntegration._allocate_jetcoeffs! method for src/dynamical_model.jl: DE430!
function TaylorIntegration._allocate_jetcoeffs!(::Val{DE430!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local __t = Taylor1(numtype(t), t.order)
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local params_bwd = (N_bwd, jd0)
    local qq_bwd = Taylor1.(constant_term.(q[union(nbodyind(N, 1:N_bwd), 6N + 1:6N + 13)]), t.order)::Vector{S}
    local dqq_bwd = similar(qq_bwd)
    local xaux_bwd = similar(qq_bwd)
    local jc = TaylorIntegration.jetcoeffs!(NBP_pN_A_J23E_J23M_J2S_threads!, t, qq_bwd, dqq_bwd, xaux_bwd, params_bwd)
    local q_del_τ_M = special_eval(qq_bwd, __t - τ_M)
    local q_del_τ_0 = special_eval(qq_bwd, __t - τ_0p)
    local q_del_τ_1 = special_eval(qq_bwd, __t - τ_1p)
    local q_del_τ_2 = special_eval(qq_bwd, __t - τ_2p)
    local eulang_del_τ_M = q_del_τ_M[6N_bwd + 1:6N_bwd + 3]::Vector{S}
    local ω_m_del_τ_M = q_del_τ_M[6N_bwd + 4:6N_bwd + 6]::Vector{S}
    local I_m_t = ITM(q_del_τ_M, eulang_del_τ_M, ω_m_del_τ_M)::Matrix{S}
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    rij_dot_vi_div_rij_sq = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp2961 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4031 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2962 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4032 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2963 = Taylor1(constant_term(tmp2961) * constant_term(tmp2962), order)
    tmp2964 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4033 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2965 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4034 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2966 = Taylor1(constant_term(tmp2964) * constant_term(tmp2965), order)
    tmp2967 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4035 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2968 = Taylor1(constant_term(tmp2966) * constant_term(tmp2967), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp2963) - constant_term(tmp2968), order)
    tmp2970 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4036 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2971 = Taylor1(-(constant_term(tmp2970)), order)
    tmp2972 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4037 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2973 = Taylor1(constant_term(tmp2971) * constant_term(tmp2972), order)
    tmp2974 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4038 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2975 = Taylor1(constant_term(tmp2973) * constant_term(tmp2974), order)
    tmp2976 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4039 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2977 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4040 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2978 = Taylor1(constant_term(tmp2976) * constant_term(tmp2977), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp2975) - constant_term(tmp2978), order)
    tmp2980 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4041 = Taylor1(cos(constant_term(θ_m)), order)
    tmp2981 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4042 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp2980) * constant_term(tmp2981), order)
    tmp2983 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4043 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2984 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4044 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2985 = Taylor1(constant_term(tmp2983) * constant_term(tmp2984), order)
    tmp2986 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4045 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2987 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4046 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2988 = Taylor1(constant_term(tmp2986) * constant_term(tmp2987), order)
    tmp2989 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4047 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2990 = Taylor1(constant_term(tmp2988) * constant_term(tmp2989), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp2985) + constant_term(tmp2990), order)
    tmp2992 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4048 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2993 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4049 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2994 = Taylor1(constant_term(tmp2992) * constant_term(tmp2993), order)
    tmp2995 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4050 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2996 = Taylor1(constant_term(tmp2994) * constant_term(tmp2995), order)
    tmp2997 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4051 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2998 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4052 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2999 = Taylor1(constant_term(tmp2997) * constant_term(tmp2998), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp2996) - constant_term(tmp2999), order)
    tmp3001 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4053 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3002 = Taylor1(-(constant_term(tmp3001)), order)
    tmp3003 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4054 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp3002) * constant_term(tmp3003), order)
    tmp3005 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4055 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3006 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4056 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp3005) * constant_term(tmp3006), order)
    tmp3008 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4057 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3009 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4058 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp3008) * constant_term(tmp3009), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp4059 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp3012 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4060 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3013 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp3012), order)
    tmp3014 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4061 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3015 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp3014), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp3013) + constant_term(tmp3015), order)
    tmp3017 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp3018 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4062 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3019 = Taylor1(constant_term(tmp3017) * constant_term(tmp3018), order)
    tmp3020 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4063 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3021 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp3020), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp3019) + constant_term(tmp3021), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp3023 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4064 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3024 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp3023), order)
    tmp3025 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4065 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3026 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp3025), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp3024) + constant_term(tmp3026), order)
    tmp3028 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp3029 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4066 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3030 = Taylor1(constant_term(tmp3028) * constant_term(tmp3029), order)
    tmp3031 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4067 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3032 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp3031), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp3030) + constant_term(tmp3032), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp3034 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4068 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3035 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp3034), order)
    tmp3036 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4069 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3037 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp3036), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp3035) + constant_term(tmp3037), order)
    tmp3039 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp3040 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4070 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3041 = Taylor1(constant_term(tmp3039) * constant_term(tmp3040), order)
    tmp3042 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4071 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3043 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp3042), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp3041) + constant_term(tmp3043), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp3045 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp3046 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp3047 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp3048 = Taylor1(constant_term(tmp3046) + constant_term(tmp3047), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp3045) + constant_term(tmp3048), order)
    tmp3050 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp3051 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp3052 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp3053 = Taylor1(constant_term(tmp3051) + constant_term(tmp3052), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp3050) + constant_term(tmp3053), order)
    tmp3055 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp3056 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp3057 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp3058 = Taylor1(constant_term(tmp3056) + constant_term(tmp3057), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp3055) + constant_term(tmp3058), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    local q_ME_τ_0 = q_del_τ_0[3mo - 2:3mo] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_ME_τ_1 = q_del_τ_1[3mo - 2:3mo] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_ME_τ_2 = q_del_τ_2[3mo - 2:3mo] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local q_SE_τ_0 = q_del_τ_0[3su - 2:3su] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_SE_τ_1 = q_del_τ_1[3su - 2:3su] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_SE_τ_2 = q_del_τ_2[3su - 2:3su] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local R30 = RotM[:, :, ea]
    local R31 = Rz(-ω_E * τ_1) * RotM[:, :, ea]
    local R32 = Rz(-ω_E * τ_2) * RotM[:, :, ea]
    local r_star_M_0 = R30 * q_ME_τ_0
    local r_star_M_1 = R31 * q_ME_τ_1
    local r_star_M_2 = R32 * q_ME_τ_2
    local r_star_S_0 = R30 * q_SE_τ_0
    local r_star_S_1 = R31 * q_SE_τ_1
    local r_star_S_2 = R32 * q_SE_τ_2
    for j = 1:N
        newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
        dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
        dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
    end
    for j = 1:N_ext
        accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
    end
    tmp3123 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3123)
        tmp3123[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3125 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3125)
        tmp3125[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3126 = Array{Taylor1{_S}}(undef, size(tmp3123))
    for i = CartesianIndices(tmp3126)
        tmp3126[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3128 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3128)
        tmp3128[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3067 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3067)
        tmp3067[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3069 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3069)
        tmp3069[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3072 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3072)
        tmp3072[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3074 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3074)
        tmp3074[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3077 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3077)
        tmp3077[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3079 = Array{Taylor1{_S}}(undef, size(dq))
    for i = CartesianIndices(tmp3079)
        tmp3079[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(pn2x)
        pn2x[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(pn2y)
        pn2y[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(pn2z)
        pn2z[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3087 = Array{Taylor1{_S}}(undef, size(UU))
    for i = CartesianIndices(tmp3087)
        tmp3087[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3090 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp3090)
        tmp3090[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3092 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp3092)
        tmp3092[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3093 = Array{Taylor1{_S}}(undef, size(tmp3090))
    for i = CartesianIndices(tmp3093)
        tmp3093[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3095 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp3095)
        tmp3095[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3103 = Array{Taylor1{_S}}(undef, size(pn2x))
    for i = CartesianIndices(tmp3103)
        tmp3103[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3104 = Array{Taylor1{_S}}(undef, size(tmp3103))
    for i = CartesianIndices(tmp3104)
        tmp3104[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3115 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp3115)
        tmp3115[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp3115))
    for i = CartesianIndices(temp_001)
        temp_001[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3117 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp3117)
        tmp3117[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp3117))
    for i = CartesianIndices(temp_002)
        temp_002[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3119 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp3119)
        tmp3119[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp3119))
    for i = CartesianIndices(temp_003)
        temp_003[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    for i = CartesianIndices(temp_004)
        temp_004[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1286 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                    Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                    Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                    U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                    V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                    W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                    tmp3067[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                    tmp3069[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                    _4U_m_3X[i, j] = Taylor1(constant_term(tmp3067[3j - 2]) - constant_term(tmp3069[3i - 2]), order)
                    tmp3072[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                    tmp3074[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                    _4V_m_3Y[i, j] = Taylor1(constant_term(tmp3072[3j - 1]) - constant_term(tmp3074[3i - 1]), order)
                    tmp3077[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                    tmp3079[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                    _4W_m_3Z[i, j] = Taylor1(constant_term(tmp3077[3j]) - constant_term(tmp3079[3i]), order)
                    pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                    pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                    pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                    UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                    VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                    WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                    tmp3087[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                    vi_dot_vj[i, j] = Taylor1(constant_term(tmp3087[i, j]) + constant_term(WW[i, j]), order)
                    tmp3090[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                    tmp3092[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                    tmp3093[i, j] = Taylor1(constant_term(tmp3090[i, j]) + constant_term(tmp3092[i, j]), order)
                    tmp3095[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                    r_p2[i, j] = Taylor1(constant_term(tmp3093[i, j]) + constant_term(tmp3095[i, j]), order)
                    r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                    r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                    r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                    newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                    tmp3103[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                    tmp3104[i, j] = Taylor1(constant_term(tmp3103[i, j]) + constant_term(pn2z[i, j]), order)
                    pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp3104[i, j]), order)
                    newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                    pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                    U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                    V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                    W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                    tmp3115[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp3115[i, j]), order)
                    newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                    tmp3117[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp3117[i, j]), order)
                    newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                    tmp3119[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp3119[i, j]), order)
                    newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                    temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                    newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
                end
            end
            tmp3123[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
            tmp3125[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
            tmp3126[3j - 2] = Taylor1(constant_term(tmp3123[3j - 2]) + constant_term(tmp3125[3j - 1]), order)
            tmp3128[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
            v2[j] = Taylor1(constant_term(tmp3126[3j - 2]) + constant_term(tmp3128[3j]), order)
        end
    tmp3130 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp3132 = Taylor1(constant_term(tmp3130) / constant_term(2), order)
    tmp3133 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp3132), order)
    J2M_t = Taylor1(constant_term(tmp3133) / constant_term(μ[mo]), order)
    tmp3135 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp3136 = Taylor1(constant_term(tmp3135) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp3136) / constant_term(4), order)
    tmp3139 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp3139) / constant_term(μ[mo]), order)
    tmp3141 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp3141) / constant_term(μ[mo]), order)
    tmp3143 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp3144 = Taylor1(constant_term(tmp3143) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp3144) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp3156 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    for i = CartesianIndices(tmp3156)
        tmp3156[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3158 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    for i = CartesianIndices(tmp3158)
        tmp3158[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3160 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    for i = CartesianIndices(tmp3160)
        tmp3160[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3164 = Array{Taylor1{_S}}(undef, size(X_bf))
    for i = CartesianIndices(tmp3164)
        tmp3164[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3166 = Array{Taylor1{_S}}(undef, size(Y_bf))
    for i = CartesianIndices(tmp3166)
        tmp3166[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3167 = Array{Taylor1{_S}}(undef, size(tmp3164))
    for i = CartesianIndices(tmp3167)
        tmp3167[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3182 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp3182)
        tmp3182[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3183 = Array{Taylor1{_S}}(undef, size(tmp3182))
    for i = CartesianIndices(tmp3183)
        tmp3183[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3185 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = CartesianIndices(tmp3185)
        tmp3185[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3186 = Array{Taylor1{_S}}(undef, size(tmp3185))
    for i = CartesianIndices(tmp3186)
        tmp3186[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3187 = Array{Taylor1{_S}}(undef, size(tmp3186))
    for i = CartesianIndices(tmp3187)
        tmp3187[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3284 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    for i = CartesianIndices(tmp3284)
        tmp3284[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3287 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    for i = CartesianIndices(tmp3287)
        tmp3287[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3289 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3289)
        tmp3289[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3290 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3290)
        tmp3290[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3291 = Array{Taylor1{_S}}(undef, size(tmp3289))
    for i = CartesianIndices(tmp3291)
        tmp3291[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3292 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3292)
        tmp3292[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3294 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3294)
        tmp3294[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3295 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3295)
        tmp3295[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3296 = Array{Taylor1{_S}}(undef, size(tmp3294))
    for i = CartesianIndices(tmp3296)
        tmp3296[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3297 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3297)
        tmp3297[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3299 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3299)
        tmp3299[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3300 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3300)
        tmp3300[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3301 = Array{Taylor1{_S}}(undef, size(tmp3299))
    for i = CartesianIndices(tmp3301)
        tmp3301[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3302 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3302)
        tmp3302[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3304 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3304)
        tmp3304[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3305 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3305)
        tmp3305[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3306 = Array{Taylor1{_S}}(undef, size(tmp3304))
    for i = CartesianIndices(tmp3306)
        tmp3306[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3307 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3307)
        tmp3307[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3309 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3309)
        tmp3309[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3310 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3310)
        tmp3310[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3311 = Array{Taylor1{_S}}(undef, size(tmp3309))
    for i = CartesianIndices(tmp3311)
        tmp3311[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3312 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3312)
        tmp3312[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3314 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3314)
        tmp3314[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3315 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3315)
        tmp3315[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3316 = Array{Taylor1{_S}}(undef, size(tmp3314))
    for i = CartesianIndices(tmp3316)
        tmp3316[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3317 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3317)
        tmp3317[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3319 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3319)
        tmp3319[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3320 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3320)
        tmp3320[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3321 = Array{Taylor1{_S}}(undef, size(tmp3319))
    for i = CartesianIndices(tmp3321)
        tmp3321[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3322 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3322)
        tmp3322[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3324 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3324)
        tmp3324[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3325 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3325)
        tmp3325[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3326 = Array{Taylor1{_S}}(undef, size(tmp3324))
    for i = CartesianIndices(tmp3326)
        tmp3326[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3327 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3327)
        tmp3327[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3329 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3329)
        tmp3329[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3330 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3330)
        tmp3330[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3331 = Array{Taylor1{_S}}(undef, size(tmp3329))
    for i = CartesianIndices(tmp3331)
        tmp3331[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3332 = Array{Taylor1{_S}}(undef, size(Rb2p))
    for i = CartesianIndices(tmp3332)
        tmp3332[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3334 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3334)
        tmp3334[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3335 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3335)
        tmp3335[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3336 = Array{Taylor1{_S}}(undef, size(tmp3334))
    for i = CartesianIndices(tmp3336)
        tmp3336[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3337 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3337)
        tmp3337[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3339 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3339)
        tmp3339[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3340 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3340)
        tmp3340[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3341 = Array{Taylor1{_S}}(undef, size(tmp3339))
    for i = CartesianIndices(tmp3341)
        tmp3341[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3342 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3342)
        tmp3342[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3344 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3344)
        tmp3344[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3345 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3345)
        tmp3345[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3346 = Array{Taylor1{_S}}(undef, size(tmp3344))
    for i = CartesianIndices(tmp3346)
        tmp3346[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3347 = Array{Taylor1{_S}}(undef, size(Gc2p))
    for i = CartesianIndices(tmp3347)
        tmp3347[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3172 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp3172)
        tmp3172[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3173 = Array{Taylor1{_S}}(undef, size(tmp3172))
    for i = CartesianIndices(tmp3173)
        tmp3173[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3174 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp3174)
        tmp3174[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3176 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = CartesianIndices(tmp3176)
        tmp3176[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3177 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp3177)
        tmp3177[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3189 = Array{Taylor1{_S}}(undef, size(P_n))
    for i = CartesianIndices(tmp3189)
        tmp3189[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3190 = Array{Taylor1{_S}}(undef, size(tmp3189))
    for i = CartesianIndices(tmp3190)
        tmp3190[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3191 = Array{Taylor1{_S}}(undef, size(tmp3190))
    for i = CartesianIndices(tmp3191)
        tmp3191[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3193 = Array{Taylor1{_S}}(undef, size(dP_n))
    for i = CartesianIndices(tmp3193)
        tmp3193[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3194 = Array{Taylor1{_S}}(undef, size(tmp3193))
    for i = CartesianIndices(tmp3194)
        tmp3194[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3195 = Array{Taylor1{_S}}(undef, size(tmp3194))
    for i = CartesianIndices(tmp3195)
        tmp3195[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3196 = Array{Taylor1{_S}}(undef, size(tmp3195))
    for i = CartesianIndices(tmp3196)
        tmp3196[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3221 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = CartesianIndices(tmp3221)
        tmp3221[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3222 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp3222)
        tmp3222[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3223 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp3223)
        tmp3223[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3224 = Array{Taylor1{_S}}(undef, size(tmp3222))
    for i = CartesianIndices(tmp3224)
        tmp3224[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3225 = Array{Taylor1{_S}}(undef, size(tmp3221))
    for i = CartesianIndices(tmp3225)
        tmp3225[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3226 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = CartesianIndices(tmp3226)
        tmp3226[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3227 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp3227)
        tmp3227[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3228 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp3228)
        tmp3228[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3229 = Array{Taylor1{_S}}(undef, size(tmp3227))
    for i = CartesianIndices(tmp3229)
        tmp3229[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3230 = Array{Taylor1{_S}}(undef, size(tmp3226))
    for i = CartesianIndices(tmp3230)
        tmp3230[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3231 = Array{Taylor1{_S}}(undef, size(tmp3225))
    for i = CartesianIndices(tmp3231)
        tmp3231[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3233 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3233)
        tmp3233[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3234 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp3234)
        tmp3234[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3235 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp3235)
        tmp3235[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3236 = Array{Taylor1{_S}}(undef, size(tmp3234))
    for i = CartesianIndices(tmp3236)
        tmp3236[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3237 = Array{Taylor1{_S}}(undef, size(tmp3233))
    for i = CartesianIndices(tmp3237)
        tmp3237[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3238 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3238)
        tmp3238[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3239 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp3239)
        tmp3239[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3240 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp3240)
        tmp3240[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3241 = Array{Taylor1{_S}}(undef, size(tmp3239))
    for i = CartesianIndices(tmp3241)
        tmp3241[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3242 = Array{Taylor1{_S}}(undef, size(tmp3238))
    for i = CartesianIndices(tmp3242)
        tmp3242[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3243 = Array{Taylor1{_S}}(undef, size(tmp3237))
    for i = CartesianIndices(tmp3243)
        tmp3243[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3245 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp3245)
        tmp3245[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3246 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp3246)
        tmp3246[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3247 = Array{Taylor1{_S}}(undef, size(tmp3245))
    for i = CartesianIndices(tmp3247)
        tmp3247[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3248 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = CartesianIndices(tmp3248)
        tmp3248[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3249 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp3249)
        tmp3249[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3250 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp3250)
        tmp3250[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3251 = Array{Taylor1{_S}}(undef, size(tmp3249))
    for i = CartesianIndices(tmp3251)
        tmp3251[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3252 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = CartesianIndices(tmp3252)
        tmp3252[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3253 = Array{Taylor1{_S}}(undef, size(tmp3248))
    for i = CartesianIndices(tmp3253)
        tmp3253[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3273 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    for i = CartesianIndices(tmp3273)
        tmp3273[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3274 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    for i = CartesianIndices(tmp3274)
        tmp3274[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3277 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    for i = CartesianIndices(tmp3277)
        tmp3277[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3278 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    for i = CartesianIndices(tmp3278)
        tmp3278[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3199 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp3199)
        tmp3199[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3200 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp3200)
        tmp3200[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3202 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    for i = CartesianIndices(tmp3202)
        tmp3202[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3203 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    for i = CartesianIndices(tmp3203)
        tmp3203[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3205 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3205)
        tmp3205[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3208 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3208)
        tmp3208[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3217 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3217)
        tmp3217[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3218 = Array{Taylor1{_S}}(undef, size(tmp3217))
    for i = CartesianIndices(tmp3218)
        tmp3218[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3219 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3219)
        tmp3219[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3210 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3210)
        tmp3210[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3212 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3212)
        tmp3212[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3213 = Array{Taylor1{_S}}(undef, size(tmp3212))
    for i = CartesianIndices(tmp3213)
        tmp3213[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3214 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3214)
        tmp3214[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3259 = Array{Taylor1{_S}}(undef, size(P_nm))
    for i = CartesianIndices(tmp3259)
        tmp3259[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3260 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    for i = CartesianIndices(tmp3260)
        tmp3260[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3261 = Array{Taylor1{_S}}(undef, size(tmp3259))
    for i = CartesianIndices(tmp3261)
        tmp3261[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3262 = Array{Taylor1{_S}}(undef, size(tmp3261))
    for i = CartesianIndices(tmp3262)
        tmp3262[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3264 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    for i = CartesianIndices(tmp3264)
        tmp3264[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3265 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    for i = CartesianIndices(tmp3265)
        tmp3265[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3266 = Array{Taylor1{_S}}(undef, size(tmp3264))
    for i = CartesianIndices(tmp3266)
        tmp3266[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3267 = Array{Taylor1{_S}}(undef, size(tmp3266))
    for i = CartesianIndices(tmp3267)
        tmp3267[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3269 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    for i = CartesianIndices(tmp3269)
        tmp3269[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3270 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    for i = CartesianIndices(tmp3270)
        tmp3270[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3271 = Array{Taylor1{_S}}(undef, size(tmp3270))
    for i = CartesianIndices(tmp3271)
        tmp3271[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1380 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                        X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                        X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                        Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                        Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                        Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                        Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                        Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                        Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                        tmp3156[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                        X_bf[i, j] = Taylor1(constant_term(tmp3156[i, j]) + constant_term(X_bf_3[i, j]), order)
                        tmp3158[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                        Y_bf[i, j] = Taylor1(constant_term(tmp3158[i, j]) + constant_term(Y_bf_3[i, j]), order)
                        tmp3160[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                        Z_bf[i, j] = Taylor1(constant_term(tmp3160[i, j]) + constant_term(Z_bf_3[i, j]), order)
                        sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                        tmp3164[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp3166[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp3167[i, j] = Taylor1(constant_term(tmp3164[i, j]) + constant_term(tmp3166[i, j]), order)
                        r_xy[i, j] = Taylor1(sqrt(constant_term(tmp3167[i, j])), order)
                        cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                        sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                        P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                        dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                        for n = 2:n1SEM[j]
                            tmp3172[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp3173[i, j, n] = Taylor1(constant_term(tmp3172[i, j, n]) * constant_term(fact1_jsem[n]), order)
                            tmp3174[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                            P_n[i, j, n + 1] = Taylor1(constant_term(tmp3173[i, j, n]) - constant_term(tmp3174[i, j, n - 1]), order)
                            tmp3176[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp3177[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                            dP_n[i, j, n + 1] = Taylor1(constant_term(tmp3176[i, j, n]) + constant_term(tmp3177[i, j, n]), order)
                            temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                        end
                        r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                        tmp3182[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                        tmp3183[i, j, 3] = Taylor1(constant_term(tmp3182[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ξ[i, j] = Taylor1(constant_term(tmp3183[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        tmp3185[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                        tmp3186[i, j, 3] = Taylor1(constant_term(tmp3185[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                        tmp3187[i, j, 3] = Taylor1(constant_term(tmp3186[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ζ[i, j] = Taylor1(constant_term(tmp3187[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n1SEM[j]
                            tmp3189[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                            tmp3190[i, j, n + 1] = Taylor1(constant_term(tmp3189[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp3191[i, j, n + 1] = Taylor1(constant_term(tmp3190[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjξ[i, j, n] = Taylor1(constant_term(tmp3191[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp3193[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                            tmp3194[i, j, n + 1] = Taylor1(constant_term(tmp3193[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                            tmp3195[i, j, n + 1] = Taylor1(constant_term(tmp3194[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp3196[i, j, n + 1] = Taylor1(constant_term(tmp3195[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjζ[i, j, n] = Taylor1(constant_term(tmp3196[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                            F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                            F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                    cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                    secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                    P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                    cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                                else
                                    tmp3199[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    tmp3200[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    sin_mλ[i, j, m] = Taylor1(constant_term(tmp3199[i, j, m - 1]) + constant_term(tmp3200[i, j, m - 1]), order)
                                    tmp3202[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    tmp3203[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    cos_mλ[i, j, m] = Taylor1(constant_term(tmp3202[i, j, m - 1]) - constant_term(tmp3203[i, j, m - 1]), order)
                                    tmp3205[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp3205[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                    P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp3208[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                    cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp3208[i, j, m, m]) * constant_term(lnm3[m]), order)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        tmp3210[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp3210[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    else
                                        tmp3212[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        tmp3213[i, j, n - 1, m] = Taylor1(constant_term(tmp3212[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                        tmp3214[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp3213[i, j, n - 1, m]) + constant_term(tmp3214[i, j, n - 2, m]), order)
                                    end
                                    P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp3217[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp3218[i, j, n, m] = Taylor1(constant_term(tmp3217[i, j, n, m]) * constant_term(lnm3[n]), order)
                                    tmp3219[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                    cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp3218[i, j, n, m]) + constant_term(tmp3219[i, j, n - 1, m]), order)
                                end
                            end
                            tmp3221[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                            tmp3222[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3223[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3224[i, j, 1] = Taylor1(constant_term(tmp3222[i, j, 1]) + constant_term(tmp3223[i, j, 1]), order)
                            tmp3225[i, j, 2, 1] = Taylor1(constant_term(tmp3221[i, j, 2, 1]) * constant_term(tmp3224[i, j, 1]), order)
                            tmp3226[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                            tmp3227[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3228[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3229[i, j, 2] = Taylor1(constant_term(tmp3227[i, j, 2]) + constant_term(tmp3228[i, j, 2]), order)
                            tmp3230[i, j, 2, 2] = Taylor1(constant_term(tmp3226[i, j, 2, 2]) * constant_term(tmp3229[i, j, 2]), order)
                            tmp3231[i, j, 2, 1] = Taylor1(constant_term(tmp3225[i, j, 2, 1]) + constant_term(tmp3230[i, j, 2, 2]), order)
                            F_CS_ξ[i, j] = Taylor1(constant_term(tmp3231[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp3233[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                            tmp3234[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3235[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3236[i, j, 1] = Taylor1(constant_term(tmp3234[i, j, 1]) - constant_term(tmp3235[i, j, 1]), order)
                            tmp3237[i, j, 2, 1] = Taylor1(constant_term(tmp3233[i, j, 2, 1]) * constant_term(tmp3236[i, j, 1]), order)
                            tmp3238[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                            tmp3239[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3240[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3241[i, j, 2] = Taylor1(constant_term(tmp3239[i, j, 2]) - constant_term(tmp3240[i, j, 2]), order)
                            tmp3242[i, j, 2, 2] = Taylor1(constant_term(tmp3238[i, j, 2, 2]) * constant_term(tmp3241[i, j, 2]), order)
                            tmp3243[i, j, 2, 1] = Taylor1(constant_term(tmp3237[i, j, 2, 1]) + constant_term(tmp3242[i, j, 2, 2]), order)
                            F_CS_η[i, j] = Taylor1(constant_term(tmp3243[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp3245[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3246[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3247[i, j, 1] = Taylor1(constant_term(tmp3245[i, j, 1]) + constant_term(tmp3246[i, j, 1]), order)
                            tmp3248[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp3247[i, j, 1]), order)
                            tmp3249[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3250[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3251[i, j, 2] = Taylor1(constant_term(tmp3249[i, j, 2]) + constant_term(tmp3250[i, j, 2]), order)
                            tmp3252[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp3251[i, j, 2]), order)
                            tmp3253[i, j, 2, 1] = Taylor1(constant_term(tmp3248[i, j, 2, 1]) + constant_term(tmp3252[i, j, 2, 2]), order)
                            F_CS_ζ[i, j] = Taylor1(constant_term(tmp3253[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            for n = 3:n2M
                                for m = 1:n
                                    Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    tmp3259[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                    tmp3260[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp3261[i, j, n, m] = Taylor1(constant_term(tmp3259[i, j, n, m]) * constant_term(tmp3260[i, j, n, m]), order)
                                    tmp3262[i, j, n, m] = Taylor1(constant_term(tmp3261[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp3262[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                    tmp3264[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                    tmp3265[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                    tmp3266[i, j, n, m] = Taylor1(constant_term(tmp3264[i, j, n, m]) * constant_term(tmp3265[i, j, n, m]), order)
                                    tmp3267[i, j, n, m] = Taylor1(constant_term(tmp3266[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp3267[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                    tmp3269[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp3270[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp3269[i, j, n, m]), order)
                                    tmp3271[i, j, n, m] = Taylor1(constant_term(tmp3270[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp3271[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                    F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                    F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                    F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                                end
                            end
                            tmp3273[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp3274[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                            F_JCS_ξ[i, j] = Taylor1(constant_term(tmp3273[i, j]) + constant_term(tmp3274[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                            tmp3277[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                            tmp3278[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(tmp3277[i, j]) + constant_term(tmp3278[i, j]), order)
                        else
                            F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        end
                        Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                        tmp3284[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp3284[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                        tmp3287[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp3287[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                        Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                        tmp3289[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3290[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3291[i, j, 1, 1] = Taylor1(constant_term(tmp3289[i, j, 1, 1]) + constant_term(tmp3290[i, j, 1, 2]), order)
                        tmp3292[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp3291[i, j, 1, 1]) + constant_term(tmp3292[i, j, 1, 3]), order)
                        tmp3294[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3295[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3296[i, j, 2, 1] = Taylor1(constant_term(tmp3294[i, j, 2, 1]) + constant_term(tmp3295[i, j, 2, 2]), order)
                        tmp3297[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp3296[i, j, 2, 1]) + constant_term(tmp3297[i, j, 2, 3]), order)
                        tmp3299[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3300[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3301[i, j, 3, 1] = Taylor1(constant_term(tmp3299[i, j, 3, 1]) + constant_term(tmp3300[i, j, 3, 2]), order)
                        tmp3302[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp3301[i, j, 3, 1]) + constant_term(tmp3302[i, j, 3, 3]), order)
                        tmp3304[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3305[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3306[i, j, 1, 1] = Taylor1(constant_term(tmp3304[i, j, 1, 1]) + constant_term(tmp3305[i, j, 1, 2]), order)
                        tmp3307[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp3306[i, j, 1, 1]) + constant_term(tmp3307[i, j, 1, 3]), order)
                        tmp3309[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3310[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3311[i, j, 2, 1] = Taylor1(constant_term(tmp3309[i, j, 2, 1]) + constant_term(tmp3310[i, j, 2, 2]), order)
                        tmp3312[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp3311[i, j, 2, 1]) + constant_term(tmp3312[i, j, 2, 3]), order)
                        tmp3314[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3315[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3316[i, j, 3, 1] = Taylor1(constant_term(tmp3314[i, j, 3, 1]) + constant_term(tmp3315[i, j, 3, 2]), order)
                        tmp3317[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp3316[i, j, 3, 1]) + constant_term(tmp3317[i, j, 3, 3]), order)
                        tmp3319[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3320[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3321[i, j, 1, 1] = Taylor1(constant_term(tmp3319[i, j, 1, 1]) + constant_term(tmp3320[i, j, 1, 2]), order)
                        tmp3322[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp3321[i, j, 1, 1]) + constant_term(tmp3322[i, j, 1, 3]), order)
                        tmp3324[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3325[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3326[i, j, 2, 1] = Taylor1(constant_term(tmp3324[i, j, 2, 1]) + constant_term(tmp3325[i, j, 2, 2]), order)
                        tmp3327[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp3326[i, j, 2, 1]) + constant_term(tmp3327[i, j, 2, 3]), order)
                        tmp3329[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3330[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3331[i, j, 3, 1] = Taylor1(constant_term(tmp3329[i, j, 3, 1]) + constant_term(tmp3330[i, j, 3, 2]), order)
                        tmp3332[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp3331[i, j, 3, 1]) + constant_term(tmp3332[i, j, 3, 3]), order)
                        tmp3334[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                        tmp3335[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                        tmp3336[i, j, 1, 1] = Taylor1(constant_term(tmp3334[i, j, 1, 1]) + constant_term(tmp3335[i, j, 2, 1]), order)
                        tmp3337[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                        F_JCS_x[i, j] = Taylor1(constant_term(tmp3336[i, j, 1, 1]) + constant_term(tmp3337[i, j, 3, 1]), order)
                        tmp3339[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                        tmp3340[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                        tmp3341[i, j, 1, 2] = Taylor1(constant_term(tmp3339[i, j, 1, 2]) + constant_term(tmp3340[i, j, 2, 2]), order)
                        tmp3342[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                        F_JCS_y[i, j] = Taylor1(constant_term(tmp3341[i, j, 1, 2]) + constant_term(tmp3342[i, j, 3, 2]), order)
                        tmp3344[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                        tmp3345[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                        tmp3346[i, j, 1, 3] = Taylor1(constant_term(tmp3344[i, j, 1, 3]) + constant_term(tmp3345[i, j, 2, 3]), order)
                        tmp3347[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                        F_JCS_z[i, j] = Taylor1(constant_term(tmp3346[i, j, 1, 3]) + constant_term(tmp3347[i, j, 3, 3]), order)
                    end
                end
            end
        end
    tmp3349 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    for i = CartesianIndices(tmp3349)
        tmp3349[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3351 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    for i = CartesianIndices(tmp3351)
        tmp3351[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3353 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    for i = CartesianIndices(tmp3353)
        tmp3353[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3355 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    for i = CartesianIndices(tmp3355)
        tmp3355[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3357 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    for i = CartesianIndices(tmp3357)
        tmp3357[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3359 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    for i = CartesianIndices(tmp3359)
        tmp3359[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3361 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp3361)
        tmp3361[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3362 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp3362)
        tmp3362[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3363 = Array{Taylor1{_S}}(undef, size(tmp3361))
    for i = CartesianIndices(tmp3363)
        tmp3363[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3365 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp3365)
        tmp3365[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3366 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp3366)
        tmp3366[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3367 = Array{Taylor1{_S}}(undef, size(tmp3365))
    for i = CartesianIndices(tmp3367)
        tmp3367[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3369 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp3369)
        tmp3369[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3370 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp3370)
        tmp3370[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3371 = Array{Taylor1{_S}}(undef, size(tmp3369))
    for i = CartesianIndices(tmp3371)
        tmp3371[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp3349[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp3349[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp3351[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp3351[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp3353[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp3353[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp3355[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp3355[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp3357[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp3357[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp3359[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp3359[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp3361[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp3362[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp3363[i, j] = Taylor1(constant_term(tmp3361[i, j]) - constant_term(tmp3362[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3363[i, j]), order)
                        tmp3365[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp3366[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp3367[i, j] = Taylor1(constant_term(tmp3365[i, j]) - constant_term(tmp3366[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3367[i, j]), order)
                        tmp3369[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp3370[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp3371[i, j] = Taylor1(constant_term(tmp3369[i, j]) - constant_term(tmp3370[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3371[i, j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp3383 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    for i = CartesianIndices(tmp3383)
        tmp3383[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(Xij_t_Ui)
        Xij_t_Ui[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(Yij_t_Vi)
        Yij_t_Vi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(Zij_t_Wi)
        Zij_t_Wi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3389 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    for i = CartesianIndices(tmp3389)
        tmp3389[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp3389))
    for i = CartesianIndices(Rij_dot_Vi)
        Rij_dot_Vi[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3392 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    for i = CartesianIndices(tmp3392)
        tmp3392[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3395 = Array{Taylor1{_S}}(undef, size(rij_dot_vi_div_rij_sq))
    for i = CartesianIndices(tmp3395)
        tmp3395[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    for i = CartesianIndices(pn1t2_7)
        pn1t2_7[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1619 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                    ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                    _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                    sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                    tmp3383[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                    sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp3383[i, j]), order)
                    ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                    Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                    Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                    Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                    tmp3389[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                    Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp3389[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                    tmp3392[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                    rij_dot_vi_div_rij_sq[i, j] = Taylor1(constant_term(tmp3392[i, j]) / constant_term(r_p2[i, j]), order)
                    tmp3395[i, j] = Taylor1(constant_term(1.5) * constant_term(rij_dot_vi_div_rij_sq[i, j]), order)
                    pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp3395[i, j]), order)
                    pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
                end
            end
            pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp3402 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    for i = CartesianIndices(tmp3402)
        tmp3402[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3403 = Array{Taylor1{_S}}(undef, size(tmp3402))
    for i = CartesianIndices(tmp3403)
        tmp3403[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3404 = Array{Taylor1{_S}}(undef, size(tmp3403))
    for i = CartesianIndices(tmp3404)
        tmp3404[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3412 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    for i = CartesianIndices(tmp3412)
        tmp3412[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    for i = CartesianIndices(termpnx)
        termpnx[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    for i = CartesianIndices(sumpnx)
        sumpnx[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3415 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    for i = CartesianIndices(tmp3415)
        tmp3415[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    for i = CartesianIndices(termpny)
        termpny[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    for i = CartesianIndices(sumpny)
        sumpny[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp3418 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    for i = CartesianIndices(tmp3418)
        tmp3418[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    for i = CartesianIndices(termpnz)
        termpnz[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    for i = CartesianIndices(sumpnz)
        sumpnz[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1658 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                    pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                    pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                    tmp3402[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                    tmp3403[i, j] = Taylor1(constant_term(tmp3402[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                    tmp3404[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp3403[i, j]), order)
                    pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp3404[i, j]), order)
                    X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                    Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                    Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                    pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                    pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                    pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                    tmp3412[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                    termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp3412[i, j]), order)
                    sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                    pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                    tmp3415[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                    termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp3415[i, j]), order)
                    sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                    pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                    tmp3418[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                    termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp3418[i, j]), order)
                    sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                    pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
                end
            end
            postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
            postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
            postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
        end
    x0s_M = Taylor1(identity(constant_term(r_star_M_0[1])), order)
    y0s_M = Taylor1(identity(constant_term(r_star_M_0[2])), order)
    z0s_M = Taylor1(identity(constant_term(r_star_M_0[3])), order)
    tmp3425 = Taylor1(constant_term(x0s_M) ^ float(constant_term(2)), order)
    tmp3427 = Taylor1(constant_term(y0s_M) ^ float(constant_term(2)), order)
    ρ0s2_M = Taylor1(constant_term(tmp3425) + constant_term(tmp3427), order)
    ρ0s_M = Taylor1(sqrt(constant_term(ρ0s2_M)), order)
    z0s2_M = Taylor1(constant_term(z0s_M) ^ float(constant_term(2)), order)
    r0s2_M = Taylor1(constant_term(ρ0s2_M) + constant_term(z0s2_M), order)
    r0s_M = Taylor1(sqrt(constant_term(r0s2_M)), order)
    r0s5_M = Taylor1(constant_term(r0s_M) ^ float(constant_term(5)), order)
    x0s_S = Taylor1(identity(constant_term(r_star_S_0[1])), order)
    y0s_S = Taylor1(identity(constant_term(r_star_S_0[2])), order)
    z0s_S = Taylor1(identity(constant_term(r_star_S_0[3])), order)
    tmp3437 = Taylor1(constant_term(x0s_S) ^ float(constant_term(2)), order)
    tmp3439 = Taylor1(constant_term(y0s_S) ^ float(constant_term(2)), order)
    ρ0s2_S = Taylor1(constant_term(tmp3437) + constant_term(tmp3439), order)
    ρ0s_S = Taylor1(sqrt(constant_term(ρ0s2_S)), order)
    z0s2_S = Taylor1(constant_term(z0s_S) ^ float(constant_term(2)), order)
    r0s2_S = Taylor1(constant_term(ρ0s2_S) + constant_term(z0s2_S), order)
    r0s_S = Taylor1(sqrt(constant_term(r0s2_S)), order)
    r0s5_S = Taylor1(constant_term(r0s_S) ^ float(constant_term(5)), order)
    tmp3449 = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_0[3]), order)
    tmp3451 = Taylor1(constant_term(tmp3449) ^ float(constant_term(2)), order)
    tmp3453 = Taylor1(constant_term(r_xy[mo, ea]) * constant_term(ρ0s_M), order)
    tmp3455 = Taylor1(constant_term(tmp3453) ^ float(constant_term(2)), order)
    tmp3456 = Taylor1(constant_term(0.5) * constant_term(tmp3455), order)
    tmp3457 = Taylor1(constant_term(tmp3451) + constant_term(tmp3456), order)
    tmp3458 = Taylor1(constant_term(tmp3457) / constant_term(r_p2[mo, ea]), order)
    tmp3459 = Taylor1(constant_term(5) * constant_term(tmp3458), order)
    coeff0_M = Taylor1(constant_term(r0s2_M) - constant_term(tmp3459), order)
    tmp3462 = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_0[3]), order)
    tmp3464 = Taylor1(constant_term(tmp3462) ^ float(constant_term(2)), order)
    tmp3466 = Taylor1(constant_term(r_xy[mo, ea]) * constant_term(ρ0s_S), order)
    tmp3468 = Taylor1(constant_term(tmp3466) ^ float(constant_term(2)), order)
    tmp3469 = Taylor1(constant_term(0.5) * constant_term(tmp3468), order)
    tmp3470 = Taylor1(constant_term(tmp3464) + constant_term(tmp3469), order)
    tmp3471 = Taylor1(constant_term(tmp3470) / constant_term(r_p2[mo, ea]), order)
    tmp3472 = Taylor1(constant_term(5) * constant_term(tmp3471), order)
    coeff0_S = Taylor1(constant_term(r0s2_S) - constant_term(tmp3472), order)
    k_20E_div_r0s5_M = Taylor1(constant_term(k_20E) / constant_term(r0s5_M), order)
    k_20E_div_r0s5_S = Taylor1(constant_term(k_20E) / constant_term(r0s5_S), order)
    tmp3476 = Taylor1(constant_term(ρ0s2_M) + constant_term(coeff0_M), order)
    tmp3477 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp3476), order)
    a_tid_0_M_x = Taylor1(constant_term(tmp3477) * constant_term(X_bf[mo, ea]), order)
    tmp3479 = Taylor1(constant_term(ρ0s2_M) + constant_term(coeff0_M), order)
    tmp3480 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp3479), order)
    a_tid_0_M_y = Taylor1(constant_term(tmp3480) * constant_term(Y_bf[mo, ea]), order)
    tmp3483 = Taylor1(constant_term(2) * constant_term(z0s2_M), order)
    tmp3484 = Taylor1(constant_term(tmp3483) + constant_term(coeff0_M), order)
    tmp3485 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp3484), order)
    a_tid_0_M_z = Taylor1(constant_term(tmp3485) * constant_term(Z_bf[mo, ea]), order)
    tmp3487 = Taylor1(constant_term(ρ0s2_S) + constant_term(coeff0_S), order)
    tmp3488 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp3487), order)
    a_tid_0_S_x = Taylor1(constant_term(tmp3488) * constant_term(X_bf[mo, ea]), order)
    tmp3490 = Taylor1(constant_term(ρ0s2_S) + constant_term(coeff0_S), order)
    tmp3491 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp3490), order)
    a_tid_0_S_y = Taylor1(constant_term(tmp3491) * constant_term(Y_bf[mo, ea]), order)
    tmp3494 = Taylor1(constant_term(2) * constant_term(z0s2_S), order)
    tmp3495 = Taylor1(constant_term(tmp3494) + constant_term(coeff0_S), order)
    tmp3496 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp3495), order)
    a_tid_0_S_z = Taylor1(constant_term(tmp3496) * constant_term(Z_bf[mo, ea]), order)
    x1s_M = Taylor1(identity(constant_term(r_star_M_1[1])), order)
    y1s_M = Taylor1(identity(constant_term(r_star_M_1[2])), order)
    z1s_M = Taylor1(identity(constant_term(r_star_M_1[3])), order)
    tmp3499 = Taylor1(constant_term(x1s_M) ^ float(constant_term(2)), order)
    tmp3501 = Taylor1(constant_term(y1s_M) ^ float(constant_term(2)), order)
    ρ1s2_M = Taylor1(constant_term(tmp3499) + constant_term(tmp3501), order)
    ρ1s_M = Taylor1(sqrt(constant_term(ρ1s2_M)), order)
    z1s2_M = Taylor1(constant_term(z1s_M) ^ float(constant_term(2)), order)
    r1s2_M = Taylor1(constant_term(ρ1s2_M) + constant_term(z1s2_M), order)
    r1s_M = Taylor1(sqrt(constant_term(r1s2_M)), order)
    r1s5_M = Taylor1(constant_term(r1s_M) ^ float(constant_term(5)), order)
    x1s_S = Taylor1(identity(constant_term(r_star_S_1[1])), order)
    y1s_S = Taylor1(identity(constant_term(r_star_S_1[2])), order)
    z1s_S = Taylor1(identity(constant_term(r_star_S_1[3])), order)
    tmp3511 = Taylor1(constant_term(x1s_S) ^ float(constant_term(2)), order)
    tmp3513 = Taylor1(constant_term(y1s_S) ^ float(constant_term(2)), order)
    ρ1s2_S = Taylor1(constant_term(tmp3511) + constant_term(tmp3513), order)
    ρ1s_S = Taylor1(sqrt(constant_term(ρ1s2_S)), order)
    z1s2_S = Taylor1(constant_term(z1s_S) ^ float(constant_term(2)), order)
    r1s2_S = Taylor1(constant_term(ρ1s2_S) + constant_term(z1s2_S), order)
    r1s_S = Taylor1(sqrt(constant_term(r1s2_S)), order)
    r1s5_S = Taylor1(constant_term(r1s_S) ^ float(constant_term(5)), order)
    tmp3522 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_M_1[1]), order)
    tmp3523 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_1[2]), order)
    coeff1_1_M = Taylor1(constant_term(tmp3522) + constant_term(tmp3523), order)
    tmp3525 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_S_1[1]), order)
    tmp3526 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_1[2]), order)
    coeff1_1_S = Taylor1(constant_term(tmp3525) + constant_term(tmp3526), order)
    coeff2_1_M = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_1[3]), order)
    coeff2_1_S = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_1[3]), order)
    tmp3531 = Taylor1(constant_term(10) * constant_term(coeff1_1_M), order)
    tmp3532 = Taylor1(constant_term(tmp3531) * constant_term(coeff2_1_M), order)
    coeff3_1_M = Taylor1(constant_term(tmp3532) / constant_term(r_p2[mo, ea]), order)
    tmp3535 = Taylor1(constant_term(10) * constant_term(coeff1_1_S), order)
    tmp3536 = Taylor1(constant_term(tmp3535) * constant_term(coeff2_1_S), order)
    coeff3_1_S = Taylor1(constant_term(tmp3536) / constant_term(r_p2[mo, ea]), order)
    k_21E_div_r1s5_M = Taylor1(constant_term(k_21E) / constant_term(r1s5_M), order)
    k_21E_div_r1s5_S = Taylor1(constant_term(k_21E) / constant_term(r1s5_S), order)
    tmp3541 = Taylor1(constant_term(2) * constant_term(coeff2_1_M), order)
    tmp3542 = Taylor1(constant_term(tmp3541) * constant_term(r_star_M_1[1]), order)
    tmp3543 = Taylor1(constant_term(coeff3_1_M) * constant_term(X_bf[mo, ea]), order)
    tmp3544 = Taylor1(constant_term(tmp3542) - constant_term(tmp3543), order)
    a_tid_1_M_x = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp3544), order)
    tmp3547 = Taylor1(constant_term(2) * constant_term(coeff2_1_M), order)
    tmp3548 = Taylor1(constant_term(tmp3547) * constant_term(r_star_M_1[2]), order)
    tmp3549 = Taylor1(constant_term(coeff3_1_M) * constant_term(Y_bf[mo, ea]), order)
    tmp3550 = Taylor1(constant_term(tmp3548) - constant_term(tmp3549), order)
    a_tid_1_M_y = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp3550), order)
    tmp3553 = Taylor1(constant_term(2) * constant_term(coeff1_1_M), order)
    tmp3554 = Taylor1(constant_term(tmp3553) * constant_term(r_star_M_1[3]), order)
    tmp3555 = Taylor1(constant_term(coeff3_1_M) * constant_term(Z_bf[mo, ea]), order)
    tmp3556 = Taylor1(constant_term(tmp3554) - constant_term(tmp3555), order)
    a_tid_1_M_z = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp3556), order)
    tmp3559 = Taylor1(constant_term(2) * constant_term(coeff2_1_S), order)
    tmp3560 = Taylor1(constant_term(tmp3559) * constant_term(r_star_S_1[1]), order)
    tmp3561 = Taylor1(constant_term(coeff3_1_S) * constant_term(X_bf[mo, ea]), order)
    tmp3562 = Taylor1(constant_term(tmp3560) - constant_term(tmp3561), order)
    a_tid_1_S_x = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp3562), order)
    tmp3565 = Taylor1(constant_term(2) * constant_term(coeff2_1_S), order)
    tmp3566 = Taylor1(constant_term(tmp3565) * constant_term(r_star_S_1[2]), order)
    tmp3567 = Taylor1(constant_term(coeff3_1_S) * constant_term(Y_bf[mo, ea]), order)
    tmp3568 = Taylor1(constant_term(tmp3566) - constant_term(tmp3567), order)
    a_tid_1_S_y = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp3568), order)
    tmp3571 = Taylor1(constant_term(2) * constant_term(coeff1_1_S), order)
    tmp3572 = Taylor1(constant_term(tmp3571) * constant_term(r_star_S_1[3]), order)
    tmp3573 = Taylor1(constant_term(coeff3_1_S) * constant_term(Z_bf[mo, ea]), order)
    tmp3574 = Taylor1(constant_term(tmp3572) - constant_term(tmp3573), order)
    a_tid_1_S_z = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp3574), order)
    x2s_M = Taylor1(identity(constant_term(r_star_M_2[1])), order)
    y2s_M = Taylor1(identity(constant_term(r_star_M_2[2])), order)
    z2s_M = Taylor1(identity(constant_term(r_star_M_2[3])), order)
    tmp3577 = Taylor1(constant_term(x2s_M) ^ float(constant_term(2)), order)
    tmp3579 = Taylor1(constant_term(y2s_M) ^ float(constant_term(2)), order)
    ρ2s2_M = Taylor1(constant_term(tmp3577) + constant_term(tmp3579), order)
    ρ2s_M = Taylor1(sqrt(constant_term(ρ2s2_M)), order)
    z2s2_M = Taylor1(constant_term(z2s_M) ^ float(constant_term(2)), order)
    r2s2_M = Taylor1(constant_term(ρ2s2_M) + constant_term(z2s2_M), order)
    r2s_M = Taylor1(sqrt(constant_term(r2s2_M)), order)
    r2s5_M = Taylor1(constant_term(r2s_M) ^ float(constant_term(5)), order)
    x2s_S = Taylor1(identity(constant_term(r_star_S_2[1])), order)
    y2s_S = Taylor1(identity(constant_term(r_star_S_2[2])), order)
    z2s_S = Taylor1(identity(constant_term(r_star_S_2[3])), order)
    tmp3589 = Taylor1(constant_term(x2s_S) ^ float(constant_term(2)), order)
    tmp3591 = Taylor1(constant_term(y2s_S) ^ float(constant_term(2)), order)
    ρ2s2_S = Taylor1(constant_term(tmp3589) + constant_term(tmp3591), order)
    ρ2s_S = Taylor1(sqrt(constant_term(ρ2s2_S)), order)
    z2s2_S = Taylor1(constant_term(z2s_S) ^ float(constant_term(2)), order)
    r2s2_S = Taylor1(constant_term(ρ2s2_S) + constant_term(z2s2_S), order)
    r2s_S = Taylor1(sqrt(constant_term(r2s2_S)), order)
    r2s5_S = Taylor1(constant_term(r2s_S) ^ float(constant_term(5)), order)
    tmp3600 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_M_2[1]), order)
    tmp3601 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_2[2]), order)
    coeff1_2_M = Taylor1(constant_term(tmp3600) + constant_term(tmp3601), order)
    tmp3603 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_S_2[1]), order)
    tmp3604 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_2[2]), order)
    coeff1_2_S = Taylor1(constant_term(tmp3603) + constant_term(tmp3604), order)
    tmp3608 = Taylor1(constant_term(coeff1_2_M) ^ float(constant_term(2)), order)
    tmp3611 = Taylor1(constant_term(r_xy[mo, ea]) ^ float(constant_term(2)), order)
    tmp3612 = Taylor1(constant_term(0.5) * constant_term(tmp3611), order)
    tmp3613 = Taylor1(constant_term(tmp3612) * constant_term(ρ2s2_M), order)
    tmp3614 = Taylor1(constant_term(tmp3608) - constant_term(tmp3613), order)
    tmp3615 = Taylor1(constant_term(5) * constant_term(tmp3614), order)
    coeff3_2_M = Taylor1(constant_term(tmp3615) / constant_term(r_p2[mo, ea]), order)
    tmp3619 = Taylor1(constant_term(coeff1_2_S) ^ float(constant_term(2)), order)
    tmp3622 = Taylor1(constant_term(r_xy[mo, ea]) ^ float(constant_term(2)), order)
    tmp3623 = Taylor1(constant_term(0.5) * constant_term(tmp3622), order)
    tmp3624 = Taylor1(constant_term(tmp3623) * constant_term(ρ2s2_S), order)
    tmp3625 = Taylor1(constant_term(tmp3619) - constant_term(tmp3624), order)
    tmp3626 = Taylor1(constant_term(5) * constant_term(tmp3625), order)
    coeff3_2_S = Taylor1(constant_term(tmp3626) / constant_term(r_p2[mo, ea]), order)
    k_22E_div_r2s5_M = Taylor1(constant_term(k_22E) / constant_term(r2s5_M), order)
    k_22E_div_r2s5_S = Taylor1(constant_term(k_22E) / constant_term(r2s5_S), order)
    tmp3631 = Taylor1(constant_term(2) * constant_term(coeff1_2_M), order)
    tmp3632 = Taylor1(constant_term(tmp3631) * constant_term(r_star_M_2[1]), order)
    tmp3633 = Taylor1(constant_term(ρ2s2_M) + constant_term(coeff3_2_M), order)
    tmp3634 = Taylor1(constant_term(tmp3633) * constant_term(X_bf[mo, ea]), order)
    tmp3635 = Taylor1(constant_term(tmp3632) - constant_term(tmp3634), order)
    a_tid_2_M_x = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp3635), order)
    tmp3638 = Taylor1(constant_term(2) * constant_term(coeff1_2_M), order)
    tmp3639 = Taylor1(constant_term(tmp3638) * constant_term(r_star_M_2[2]), order)
    tmp3640 = Taylor1(constant_term(ρ2s2_M) + constant_term(coeff3_2_M), order)
    tmp3641 = Taylor1(constant_term(tmp3640) * constant_term(Y_bf[mo, ea]), order)
    tmp3642 = Taylor1(constant_term(tmp3639) - constant_term(tmp3641), order)
    a_tid_2_M_y = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp3642), order)
    tmp3644 = Taylor1(-(constant_term(coeff3_2_M)), order)
    tmp3645 = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp3644), order)
    a_tid_2_M_z = Taylor1(constant_term(tmp3645) * constant_term(Z_bf[mo, ea]), order)
    tmp3648 = Taylor1(constant_term(2) * constant_term(coeff1_2_S), order)
    tmp3649 = Taylor1(constant_term(tmp3648) * constant_term(r_star_S_2[1]), order)
    tmp3650 = Taylor1(constant_term(ρ2s2_S) + constant_term(coeff3_2_S), order)
    tmp3651 = Taylor1(constant_term(tmp3650) * constant_term(X_bf[mo, ea]), order)
    tmp3652 = Taylor1(constant_term(tmp3649) - constant_term(tmp3651), order)
    a_tid_2_S_x = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp3652), order)
    tmp3655 = Taylor1(constant_term(2) * constant_term(coeff1_2_S), order)
    tmp3656 = Taylor1(constant_term(tmp3655) * constant_term(r_star_S_2[2]), order)
    tmp3657 = Taylor1(constant_term(ρ2s2_S) + constant_term(coeff3_2_S), order)
    tmp3658 = Taylor1(constant_term(tmp3657) * constant_term(Y_bf[mo, ea]), order)
    tmp3659 = Taylor1(constant_term(tmp3656) - constant_term(tmp3658), order)
    a_tid_2_S_y = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp3659), order)
    tmp3661 = Taylor1(-(constant_term(coeff3_2_S)), order)
    tmp3662 = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp3661), order)
    a_tid_2_S_z = Taylor1(constant_term(tmp3662) * constant_term(Z_bf[mo, ea]), order)
    tmp3664 = Taylor1(constant_term(RE_au) / constant_term(r_p1d2[mo, ea]), order)
    RE_div_r_p5 = Taylor1(constant_term(tmp3664) ^ float(constant_term(5)), order)
    aux_tidacc = Taylor1(constant_term(tid_num_coeff) * constant_term(RE_div_r_p5), order)
    a_tidal_coeff_M = Taylor1(constant_term(μ[mo]) * constant_term(aux_tidacc), order)
    a_tidal_coeff_S = Taylor1(constant_term(μ[su]) * constant_term(aux_tidacc), order)
    tmp3670 = Taylor1(constant_term(a_tid_0_M_x) + constant_term(a_tid_1_M_x), order)
    tmp3671 = Taylor1(constant_term(tmp3670) + constant_term(a_tid_2_M_x), order)
    tmp3672 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp3671), order)
    tmp3673 = Taylor1(constant_term(a_tid_0_S_x) + constant_term(a_tid_1_S_x), order)
    tmp3674 = Taylor1(constant_term(tmp3673) + constant_term(a_tid_2_S_x), order)
    tmp3675 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp3674), order)
    a_tidal_tod_x = Taylor1(constant_term(tmp3672) + constant_term(tmp3675), order)
    tmp3677 = Taylor1(constant_term(a_tid_0_M_y) + constant_term(a_tid_1_M_y), order)
    tmp3678 = Taylor1(constant_term(tmp3677) + constant_term(a_tid_2_M_y), order)
    tmp3679 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp3678), order)
    tmp3680 = Taylor1(constant_term(a_tid_0_S_y) + constant_term(a_tid_1_S_y), order)
    tmp3681 = Taylor1(constant_term(tmp3680) + constant_term(a_tid_2_S_y), order)
    tmp3682 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp3681), order)
    a_tidal_tod_y = Taylor1(constant_term(tmp3679) + constant_term(tmp3682), order)
    tmp3684 = Taylor1(constant_term(a_tid_0_M_z) + constant_term(a_tid_1_M_z), order)
    tmp3685 = Taylor1(constant_term(tmp3684) + constant_term(a_tid_2_M_z), order)
    tmp3686 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp3685), order)
    tmp3687 = Taylor1(constant_term(a_tid_0_S_z) + constant_term(a_tid_1_S_z), order)
    tmp3688 = Taylor1(constant_term(tmp3687) + constant_term(a_tid_2_S_z), order)
    tmp3689 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp3688), order)
    a_tidal_tod_z = Taylor1(constant_term(tmp3686) + constant_term(tmp3689), order)
    tmp3691 = Taylor1(constant_term(RotM[1, 1, ea]) * constant_term(a_tidal_tod_x), order)
    tmp3692 = Taylor1(constant_term(RotM[2, 1, ea]) * constant_term(a_tidal_tod_y), order)
    tmp3693 = Taylor1(constant_term(tmp3691) + constant_term(tmp3692), order)
    tmp3694 = Taylor1(constant_term(RotM[3, 1, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_x = Taylor1(constant_term(tmp3693) + constant_term(tmp3694), order)
    tmp3696 = Taylor1(constant_term(RotM[1, 2, ea]) * constant_term(a_tidal_tod_x), order)
    tmp3697 = Taylor1(constant_term(RotM[2, 2, ea]) * constant_term(a_tidal_tod_y), order)
    tmp3698 = Taylor1(constant_term(tmp3696) + constant_term(tmp3697), order)
    tmp3699 = Taylor1(constant_term(RotM[3, 2, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_y = Taylor1(constant_term(tmp3698) + constant_term(tmp3699), order)
    tmp3701 = Taylor1(constant_term(RotM[1, 3, ea]) * constant_term(a_tidal_tod_x), order)
    tmp3702 = Taylor1(constant_term(RotM[2, 3, ea]) * constant_term(a_tidal_tod_y), order)
    tmp3703 = Taylor1(constant_term(tmp3701) + constant_term(tmp3702), order)
    tmp3704 = Taylor1(constant_term(RotM[3, 3, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_z = Taylor1(constant_term(tmp3703) + constant_term(tmp3704), order)
    accX_mo_tides = Taylor1(constant_term(accX[mo]) + constant_term(a_tidal_x), order)
    accY_mo_tides = Taylor1(constant_term(accY[mo]) + constant_term(a_tidal_y), order)
    accZ_mo_tides = Taylor1(constant_term(accZ[mo]) + constant_term(a_tidal_z), order)
    accX[mo] = Taylor1(identity(constant_term(accX_mo_tides)), order)
    accY[mo] = Taylor1(identity(constant_term(accY_mo_tides)), order)
    accZ[mo] = Taylor1(identity(constant_term(accZ_mo_tides)), order)
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1896 =# Threads.@threads for i = 1:N_ext
            dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
            dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
            dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1901 =# Threads.@threads for i = N_ext + 1:N
            dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
            dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
            dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
        end
    tmp3712 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp3713 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp3714 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp3715 = Taylor1(constant_term(tmp3713) + constant_term(tmp3714), order)
    Iω_x = Taylor1(constant_term(tmp3712) + constant_term(tmp3715), order)
    tmp3717 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp3718 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp3719 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp3720 = Taylor1(constant_term(tmp3718) + constant_term(tmp3719), order)
    Iω_y = Taylor1(constant_term(tmp3717) + constant_term(tmp3720), order)
    tmp3722 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp3723 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp3724 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp3725 = Taylor1(constant_term(tmp3723) + constant_term(tmp3724), order)
    Iω_z = Taylor1(constant_term(tmp3722) + constant_term(tmp3725), order)
    tmp3727 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp3728 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp3727) - constant_term(tmp3728), order)
    tmp3730 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp3731 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp3730) - constant_term(tmp3731), order)
    tmp3733 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp3734 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp3733) - constant_term(tmp3734), order)
    tmp3736 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp3737 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp3738 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp3739 = Taylor1(constant_term(tmp3737) + constant_term(tmp3738), order)
    dIω_x = Taylor1(constant_term(tmp3736) + constant_term(tmp3739), order)
    tmp3741 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp3742 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp3743 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp3744 = Taylor1(constant_term(tmp3742) + constant_term(tmp3743), order)
    dIω_y = Taylor1(constant_term(tmp3741) + constant_term(tmp3744), order)
    tmp3746 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp3747 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp3748 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp3749 = Taylor1(constant_term(tmp3747) + constant_term(tmp3748), order)
    dIω_z = Taylor1(constant_term(tmp3746) + constant_term(tmp3749), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp3754 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3755 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3756 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3757 = Taylor1(constant_term(tmp3755) + constant_term(tmp3756), order)
    er_EM_1 = Taylor1(constant_term(tmp3754) + constant_term(tmp3757), order)
    tmp3759 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3760 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3761 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3762 = Taylor1(constant_term(tmp3760) + constant_term(tmp3761), order)
    er_EM_2 = Taylor1(constant_term(tmp3759) + constant_term(tmp3762), order)
    tmp3764 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3765 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3766 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3767 = Taylor1(constant_term(tmp3765) + constant_term(tmp3766), order)
    er_EM_3 = Taylor1(constant_term(tmp3764) + constant_term(tmp3767), order)
    tmp3769 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3770 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3771 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3772 = Taylor1(constant_term(tmp3770) + constant_term(tmp3771), order)
    p_E_1 = Taylor1(constant_term(tmp3769) + constant_term(tmp3772), order)
    tmp3774 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3775 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3776 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3777 = Taylor1(constant_term(tmp3775) + constant_term(tmp3776), order)
    p_E_2 = Taylor1(constant_term(tmp3774) + constant_term(tmp3777), order)
    tmp3779 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3780 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3781 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3782 = Taylor1(constant_term(tmp3780) + constant_term(tmp3781), order)
    p_E_3 = Taylor1(constant_term(tmp3779) + constant_term(tmp3782), order)
    tmp3784 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp3785 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp3786 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp3787 = Taylor1(constant_term(tmp3785) + constant_term(tmp3786), order)
    I_er_EM_1 = Taylor1(constant_term(tmp3784) + constant_term(tmp3787), order)
    tmp3789 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp3790 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp3791 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp3792 = Taylor1(constant_term(tmp3790) + constant_term(tmp3791), order)
    I_er_EM_2 = Taylor1(constant_term(tmp3789) + constant_term(tmp3792), order)
    tmp3794 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp3795 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp3796 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp3797 = Taylor1(constant_term(tmp3795) + constant_term(tmp3796), order)
    I_er_EM_3 = Taylor1(constant_term(tmp3794) + constant_term(tmp3797), order)
    tmp3799 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp3800 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp3801 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp3802 = Taylor1(constant_term(tmp3800) + constant_term(tmp3801), order)
    I_p_E_1 = Taylor1(constant_term(tmp3799) + constant_term(tmp3802), order)
    tmp3804 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp3805 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp3806 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp3807 = Taylor1(constant_term(tmp3805) + constant_term(tmp3806), order)
    I_p_E_2 = Taylor1(constant_term(tmp3804) + constant_term(tmp3807), order)
    tmp3809 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp3810 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp3811 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp3812 = Taylor1(constant_term(tmp3810) + constant_term(tmp3811), order)
    I_p_E_3 = Taylor1(constant_term(tmp3809) + constant_term(tmp3812), order)
    tmp3814 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp3815 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp3814) - constant_term(tmp3815), order)
    tmp3817 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp3818 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp3817) - constant_term(tmp3818), order)
    tmp3820 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp3821 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp3820) - constant_term(tmp3821), order)
    tmp3823 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp3824 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp3823) - constant_term(tmp3824), order)
    tmp3826 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp3827 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp3826) - constant_term(tmp3827), order)
    tmp3829 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp3830 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp3829) - constant_term(tmp3830), order)
    tmp3832 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp3833 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp3832) - constant_term(tmp3833), order)
    tmp3835 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp3836 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp3835) - constant_term(tmp3836), order)
    tmp3838 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp3839 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp3838) - constant_term(tmp3839), order)
    tmp3841 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp3842 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp3841) - constant_term(tmp3842), order)
    tmp3844 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp3845 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp3844) - constant_term(tmp3845), order)
    tmp3847 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp3848 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp3847) - constant_term(tmp3848), order)
    tmp3852 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp3853 = Taylor1(constant_term(7) * constant_term(tmp3852), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp3853), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp3858 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp3858), order)
    tmp3860 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp3861 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp3862 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3861), order)
    tmp3863 = Taylor1(constant_term(tmp3860) + constant_term(tmp3862), order)
    tmp3865 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp3866 = Taylor1(constant_term(tmp3863) - constant_term(tmp3865), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3866), order)
    tmp3868 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp3869 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp3870 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3869), order)
    tmp3871 = Taylor1(constant_term(tmp3868) + constant_term(tmp3870), order)
    tmp3873 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp3874 = Taylor1(constant_term(tmp3871) - constant_term(tmp3873), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3874), order)
    tmp3876 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp3877 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp3878 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3877), order)
    tmp3879 = Taylor1(constant_term(tmp3876) + constant_term(tmp3878), order)
    tmp3881 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp3882 = Taylor1(constant_term(tmp3879) - constant_term(tmp3881), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3882), order)
    tmp3884 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3885 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3886 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3887 = Taylor1(constant_term(tmp3885) + constant_term(tmp3886), order)
    N_1_LMF = Taylor1(constant_term(tmp3884) + constant_term(tmp3887), order)
    tmp3889 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3890 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3891 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3892 = Taylor1(constant_term(tmp3890) + constant_term(tmp3891), order)
    N_2_LMF = Taylor1(constant_term(tmp3889) + constant_term(tmp3892), order)
    tmp3894 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3895 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3896 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3897 = Taylor1(constant_term(tmp3895) + constant_term(tmp3896), order)
    N_3_LMF = Taylor1(constant_term(tmp3894) + constant_term(tmp3897), order)
    tmp3899 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp3900 = Taylor1(constant_term(k_ν) * constant_term(tmp3899), order)
    tmp3901 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp3902 = Taylor1(constant_term(tmp3901) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp3900) - constant_term(tmp3902), order)
    tmp3904 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp3905 = Taylor1(constant_term(k_ν) * constant_term(tmp3904), order)
    tmp3906 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp3907 = Taylor1(constant_term(tmp3906) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp3905) + constant_term(tmp3907), order)
    tmp3909 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp3909), order)
    tmp3911 = Taylor1(constant_term(μ[mo]) * constant_term(N_1_LMF), order)
    tmp3912 = Taylor1(constant_term(N_MfigM_figE_1) + constant_term(tmp3911), order)
    tmp3913 = Taylor1(constant_term(tmp3912) + constant_term(N_cmb_1), order)
    tmp3914 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp3913) - constant_term(tmp3914), order)
    tmp3916 = Taylor1(constant_term(μ[mo]) * constant_term(N_2_LMF), order)
    tmp3917 = Taylor1(constant_term(N_MfigM_figE_2) + constant_term(tmp3916), order)
    tmp3918 = Taylor1(constant_term(tmp3917) + constant_term(N_cmb_2), order)
    tmp3919 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp3918) - constant_term(tmp3919), order)
    tmp3921 = Taylor1(constant_term(μ[mo]) * constant_term(N_3_LMF), order)
    tmp3922 = Taylor1(constant_term(N_MfigM_figE_3) + constant_term(tmp3921), order)
    tmp3923 = Taylor1(constant_term(tmp3922) + constant_term(N_cmb_3), order)
    tmp3924 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp3923) - constant_term(tmp3924), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp3929 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp3930 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp3929) - constant_term(tmp3930), order)
    tmp3932 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp3933 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp3932) - constant_term(tmp3933), order)
    tmp3935 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp3936 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp3935) - constant_term(tmp3936), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp3941 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp4072 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3942 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp3941), order)
    tmp3943 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp4073 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3944 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp3943), order)
    tmp3945 = Taylor1(constant_term(tmp3942) + constant_term(tmp3944), order)
    tmp3946 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp4074 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp3945) / constant_term(tmp3946), order)
    tmp3948 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp4075 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3949 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp3948), order)
    tmp3950 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp4076 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3951 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp3950), order)
    dq[6N + 2] = Taylor1(constant_term(tmp3949) - constant_term(tmp3951), order)
    tmp3953 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp4077 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp3954 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp3953), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp3954), order)
    tmp3956 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp3957 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp3958 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp3959 = Taylor1(constant_term(tmp3957) + constant_term(tmp3958), order)
    dq[6N + 4] = Taylor1(constant_term(tmp3956) + constant_term(tmp3959), order)
    tmp3961 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp3962 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp3963 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp3964 = Taylor1(constant_term(tmp3962) + constant_term(tmp3963), order)
    dq[6N + 5] = Taylor1(constant_term(tmp3961) + constant_term(tmp3964), order)
    tmp3966 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp3967 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp3968 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp3969 = Taylor1(constant_term(tmp3967) + constant_term(tmp3968), order)
    dq[6N + 6] = Taylor1(constant_term(tmp3966) + constant_term(tmp3969), order)
    tmp3971 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp4078 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp3972 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp3971), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp3972)), order)
    tmp3974 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp4079 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp3975 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp3974), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp3975), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    tmp3980 = Taylor1(constant_term(newtonianCoeff[su, ea]) * constant_term(J2_t[su]), order)
    tmp3983 = Taylor1(constant_term(sin_ϕ[su, ea]) ^ float(constant_term(2)), order)
    tmp3984 = Taylor1(constant_term(3) * constant_term(tmp3983), order)
    tmp3985 = Taylor1(constant_term(one_t) - constant_term(tmp3984), order)
    tmp3987 = Taylor1(constant_term(tmp3985) / constant_term(2), order)
    w_LE = Taylor1(constant_term(tmp3980) * constant_term(tmp3987), order)
    tmp3990 = Taylor1(constant_term(0.5) * constant_term(v2[ea]), order)
    tmp3991 = Taylor1(constant_term(tmp3990) + constant_term(newtonianNb_Potential[ea]), order)
    α_TTmTDB = Taylor1(constant_term(tmp3991) + constant_term(w_LE), order)
    v4E = Taylor1(constant_term(v2[ea]) ^ float(constant_term(2)), order)
    ϕ_Earth_Newtonian_sq = Taylor1(constant_term(newtonianNb_Potential[ea]) ^ float(constant_term(2)), order)
    tmp3998 = Taylor1(constant_term(ϕ_Earth_Newtonian_sq) / constant_term(2), order)
    tmp4000 = Taylor1(constant_term(v4E) / constant_term(8), order)
    β_TTmTDB = Taylor1(constant_term(tmp3998) - constant_term(tmp4000), order)
    β_TTmTDB_i_1 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    for i = CartesianIndices(β_TTmTDB_i_1)
        β_TTmTDB_i_1[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4005 = Array{Taylor1{_S}}(undef, size(v2))
    for i = CartesianIndices(tmp4005)
        tmp4005[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4007 = Array{Taylor1{_S}}(undef, size(v2))
    for i = CartesianIndices(tmp4007)
        tmp4007[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4008 = Array{Taylor1{_S}}(undef, size(tmp4005))
    for i = CartesianIndices(tmp4008)
        tmp4008[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    β_TTmTDB_i_2 = Array{Taylor1{_S}}(undef, size(newtonianNb_Potential))
    for i = CartesianIndices(β_TTmTDB_i_2)
        β_TTmTDB_i_2[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4010 = Array{Taylor1{_S}}(undef, size(X))
    for i = CartesianIndices(tmp4010)
        tmp4010[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4011 = Array{Taylor1{_S}}(undef, size(Y))
    for i = CartesianIndices(tmp4011)
        tmp4011[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4012 = Array{Taylor1{_S}}(undef, size(tmp4010))
    for i = CartesianIndices(tmp4012)
        tmp4012[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4013 = Array{Taylor1{_S}}(undef, size(Z))
    for i = CartesianIndices(tmp4013)
        tmp4013[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4014 = Array{Taylor1{_S}}(undef, size(tmp4012))
    for i = CartesianIndices(tmp4014)
        tmp4014[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    β_TTmTDB_i_3 = Array{Taylor1{_S}}(undef, size(tmp4014))
    for i = CartesianIndices(β_TTmTDB_i_3)
        β_TTmTDB_i_3[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    β_TTmTDB_i_4 = Array{Taylor1{_S}}(undef, size(rij_dot_vi_div_rij_sq))
    for i = CartesianIndices(β_TTmTDB_i_4)
        β_TTmTDB_i_4[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4019 = Array{Taylor1{_S}}(undef, size(β_TTmTDB_i_1))
    for i = CartesianIndices(tmp4019)
        tmp4019[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4020 = Array{Taylor1{_S}}(undef, size(β_TTmTDB_i_3))
    for i = CartesianIndices(tmp4020)
        tmp4020[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    β_TTmTDB_i = Array{Taylor1{_S}}(undef, size(tmp4019))
    for i = CartesianIndices(β_TTmTDB_i)
        β_TTmTDB_i[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    tmp4022 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    for i = CartesianIndices(tmp4022)
        tmp4022[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    temp_β_TTmTDB = Array{Taylor1{_S}}(undef, size(tmp4022))
    for i = CartesianIndices(temp_β_TTmTDB)
        temp_β_TTmTDB[i] = Taylor1(zero(constant_term(q[1])), order)
    end
    for i = 1:N
        if i == ea
            continue
        else
            β_TTmTDB_i_1[i, ea] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, ea]), order)
            tmp4005[ea] = Taylor1(constant_term(1.5) * constant_term(v2[ea]), order)
            tmp4007[i] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
            tmp4008[ea] = Taylor1(constant_term(tmp4005[ea]) + constant_term(tmp4007[i]), order)
            β_TTmTDB_i_2[i] = Taylor1(constant_term(newtonianNb_Potential[i]) - constant_term(tmp4008[ea]), order)
            tmp4010[i, ea] = Taylor1(constant_term(dq[3 * (N + i) - 2]) * constant_term(X[i, ea]), order)
            tmp4011[i, ea] = Taylor1(constant_term(dq[3 * (N + i) - 1]) * constant_term(Y[i, ea]), order)
            tmp4012[i, ea] = Taylor1(constant_term(tmp4010[i, ea]) + constant_term(tmp4011[i, ea]), order)
            tmp4013[i, ea] = Taylor1(constant_term(dq[3 * (N + i)]) * constant_term(Z[i, ea]), order)
            tmp4014[i, ea] = Taylor1(constant_term(tmp4012[i, ea]) + constant_term(tmp4013[i, ea]), order)
            β_TTmTDB_i_3[i, ea] = Taylor1(constant_term(tmp4014[i, ea]) / constant_term(2), order)
            β_TTmTDB_i_4[i, ea] = Taylor1(constant_term(rij_dot_vi_div_rij_sq[i, ea]) / constant_term(2), order)
            tmp4019[i, ea] = Taylor1(constant_term(β_TTmTDB_i_1[i, ea]) + constant_term(β_TTmTDB_i_2[i]), order)
            tmp4020[i, ea] = Taylor1(constant_term(β_TTmTDB_i_3[i, ea]) + constant_term(β_TTmTDB_i_4[i, ea]), order)
            β_TTmTDB_i[i, ea] = Taylor1(constant_term(tmp4019[i, ea]) + constant_term(tmp4020[i, ea]), order)
            tmp4022[i, ea] = Taylor1(constant_term(newtonian1b_Potential[i, ea]) * constant_term(β_TTmTDB_i[i, ea]), order)
            temp_β_TTmTDB[i, ea] = Taylor1(constant_term(β_TTmTDB) + constant_term(tmp4022[i, ea]), order)
            β_TTmTDB = Taylor1(identity(constant_term(temp_β_TTmTDB[i, ea])), order)
        end
    end
    tmp4024 = Taylor1(constant_term(c_m2) * constant_term(α_TTmTDB), order)
    tmp4025 = Taylor1(constant_term(L_B) - constant_term(tmp4024), order)
    tmp4026 = Taylor1(constant_term(tmp4025) * constant_term(one_plus_L_B_minus_L_G), order)
    tmp4027 = Taylor1(constant_term(c_m4) * constant_term(β_TTmTDB), order)
    tmp4028 = Taylor1(constant_term(tmp4027) - constant_term(L_G), order)
    tmp4029 = Taylor1(constant_term(tmp4026) + constant_term(tmp4028), order)
    dq[6N + 13] = Taylor1(constant_term(daysec) * constant_term(tmp4029), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp2961, tmp2962, tmp2963, tmp2964, tmp2965, tmp2966, tmp2967, tmp2968, tmp2970, tmp2971, tmp2972, tmp2973, tmp2974, tmp2975, tmp2976, tmp2977, tmp2978, tmp2980, tmp2981, tmp2983, tmp2984, tmp2985, tmp2986, tmp2987, tmp2988, tmp2989, tmp2990, tmp2992, tmp2993, tmp2994, tmp2995, tmp2996, tmp2997, tmp2998, tmp2999, tmp3001, tmp3002, tmp3003, tmp3005, tmp3006, tmp3008, tmp3009, tmp3012, tmp3013, tmp3014, tmp3015, tmp3017, tmp3018, tmp3019, tmp3020, tmp3021, tmp3023, tmp3024, tmp3025, tmp3026, tmp3028, tmp3029, tmp3030, tmp3031, tmp3032, tmp3034, tmp3035, tmp3036, tmp3037, tmp3039, tmp3040, tmp3041, tmp3042, tmp3043, tmp3045, tmp3046, tmp3047, tmp3048, tmp3050, tmp3051, tmp3052, tmp3053, tmp3055, tmp3056, tmp3057, tmp3058, tmp3130, tmp3132, tmp3133, tmp3135, tmp3136, tmp3139, tmp3141, tmp3143, tmp3144, tmp3425, tmp3427, tmp3437, tmp3439, tmp3449, tmp3451, tmp3453, tmp3455, tmp3456, tmp3457, tmp3458, tmp3459, tmp3462, tmp3464, tmp3466, tmp3468, tmp3469, tmp3470, tmp3471, tmp3472, tmp3476, tmp3477, tmp3479, tmp3480, tmp3483, tmp3484, tmp3485, tmp3487, tmp3488, tmp3490, tmp3491, tmp3494, tmp3495, tmp3496, tmp3499, tmp3501, tmp3511, tmp3513, tmp3522, tmp3523, tmp3525, tmp3526, tmp3531, tmp3532, tmp3535, tmp3536, tmp3541, tmp3542, tmp3543, tmp3544, tmp3547, tmp3548, tmp3549, tmp3550, tmp3553, tmp3554, tmp3555, tmp3556, tmp3559, tmp3560, tmp3561, tmp3562, tmp3565, tmp3566, tmp3567, tmp3568, tmp3571, tmp3572, tmp3573, tmp3574, tmp3577, tmp3579, tmp3589, tmp3591, tmp3600, tmp3601, tmp3603, tmp3604, tmp3608, tmp3611, tmp3612, tmp3613, tmp3614, tmp3615, tmp3619, tmp3622, tmp3623, tmp3624, tmp3625, tmp3626, tmp3631, tmp3632, tmp3633, tmp3634, tmp3635, tmp3638, tmp3639, tmp3640, tmp3641, tmp3642, tmp3644, tmp3645, tmp3648, tmp3649, tmp3650, tmp3651, tmp3652, tmp3655, tmp3656, tmp3657, tmp3658, tmp3659, tmp3661, tmp3662, tmp3664, tmp3670, tmp3671, tmp3672, tmp3673, tmp3674, tmp3675, tmp3677, tmp3678, tmp3679, tmp3680, tmp3681, tmp3682, tmp3684, tmp3685, tmp3686, tmp3687, tmp3688, tmp3689, tmp3691, tmp3692, tmp3693, tmp3694, tmp3696, tmp3697, tmp3698, tmp3699, tmp3701, tmp3702, tmp3703, tmp3704, tmp3712, tmp3713, tmp3714, tmp3715, tmp3717, tmp3718, tmp3719, tmp3720, tmp3722, tmp3723, tmp3724, tmp3725, tmp3727, tmp3728, tmp3730, tmp3731, tmp3733, tmp3734, tmp3736, tmp3737, tmp3738, tmp3739, tmp3741, tmp3742, tmp3743, tmp3744, tmp3746, tmp3747, tmp3748, tmp3749, tmp3754, tmp3755, tmp3756, tmp3757, tmp3759, tmp3760, tmp3761, tmp3762, tmp3764, tmp3765, tmp3766, tmp3767, tmp3769, tmp3770, tmp3771, tmp3772, tmp3774, tmp3775, tmp3776, tmp3777, tmp3779, tmp3780, tmp3781, tmp3782, tmp3784, tmp3785, tmp3786, tmp3787, tmp3789, tmp3790, tmp3791, tmp3792, tmp3794, tmp3795, tmp3796, tmp3797, tmp3799, tmp3800, tmp3801, tmp3802, tmp3804, tmp3805, tmp3806, tmp3807, tmp3809, tmp3810, tmp3811, tmp3812, tmp3814, tmp3815, tmp3817, tmp3818, tmp3820, tmp3821, tmp3823, tmp3824, tmp3826, tmp3827, tmp3829, tmp3830, tmp3832, tmp3833, tmp3835, tmp3836, tmp3838, tmp3839, tmp3841, tmp3842, tmp3844, tmp3845, tmp3847, tmp3848, tmp3852, tmp3853, tmp3858, tmp3860, tmp3861, tmp3862, tmp3863, tmp3865, tmp3866, tmp3868, tmp3869, tmp3870, tmp3871, tmp3873, tmp3874, tmp3876, tmp3877, tmp3878, tmp3879, tmp3881, tmp3882, tmp3884, tmp3885, tmp3886, tmp3887, tmp3889, tmp3890, tmp3891, tmp3892, tmp3894, tmp3895, tmp3896, tmp3897, tmp3899, tmp3900, tmp3901, tmp3902, tmp3904, tmp3905, tmp3906, tmp3907, tmp3909, tmp3911, tmp3912, tmp3913, tmp3914, tmp3916, tmp3917, tmp3918, tmp3919, tmp3921, tmp3922, tmp3923, tmp3924, tmp3929, tmp3930, tmp3932, tmp3933, tmp3935, tmp3936, tmp3941, tmp3942, tmp3943, tmp3944, tmp3945, tmp3946, tmp3948, tmp3949, tmp3950, tmp3951, tmp3953, tmp3954, tmp3956, tmp3957, tmp3958, tmp3959, tmp3961, tmp3962, tmp3963, tmp3964, tmp3966, tmp3967, tmp3968, tmp3969, tmp3971, tmp3972, tmp3974, tmp3975, tmp3980, tmp3983, tmp3984, tmp3985, tmp3987, tmp3990, tmp3991, tmp3998, tmp4000, tmp4024, tmp4025, tmp4026, tmp4027, tmp4028, tmp4029, ϕ_m, θ_m, ψ_m, tmp4031, tmp4032, tmp4033, tmp4034, tmp4035, tmp4036, tmp4037, tmp4038, tmp4039, tmp4040, tmp4041, tmp4042, tmp4043, tmp4044, tmp4045, tmp4046, tmp4047, tmp4048, tmp4049, tmp4050, tmp4051, tmp4052, tmp4053, tmp4054, tmp4055, tmp4056, tmp4057, tmp4058, tmp4059, ϕ_c, tmp4060, tmp4061, tmp4062, tmp4063, tmp4064, tmp4065, tmp4066, tmp4067, tmp4068, tmp4069, tmp4070, tmp4071, ω_c_CE_1, ω_c_CE_2, ω_c_CE_3, J2M_t, C22M_t, C21M_t, S21M_t, S22M_t, x0s_M, y0s_M, z0s_M, ρ0s2_M, ρ0s_M, z0s2_M, r0s2_M, r0s_M, r0s5_M, x0s_S, y0s_S, z0s_S, ρ0s2_S, ρ0s_S, z0s2_S, r0s2_S, r0s_S, r0s5_S, coeff0_M, coeff0_S, k_20E_div_r0s5_M, k_20E_div_r0s5_S, a_tid_0_M_x, a_tid_0_M_y, a_tid_0_M_z, a_tid_0_S_x, a_tid_0_S_y, a_tid_0_S_z, x1s_M, y1s_M, z1s_M, ρ1s2_M, ρ1s_M, z1s2_M, r1s2_M, r1s_M, r1s5_M, x1s_S, y1s_S, z1s_S, ρ1s2_S, ρ1s_S, z1s2_S, r1s2_S, r1s_S, r1s5_S, coeff1_1_M, coeff1_1_S, coeff2_1_M, coeff2_1_S, coeff3_1_M, coeff3_1_S, k_21E_div_r1s5_M, k_21E_div_r1s5_S, a_tid_1_M_x, a_tid_1_M_y, a_tid_1_M_z, a_tid_1_S_x, a_tid_1_S_y, a_tid_1_S_z, x2s_M, y2s_M, z2s_M, ρ2s2_M, ρ2s_M, z2s2_M, r2s2_M, r2s_M, r2s5_M, x2s_S, y2s_S, z2s_S, ρ2s2_S, ρ2s_S, z2s2_S, r2s2_S, r2s_S, r2s5_S, coeff1_2_M, coeff1_2_S, coeff3_2_M, coeff3_2_S, k_22E_div_r2s5_M, k_22E_div_r2s5_S, a_tid_2_M_x, a_tid_2_M_y, a_tid_2_M_z, a_tid_2_S_x, a_tid_2_S_y, a_tid_2_S_z, RE_div_r_p5, aux_tidacc, a_tidal_coeff_M, a_tidal_coeff_S, a_tidal_tod_x, a_tidal_tod_y, a_tidal_tod_z, a_tidal_x, a_tidal_y, a_tidal_z, accX_mo_tides, accY_mo_tides, accZ_mo_tides, Iω_x, Iω_y, Iω_z, ωxIω_x, ωxIω_y, ωxIω_z, dIω_x, dIω_y, dIω_z, er_EM_I_1, er_EM_I_2, er_EM_I_3, p_E_I_1, p_E_I_2, p_E_I_3, er_EM_1, er_EM_2, er_EM_3, p_E_1, p_E_2, p_E_3, I_er_EM_1, I_er_EM_2, I_er_EM_3, I_p_E_1, I_p_E_2, I_p_E_3, er_EM_cross_I_er_EM_1, er_EM_cross_I_er_EM_2, er_EM_cross_I_er_EM_3, er_EM_cross_I_p_E_1, er_EM_cross_I_p_E_2, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_1, p_E_cross_I_er_EM_2, p_E_cross_I_er_EM_3, p_E_cross_I_p_E_1, p_E_cross_I_p_E_2, p_E_cross_I_p_E_3, one_minus_7sin2ϕEM, two_sinϕEM, N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_1, N_MfigM_figE_2, N_MfigM_figE_3, N_1_LMF, N_2_LMF, N_3_LMF, N_cmb_1, N_cmb_2, N_cmb_3, I_dω_1, I_dω_2, I_dω_3, Ic_ωc_1, Ic_ωc_2, Ic_ωc_3, m_ωm_x_Icωc_1, m_ωm_x_Icωc_2, m_ωm_x_Icωc_3, Ic_dωc_1, Ic_dωc_2, Ic_dωc_3, tmp4072, tmp4073, tmp4074, tmp4075, tmp4076, tmp4077, tmp4078, tmp4079, w_LE, α_TTmTDB, v4E, ϕ_Earth_Newtonian_sq, β_TTmTDB], [newtonX, newtonY, newtonZ, newtonianNb_Potential, v2, pntempX, pntempY, pntempZ, postNewtonX, postNewtonY, postNewtonZ, accX, accY, accZ, N_MfigM_pmA_x, N_MfigM_pmA_y, N_MfigM_pmA_z, temp_N_M_x, temp_N_M_y, temp_N_M_z, N_MfigM, J2_t, tmp3067, tmp3069, tmp3072, tmp3074, tmp3077, tmp3079, tmp3123, tmp3125, tmp3126, tmp3128, tmp4005, tmp4007, tmp4008, β_TTmTDB_i_2], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, _2v2, vi_dot_vj, rij_dot_vi_div_rij_sq, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, X_bf_1, Y_bf_1, Z_bf_1, X_bf_2, Y_bf_2, Z_bf_2, X_bf_3, Y_bf_3, Z_bf_3, X_bf, Y_bf, Z_bf, F_JCS_x, F_JCS_y, F_JCS_z, temp_accX_j, temp_accY_j, temp_accZ_j, temp_accX_i, temp_accY_i, temp_accZ_i, sin_ϕ, cos_ϕ, sin_λ, cos_λ, r_xy, r_p4, F_CS_ξ_36, F_CS_η_36, F_CS_ζ_36, F_J_ξ_36, F_J_ζ_36, F_J_ξ, F_J_ζ, F_CS_ξ, F_CS_η, F_CS_ζ, F_JCS_ξ, F_JCS_η, F_JCS_ζ, mantlef2coref, pn2x, pn2y, pn2z, tmp3087, tmp3090, tmp3092, tmp3093, tmp3095, tmp3103, tmp3104, tmp3115, temp_001, tmp3117, temp_002, tmp3119, temp_003, temp_004, tmp3156, tmp3158, tmp3160, tmp3164, tmp3166, tmp3167, tmp3273, tmp3274, tmp3277, tmp3278, tmp3284, tmp3287, tmp3349, tmp3351, tmp3353, tmp3355, tmp3357, tmp3359, tmp3361, tmp3362, tmp3363, tmp3365, tmp3366, tmp3367, tmp3369, tmp3370, tmp3371, tmp3383, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp3389, Rij_dot_Vi, tmp3392, tmp3395, pn1t2_7, tmp3402, tmp3403, tmp3404, tmp3412, termpnx, sumpnx, tmp3415, termpny, sumpny, tmp3418, termpnz, sumpnz, β_TTmTDB_i_1, tmp4010, tmp4011, tmp4012, tmp4013, tmp4014, β_TTmTDB_i_3, β_TTmTDB_i_4, tmp4019, tmp4020, β_TTmTDB_i, tmp4022, temp_β_TTmTDB], [P_n, dP_n, temp_fjξ, temp_fjζ, temp_rn, sin_mλ, cos_mλ, RotM, tmp3172, tmp3173, tmp3174, tmp3176, tmp3177, tmp3182, tmp3183, tmp3185, tmp3186, tmp3187, tmp3189, tmp3190, tmp3191, tmp3193, tmp3194, tmp3195, tmp3196, tmp3199, tmp3200, tmp3202, tmp3203, tmp3222, tmp3223, tmp3224, tmp3227, tmp3228, tmp3229, tmp3234, tmp3235, tmp3236, tmp3239, tmp3240, tmp3241, tmp3245, tmp3246, tmp3247, tmp3249, tmp3250, tmp3251], [temp_CS_ξ, temp_CS_η, temp_CS_ζ, Cnm_cosmλ, Cnm_sinmλ, Snm_cosmλ, Snm_sinmλ, secϕ_P_nm, P_nm, cosϕ_dP_nm, Rb2p, Gc2p, tmp3205, tmp3208, tmp3210, tmp3212, tmp3213, tmp3214, tmp3217, tmp3218, tmp3219, tmp3221, tmp3225, tmp3226, tmp3230, tmp3231, tmp3233, tmp3237, tmp3238, tmp3242, tmp3243, tmp3248, tmp3252, tmp3253, tmp3259, tmp3260, tmp3261, tmp3262, tmp3264, tmp3265, tmp3266, tmp3267, tmp3269, tmp3270, tmp3271, tmp3289, tmp3290, tmp3291, tmp3292, tmp3294, tmp3295, tmp3296, tmp3297, tmp3299, tmp3300, tmp3301, tmp3302, tmp3304, tmp3305, tmp3306, tmp3307, tmp3309, tmp3310, tmp3311, tmp3312, tmp3314, tmp3315, tmp3316, tmp3317, tmp3319, tmp3320, tmp3321, tmp3322, tmp3324, tmp3325, tmp3326, tmp3327, tmp3329, tmp3330, tmp3331, tmp3332, tmp3334, tmp3335, tmp3336, tmp3337, tmp3339, tmp3340, tmp3341, tmp3342, tmp3344, tmp3345, tmp3346, tmp3347])
end
# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: DE430!
function TaylorIntegration.jetcoeffs!(::Val{DE430!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp2961 = __ralloc.v0[1]
    tmp2962 = __ralloc.v0[2]
    tmp2963 = __ralloc.v0[3]
    tmp2964 = __ralloc.v0[4]
    tmp2965 = __ralloc.v0[5]
    tmp2966 = __ralloc.v0[6]
    tmp2967 = __ralloc.v0[7]
    tmp2968 = __ralloc.v0[8]
    tmp2970 = __ralloc.v0[9]
    tmp2971 = __ralloc.v0[10]
    tmp2972 = __ralloc.v0[11]
    tmp2973 = __ralloc.v0[12]
    tmp2974 = __ralloc.v0[13]
    tmp2975 = __ralloc.v0[14]
    tmp2976 = __ralloc.v0[15]
    tmp2977 = __ralloc.v0[16]
    tmp2978 = __ralloc.v0[17]
    tmp2980 = __ralloc.v0[18]
    tmp2981 = __ralloc.v0[19]
    tmp2983 = __ralloc.v0[20]
    tmp2984 = __ralloc.v0[21]
    tmp2985 = __ralloc.v0[22]
    tmp2986 = __ralloc.v0[23]
    tmp2987 = __ralloc.v0[24]
    tmp2988 = __ralloc.v0[25]
    tmp2989 = __ralloc.v0[26]
    tmp2990 = __ralloc.v0[27]
    tmp2992 = __ralloc.v0[28]
    tmp2993 = __ralloc.v0[29]
    tmp2994 = __ralloc.v0[30]
    tmp2995 = __ralloc.v0[31]
    tmp2996 = __ralloc.v0[32]
    tmp2997 = __ralloc.v0[33]
    tmp2998 = __ralloc.v0[34]
    tmp2999 = __ralloc.v0[35]
    tmp3001 = __ralloc.v0[36]
    tmp3002 = __ralloc.v0[37]
    tmp3003 = __ralloc.v0[38]
    tmp3005 = __ralloc.v0[39]
    tmp3006 = __ralloc.v0[40]
    tmp3008 = __ralloc.v0[41]
    tmp3009 = __ralloc.v0[42]
    tmp3012 = __ralloc.v0[43]
    tmp3013 = __ralloc.v0[44]
    tmp3014 = __ralloc.v0[45]
    tmp3015 = __ralloc.v0[46]
    tmp3017 = __ralloc.v0[47]
    tmp3018 = __ralloc.v0[48]
    tmp3019 = __ralloc.v0[49]
    tmp3020 = __ralloc.v0[50]
    tmp3021 = __ralloc.v0[51]
    tmp3023 = __ralloc.v0[52]
    tmp3024 = __ralloc.v0[53]
    tmp3025 = __ralloc.v0[54]
    tmp3026 = __ralloc.v0[55]
    tmp3028 = __ralloc.v0[56]
    tmp3029 = __ralloc.v0[57]
    tmp3030 = __ralloc.v0[58]
    tmp3031 = __ralloc.v0[59]
    tmp3032 = __ralloc.v0[60]
    tmp3034 = __ralloc.v0[61]
    tmp3035 = __ralloc.v0[62]
    tmp3036 = __ralloc.v0[63]
    tmp3037 = __ralloc.v0[64]
    tmp3039 = __ralloc.v0[65]
    tmp3040 = __ralloc.v0[66]
    tmp3041 = __ralloc.v0[67]
    tmp3042 = __ralloc.v0[68]
    tmp3043 = __ralloc.v0[69]
    tmp3045 = __ralloc.v0[70]
    tmp3046 = __ralloc.v0[71]
    tmp3047 = __ralloc.v0[72]
    tmp3048 = __ralloc.v0[73]
    tmp3050 = __ralloc.v0[74]
    tmp3051 = __ralloc.v0[75]
    tmp3052 = __ralloc.v0[76]
    tmp3053 = __ralloc.v0[77]
    tmp3055 = __ralloc.v0[78]
    tmp3056 = __ralloc.v0[79]
    tmp3057 = __ralloc.v0[80]
    tmp3058 = __ralloc.v0[81]
    tmp3130 = __ralloc.v0[82]
    tmp3132 = __ralloc.v0[83]
    tmp3133 = __ralloc.v0[84]
    tmp3135 = __ralloc.v0[85]
    tmp3136 = __ralloc.v0[86]
    tmp3139 = __ralloc.v0[87]
    tmp3141 = __ralloc.v0[88]
    tmp3143 = __ralloc.v0[89]
    tmp3144 = __ralloc.v0[90]
    tmp3425 = __ralloc.v0[91]
    tmp3427 = __ralloc.v0[92]
    tmp3437 = __ralloc.v0[93]
    tmp3439 = __ralloc.v0[94]
    tmp3449 = __ralloc.v0[95]
    tmp3451 = __ralloc.v0[96]
    tmp3453 = __ralloc.v0[97]
    tmp3455 = __ralloc.v0[98]
    tmp3456 = __ralloc.v0[99]
    tmp3457 = __ralloc.v0[100]
    tmp3458 = __ralloc.v0[101]
    tmp3459 = __ralloc.v0[102]
    tmp3462 = __ralloc.v0[103]
    tmp3464 = __ralloc.v0[104]
    tmp3466 = __ralloc.v0[105]
    tmp3468 = __ralloc.v0[106]
    tmp3469 = __ralloc.v0[107]
    tmp3470 = __ralloc.v0[108]
    tmp3471 = __ralloc.v0[109]
    tmp3472 = __ralloc.v0[110]
    tmp3476 = __ralloc.v0[111]
    tmp3477 = __ralloc.v0[112]
    tmp3479 = __ralloc.v0[113]
    tmp3480 = __ralloc.v0[114]
    tmp3483 = __ralloc.v0[115]
    tmp3484 = __ralloc.v0[116]
    tmp3485 = __ralloc.v0[117]
    tmp3487 = __ralloc.v0[118]
    tmp3488 = __ralloc.v0[119]
    tmp3490 = __ralloc.v0[120]
    tmp3491 = __ralloc.v0[121]
    tmp3494 = __ralloc.v0[122]
    tmp3495 = __ralloc.v0[123]
    tmp3496 = __ralloc.v0[124]
    tmp3499 = __ralloc.v0[125]
    tmp3501 = __ralloc.v0[126]
    tmp3511 = __ralloc.v0[127]
    tmp3513 = __ralloc.v0[128]
    tmp3522 = __ralloc.v0[129]
    tmp3523 = __ralloc.v0[130]
    tmp3525 = __ralloc.v0[131]
    tmp3526 = __ralloc.v0[132]
    tmp3531 = __ralloc.v0[133]
    tmp3532 = __ralloc.v0[134]
    tmp3535 = __ralloc.v0[135]
    tmp3536 = __ralloc.v0[136]
    tmp3541 = __ralloc.v0[137]
    tmp3542 = __ralloc.v0[138]
    tmp3543 = __ralloc.v0[139]
    tmp3544 = __ralloc.v0[140]
    tmp3547 = __ralloc.v0[141]
    tmp3548 = __ralloc.v0[142]
    tmp3549 = __ralloc.v0[143]
    tmp3550 = __ralloc.v0[144]
    tmp3553 = __ralloc.v0[145]
    tmp3554 = __ralloc.v0[146]
    tmp3555 = __ralloc.v0[147]
    tmp3556 = __ralloc.v0[148]
    tmp3559 = __ralloc.v0[149]
    tmp3560 = __ralloc.v0[150]
    tmp3561 = __ralloc.v0[151]
    tmp3562 = __ralloc.v0[152]
    tmp3565 = __ralloc.v0[153]
    tmp3566 = __ralloc.v0[154]
    tmp3567 = __ralloc.v0[155]
    tmp3568 = __ralloc.v0[156]
    tmp3571 = __ralloc.v0[157]
    tmp3572 = __ralloc.v0[158]
    tmp3573 = __ralloc.v0[159]
    tmp3574 = __ralloc.v0[160]
    tmp3577 = __ralloc.v0[161]
    tmp3579 = __ralloc.v0[162]
    tmp3589 = __ralloc.v0[163]
    tmp3591 = __ralloc.v0[164]
    tmp3600 = __ralloc.v0[165]
    tmp3601 = __ralloc.v0[166]
    tmp3603 = __ralloc.v0[167]
    tmp3604 = __ralloc.v0[168]
    tmp3608 = __ralloc.v0[169]
    tmp3611 = __ralloc.v0[170]
    tmp3612 = __ralloc.v0[171]
    tmp3613 = __ralloc.v0[172]
    tmp3614 = __ralloc.v0[173]
    tmp3615 = __ralloc.v0[174]
    tmp3619 = __ralloc.v0[175]
    tmp3622 = __ralloc.v0[176]
    tmp3623 = __ralloc.v0[177]
    tmp3624 = __ralloc.v0[178]
    tmp3625 = __ralloc.v0[179]
    tmp3626 = __ralloc.v0[180]
    tmp3631 = __ralloc.v0[181]
    tmp3632 = __ralloc.v0[182]
    tmp3633 = __ralloc.v0[183]
    tmp3634 = __ralloc.v0[184]
    tmp3635 = __ralloc.v0[185]
    tmp3638 = __ralloc.v0[186]
    tmp3639 = __ralloc.v0[187]
    tmp3640 = __ralloc.v0[188]
    tmp3641 = __ralloc.v0[189]
    tmp3642 = __ralloc.v0[190]
    tmp3644 = __ralloc.v0[191]
    tmp3645 = __ralloc.v0[192]
    tmp3648 = __ralloc.v0[193]
    tmp3649 = __ralloc.v0[194]
    tmp3650 = __ralloc.v0[195]
    tmp3651 = __ralloc.v0[196]
    tmp3652 = __ralloc.v0[197]
    tmp3655 = __ralloc.v0[198]
    tmp3656 = __ralloc.v0[199]
    tmp3657 = __ralloc.v0[200]
    tmp3658 = __ralloc.v0[201]
    tmp3659 = __ralloc.v0[202]
    tmp3661 = __ralloc.v0[203]
    tmp3662 = __ralloc.v0[204]
    tmp3664 = __ralloc.v0[205]
    tmp3670 = __ralloc.v0[206]
    tmp3671 = __ralloc.v0[207]
    tmp3672 = __ralloc.v0[208]
    tmp3673 = __ralloc.v0[209]
    tmp3674 = __ralloc.v0[210]
    tmp3675 = __ralloc.v0[211]
    tmp3677 = __ralloc.v0[212]
    tmp3678 = __ralloc.v0[213]
    tmp3679 = __ralloc.v0[214]
    tmp3680 = __ralloc.v0[215]
    tmp3681 = __ralloc.v0[216]
    tmp3682 = __ralloc.v0[217]
    tmp3684 = __ralloc.v0[218]
    tmp3685 = __ralloc.v0[219]
    tmp3686 = __ralloc.v0[220]
    tmp3687 = __ralloc.v0[221]
    tmp3688 = __ralloc.v0[222]
    tmp3689 = __ralloc.v0[223]
    tmp3691 = __ralloc.v0[224]
    tmp3692 = __ralloc.v0[225]
    tmp3693 = __ralloc.v0[226]
    tmp3694 = __ralloc.v0[227]
    tmp3696 = __ralloc.v0[228]
    tmp3697 = __ralloc.v0[229]
    tmp3698 = __ralloc.v0[230]
    tmp3699 = __ralloc.v0[231]
    tmp3701 = __ralloc.v0[232]
    tmp3702 = __ralloc.v0[233]
    tmp3703 = __ralloc.v0[234]
    tmp3704 = __ralloc.v0[235]
    tmp3712 = __ralloc.v0[236]
    tmp3713 = __ralloc.v0[237]
    tmp3714 = __ralloc.v0[238]
    tmp3715 = __ralloc.v0[239]
    tmp3717 = __ralloc.v0[240]
    tmp3718 = __ralloc.v0[241]
    tmp3719 = __ralloc.v0[242]
    tmp3720 = __ralloc.v0[243]
    tmp3722 = __ralloc.v0[244]
    tmp3723 = __ralloc.v0[245]
    tmp3724 = __ralloc.v0[246]
    tmp3725 = __ralloc.v0[247]
    tmp3727 = __ralloc.v0[248]
    tmp3728 = __ralloc.v0[249]
    tmp3730 = __ralloc.v0[250]
    tmp3731 = __ralloc.v0[251]
    tmp3733 = __ralloc.v0[252]
    tmp3734 = __ralloc.v0[253]
    tmp3736 = __ralloc.v0[254]
    tmp3737 = __ralloc.v0[255]
    tmp3738 = __ralloc.v0[256]
    tmp3739 = __ralloc.v0[257]
    tmp3741 = __ralloc.v0[258]
    tmp3742 = __ralloc.v0[259]
    tmp3743 = __ralloc.v0[260]
    tmp3744 = __ralloc.v0[261]
    tmp3746 = __ralloc.v0[262]
    tmp3747 = __ralloc.v0[263]
    tmp3748 = __ralloc.v0[264]
    tmp3749 = __ralloc.v0[265]
    tmp3754 = __ralloc.v0[266]
    tmp3755 = __ralloc.v0[267]
    tmp3756 = __ralloc.v0[268]
    tmp3757 = __ralloc.v0[269]
    tmp3759 = __ralloc.v0[270]
    tmp3760 = __ralloc.v0[271]
    tmp3761 = __ralloc.v0[272]
    tmp3762 = __ralloc.v0[273]
    tmp3764 = __ralloc.v0[274]
    tmp3765 = __ralloc.v0[275]
    tmp3766 = __ralloc.v0[276]
    tmp3767 = __ralloc.v0[277]
    tmp3769 = __ralloc.v0[278]
    tmp3770 = __ralloc.v0[279]
    tmp3771 = __ralloc.v0[280]
    tmp3772 = __ralloc.v0[281]
    tmp3774 = __ralloc.v0[282]
    tmp3775 = __ralloc.v0[283]
    tmp3776 = __ralloc.v0[284]
    tmp3777 = __ralloc.v0[285]
    tmp3779 = __ralloc.v0[286]
    tmp3780 = __ralloc.v0[287]
    tmp3781 = __ralloc.v0[288]
    tmp3782 = __ralloc.v0[289]
    tmp3784 = __ralloc.v0[290]
    tmp3785 = __ralloc.v0[291]
    tmp3786 = __ralloc.v0[292]
    tmp3787 = __ralloc.v0[293]
    tmp3789 = __ralloc.v0[294]
    tmp3790 = __ralloc.v0[295]
    tmp3791 = __ralloc.v0[296]
    tmp3792 = __ralloc.v0[297]
    tmp3794 = __ralloc.v0[298]
    tmp3795 = __ralloc.v0[299]
    tmp3796 = __ralloc.v0[300]
    tmp3797 = __ralloc.v0[301]
    tmp3799 = __ralloc.v0[302]
    tmp3800 = __ralloc.v0[303]
    tmp3801 = __ralloc.v0[304]
    tmp3802 = __ralloc.v0[305]
    tmp3804 = __ralloc.v0[306]
    tmp3805 = __ralloc.v0[307]
    tmp3806 = __ralloc.v0[308]
    tmp3807 = __ralloc.v0[309]
    tmp3809 = __ralloc.v0[310]
    tmp3810 = __ralloc.v0[311]
    tmp3811 = __ralloc.v0[312]
    tmp3812 = __ralloc.v0[313]
    tmp3814 = __ralloc.v0[314]
    tmp3815 = __ralloc.v0[315]
    tmp3817 = __ralloc.v0[316]
    tmp3818 = __ralloc.v0[317]
    tmp3820 = __ralloc.v0[318]
    tmp3821 = __ralloc.v0[319]
    tmp3823 = __ralloc.v0[320]
    tmp3824 = __ralloc.v0[321]
    tmp3826 = __ralloc.v0[322]
    tmp3827 = __ralloc.v0[323]
    tmp3829 = __ralloc.v0[324]
    tmp3830 = __ralloc.v0[325]
    tmp3832 = __ralloc.v0[326]
    tmp3833 = __ralloc.v0[327]
    tmp3835 = __ralloc.v0[328]
    tmp3836 = __ralloc.v0[329]
    tmp3838 = __ralloc.v0[330]
    tmp3839 = __ralloc.v0[331]
    tmp3841 = __ralloc.v0[332]
    tmp3842 = __ralloc.v0[333]
    tmp3844 = __ralloc.v0[334]
    tmp3845 = __ralloc.v0[335]
    tmp3847 = __ralloc.v0[336]
    tmp3848 = __ralloc.v0[337]
    tmp3852 = __ralloc.v0[338]
    tmp3853 = __ralloc.v0[339]
    tmp3858 = __ralloc.v0[340]
    tmp3860 = __ralloc.v0[341]
    tmp3861 = __ralloc.v0[342]
    tmp3862 = __ralloc.v0[343]
    tmp3863 = __ralloc.v0[344]
    tmp3865 = __ralloc.v0[345]
    tmp3866 = __ralloc.v0[346]
    tmp3868 = __ralloc.v0[347]
    tmp3869 = __ralloc.v0[348]
    tmp3870 = __ralloc.v0[349]
    tmp3871 = __ralloc.v0[350]
    tmp3873 = __ralloc.v0[351]
    tmp3874 = __ralloc.v0[352]
    tmp3876 = __ralloc.v0[353]
    tmp3877 = __ralloc.v0[354]
    tmp3878 = __ralloc.v0[355]
    tmp3879 = __ralloc.v0[356]
    tmp3881 = __ralloc.v0[357]
    tmp3882 = __ralloc.v0[358]
    tmp3884 = __ralloc.v0[359]
    tmp3885 = __ralloc.v0[360]
    tmp3886 = __ralloc.v0[361]
    tmp3887 = __ralloc.v0[362]
    tmp3889 = __ralloc.v0[363]
    tmp3890 = __ralloc.v0[364]
    tmp3891 = __ralloc.v0[365]
    tmp3892 = __ralloc.v0[366]
    tmp3894 = __ralloc.v0[367]
    tmp3895 = __ralloc.v0[368]
    tmp3896 = __ralloc.v0[369]
    tmp3897 = __ralloc.v0[370]
    tmp3899 = __ralloc.v0[371]
    tmp3900 = __ralloc.v0[372]
    tmp3901 = __ralloc.v0[373]
    tmp3902 = __ralloc.v0[374]
    tmp3904 = __ralloc.v0[375]
    tmp3905 = __ralloc.v0[376]
    tmp3906 = __ralloc.v0[377]
    tmp3907 = __ralloc.v0[378]
    tmp3909 = __ralloc.v0[379]
    tmp3911 = __ralloc.v0[380]
    tmp3912 = __ralloc.v0[381]
    tmp3913 = __ralloc.v0[382]
    tmp3914 = __ralloc.v0[383]
    tmp3916 = __ralloc.v0[384]
    tmp3917 = __ralloc.v0[385]
    tmp3918 = __ralloc.v0[386]
    tmp3919 = __ralloc.v0[387]
    tmp3921 = __ralloc.v0[388]
    tmp3922 = __ralloc.v0[389]
    tmp3923 = __ralloc.v0[390]
    tmp3924 = __ralloc.v0[391]
    tmp3929 = __ralloc.v0[392]
    tmp3930 = __ralloc.v0[393]
    tmp3932 = __ralloc.v0[394]
    tmp3933 = __ralloc.v0[395]
    tmp3935 = __ralloc.v0[396]
    tmp3936 = __ralloc.v0[397]
    tmp3941 = __ralloc.v0[398]
    tmp3942 = __ralloc.v0[399]
    tmp3943 = __ralloc.v0[400]
    tmp3944 = __ralloc.v0[401]
    tmp3945 = __ralloc.v0[402]
    tmp3946 = __ralloc.v0[403]
    tmp3948 = __ralloc.v0[404]
    tmp3949 = __ralloc.v0[405]
    tmp3950 = __ralloc.v0[406]
    tmp3951 = __ralloc.v0[407]
    tmp3953 = __ralloc.v0[408]
    tmp3954 = __ralloc.v0[409]
    tmp3956 = __ralloc.v0[410]
    tmp3957 = __ralloc.v0[411]
    tmp3958 = __ralloc.v0[412]
    tmp3959 = __ralloc.v0[413]
    tmp3961 = __ralloc.v0[414]
    tmp3962 = __ralloc.v0[415]
    tmp3963 = __ralloc.v0[416]
    tmp3964 = __ralloc.v0[417]
    tmp3966 = __ralloc.v0[418]
    tmp3967 = __ralloc.v0[419]
    tmp3968 = __ralloc.v0[420]
    tmp3969 = __ralloc.v0[421]
    tmp3971 = __ralloc.v0[422]
    tmp3972 = __ralloc.v0[423]
    tmp3974 = __ralloc.v0[424]
    tmp3975 = __ralloc.v0[425]
    tmp3980 = __ralloc.v0[426]
    tmp3983 = __ralloc.v0[427]
    tmp3984 = __ralloc.v0[428]
    tmp3985 = __ralloc.v0[429]
    tmp3987 = __ralloc.v0[430]
    tmp3990 = __ralloc.v0[431]
    tmp3991 = __ralloc.v0[432]
    tmp3998 = __ralloc.v0[433]
    tmp4000 = __ralloc.v0[434]
    tmp4024 = __ralloc.v0[435]
    tmp4025 = __ralloc.v0[436]
    tmp4026 = __ralloc.v0[437]
    tmp4027 = __ralloc.v0[438]
    tmp4028 = __ralloc.v0[439]
    tmp4029 = __ralloc.v0[440]
    ϕ_m = __ralloc.v0[441]
    θ_m = __ralloc.v0[442]
    ψ_m = __ralloc.v0[443]
    tmp4031 = __ralloc.v0[444]
    tmp4032 = __ralloc.v0[445]
    tmp4033 = __ralloc.v0[446]
    tmp4034 = __ralloc.v0[447]
    tmp4035 = __ralloc.v0[448]
    tmp4036 = __ralloc.v0[449]
    tmp4037 = __ralloc.v0[450]
    tmp4038 = __ralloc.v0[451]
    tmp4039 = __ralloc.v0[452]
    tmp4040 = __ralloc.v0[453]
    tmp4041 = __ralloc.v0[454]
    tmp4042 = __ralloc.v0[455]
    tmp4043 = __ralloc.v0[456]
    tmp4044 = __ralloc.v0[457]
    tmp4045 = __ralloc.v0[458]
    tmp4046 = __ralloc.v0[459]
    tmp4047 = __ralloc.v0[460]
    tmp4048 = __ralloc.v0[461]
    tmp4049 = __ralloc.v0[462]
    tmp4050 = __ralloc.v0[463]
    tmp4051 = __ralloc.v0[464]
    tmp4052 = __ralloc.v0[465]
    tmp4053 = __ralloc.v0[466]
    tmp4054 = __ralloc.v0[467]
    tmp4055 = __ralloc.v0[468]
    tmp4056 = __ralloc.v0[469]
    tmp4057 = __ralloc.v0[470]
    tmp4058 = __ralloc.v0[471]
    tmp4059 = __ralloc.v0[472]
    ϕ_c = __ralloc.v0[473]
    tmp4060 = __ralloc.v0[474]
    tmp4061 = __ralloc.v0[475]
    tmp4062 = __ralloc.v0[476]
    tmp4063 = __ralloc.v0[477]
    tmp4064 = __ralloc.v0[478]
    tmp4065 = __ralloc.v0[479]
    tmp4066 = __ralloc.v0[480]
    tmp4067 = __ralloc.v0[481]
    tmp4068 = __ralloc.v0[482]
    tmp4069 = __ralloc.v0[483]
    tmp4070 = __ralloc.v0[484]
    tmp4071 = __ralloc.v0[485]
    ω_c_CE_1 = __ralloc.v0[486]
    ω_c_CE_2 = __ralloc.v0[487]
    ω_c_CE_3 = __ralloc.v0[488]
    J2M_t = __ralloc.v0[489]
    C22M_t = __ralloc.v0[490]
    C21M_t = __ralloc.v0[491]
    S21M_t = __ralloc.v0[492]
    S22M_t = __ralloc.v0[493]
    x0s_M = __ralloc.v0[494]
    y0s_M = __ralloc.v0[495]
    z0s_M = __ralloc.v0[496]
    ρ0s2_M = __ralloc.v0[497]
    ρ0s_M = __ralloc.v0[498]
    z0s2_M = __ralloc.v0[499]
    r0s2_M = __ralloc.v0[500]
    r0s_M = __ralloc.v0[501]
    r0s5_M = __ralloc.v0[502]
    x0s_S = __ralloc.v0[503]
    y0s_S = __ralloc.v0[504]
    z0s_S = __ralloc.v0[505]
    ρ0s2_S = __ralloc.v0[506]
    ρ0s_S = __ralloc.v0[507]
    z0s2_S = __ralloc.v0[508]
    r0s2_S = __ralloc.v0[509]
    r0s_S = __ralloc.v0[510]
    r0s5_S = __ralloc.v0[511]
    coeff0_M = __ralloc.v0[512]
    coeff0_S = __ralloc.v0[513]
    k_20E_div_r0s5_M = __ralloc.v0[514]
    k_20E_div_r0s5_S = __ralloc.v0[515]
    a_tid_0_M_x = __ralloc.v0[516]
    a_tid_0_M_y = __ralloc.v0[517]
    a_tid_0_M_z = __ralloc.v0[518]
    a_tid_0_S_x = __ralloc.v0[519]
    a_tid_0_S_y = __ralloc.v0[520]
    a_tid_0_S_z = __ralloc.v0[521]
    x1s_M = __ralloc.v0[522]
    y1s_M = __ralloc.v0[523]
    z1s_M = __ralloc.v0[524]
    ρ1s2_M = __ralloc.v0[525]
    ρ1s_M = __ralloc.v0[526]
    z1s2_M = __ralloc.v0[527]
    r1s2_M = __ralloc.v0[528]
    r1s_M = __ralloc.v0[529]
    r1s5_M = __ralloc.v0[530]
    x1s_S = __ralloc.v0[531]
    y1s_S = __ralloc.v0[532]
    z1s_S = __ralloc.v0[533]
    ρ1s2_S = __ralloc.v0[534]
    ρ1s_S = __ralloc.v0[535]
    z1s2_S = __ralloc.v0[536]
    r1s2_S = __ralloc.v0[537]
    r1s_S = __ralloc.v0[538]
    r1s5_S = __ralloc.v0[539]
    coeff1_1_M = __ralloc.v0[540]
    coeff1_1_S = __ralloc.v0[541]
    coeff2_1_M = __ralloc.v0[542]
    coeff2_1_S = __ralloc.v0[543]
    coeff3_1_M = __ralloc.v0[544]
    coeff3_1_S = __ralloc.v0[545]
    k_21E_div_r1s5_M = __ralloc.v0[546]
    k_21E_div_r1s5_S = __ralloc.v0[547]
    a_tid_1_M_x = __ralloc.v0[548]
    a_tid_1_M_y = __ralloc.v0[549]
    a_tid_1_M_z = __ralloc.v0[550]
    a_tid_1_S_x = __ralloc.v0[551]
    a_tid_1_S_y = __ralloc.v0[552]
    a_tid_1_S_z = __ralloc.v0[553]
    x2s_M = __ralloc.v0[554]
    y2s_M = __ralloc.v0[555]
    z2s_M = __ralloc.v0[556]
    ρ2s2_M = __ralloc.v0[557]
    ρ2s_M = __ralloc.v0[558]
    z2s2_M = __ralloc.v0[559]
    r2s2_M = __ralloc.v0[560]
    r2s_M = __ralloc.v0[561]
    r2s5_M = __ralloc.v0[562]
    x2s_S = __ralloc.v0[563]
    y2s_S = __ralloc.v0[564]
    z2s_S = __ralloc.v0[565]
    ρ2s2_S = __ralloc.v0[566]
    ρ2s_S = __ralloc.v0[567]
    z2s2_S = __ralloc.v0[568]
    r2s2_S = __ralloc.v0[569]
    r2s_S = __ralloc.v0[570]
    r2s5_S = __ralloc.v0[571]
    coeff1_2_M = __ralloc.v0[572]
    coeff1_2_S = __ralloc.v0[573]
    coeff3_2_M = __ralloc.v0[574]
    coeff3_2_S = __ralloc.v0[575]
    k_22E_div_r2s5_M = __ralloc.v0[576]
    k_22E_div_r2s5_S = __ralloc.v0[577]
    a_tid_2_M_x = __ralloc.v0[578]
    a_tid_2_M_y = __ralloc.v0[579]
    a_tid_2_M_z = __ralloc.v0[580]
    a_tid_2_S_x = __ralloc.v0[581]
    a_tid_2_S_y = __ralloc.v0[582]
    a_tid_2_S_z = __ralloc.v0[583]
    RE_div_r_p5 = __ralloc.v0[584]
    aux_tidacc = __ralloc.v0[585]
    a_tidal_coeff_M = __ralloc.v0[586]
    a_tidal_coeff_S = __ralloc.v0[587]
    a_tidal_tod_x = __ralloc.v0[588]
    a_tidal_tod_y = __ralloc.v0[589]
    a_tidal_tod_z = __ralloc.v0[590]
    a_tidal_x = __ralloc.v0[591]
    a_tidal_y = __ralloc.v0[592]
    a_tidal_z = __ralloc.v0[593]
    accX_mo_tides = __ralloc.v0[594]
    accY_mo_tides = __ralloc.v0[595]
    accZ_mo_tides = __ralloc.v0[596]
    Iω_x = __ralloc.v0[597]
    Iω_y = __ralloc.v0[598]
    Iω_z = __ralloc.v0[599]
    ωxIω_x = __ralloc.v0[600]
    ωxIω_y = __ralloc.v0[601]
    ωxIω_z = __ralloc.v0[602]
    dIω_x = __ralloc.v0[603]
    dIω_y = __ralloc.v0[604]
    dIω_z = __ralloc.v0[605]
    er_EM_I_1 = __ralloc.v0[606]
    er_EM_I_2 = __ralloc.v0[607]
    er_EM_I_3 = __ralloc.v0[608]
    p_E_I_1 = __ralloc.v0[609]
    p_E_I_2 = __ralloc.v0[610]
    p_E_I_3 = __ralloc.v0[611]
    er_EM_1 = __ralloc.v0[612]
    er_EM_2 = __ralloc.v0[613]
    er_EM_3 = __ralloc.v0[614]
    p_E_1 = __ralloc.v0[615]
    p_E_2 = __ralloc.v0[616]
    p_E_3 = __ralloc.v0[617]
    I_er_EM_1 = __ralloc.v0[618]
    I_er_EM_2 = __ralloc.v0[619]
    I_er_EM_3 = __ralloc.v0[620]
    I_p_E_1 = __ralloc.v0[621]
    I_p_E_2 = __ralloc.v0[622]
    I_p_E_3 = __ralloc.v0[623]
    er_EM_cross_I_er_EM_1 = __ralloc.v0[624]
    er_EM_cross_I_er_EM_2 = __ralloc.v0[625]
    er_EM_cross_I_er_EM_3 = __ralloc.v0[626]
    er_EM_cross_I_p_E_1 = __ralloc.v0[627]
    er_EM_cross_I_p_E_2 = __ralloc.v0[628]
    er_EM_cross_I_p_E_3 = __ralloc.v0[629]
    p_E_cross_I_er_EM_1 = __ralloc.v0[630]
    p_E_cross_I_er_EM_2 = __ralloc.v0[631]
    p_E_cross_I_er_EM_3 = __ralloc.v0[632]
    p_E_cross_I_p_E_1 = __ralloc.v0[633]
    p_E_cross_I_p_E_2 = __ralloc.v0[634]
    p_E_cross_I_p_E_3 = __ralloc.v0[635]
    one_minus_7sin2ϕEM = __ralloc.v0[636]
    two_sinϕEM = __ralloc.v0[637]
    N_MfigM_figE_factor_div_rEMp5 = __ralloc.v0[638]
    N_MfigM_figE_1 = __ralloc.v0[639]
    N_MfigM_figE_2 = __ralloc.v0[640]
    N_MfigM_figE_3 = __ralloc.v0[641]
    N_1_LMF = __ralloc.v0[642]
    N_2_LMF = __ralloc.v0[643]
    N_3_LMF = __ralloc.v0[644]
    N_cmb_1 = __ralloc.v0[645]
    N_cmb_2 = __ralloc.v0[646]
    N_cmb_3 = __ralloc.v0[647]
    I_dω_1 = __ralloc.v0[648]
    I_dω_2 = __ralloc.v0[649]
    I_dω_3 = __ralloc.v0[650]
    Ic_ωc_1 = __ralloc.v0[651]
    Ic_ωc_2 = __ralloc.v0[652]
    Ic_ωc_3 = __ralloc.v0[653]
    m_ωm_x_Icωc_1 = __ralloc.v0[654]
    m_ωm_x_Icωc_2 = __ralloc.v0[655]
    m_ωm_x_Icωc_3 = __ralloc.v0[656]
    Ic_dωc_1 = __ralloc.v0[657]
    Ic_dωc_2 = __ralloc.v0[658]
    Ic_dωc_3 = __ralloc.v0[659]
    tmp4072 = __ralloc.v0[660]
    tmp4073 = __ralloc.v0[661]
    tmp4074 = __ralloc.v0[662]
    tmp4075 = __ralloc.v0[663]
    tmp4076 = __ralloc.v0[664]
    tmp4077 = __ralloc.v0[665]
    tmp4078 = __ralloc.v0[666]
    tmp4079 = __ralloc.v0[667]
    w_LE = __ralloc.v0[668]
    α_TTmTDB = __ralloc.v0[669]
    v4E = __ralloc.v0[670]
    ϕ_Earth_Newtonian_sq = __ralloc.v0[671]
    β_TTmTDB = __ralloc.v0[672]
    newtonX = __ralloc.v1[1]
    newtonY = __ralloc.v1[2]
    newtonZ = __ralloc.v1[3]
    newtonianNb_Potential = __ralloc.v1[4]
    v2 = __ralloc.v1[5]
    pntempX = __ralloc.v1[6]
    pntempY = __ralloc.v1[7]
    pntempZ = __ralloc.v1[8]
    postNewtonX = __ralloc.v1[9]
    postNewtonY = __ralloc.v1[10]
    postNewtonZ = __ralloc.v1[11]
    accX = __ralloc.v1[12]
    accY = __ralloc.v1[13]
    accZ = __ralloc.v1[14]
    N_MfigM_pmA_x = __ralloc.v1[15]
    N_MfigM_pmA_y = __ralloc.v1[16]
    N_MfigM_pmA_z = __ralloc.v1[17]
    temp_N_M_x = __ralloc.v1[18]
    temp_N_M_y = __ralloc.v1[19]
    temp_N_M_z = __ralloc.v1[20]
    N_MfigM = __ralloc.v1[21]
    J2_t = __ralloc.v1[22]
    tmp3067 = __ralloc.v1[23]
    tmp3069 = __ralloc.v1[24]
    tmp3072 = __ralloc.v1[25]
    tmp3074 = __ralloc.v1[26]
    tmp3077 = __ralloc.v1[27]
    tmp3079 = __ralloc.v1[28]
    tmp3123 = __ralloc.v1[29]
    tmp3125 = __ralloc.v1[30]
    tmp3126 = __ralloc.v1[31]
    tmp3128 = __ralloc.v1[32]
    tmp4005 = __ralloc.v1[33]
    tmp4007 = __ralloc.v1[34]
    tmp4008 = __ralloc.v1[35]
    β_TTmTDB_i_2 = __ralloc.v1[36]
    X = __ralloc.v2[1]
    Y = __ralloc.v2[2]
    Z = __ralloc.v2[3]
    r_p2 = __ralloc.v2[4]
    r_p1d2 = __ralloc.v2[5]
    r_p3d2 = __ralloc.v2[6]
    r_p7d2 = __ralloc.v2[7]
    newtonianCoeff = __ralloc.v2[8]
    U = __ralloc.v2[9]
    V = __ralloc.v2[10]
    W = __ralloc.v2[11]
    _4U_m_3X = __ralloc.v2[12]
    _4V_m_3Y = __ralloc.v2[13]
    _4W_m_3Z = __ralloc.v2[14]
    UU = __ralloc.v2[15]
    VV = __ralloc.v2[16]
    WW = __ralloc.v2[17]
    newtonian1b_Potential = __ralloc.v2[18]
    newton_acc_X = __ralloc.v2[19]
    newton_acc_Y = __ralloc.v2[20]
    newton_acc_Z = __ralloc.v2[21]
    _2v2 = __ralloc.v2[22]
    vi_dot_vj = __ralloc.v2[23]
    rij_dot_vi_div_rij_sq = __ralloc.v2[24]
    pn2 = __ralloc.v2[25]
    U_t_pn2 = __ralloc.v2[26]
    V_t_pn2 = __ralloc.v2[27]
    W_t_pn2 = __ralloc.v2[28]
    pn3 = __ralloc.v2[29]
    pNX_t_pn3 = __ralloc.v2[30]
    pNY_t_pn3 = __ralloc.v2[31]
    pNZ_t_pn3 = __ralloc.v2[32]
    _4ϕj = __ralloc.v2[33]
    ϕi_plus_4ϕj = __ralloc.v2[34]
    sj2_plus_2si2 = __ralloc.v2[35]
    sj2_plus_2si2_minus_4vivj = __ralloc.v2[36]
    ϕs_and_vs = __ralloc.v2[37]
    pn1t1_7 = __ralloc.v2[38]
    pNX_t_X = __ralloc.v2[39]
    pNY_t_Y = __ralloc.v2[40]
    pNZ_t_Z = __ralloc.v2[41]
    pn1 = __ralloc.v2[42]
    X_t_pn1 = __ralloc.v2[43]
    Y_t_pn1 = __ralloc.v2[44]
    Z_t_pn1 = __ralloc.v2[45]
    X_bf_1 = __ralloc.v2[46]
    Y_bf_1 = __ralloc.v2[47]
    Z_bf_1 = __ralloc.v2[48]
    X_bf_2 = __ralloc.v2[49]
    Y_bf_2 = __ralloc.v2[50]
    Z_bf_2 = __ralloc.v2[51]
    X_bf_3 = __ralloc.v2[52]
    Y_bf_3 = __ralloc.v2[53]
    Z_bf_3 = __ralloc.v2[54]
    X_bf = __ralloc.v2[55]
    Y_bf = __ralloc.v2[56]
    Z_bf = __ralloc.v2[57]
    F_JCS_x = __ralloc.v2[58]
    F_JCS_y = __ralloc.v2[59]
    F_JCS_z = __ralloc.v2[60]
    temp_accX_j = __ralloc.v2[61]
    temp_accY_j = __ralloc.v2[62]
    temp_accZ_j = __ralloc.v2[63]
    temp_accX_i = __ralloc.v2[64]
    temp_accY_i = __ralloc.v2[65]
    temp_accZ_i = __ralloc.v2[66]
    sin_ϕ = __ralloc.v2[67]
    cos_ϕ = __ralloc.v2[68]
    sin_λ = __ralloc.v2[69]
    cos_λ = __ralloc.v2[70]
    r_xy = __ralloc.v2[71]
    r_p4 = __ralloc.v2[72]
    F_CS_ξ_36 = __ralloc.v2[73]
    F_CS_η_36 = __ralloc.v2[74]
    F_CS_ζ_36 = __ralloc.v2[75]
    F_J_ξ_36 = __ralloc.v2[76]
    F_J_ζ_36 = __ralloc.v2[77]
    F_J_ξ = __ralloc.v2[78]
    F_J_ζ = __ralloc.v2[79]
    F_CS_ξ = __ralloc.v2[80]
    F_CS_η = __ralloc.v2[81]
    F_CS_ζ = __ralloc.v2[82]
    F_JCS_ξ = __ralloc.v2[83]
    F_JCS_η = __ralloc.v2[84]
    F_JCS_ζ = __ralloc.v2[85]
    mantlef2coref = __ralloc.v2[86]
    pn2x = __ralloc.v2[87]
    pn2y = __ralloc.v2[88]
    pn2z = __ralloc.v2[89]
    tmp3087 = __ralloc.v2[90]
    tmp3090 = __ralloc.v2[91]
    tmp3092 = __ralloc.v2[92]
    tmp3093 = __ralloc.v2[93]
    tmp3095 = __ralloc.v2[94]
    tmp3103 = __ralloc.v2[95]
    tmp3104 = __ralloc.v2[96]
    tmp3115 = __ralloc.v2[97]
    temp_001 = __ralloc.v2[98]
    tmp3117 = __ralloc.v2[99]
    temp_002 = __ralloc.v2[100]
    tmp3119 = __ralloc.v2[101]
    temp_003 = __ralloc.v2[102]
    temp_004 = __ralloc.v2[103]
    tmp3156 = __ralloc.v2[104]
    tmp3158 = __ralloc.v2[105]
    tmp3160 = __ralloc.v2[106]
    tmp3164 = __ralloc.v2[107]
    tmp3166 = __ralloc.v2[108]
    tmp3167 = __ralloc.v2[109]
    tmp3273 = __ralloc.v2[110]
    tmp3274 = __ralloc.v2[111]
    tmp3277 = __ralloc.v2[112]
    tmp3278 = __ralloc.v2[113]
    tmp3284 = __ralloc.v2[114]
    tmp3287 = __ralloc.v2[115]
    tmp3349 = __ralloc.v2[116]
    tmp3351 = __ralloc.v2[117]
    tmp3353 = __ralloc.v2[118]
    tmp3355 = __ralloc.v2[119]
    tmp3357 = __ralloc.v2[120]
    tmp3359 = __ralloc.v2[121]
    tmp3361 = __ralloc.v2[122]
    tmp3362 = __ralloc.v2[123]
    tmp3363 = __ralloc.v2[124]
    tmp3365 = __ralloc.v2[125]
    tmp3366 = __ralloc.v2[126]
    tmp3367 = __ralloc.v2[127]
    tmp3369 = __ralloc.v2[128]
    tmp3370 = __ralloc.v2[129]
    tmp3371 = __ralloc.v2[130]
    tmp3383 = __ralloc.v2[131]
    Xij_t_Ui = __ralloc.v2[132]
    Yij_t_Vi = __ralloc.v2[133]
    Zij_t_Wi = __ralloc.v2[134]
    tmp3389 = __ralloc.v2[135]
    Rij_dot_Vi = __ralloc.v2[136]
    tmp3392 = __ralloc.v2[137]
    tmp3395 = __ralloc.v2[138]
    pn1t2_7 = __ralloc.v2[139]
    tmp3402 = __ralloc.v2[140]
    tmp3403 = __ralloc.v2[141]
    tmp3404 = __ralloc.v2[142]
    tmp3412 = __ralloc.v2[143]
    termpnx = __ralloc.v2[144]
    sumpnx = __ralloc.v2[145]
    tmp3415 = __ralloc.v2[146]
    termpny = __ralloc.v2[147]
    sumpny = __ralloc.v2[148]
    tmp3418 = __ralloc.v2[149]
    termpnz = __ralloc.v2[150]
    sumpnz = __ralloc.v2[151]
    β_TTmTDB_i_1 = __ralloc.v2[152]
    tmp4010 = __ralloc.v2[153]
    tmp4011 = __ralloc.v2[154]
    tmp4012 = __ralloc.v2[155]
    tmp4013 = __ralloc.v2[156]
    tmp4014 = __ralloc.v2[157]
    β_TTmTDB_i_3 = __ralloc.v2[158]
    β_TTmTDB_i_4 = __ralloc.v2[159]
    tmp4019 = __ralloc.v2[160]
    tmp4020 = __ralloc.v2[161]
    β_TTmTDB_i = __ralloc.v2[162]
    tmp4022 = __ralloc.v2[163]
    temp_β_TTmTDB = __ralloc.v2[164]
    P_n = __ralloc.v3[1]
    dP_n = __ralloc.v3[2]
    temp_fjξ = __ralloc.v3[3]
    temp_fjζ = __ralloc.v3[4]
    temp_rn = __ralloc.v3[5]
    sin_mλ = __ralloc.v3[6]
    cos_mλ = __ralloc.v3[7]
    RotM = __ralloc.v3[8]
    tmp3172 = __ralloc.v3[9]
    tmp3173 = __ralloc.v3[10]
    tmp3174 = __ralloc.v3[11]
    tmp3176 = __ralloc.v3[12]
    tmp3177 = __ralloc.v3[13]
    tmp3182 = __ralloc.v3[14]
    tmp3183 = __ralloc.v3[15]
    tmp3185 = __ralloc.v3[16]
    tmp3186 = __ralloc.v3[17]
    tmp3187 = __ralloc.v3[18]
    tmp3189 = __ralloc.v3[19]
    tmp3190 = __ralloc.v3[20]
    tmp3191 = __ralloc.v3[21]
    tmp3193 = __ralloc.v3[22]
    tmp3194 = __ralloc.v3[23]
    tmp3195 = __ralloc.v3[24]
    tmp3196 = __ralloc.v3[25]
    tmp3199 = __ralloc.v3[26]
    tmp3200 = __ralloc.v3[27]
    tmp3202 = __ralloc.v3[28]
    tmp3203 = __ralloc.v3[29]
    tmp3222 = __ralloc.v3[30]
    tmp3223 = __ralloc.v3[31]
    tmp3224 = __ralloc.v3[32]
    tmp3227 = __ralloc.v3[33]
    tmp3228 = __ralloc.v3[34]
    tmp3229 = __ralloc.v3[35]
    tmp3234 = __ralloc.v3[36]
    tmp3235 = __ralloc.v3[37]
    tmp3236 = __ralloc.v3[38]
    tmp3239 = __ralloc.v3[39]
    tmp3240 = __ralloc.v3[40]
    tmp3241 = __ralloc.v3[41]
    tmp3245 = __ralloc.v3[42]
    tmp3246 = __ralloc.v3[43]
    tmp3247 = __ralloc.v3[44]
    tmp3249 = __ralloc.v3[45]
    tmp3250 = __ralloc.v3[46]
    tmp3251 = __ralloc.v3[47]
    temp_CS_ξ = __ralloc.v4[1]
    temp_CS_η = __ralloc.v4[2]
    temp_CS_ζ = __ralloc.v4[3]
    Cnm_cosmλ = __ralloc.v4[4]
    Cnm_sinmλ = __ralloc.v4[5]
    Snm_cosmλ = __ralloc.v4[6]
    Snm_sinmλ = __ralloc.v4[7]
    secϕ_P_nm = __ralloc.v4[8]
    P_nm = __ralloc.v4[9]
    cosϕ_dP_nm = __ralloc.v4[10]
    Rb2p = __ralloc.v4[11]
    Gc2p = __ralloc.v4[12]
    tmp3205 = __ralloc.v4[13]
    tmp3208 = __ralloc.v4[14]
    tmp3210 = __ralloc.v4[15]
    tmp3212 = __ralloc.v4[16]
    tmp3213 = __ralloc.v4[17]
    tmp3214 = __ralloc.v4[18]
    tmp3217 = __ralloc.v4[19]
    tmp3218 = __ralloc.v4[20]
    tmp3219 = __ralloc.v4[21]
    tmp3221 = __ralloc.v4[22]
    tmp3225 = __ralloc.v4[23]
    tmp3226 = __ralloc.v4[24]
    tmp3230 = __ralloc.v4[25]
    tmp3231 = __ralloc.v4[26]
    tmp3233 = __ralloc.v4[27]
    tmp3237 = __ralloc.v4[28]
    tmp3238 = __ralloc.v4[29]
    tmp3242 = __ralloc.v4[30]
    tmp3243 = __ralloc.v4[31]
    tmp3248 = __ralloc.v4[32]
    tmp3252 = __ralloc.v4[33]
    tmp3253 = __ralloc.v4[34]
    tmp3259 = __ralloc.v4[35]
    tmp3260 = __ralloc.v4[36]
    tmp3261 = __ralloc.v4[37]
    tmp3262 = __ralloc.v4[38]
    tmp3264 = __ralloc.v4[39]
    tmp3265 = __ralloc.v4[40]
    tmp3266 = __ralloc.v4[41]
    tmp3267 = __ralloc.v4[42]
    tmp3269 = __ralloc.v4[43]
    tmp3270 = __ralloc.v4[44]
    tmp3271 = __ralloc.v4[45]
    tmp3289 = __ralloc.v4[46]
    tmp3290 = __ralloc.v4[47]
    tmp3291 = __ralloc.v4[48]
    tmp3292 = __ralloc.v4[49]
    tmp3294 = __ralloc.v4[50]
    tmp3295 = __ralloc.v4[51]
    tmp3296 = __ralloc.v4[52]
    tmp3297 = __ralloc.v4[53]
    tmp3299 = __ralloc.v4[54]
    tmp3300 = __ralloc.v4[55]
    tmp3301 = __ralloc.v4[56]
    tmp3302 = __ralloc.v4[57]
    tmp3304 = __ralloc.v4[58]
    tmp3305 = __ralloc.v4[59]
    tmp3306 = __ralloc.v4[60]
    tmp3307 = __ralloc.v4[61]
    tmp3309 = __ralloc.v4[62]
    tmp3310 = __ralloc.v4[63]
    tmp3311 = __ralloc.v4[64]
    tmp3312 = __ralloc.v4[65]
    tmp3314 = __ralloc.v4[66]
    tmp3315 = __ralloc.v4[67]
    tmp3316 = __ralloc.v4[68]
    tmp3317 = __ralloc.v4[69]
    tmp3319 = __ralloc.v4[70]
    tmp3320 = __ralloc.v4[71]
    tmp3321 = __ralloc.v4[72]
    tmp3322 = __ralloc.v4[73]
    tmp3324 = __ralloc.v4[74]
    tmp3325 = __ralloc.v4[75]
    tmp3326 = __ralloc.v4[76]
    tmp3327 = __ralloc.v4[77]
    tmp3329 = __ralloc.v4[78]
    tmp3330 = __ralloc.v4[79]
    tmp3331 = __ralloc.v4[80]
    tmp3332 = __ralloc.v4[81]
    tmp3334 = __ralloc.v4[82]
    tmp3335 = __ralloc.v4[83]
    tmp3336 = __ralloc.v4[84]
    tmp3337 = __ralloc.v4[85]
    tmp3339 = __ralloc.v4[86]
    tmp3340 = __ralloc.v4[87]
    tmp3341 = __ralloc.v4[88]
    tmp3342 = __ralloc.v4[89]
    tmp3344 = __ralloc.v4[90]
    tmp3345 = __ralloc.v4[91]
    tmp3346 = __ralloc.v4[92]
    tmp3347 = __ralloc.v4[93]
    local (N, jd0) = params
    local __t = Taylor1(numtype(t), t.order)
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local params_bwd = (N_bwd, jd0)
    local qq_bwd = Taylor1.(constant_term.(q[union(nbodyind(N, 1:N_bwd), 6N + 1:6N + 13)]), t.order)::Vector{S}
    local dqq_bwd = similar(qq_bwd)
    local xaux_bwd = similar(qq_bwd)
    local jc = TaylorIntegration.jetcoeffs!(NBP_pN_A_J23E_J23M_J2S_threads!, t, qq_bwd, dqq_bwd, xaux_bwd, params_bwd)
    local q_del_τ_M = special_eval(qq_bwd, __t - τ_M)
    local q_del_τ_0 = special_eval(qq_bwd, __t - τ_0p)
    local q_del_τ_1 = special_eval(qq_bwd, __t - τ_1p)
    local q_del_τ_2 = special_eval(qq_bwd, __t - τ_2p)
    local eulang_del_τ_M = q_del_τ_M[6N_bwd + 1:6N_bwd + 3]::Vector{S}
    local ω_m_del_τ_M = q_del_τ_M[6N_bwd + 4:6N_bwd + 6]::Vector{S}
    local I_m_t = ITM(q_del_τ_M, eulang_del_τ_M, ω_m_del_τ_M)::Matrix{S}
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    TaylorSeries.zero!(N_MfigM[1])
    (N_MfigM[1]).coeffs[1] = identity(constant_term(zero_q_1))
    TaylorSeries.zero!(N_MfigM[2])
    (N_MfigM[2]).coeffs[1] = identity(constant_term(zero_q_1))
    TaylorSeries.zero!(N_MfigM[3])
    (N_MfigM[3]).coeffs[1] = identity(constant_term(zero_q_1))
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    TaylorSeries.zero!(ϕ_m)
    ϕ_m.coeffs[1] = identity(constant_term(q[6N + 1]))
    TaylorSeries.zero!(θ_m)
    θ_m.coeffs[1] = identity(constant_term(q[6N + 2]))
    TaylorSeries.zero!(ψ_m)
    ψ_m.coeffs[1] = identity(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp2961)
    tmp2961.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4031)
    tmp4031.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp2962)
    tmp2962.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4032)
    tmp4032.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp2963)
    tmp2963.coeffs[1] = constant_term(tmp2961) * constant_term(tmp2962)
    TaylorSeries.zero!(tmp2964)
    tmp2964.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp4033)
    tmp4033.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp2965)
    tmp2965.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4034)
    tmp4034.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp2966)
    tmp2966.coeffs[1] = constant_term(tmp2964) * constant_term(tmp2965)
    TaylorSeries.zero!(tmp2967)
    tmp2967.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4035)
    tmp4035.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp2968)
    tmp2968.coeffs[1] = constant_term(tmp2966) * constant_term(tmp2967)
    TaylorSeries.zero!(RotM[1, 1, mo])
    (RotM[1, 1, mo]).coeffs[1] = constant_term(tmp2963) - constant_term(tmp2968)
    TaylorSeries.zero!(tmp2970)
    tmp2970.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp4036)
    tmp4036.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp2971)
    tmp2971.coeffs[1] = -(constant_term(tmp2970))
    TaylorSeries.zero!(tmp2972)
    tmp2972.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4037)
    tmp4037.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp2973)
    tmp2973.coeffs[1] = constant_term(tmp2971) * constant_term(tmp2972)
    TaylorSeries.zero!(tmp2974)
    tmp2974.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4038)
    tmp4038.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp2975)
    tmp2975.coeffs[1] = constant_term(tmp2973) * constant_term(tmp2974)
    TaylorSeries.zero!(tmp2976)
    tmp2976.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4039)
    tmp4039.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp2977)
    tmp2977.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4040)
    tmp4040.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp2978)
    tmp2978.coeffs[1] = constant_term(tmp2976) * constant_term(tmp2977)
    TaylorSeries.zero!(RotM[2, 1, mo])
    (RotM[2, 1, mo]).coeffs[1] = constant_term(tmp2975) - constant_term(tmp2978)
    TaylorSeries.zero!(tmp2980)
    tmp2980.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp4041)
    tmp4041.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp2981)
    tmp2981.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4042)
    tmp4042.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(RotM[3, 1, mo])
    (RotM[3, 1, mo]).coeffs[1] = constant_term(tmp2980) * constant_term(tmp2981)
    TaylorSeries.zero!(tmp2983)
    tmp2983.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4043)
    tmp4043.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp2984)
    tmp2984.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4044)
    tmp4044.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp2985)
    tmp2985.coeffs[1] = constant_term(tmp2983) * constant_term(tmp2984)
    TaylorSeries.zero!(tmp2986)
    tmp2986.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp4045)
    tmp4045.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp2987)
    tmp2987.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4046)
    tmp4046.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp2988)
    tmp2988.coeffs[1] = constant_term(tmp2986) * constant_term(tmp2987)
    TaylorSeries.zero!(tmp2989)
    tmp2989.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4047)
    tmp4047.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp2990)
    tmp2990.coeffs[1] = constant_term(tmp2988) * constant_term(tmp2989)
    TaylorSeries.zero!(RotM[1, 2, mo])
    (RotM[1, 2, mo]).coeffs[1] = constant_term(tmp2985) + constant_term(tmp2990)
    TaylorSeries.zero!(tmp2992)
    tmp2992.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp4048)
    tmp4048.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp2993)
    tmp2993.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4049)
    tmp4049.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp2994)
    tmp2994.coeffs[1] = constant_term(tmp2992) * constant_term(tmp2993)
    TaylorSeries.zero!(tmp2995)
    tmp2995.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4050)
    tmp4050.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp2996)
    tmp2996.coeffs[1] = constant_term(tmp2994) * constant_term(tmp2995)
    TaylorSeries.zero!(tmp2997)
    tmp2997.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4051)
    tmp4051.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp2998)
    tmp2998.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4052)
    tmp4052.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp2999)
    tmp2999.coeffs[1] = constant_term(tmp2997) * constant_term(tmp2998)
    TaylorSeries.zero!(RotM[2, 2, mo])
    (RotM[2, 2, mo]).coeffs[1] = constant_term(tmp2996) - constant_term(tmp2999)
    TaylorSeries.zero!(tmp3001)
    tmp3001.coeffs[1] = cos(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp4053)
    tmp4053.coeffs[1] = sin(constant_term(ϕ_m))
    TaylorSeries.zero!(tmp3002)
    tmp3002.coeffs[1] = -(constant_term(tmp3001))
    TaylorSeries.zero!(tmp3003)
    tmp3003.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp4054)
    tmp4054.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(RotM[3, 2, mo])
    (RotM[3, 2, mo]).coeffs[1] = constant_term(tmp3002) * constant_term(tmp3003)
    TaylorSeries.zero!(tmp3005)
    tmp3005.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp4055)
    tmp4055.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp3006)
    tmp3006.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4056)
    tmp4056.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(RotM[1, 3, mo])
    (RotM[1, 3, mo]).coeffs[1] = constant_term(tmp3005) * constant_term(tmp3006)
    TaylorSeries.zero!(tmp3008)
    tmp3008.coeffs[1] = cos(constant_term(ψ_m))
    TaylorSeries.zero!(tmp4057)
    tmp4057.coeffs[1] = sin(constant_term(ψ_m))
    TaylorSeries.zero!(tmp3009)
    tmp3009.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(tmp4058)
    tmp4058.coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(RotM[2, 3, mo])
    (RotM[2, 3, mo]).coeffs[1] = constant_term(tmp3008) * constant_term(tmp3009)
    TaylorSeries.zero!(RotM[3, 3, mo])
    (RotM[3, 3, mo]).coeffs[1] = cos(constant_term(θ_m))
    TaylorSeries.zero!(tmp4059)
    tmp4059.coeffs[1] = sin(constant_term(θ_m))
    TaylorSeries.zero!(ϕ_c)
    ϕ_c.coeffs[1] = identity(constant_term(q[6N + 7]))
    TaylorSeries.zero!(tmp3012)
    tmp3012.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4060)
    tmp4060.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3013)
    tmp3013.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(tmp3012)
    TaylorSeries.zero!(tmp3014)
    tmp3014.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4061)
    tmp4061.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3015)
    tmp3015.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp3014)
    TaylorSeries.zero!(mantlef2coref[1, 1])
    (mantlef2coref[1, 1]).coeffs[1] = constant_term(tmp3013) + constant_term(tmp3015)
    TaylorSeries.zero!(tmp3017)
    tmp3017.coeffs[1] = -(constant_term(RotM[1, 1, mo]))
    TaylorSeries.zero!(tmp3018)
    tmp3018.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4062)
    tmp4062.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3019)
    tmp3019.coeffs[1] = constant_term(tmp3017) * constant_term(tmp3018)
    TaylorSeries.zero!(tmp3020)
    tmp3020.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4063)
    tmp4063.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3021)
    tmp3021.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp3020)
    TaylorSeries.zero!(mantlef2coref[2, 1])
    (mantlef2coref[2, 1]).coeffs[1] = constant_term(tmp3019) + constant_term(tmp3021)
    TaylorSeries.zero!(mantlef2coref[3, 1])
    (mantlef2coref[3, 1]).coeffs[1] = identity(constant_term(RotM[1, 3, mo]))
    TaylorSeries.zero!(tmp3023)
    tmp3023.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4064)
    tmp4064.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3024)
    tmp3024.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(tmp3023)
    TaylorSeries.zero!(tmp3025)
    tmp3025.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4065)
    tmp4065.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3026)
    tmp3026.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp3025)
    TaylorSeries.zero!(mantlef2coref[1, 2])
    (mantlef2coref[1, 2]).coeffs[1] = constant_term(tmp3024) + constant_term(tmp3026)
    TaylorSeries.zero!(tmp3028)
    tmp3028.coeffs[1] = -(constant_term(RotM[2, 1, mo]))
    TaylorSeries.zero!(tmp3029)
    tmp3029.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4066)
    tmp4066.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3030)
    tmp3030.coeffs[1] = constant_term(tmp3028) * constant_term(tmp3029)
    TaylorSeries.zero!(tmp3031)
    tmp3031.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4067)
    tmp4067.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3032)
    tmp3032.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp3031)
    TaylorSeries.zero!(mantlef2coref[2, 2])
    (mantlef2coref[2, 2]).coeffs[1] = constant_term(tmp3030) + constant_term(tmp3032)
    TaylorSeries.zero!(mantlef2coref[3, 2])
    (mantlef2coref[3, 2]).coeffs[1] = identity(constant_term(RotM[2, 3, mo]))
    TaylorSeries.zero!(tmp3034)
    tmp3034.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4068)
    tmp4068.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3035)
    tmp3035.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(tmp3034)
    TaylorSeries.zero!(tmp3036)
    tmp3036.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4069)
    tmp4069.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3037)
    tmp3037.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp3036)
    TaylorSeries.zero!(mantlef2coref[1, 3])
    (mantlef2coref[1, 3]).coeffs[1] = constant_term(tmp3035) + constant_term(tmp3037)
    TaylorSeries.zero!(tmp3039)
    tmp3039.coeffs[1] = -(constant_term(RotM[3, 1, mo]))
    TaylorSeries.zero!(tmp3040)
    tmp3040.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4070)
    tmp4070.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3041)
    tmp3041.coeffs[1] = constant_term(tmp3039) * constant_term(tmp3040)
    TaylorSeries.zero!(tmp3042)
    tmp3042.coeffs[1] = cos(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp4071)
    tmp4071.coeffs[1] = sin(constant_term(ϕ_c))
    TaylorSeries.zero!(tmp3043)
    tmp3043.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp3042)
    TaylorSeries.zero!(mantlef2coref[2, 3])
    (mantlef2coref[2, 3]).coeffs[1] = constant_term(tmp3041) + constant_term(tmp3043)
    TaylorSeries.zero!(mantlef2coref[3, 3])
    (mantlef2coref[3, 3]).coeffs[1] = identity(constant_term(RotM[3, 3, mo]))
    TaylorSeries.zero!(tmp3045)
    tmp3045.coeffs[1] = constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10])
    TaylorSeries.zero!(tmp3046)
    tmp3046.coeffs[1] = constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11])
    TaylorSeries.zero!(tmp3047)
    tmp3047.coeffs[1] = constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp3048)
    tmp3048.coeffs[1] = constant_term(tmp3046) + constant_term(tmp3047)
    TaylorSeries.zero!(ω_c_CE_1)
    ω_c_CE_1.coeffs[1] = constant_term(tmp3045) + constant_term(tmp3048)
    TaylorSeries.zero!(tmp3050)
    tmp3050.coeffs[1] = constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10])
    TaylorSeries.zero!(tmp3051)
    tmp3051.coeffs[1] = constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11])
    TaylorSeries.zero!(tmp3052)
    tmp3052.coeffs[1] = constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp3053)
    tmp3053.coeffs[1] = constant_term(tmp3051) + constant_term(tmp3052)
    TaylorSeries.zero!(ω_c_CE_2)
    ω_c_CE_2.coeffs[1] = constant_term(tmp3050) + constant_term(tmp3053)
    TaylorSeries.zero!(tmp3055)
    tmp3055.coeffs[1] = constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10])
    TaylorSeries.zero!(tmp3056)
    tmp3056.coeffs[1] = constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11])
    TaylorSeries.zero!(tmp3057)
    tmp3057.coeffs[1] = constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp3058)
    tmp3058.coeffs[1] = constant_term(tmp3056) + constant_term(tmp3057)
    TaylorSeries.zero!(ω_c_CE_3)
    ω_c_CE_3.coeffs[1] = constant_term(tmp3055) + constant_term(tmp3058)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    TaylorSeries.zero!(J2_t[su])
    (J2_t[su]).coeffs[1] = identity(constant_term(J2S_t))
    TaylorSeries.zero!(J2_t[ea])
    (J2_t[ea]).coeffs[1] = identity(constant_term(J2E_t))
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    local q_ME_τ_0 = q_del_τ_0[3mo - 2:3mo] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_ME_τ_1 = q_del_τ_1[3mo - 2:3mo] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_ME_τ_2 = q_del_τ_2[3mo - 2:3mo] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local q_SE_τ_0 = q_del_τ_0[3su - 2:3su] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_SE_τ_1 = q_del_τ_1[3su - 2:3su] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_SE_τ_2 = q_del_τ_2[3su - 2:3su] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local R30 = RotM[:, :, ea]
    local R31 = Rz(-ω_E * τ_1) * RotM[:, :, ea]
    local R32 = Rz(-ω_E * τ_2) * RotM[:, :, ea]
    local r_star_M_0 = R30 * q_ME_τ_0
    local r_star_M_1 = R31 * q_ME_τ_1
    local r_star_M_2 = R32 * q_ME_τ_2
    local r_star_S_0 = R30 * q_SE_τ_0
    local r_star_S_1 = R31 * q_SE_τ_1
    local r_star_S_2 = R32 * q_SE_τ_2
    for j = 1:N
        TaylorSeries.zero!(newtonX[j])
        (newtonX[j]).coeffs[1] = identity(constant_term(zero_q_1))
        TaylorSeries.zero!(newtonY[j])
        (newtonY[j]).coeffs[1] = identity(constant_term(zero_q_1))
        TaylorSeries.zero!(newtonZ[j])
        (newtonZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        TaylorSeries.zero!(newtonianNb_Potential[j])
        (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(zero_q_1))
        TaylorSeries.zero!(dq[3j - 2])
        (dq[3j - 2]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 2]))
        TaylorSeries.zero!(dq[3j - 1])
        (dq[3j - 1]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 1]))
        TaylorSeries.zero!(dq[3j])
        (dq[3j]).coeffs[1] = identity(constant_term(q[3 * (N + j)]))
    end
    for j = 1:N_ext
        TaylorSeries.zero!(accX[j])
        (accX[j]).coeffs[1] = identity(constant_term(zero_q_1))
        TaylorSeries.zero!(accY[j])
        (accY[j]).coeffs[1] = identity(constant_term(zero_q_1))
        TaylorSeries.zero!(accZ[j])
        (accZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1286 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.zero!(X[i, j])
                    (X[i, j]).coeffs[1] = constant_term(q[3i - 2]) - constant_term(q[3j - 2])
                    TaylorSeries.zero!(Y[i, j])
                    (Y[i, j]).coeffs[1] = constant_term(q[3i - 1]) - constant_term(q[3j - 1])
                    TaylorSeries.zero!(Z[i, j])
                    (Z[i, j]).coeffs[1] = constant_term(q[3i]) - constant_term(q[3j])
                    TaylorSeries.zero!(U[i, j])
                    (U[i, j]).coeffs[1] = constant_term(dq[3i - 2]) - constant_term(dq[3j - 2])
                    TaylorSeries.zero!(V[i, j])
                    (V[i, j]).coeffs[1] = constant_term(dq[3i - 1]) - constant_term(dq[3j - 1])
                    TaylorSeries.zero!(W[i, j])
                    (W[i, j]).coeffs[1] = constant_term(dq[3i]) - constant_term(dq[3j])
                    TaylorSeries.zero!(tmp3067[3j - 2])
                    (tmp3067[3j - 2]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 2])
                    TaylorSeries.zero!(tmp3069[3i - 2])
                    (tmp3069[3i - 2]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 2])
                    TaylorSeries.zero!(_4U_m_3X[i, j])
                    (_4U_m_3X[i, j]).coeffs[1] = constant_term(tmp3067[3j - 2]) - constant_term(tmp3069[3i - 2])
                    TaylorSeries.zero!(tmp3072[3j - 1])
                    (tmp3072[3j - 1]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 1])
                    TaylorSeries.zero!(tmp3074[3i - 1])
                    (tmp3074[3i - 1]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 1])
                    TaylorSeries.zero!(_4V_m_3Y[i, j])
                    (_4V_m_3Y[i, j]).coeffs[1] = constant_term(tmp3072[3j - 1]) - constant_term(tmp3074[3i - 1])
                    TaylorSeries.zero!(tmp3077[3j])
                    (tmp3077[3j]).coeffs[1] = constant_term(4) * constant_term(dq[3j])
                    TaylorSeries.zero!(tmp3079[3i])
                    (tmp3079[3i]).coeffs[1] = constant_term(3) * constant_term(dq[3i])
                    TaylorSeries.zero!(_4W_m_3Z[i, j])
                    (_4W_m_3Z[i, j]).coeffs[1] = constant_term(tmp3077[3j]) - constant_term(tmp3079[3i])
                    TaylorSeries.zero!(pn2x[i, j])
                    (pn2x[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j])
                    TaylorSeries.zero!(pn2y[i, j])
                    (pn2y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j])
                    TaylorSeries.zero!(pn2z[i, j])
                    (pn2z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j])
                    TaylorSeries.zero!(UU[i, j])
                    (UU[i, j]).coeffs[1] = constant_term(dq[3i - 2]) * constant_term(dq[3j - 2])
                    TaylorSeries.zero!(VV[i, j])
                    (VV[i, j]).coeffs[1] = constant_term(dq[3i - 1]) * constant_term(dq[3j - 1])
                    TaylorSeries.zero!(WW[i, j])
                    (WW[i, j]).coeffs[1] = constant_term(dq[3i]) * constant_term(dq[3j])
                    TaylorSeries.zero!(tmp3087[i, j])
                    (tmp3087[i, j]).coeffs[1] = constant_term(UU[i, j]) + constant_term(VV[i, j])
                    TaylorSeries.zero!(vi_dot_vj[i, j])
                    (vi_dot_vj[i, j]).coeffs[1] = constant_term(tmp3087[i, j]) + constant_term(WW[i, j])
                    TaylorSeries.zero!(tmp3090[i, j])
                    (tmp3090[i, j]).coeffs[1] = constant_term(X[i, j]) ^ float(constant_term(2))
                    TaylorSeries.zero!(tmp3092[i, j])
                    (tmp3092[i, j]).coeffs[1] = constant_term(Y[i, j]) ^ float(constant_term(2))
                    TaylorSeries.zero!(tmp3093[i, j])
                    (tmp3093[i, j]).coeffs[1] = constant_term(tmp3090[i, j]) + constant_term(tmp3092[i, j])
                    TaylorSeries.zero!(tmp3095[i, j])
                    (tmp3095[i, j]).coeffs[1] = constant_term(Z[i, j]) ^ float(constant_term(2))
                    TaylorSeries.zero!(r_p2[i, j])
                    (r_p2[i, j]).coeffs[1] = constant_term(tmp3093[i, j]) + constant_term(tmp3095[i, j])
                    TaylorSeries.zero!(r_p1d2[i, j])
                    (r_p1d2[i, j]).coeffs[1] = sqrt(constant_term(r_p2[i, j]))
                    TaylorSeries.zero!(r_p3d2[i, j])
                    (r_p3d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(1.5))
                    TaylorSeries.zero!(r_p7d2[i, j])
                    (r_p7d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(3.5))
                    TaylorSeries.zero!(newtonianCoeff[i, j])
                    (newtonianCoeff[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i, j])
                    TaylorSeries.zero!(tmp3103[i, j])
                    (tmp3103[i, j]).coeffs[1] = constant_term(pn2x[i, j]) + constant_term(pn2y[i, j])
                    TaylorSeries.zero!(tmp3104[i, j])
                    (tmp3104[i, j]).coeffs[1] = constant_term(tmp3103[i, j]) + constant_term(pn2z[i, j])
                    TaylorSeries.zero!(pn2[i, j])
                    (pn2[i, j]).coeffs[1] = constant_term(newtonianCoeff[i, j]) * constant_term(tmp3104[i, j])
                    TaylorSeries.zero!(newton_acc_X[i, j])
                    (newton_acc_X[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(newton_acc_Y[i, j])
                    (newton_acc_Y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(newton_acc_Z[i, j])
                    (newton_acc_Z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(newtonian1b_Potential[i, j])
                    (newtonian1b_Potential[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i, j])
                    TaylorSeries.zero!(pn3[i, j])
                    (pn3[i, j]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i, j])
                    TaylorSeries.zero!(U_t_pn2[i, j])
                    (U_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(U[i, j])
                    TaylorSeries.zero!(V_t_pn2[i, j])
                    (V_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(V[i, j])
                    TaylorSeries.zero!(W_t_pn2[i, j])
                    (W_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(W[i, j])
                    TaylorSeries.zero!(tmp3115[i, j])
                    (tmp3115[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(temp_001[i, j])
                    (temp_001[i, j]).coeffs[1] = constant_term(newtonX[j]) + constant_term(tmp3115[i, j])
                    TaylorSeries.zero!(newtonX[j])
                    (newtonX[j]).coeffs[1] = identity(constant_term(temp_001[i, j]))
                    TaylorSeries.zero!(tmp3117[i, j])
                    (tmp3117[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(temp_002[i, j])
                    (temp_002[i, j]).coeffs[1] = constant_term(newtonY[j]) + constant_term(tmp3117[i, j])
                    TaylorSeries.zero!(newtonY[j])
                    (newtonY[j]).coeffs[1] = identity(constant_term(temp_002[i, j]))
                    TaylorSeries.zero!(tmp3119[i, j])
                    (tmp3119[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                    TaylorSeries.zero!(temp_003[i, j])
                    (temp_003[i, j]).coeffs[1] = constant_term(newtonZ[j]) + constant_term(tmp3119[i, j])
                    TaylorSeries.zero!(newtonZ[j])
                    (newtonZ[j]).coeffs[1] = identity(constant_term(temp_003[i, j]))
                    TaylorSeries.zero!(temp_004[i, j])
                    (temp_004[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j])
                    TaylorSeries.zero!(newtonianNb_Potential[j])
                    (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(temp_004[i, j]))
                end
            end
            TaylorSeries.zero!(tmp3123[3j - 2])
            (tmp3123[3j - 2]).coeffs[1] = constant_term(dq[3j - 2]) ^ float(constant_term(2))
            TaylorSeries.zero!(tmp3125[3j - 1])
            (tmp3125[3j - 1]).coeffs[1] = constant_term(dq[3j - 1]) ^ float(constant_term(2))
            TaylorSeries.zero!(tmp3126[3j - 2])
            (tmp3126[3j - 2]).coeffs[1] = constant_term(tmp3123[3j - 2]) + constant_term(tmp3125[3j - 1])
            TaylorSeries.zero!(tmp3128[3j])
            (tmp3128[3j]).coeffs[1] = constant_term(dq[3j]) ^ float(constant_term(2))
            TaylorSeries.zero!(v2[j])
            (v2[j]).coeffs[1] = constant_term(tmp3126[3j - 2]) + constant_term(tmp3128[3j])
        end
    TaylorSeries.zero!(tmp3130)
    tmp3130.coeffs[1] = constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2])
    TaylorSeries.zero!(tmp3132)
    tmp3132.coeffs[1] = constant_term(tmp3130) / constant_term(2)
    TaylorSeries.zero!(tmp3133)
    tmp3133.coeffs[1] = constant_term(I_M_t[3, 3]) - constant_term(tmp3132)
    TaylorSeries.zero!(J2M_t)
    J2M_t.coeffs[1] = constant_term(tmp3133) / constant_term(μ[mo])
    TaylorSeries.zero!(tmp3135)
    tmp3135.coeffs[1] = constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1])
    TaylorSeries.zero!(tmp3136)
    tmp3136.coeffs[1] = constant_term(tmp3135) / constant_term(μ[mo])
    TaylorSeries.zero!(C22M_t)
    C22M_t.coeffs[1] = constant_term(tmp3136) / constant_term(4)
    TaylorSeries.zero!(tmp3139)
    tmp3139.coeffs[1] = -(constant_term(I_M_t[1, 3]))
    TaylorSeries.zero!(C21M_t)
    C21M_t.coeffs[1] = constant_term(tmp3139) / constant_term(μ[mo])
    TaylorSeries.zero!(tmp3141)
    tmp3141.coeffs[1] = -(constant_term(I_M_t[3, 2]))
    TaylorSeries.zero!(S21M_t)
    S21M_t.coeffs[1] = constant_term(tmp3141) / constant_term(μ[mo])
    TaylorSeries.zero!(tmp3143)
    tmp3143.coeffs[1] = -(constant_term(I_M_t[2, 1]))
    TaylorSeries.zero!(tmp3144)
    tmp3144.coeffs[1] = constant_term(tmp3143) / constant_term(μ[mo])
    TaylorSeries.zero!(S22M_t)
    S22M_t.coeffs[1] = constant_term(tmp3144) / constant_term(2)
    TaylorSeries.zero!(J2_t[mo])
    (J2_t[mo]).coeffs[1] = identity(constant_term(J2M_t))
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1380 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.zero!(X_bf_1[i, j])
                        (X_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[1, 1, j])
                        TaylorSeries.zero!(X_bf_2[i, j])
                        (X_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[1, 2, j])
                        TaylorSeries.zero!(X_bf_3[i, j])
                        (X_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[1, 3, j])
                        TaylorSeries.zero!(Y_bf_1[i, j])
                        (Y_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[2, 1, j])
                        TaylorSeries.zero!(Y_bf_2[i, j])
                        (Y_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[2, 2, j])
                        TaylorSeries.zero!(Y_bf_3[i, j])
                        (Y_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[2, 3, j])
                        TaylorSeries.zero!(Z_bf_1[i, j])
                        (Z_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[3, 1, j])
                        TaylorSeries.zero!(Z_bf_2[i, j])
                        (Z_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[3, 2, j])
                        TaylorSeries.zero!(Z_bf_3[i, j])
                        (Z_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[3, 3, j])
                        TaylorSeries.zero!(tmp3156[i, j])
                        (tmp3156[i, j]).coeffs[1] = constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j])
                        TaylorSeries.zero!(X_bf[i, j])
                        (X_bf[i, j]).coeffs[1] = constant_term(tmp3156[i, j]) + constant_term(X_bf_3[i, j])
                        TaylorSeries.zero!(tmp3158[i, j])
                        (tmp3158[i, j]).coeffs[1] = constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j])
                        TaylorSeries.zero!(Y_bf[i, j])
                        (Y_bf[i, j]).coeffs[1] = constant_term(tmp3158[i, j]) + constant_term(Y_bf_3[i, j])
                        TaylorSeries.zero!(tmp3160[i, j])
                        (tmp3160[i, j]).coeffs[1] = constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j])
                        TaylorSeries.zero!(Z_bf[i, j])
                        (Z_bf[i, j]).coeffs[1] = constant_term(tmp3160[i, j]) + constant_term(Z_bf_3[i, j])
                        TaylorSeries.zero!(sin_ϕ[i, j])
                        (sin_ϕ[i, j]).coeffs[1] = constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j])
                        TaylorSeries.zero!(tmp3164[i, j])
                        (tmp3164[i, j]).coeffs[1] = constant_term(X_bf[i, j]) ^ float(constant_term(2))
                        TaylorSeries.zero!(tmp3166[i, j])
                        (tmp3166[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) ^ float(constant_term(2))
                        TaylorSeries.zero!(tmp3167[i, j])
                        (tmp3167[i, j]).coeffs[1] = constant_term(tmp3164[i, j]) + constant_term(tmp3166[i, j])
                        TaylorSeries.zero!(r_xy[i, j])
                        (r_xy[i, j]).coeffs[1] = sqrt(constant_term(tmp3167[i, j]))
                        TaylorSeries.zero!(cos_ϕ[i, j])
                        (cos_ϕ[i, j]).coeffs[1] = constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j])
                        TaylorSeries.zero!(sin_λ[i, j])
                        (sin_λ[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j])
                        TaylorSeries.zero!(cos_λ[i, j])
                        (cos_λ[i, j]).coeffs[1] = constant_term(X_bf[i, j]) / constant_term(r_xy[i, j])
                        TaylorSeries.zero!(P_n[i, j, 1])
                        (P_n[i, j, 1]).coeffs[1] = identity(constant_term(one_t))
                        TaylorSeries.zero!(P_n[i, j, 2])
                        (P_n[i, j, 2]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                        TaylorSeries.zero!(dP_n[i, j, 1])
                        (dP_n[i, j, 1]).coeffs[1] = identity(constant_term(zero_q_1))
                        TaylorSeries.zero!(dP_n[i, j, 2])
                        (dP_n[i, j, 2]).coeffs[1] = identity(constant_term(one_t))
                        for n = 2:n1SEM[j]
                            TaylorSeries.zero!(tmp3172[i, j, n])
                            (tmp3172[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                            TaylorSeries.zero!(tmp3173[i, j, n])
                            (tmp3173[i, j, n]).coeffs[1] = constant_term(tmp3172[i, j, n]) * constant_term(fact1_jsem[n])
                            TaylorSeries.zero!(tmp3174[i, j, n - 1])
                            (tmp3174[i, j, n - 1]).coeffs[1] = constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n])
                            TaylorSeries.zero!(P_n[i, j, n + 1])
                            (P_n[i, j, n + 1]).coeffs[1] = constant_term(tmp3173[i, j, n]) - constant_term(tmp3174[i, j, n - 1])
                            TaylorSeries.zero!(tmp3176[i, j, n])
                            (tmp3176[i, j, n]).coeffs[1] = constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                            TaylorSeries.zero!(tmp3177[i, j, n])
                            (tmp3177[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n])
                            TaylorSeries.zero!(dP_n[i, j, n + 1])
                            (dP_n[i, j, n + 1]).coeffs[1] = constant_term(tmp3176[i, j, n]) + constant_term(tmp3177[i, j, n])
                            TaylorSeries.zero!(temp_rn[i, j, n])
                            (temp_rn[i, j, n]).coeffs[1] = constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n]))
                        end
                        TaylorSeries.zero!(r_p4[i, j])
                        (r_p4[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(2))
                        TaylorSeries.zero!(tmp3182[i, j, 3])
                        (tmp3182[i, j, 3]).coeffs[1] = constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2])
                        TaylorSeries.zero!(tmp3183[i, j, 3])
                        (tmp3183[i, j, 3]).coeffs[1] = constant_term(tmp3182[i, j, 3]) * constant_term(J2_t[j])
                        TaylorSeries.zero!(F_J_ξ[i, j])
                        (F_J_ξ[i, j]).coeffs[1] = constant_term(tmp3183[i, j, 3]) / constant_term(r_p4[i, j])
                        TaylorSeries.zero!(tmp3185[i, j, 3])
                        (tmp3185[i, j, 3]).coeffs[1] = -(constant_term(dP_n[i, j, 3]))
                        TaylorSeries.zero!(tmp3186[i, j, 3])
                        (tmp3186[i, j, 3]).coeffs[1] = constant_term(tmp3185[i, j, 3]) * constant_term(cos_ϕ[i, j])
                        TaylorSeries.zero!(tmp3187[i, j, 3])
                        (tmp3187[i, j, 3]).coeffs[1] = constant_term(tmp3186[i, j, 3]) * constant_term(J2_t[j])
                        TaylorSeries.zero!(F_J_ζ[i, j])
                        (F_J_ζ[i, j]).coeffs[1] = constant_term(tmp3187[i, j, 3]) / constant_term(r_p4[i, j])
                        TaylorSeries.zero!(F_J_ξ_36[i, j])
                        (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        TaylorSeries.zero!(F_J_ζ_36[i, j])
                        (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        for n = 3:n1SEM[j]
                            TaylorSeries.zero!(tmp3189[i, j, n + 1])
                            (tmp3189[i, j, n + 1]).coeffs[1] = constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n])
                            TaylorSeries.zero!(tmp3190[i, j, n + 1])
                            (tmp3190[i, j, n + 1]).coeffs[1] = constant_term(tmp3189[i, j, n + 1]) * constant_term(JSEM[j, n])
                            TaylorSeries.zero!(tmp3191[i, j, n + 1])
                            (tmp3191[i, j, n + 1]).coeffs[1] = constant_term(tmp3190[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                            TaylorSeries.zero!(temp_fjξ[i, j, n])
                            (temp_fjξ[i, j, n]).coeffs[1] = constant_term(tmp3191[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j])
                            TaylorSeries.zero!(tmp3193[i, j, n + 1])
                            (tmp3193[i, j, n + 1]).coeffs[1] = -(constant_term(dP_n[i, j, n + 1]))
                            TaylorSeries.zero!(tmp3194[i, j, n + 1])
                            (tmp3194[i, j, n + 1]).coeffs[1] = constant_term(tmp3193[i, j, n + 1]) * constant_term(cos_ϕ[i, j])
                            TaylorSeries.zero!(tmp3195[i, j, n + 1])
                            (tmp3195[i, j, n + 1]).coeffs[1] = constant_term(tmp3194[i, j, n + 1]) * constant_term(JSEM[j, n])
                            TaylorSeries.zero!(tmp3196[i, j, n + 1])
                            (tmp3196[i, j, n + 1]).coeffs[1] = constant_term(tmp3195[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                            TaylorSeries.zero!(temp_fjζ[i, j, n])
                            (temp_fjζ[i, j, n]).coeffs[1] = constant_term(tmp3196[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j])
                            TaylorSeries.zero!(F_J_ξ_36[i, j])
                            (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjξ[i, j, n]))
                            TaylorSeries.zero!(F_J_ζ_36[i, j])
                            (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjζ[i, j, n]))
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    TaylorSeries.zero!(sin_mλ[i, j, 1])
                                    (sin_mλ[i, j, 1]).coeffs[1] = identity(constant_term(sin_λ[i, j]))
                                    TaylorSeries.zero!(cos_mλ[i, j, 1])
                                    (cos_mλ[i, j, 1]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                                    TaylorSeries.zero!(secϕ_P_nm[i, j, 1, 1])
                                    (secϕ_P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(one_t))
                                    TaylorSeries.zero!(P_nm[i, j, 1, 1])
                                    (P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                                    TaylorSeries.zero!(cosϕ_dP_nm[i, j, 1, 1])
                                    (cosϕ_dP_nm[i, j, 1, 1]).coeffs[1] = constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1])
                                else
                                    TaylorSeries.zero!(tmp3199[i, j, m - 1])
                                    (tmp3199[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                    TaylorSeries.zero!(tmp3200[i, j, m - 1])
                                    (tmp3200[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                    TaylorSeries.zero!(sin_mλ[i, j, m])
                                    (sin_mλ[i, j, m]).coeffs[1] = constant_term(tmp3199[i, j, m - 1]) + constant_term(tmp3200[i, j, m - 1])
                                    TaylorSeries.zero!(tmp3202[i, j, m - 1])
                                    (tmp3202[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                    TaylorSeries.zero!(tmp3203[i, j, m - 1])
                                    (tmp3203[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                    TaylorSeries.zero!(cos_mλ[i, j, m])
                                    (cos_mλ[i, j, m]).coeffs[1] = constant_term(tmp3202[i, j, m - 1]) - constant_term(tmp3203[i, j, m - 1])
                                    TaylorSeries.zero!(tmp3205[i, j, m - 1, m - 1])
                                    (tmp3205[i, j, m - 1, m - 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j])
                                    TaylorSeries.zero!(secϕ_P_nm[i, j, m, m])
                                    (secϕ_P_nm[i, j, m, m]).coeffs[1] = constant_term(tmp3205[i, j, m - 1, m - 1]) * constant_term(lnm5[m])
                                    TaylorSeries.zero!(P_nm[i, j, m, m])
                                    (P_nm[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j])
                                    TaylorSeries.zero!(tmp3208[i, j, m, m])
                                    (tmp3208[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j])
                                    TaylorSeries.zero!(cosϕ_dP_nm[i, j, m, m])
                                    (cosϕ_dP_nm[i, j, m, m]).coeffs[1] = constant_term(tmp3208[i, j, m, m]) * constant_term(lnm3[m])
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        TaylorSeries.zero!(tmp3210[i, j, n - 1, m])
                                        (tmp3210[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                        TaylorSeries.zero!(secϕ_P_nm[i, j, n, m])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp3210[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                    else
                                        TaylorSeries.zero!(tmp3212[i, j, n - 1, m])
                                        (tmp3212[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                        TaylorSeries.zero!(tmp3213[i, j, n - 1, m])
                                        (tmp3213[i, j, n - 1, m]).coeffs[1] = constant_term(tmp3212[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                        TaylorSeries.zero!(tmp3214[i, j, n - 2, m])
                                        (tmp3214[i, j, n - 2, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m])
                                        TaylorSeries.zero!(secϕ_P_nm[i, j, n, m])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp3213[i, j, n - 1, m]) + constant_term(tmp3214[i, j, n - 2, m])
                                    end
                                    TaylorSeries.zero!(P_nm[i, j, n, m])
                                    (P_nm[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j])
                                    TaylorSeries.zero!(tmp3217[i, j, n, m])
                                    (tmp3217[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j])
                                    TaylorSeries.zero!(tmp3218[i, j, n, m])
                                    (tmp3218[i, j, n, m]).coeffs[1] = constant_term(tmp3217[i, j, n, m]) * constant_term(lnm3[n])
                                    TaylorSeries.zero!(tmp3219[i, j, n - 1, m])
                                    (tmp3219[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m])
                                    TaylorSeries.zero!(cosϕ_dP_nm[i, j, n, m])
                                    (cosϕ_dP_nm[i, j, n, m]).coeffs[1] = constant_term(tmp3218[i, j, n, m]) + constant_term(tmp3219[i, j, n - 1, m])
                                end
                            end
                            TaylorSeries.zero!(tmp3221[i, j, 2, 1])
                            (tmp3221[i, j, 2, 1]).coeffs[1] = constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2])
                            TaylorSeries.zero!(tmp3222[i, j, 1])
                            (tmp3222[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp3223[i, j, 1])
                            (tmp3223[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp3224[i, j, 1])
                            (tmp3224[i, j, 1]).coeffs[1] = constant_term(tmp3222[i, j, 1]) + constant_term(tmp3223[i, j, 1])
                            TaylorSeries.zero!(tmp3225[i, j, 2, 1])
                            (tmp3225[i, j, 2, 1]).coeffs[1] = constant_term(tmp3221[i, j, 2, 1]) * constant_term(tmp3224[i, j, 1])
                            TaylorSeries.zero!(tmp3226[i, j, 2, 2])
                            (tmp3226[i, j, 2, 2]).coeffs[1] = constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2])
                            TaylorSeries.zero!(tmp3227[i, j, 2])
                            (tmp3227[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp3228[i, j, 2])
                            (tmp3228[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp3229[i, j, 2])
                            (tmp3229[i, j, 2]).coeffs[1] = constant_term(tmp3227[i, j, 2]) + constant_term(tmp3228[i, j, 2])
                            TaylorSeries.zero!(tmp3230[i, j, 2, 2])
                            (tmp3230[i, j, 2, 2]).coeffs[1] = constant_term(tmp3226[i, j, 2, 2]) * constant_term(tmp3229[i, j, 2])
                            TaylorSeries.zero!(tmp3231[i, j, 2, 1])
                            (tmp3231[i, j, 2, 1]).coeffs[1] = constant_term(tmp3225[i, j, 2, 1]) + constant_term(tmp3230[i, j, 2, 2])
                            TaylorSeries.zero!(F_CS_ξ[i, j])
                            (F_CS_ξ[i, j]).coeffs[1] = constant_term(tmp3231[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            TaylorSeries.zero!(tmp3233[i, j, 2, 1])
                            (tmp3233[i, j, 2, 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1])
                            TaylorSeries.zero!(tmp3234[i, j, 1])
                            (tmp3234[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp3235[i, j, 1])
                            (tmp3235[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp3236[i, j, 1])
                            (tmp3236[i, j, 1]).coeffs[1] = constant_term(tmp3234[i, j, 1]) - constant_term(tmp3235[i, j, 1])
                            TaylorSeries.zero!(tmp3237[i, j, 2, 1])
                            (tmp3237[i, j, 2, 1]).coeffs[1] = constant_term(tmp3233[i, j, 2, 1]) * constant_term(tmp3236[i, j, 1])
                            TaylorSeries.zero!(tmp3238[i, j, 2, 2])
                            (tmp3238[i, j, 2, 2]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2])
                            TaylorSeries.zero!(tmp3239[i, j, 2])
                            (tmp3239[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp3240[i, j, 2])
                            (tmp3240[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp3241[i, j, 2])
                            (tmp3241[i, j, 2]).coeffs[1] = constant_term(tmp3239[i, j, 2]) - constant_term(tmp3240[i, j, 2])
                            TaylorSeries.zero!(tmp3242[i, j, 2, 2])
                            (tmp3242[i, j, 2, 2]).coeffs[1] = constant_term(tmp3238[i, j, 2, 2]) * constant_term(tmp3241[i, j, 2])
                            TaylorSeries.zero!(tmp3243[i, j, 2, 1])
                            (tmp3243[i, j, 2, 1]).coeffs[1] = constant_term(tmp3237[i, j, 2, 1]) + constant_term(tmp3242[i, j, 2, 2])
                            TaylorSeries.zero!(F_CS_η[i, j])
                            (F_CS_η[i, j]).coeffs[1] = constant_term(tmp3243[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            TaylorSeries.zero!(tmp3245[i, j, 1])
                            (tmp3245[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp3246[i, j, 1])
                            (tmp3246[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                            TaylorSeries.zero!(tmp3247[i, j, 1])
                            (tmp3247[i, j, 1]).coeffs[1] = constant_term(tmp3245[i, j, 1]) + constant_term(tmp3246[i, j, 1])
                            TaylorSeries.zero!(tmp3248[i, j, 2, 1])
                            (tmp3248[i, j, 2, 1]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp3247[i, j, 1])
                            TaylorSeries.zero!(tmp3249[i, j, 2])
                            (tmp3249[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp3250[i, j, 2])
                            (tmp3250[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                            TaylorSeries.zero!(tmp3251[i, j, 2])
                            (tmp3251[i, j, 2]).coeffs[1] = constant_term(tmp3249[i, j, 2]) + constant_term(tmp3250[i, j, 2])
                            TaylorSeries.zero!(tmp3252[i, j, 2, 2])
                            (tmp3252[i, j, 2, 2]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp3251[i, j, 2])
                            TaylorSeries.zero!(tmp3253[i, j, 2, 1])
                            (tmp3253[i, j, 2, 1]).coeffs[1] = constant_term(tmp3248[i, j, 2, 1]) + constant_term(tmp3252[i, j, 2, 2])
                            TaylorSeries.zero!(F_CS_ζ[i, j])
                            (F_CS_ζ[i, j]).coeffs[1] = constant_term(tmp3253[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            TaylorSeries.zero!(F_CS_ξ_36[i, j])
                            (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            TaylorSeries.zero!(F_CS_η_36[i, j])
                            (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            TaylorSeries.zero!(F_CS_ζ_36[i, j])
                            (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            for n = 3:n2M
                                for m = 1:n
                                    TaylorSeries.zero!(Cnm_cosmλ[i, j, n, m])
                                    (Cnm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m])
                                    TaylorSeries.zero!(Cnm_sinmλ[i, j, n, m])
                                    (Cnm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m])
                                    TaylorSeries.zero!(Snm_cosmλ[i, j, n, m])
                                    (Snm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m])
                                    TaylorSeries.zero!(Snm_sinmλ[i, j, n, m])
                                    (Snm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m])
                                    TaylorSeries.zero!(tmp3259[i, j, n, m])
                                    (tmp3259[i, j, n, m]).coeffs[1] = constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n])
                                    TaylorSeries.zero!(tmp3260[i, j, n, m])
                                    (tmp3260[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                    TaylorSeries.zero!(tmp3261[i, j, n, m])
                                    (tmp3261[i, j, n, m]).coeffs[1] = constant_term(tmp3259[i, j, n, m]) * constant_term(tmp3260[i, j, n, m])
                                    TaylorSeries.zero!(tmp3262[i, j, n, m])
                                    (tmp3262[i, j, n, m]).coeffs[1] = constant_term(tmp3261[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    TaylorSeries.zero!(temp_CS_ξ[i, j, n, m])
                                    (temp_CS_ξ[i, j, n, m]).coeffs[1] = constant_term(tmp3262[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j])
                                    TaylorSeries.zero!(tmp3264[i, j, n, m])
                                    (tmp3264[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m])
                                    TaylorSeries.zero!(tmp3265[i, j, n, m])
                                    (tmp3265[i, j, n, m]).coeffs[1] = constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m])
                                    TaylorSeries.zero!(tmp3266[i, j, n, m])
                                    (tmp3266[i, j, n, m]).coeffs[1] = constant_term(tmp3264[i, j, n, m]) * constant_term(tmp3265[i, j, n, m])
                                    TaylorSeries.zero!(tmp3267[i, j, n, m])
                                    (tmp3267[i, j, n, m]).coeffs[1] = constant_term(tmp3266[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    TaylorSeries.zero!(temp_CS_η[i, j, n, m])
                                    (temp_CS_η[i, j, n, m]).coeffs[1] = constant_term(tmp3267[i, j, n, m]) + constant_term(F_CS_η_36[i, j])
                                    TaylorSeries.zero!(tmp3269[i, j, n, m])
                                    (tmp3269[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                    TaylorSeries.zero!(tmp3270[i, j, n, m])
                                    (tmp3270[i, j, n, m]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp3269[i, j, n, m])
                                    TaylorSeries.zero!(tmp3271[i, j, n, m])
                                    (tmp3271[i, j, n, m]).coeffs[1] = constant_term(tmp3270[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    TaylorSeries.zero!(temp_CS_ζ[i, j, n, m])
                                    (temp_CS_ζ[i, j, n, m]).coeffs[1] = constant_term(tmp3271[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j])
                                    TaylorSeries.zero!(F_CS_ξ_36[i, j])
                                    (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ξ[i, j, n, m]))
                                    TaylorSeries.zero!(F_CS_η_36[i, j])
                                    (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_η[i, j, n, m]))
                                    TaylorSeries.zero!(F_CS_ζ_36[i, j])
                                    (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ζ[i, j, n, m]))
                                end
                            end
                            TaylorSeries.zero!(tmp3273[i, j])
                            (tmp3273[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                            TaylorSeries.zero!(tmp3274[i, j])
                            (tmp3274[i, j]).coeffs[1] = constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j])
                            TaylorSeries.zero!(F_JCS_ξ[i, j])
                            (F_JCS_ξ[i, j]).coeffs[1] = constant_term(tmp3273[i, j]) + constant_term(tmp3274[i, j])
                            TaylorSeries.zero!(F_JCS_η[i, j])
                            (F_JCS_η[i, j]).coeffs[1] = constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j])
                            TaylorSeries.zero!(tmp3277[i, j])
                            (tmp3277[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                            TaylorSeries.zero!(tmp3278[i, j])
                            (tmp3278[i, j]).coeffs[1] = constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j])
                            TaylorSeries.zero!(F_JCS_ζ[i, j])
                            (F_JCS_ζ[i, j]).coeffs[1] = constant_term(tmp3277[i, j]) + constant_term(tmp3278[i, j])
                        else
                            TaylorSeries.zero!(F_JCS_ξ[i, j])
                            (F_JCS_ξ[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                            TaylorSeries.zero!(F_JCS_η[i, j])
                            (F_JCS_η[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            TaylorSeries.zero!(F_JCS_ζ[i, j])
                            (F_JCS_ζ[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                        end
                        TaylorSeries.zero!(Rb2p[i, j, 1, 1])
                        (Rb2p[i, j, 1, 1]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j])
                        TaylorSeries.zero!(Rb2p[i, j, 2, 1])
                        (Rb2p[i, j, 2, 1]).coeffs[1] = -(constant_term(sin_λ[i, j]))
                        TaylorSeries.zero!(tmp3284[i, j])
                        (tmp3284[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                        TaylorSeries.zero!(Rb2p[i, j, 3, 1])
                        (Rb2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp3284[i, j]) * constant_term(cos_λ[i, j])
                        TaylorSeries.zero!(Rb2p[i, j, 1, 2])
                        (Rb2p[i, j, 1, 2]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j])
                        TaylorSeries.zero!(Rb2p[i, j, 2, 2])
                        (Rb2p[i, j, 2, 2]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                        TaylorSeries.zero!(tmp3287[i, j])
                        (tmp3287[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                        TaylorSeries.zero!(Rb2p[i, j, 3, 2])
                        (Rb2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp3287[i, j]) * constant_term(sin_λ[i, j])
                        TaylorSeries.zero!(Rb2p[i, j, 1, 3])
                        (Rb2p[i, j, 1, 3]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                        TaylorSeries.zero!(Rb2p[i, j, 2, 3])
                        (Rb2p[i, j, 2, 3]).coeffs[1] = identity(constant_term(zero_q_1))
                        TaylorSeries.zero!(Rb2p[i, j, 3, 3])
                        (Rb2p[i, j, 3, 3]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                        TaylorSeries.zero!(tmp3289[i, j, 1, 1])
                        (tmp3289[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j])
                        TaylorSeries.zero!(tmp3290[i, j, 1, 2])
                        (tmp3290[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j])
                        TaylorSeries.zero!(tmp3291[i, j, 1, 1])
                        (tmp3291[i, j, 1, 1]).coeffs[1] = constant_term(tmp3289[i, j, 1, 1]) + constant_term(tmp3290[i, j, 1, 2])
                        TaylorSeries.zero!(tmp3292[i, j, 1, 3])
                        (tmp3292[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j])
                        TaylorSeries.zero!(Gc2p[i, j, 1, 1])
                        (Gc2p[i, j, 1, 1]).coeffs[1] = constant_term(tmp3291[i, j, 1, 1]) + constant_term(tmp3292[i, j, 1, 3])
                        TaylorSeries.zero!(tmp3294[i, j, 2, 1])
                        (tmp3294[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j])
                        TaylorSeries.zero!(tmp3295[i, j, 2, 2])
                        (tmp3295[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j])
                        TaylorSeries.zero!(tmp3296[i, j, 2, 1])
                        (tmp3296[i, j, 2, 1]).coeffs[1] = constant_term(tmp3294[i, j, 2, 1]) + constant_term(tmp3295[i, j, 2, 2])
                        TaylorSeries.zero!(tmp3297[i, j, 2, 3])
                        (tmp3297[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j])
                        TaylorSeries.zero!(Gc2p[i, j, 2, 1])
                        (Gc2p[i, j, 2, 1]).coeffs[1] = constant_term(tmp3296[i, j, 2, 1]) + constant_term(tmp3297[i, j, 2, 3])
                        TaylorSeries.zero!(tmp3299[i, j, 3, 1])
                        (tmp3299[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j])
                        TaylorSeries.zero!(tmp3300[i, j, 3, 2])
                        (tmp3300[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j])
                        TaylorSeries.zero!(tmp3301[i, j, 3, 1])
                        (tmp3301[i, j, 3, 1]).coeffs[1] = constant_term(tmp3299[i, j, 3, 1]) + constant_term(tmp3300[i, j, 3, 2])
                        TaylorSeries.zero!(tmp3302[i, j, 3, 3])
                        (tmp3302[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j])
                        TaylorSeries.zero!(Gc2p[i, j, 3, 1])
                        (Gc2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp3301[i, j, 3, 1]) + constant_term(tmp3302[i, j, 3, 3])
                        TaylorSeries.zero!(tmp3304[i, j, 1, 1])
                        (tmp3304[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j])
                        TaylorSeries.zero!(tmp3305[i, j, 1, 2])
                        (tmp3305[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j])
                        TaylorSeries.zero!(tmp3306[i, j, 1, 1])
                        (tmp3306[i, j, 1, 1]).coeffs[1] = constant_term(tmp3304[i, j, 1, 1]) + constant_term(tmp3305[i, j, 1, 2])
                        TaylorSeries.zero!(tmp3307[i, j, 1, 3])
                        (tmp3307[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j])
                        TaylorSeries.zero!(Gc2p[i, j, 1, 2])
                        (Gc2p[i, j, 1, 2]).coeffs[1] = constant_term(tmp3306[i, j, 1, 1]) + constant_term(tmp3307[i, j, 1, 3])
                        TaylorSeries.zero!(tmp3309[i, j, 2, 1])
                        (tmp3309[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j])
                        TaylorSeries.zero!(tmp3310[i, j, 2, 2])
                        (tmp3310[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j])
                        TaylorSeries.zero!(tmp3311[i, j, 2, 1])
                        (tmp3311[i, j, 2, 1]).coeffs[1] = constant_term(tmp3309[i, j, 2, 1]) + constant_term(tmp3310[i, j, 2, 2])
                        TaylorSeries.zero!(tmp3312[i, j, 2, 3])
                        (tmp3312[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j])
                        TaylorSeries.zero!(Gc2p[i, j, 2, 2])
                        (Gc2p[i, j, 2, 2]).coeffs[1] = constant_term(tmp3311[i, j, 2, 1]) + constant_term(tmp3312[i, j, 2, 3])
                        TaylorSeries.zero!(tmp3314[i, j, 3, 1])
                        (tmp3314[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j])
                        TaylorSeries.zero!(tmp3315[i, j, 3, 2])
                        (tmp3315[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j])
                        TaylorSeries.zero!(tmp3316[i, j, 3, 1])
                        (tmp3316[i, j, 3, 1]).coeffs[1] = constant_term(tmp3314[i, j, 3, 1]) + constant_term(tmp3315[i, j, 3, 2])
                        TaylorSeries.zero!(tmp3317[i, j, 3, 3])
                        (tmp3317[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j])
                        TaylorSeries.zero!(Gc2p[i, j, 3, 2])
                        (Gc2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp3316[i, j, 3, 1]) + constant_term(tmp3317[i, j, 3, 3])
                        TaylorSeries.zero!(tmp3319[i, j, 1, 1])
                        (tmp3319[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j])
                        TaylorSeries.zero!(tmp3320[i, j, 1, 2])
                        (tmp3320[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j])
                        TaylorSeries.zero!(tmp3321[i, j, 1, 1])
                        (tmp3321[i, j, 1, 1]).coeffs[1] = constant_term(tmp3319[i, j, 1, 1]) + constant_term(tmp3320[i, j, 1, 2])
                        TaylorSeries.zero!(tmp3322[i, j, 1, 3])
                        (tmp3322[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j])
                        TaylorSeries.zero!(Gc2p[i, j, 1, 3])
                        (Gc2p[i, j, 1, 3]).coeffs[1] = constant_term(tmp3321[i, j, 1, 1]) + constant_term(tmp3322[i, j, 1, 3])
                        TaylorSeries.zero!(tmp3324[i, j, 2, 1])
                        (tmp3324[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j])
                        TaylorSeries.zero!(tmp3325[i, j, 2, 2])
                        (tmp3325[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j])
                        TaylorSeries.zero!(tmp3326[i, j, 2, 1])
                        (tmp3326[i, j, 2, 1]).coeffs[1] = constant_term(tmp3324[i, j, 2, 1]) + constant_term(tmp3325[i, j, 2, 2])
                        TaylorSeries.zero!(tmp3327[i, j, 2, 3])
                        (tmp3327[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j])
                        TaylorSeries.zero!(Gc2p[i, j, 2, 3])
                        (Gc2p[i, j, 2, 3]).coeffs[1] = constant_term(tmp3326[i, j, 2, 1]) + constant_term(tmp3327[i, j, 2, 3])
                        TaylorSeries.zero!(tmp3329[i, j, 3, 1])
                        (tmp3329[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j])
                        TaylorSeries.zero!(tmp3330[i, j, 3, 2])
                        (tmp3330[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j])
                        TaylorSeries.zero!(tmp3331[i, j, 3, 1])
                        (tmp3331[i, j, 3, 1]).coeffs[1] = constant_term(tmp3329[i, j, 3, 1]) + constant_term(tmp3330[i, j, 3, 2])
                        TaylorSeries.zero!(tmp3332[i, j, 3, 3])
                        (tmp3332[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j])
                        TaylorSeries.zero!(Gc2p[i, j, 3, 3])
                        (Gc2p[i, j, 3, 3]).coeffs[1] = constant_term(tmp3331[i, j, 3, 1]) + constant_term(tmp3332[i, j, 3, 3])
                        TaylorSeries.zero!(tmp3334[i, j, 1, 1])
                        (tmp3334[i, j, 1, 1]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1])
                        TaylorSeries.zero!(tmp3335[i, j, 2, 1])
                        (tmp3335[i, j, 2, 1]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1])
                        TaylorSeries.zero!(tmp3336[i, j, 1, 1])
                        (tmp3336[i, j, 1, 1]).coeffs[1] = constant_term(tmp3334[i, j, 1, 1]) + constant_term(tmp3335[i, j, 2, 1])
                        TaylorSeries.zero!(tmp3337[i, j, 3, 1])
                        (tmp3337[i, j, 3, 1]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1])
                        TaylorSeries.zero!(F_JCS_x[i, j])
                        (F_JCS_x[i, j]).coeffs[1] = constant_term(tmp3336[i, j, 1, 1]) + constant_term(tmp3337[i, j, 3, 1])
                        TaylorSeries.zero!(tmp3339[i, j, 1, 2])
                        (tmp3339[i, j, 1, 2]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2])
                        TaylorSeries.zero!(tmp3340[i, j, 2, 2])
                        (tmp3340[i, j, 2, 2]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2])
                        TaylorSeries.zero!(tmp3341[i, j, 1, 2])
                        (tmp3341[i, j, 1, 2]).coeffs[1] = constant_term(tmp3339[i, j, 1, 2]) + constant_term(tmp3340[i, j, 2, 2])
                        TaylorSeries.zero!(tmp3342[i, j, 3, 2])
                        (tmp3342[i, j, 3, 2]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2])
                        TaylorSeries.zero!(F_JCS_y[i, j])
                        (F_JCS_y[i, j]).coeffs[1] = constant_term(tmp3341[i, j, 1, 2]) + constant_term(tmp3342[i, j, 3, 2])
                        TaylorSeries.zero!(tmp3344[i, j, 1, 3])
                        (tmp3344[i, j, 1, 3]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3])
                        TaylorSeries.zero!(tmp3345[i, j, 2, 3])
                        (tmp3345[i, j, 2, 3]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3])
                        TaylorSeries.zero!(tmp3346[i, j, 1, 3])
                        (tmp3346[i, j, 1, 3]).coeffs[1] = constant_term(tmp3344[i, j, 1, 3]) + constant_term(tmp3345[i, j, 2, 3])
                        TaylorSeries.zero!(tmp3347[i, j, 3, 3])
                        (tmp3347[i, j, 3, 3]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3])
                        TaylorSeries.zero!(F_JCS_z[i, j])
                        (F_JCS_z[i, j]).coeffs[1] = constant_term(tmp3346[i, j, 1, 3]) + constant_term(tmp3347[i, j, 3, 3])
                    end
                end
            end
        end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    TaylorSeries.zero!(tmp3349[i, j])
                    (tmp3349[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_x[i, j])
                    TaylorSeries.zero!(temp_accX_j[i, j])
                    (temp_accX_j[i, j]).coeffs[1] = constant_term(accX[j]) - constant_term(tmp3349[i, j])
                    TaylorSeries.zero!(accX[j])
                    (accX[j]).coeffs[1] = identity(constant_term(temp_accX_j[i, j]))
                    TaylorSeries.zero!(tmp3351[i, j])
                    (tmp3351[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_y[i, j])
                    TaylorSeries.zero!(temp_accY_j[i, j])
                    (temp_accY_j[i, j]).coeffs[1] = constant_term(accY[j]) - constant_term(tmp3351[i, j])
                    TaylorSeries.zero!(accY[j])
                    (accY[j]).coeffs[1] = identity(constant_term(temp_accY_j[i, j]))
                    TaylorSeries.zero!(tmp3353[i, j])
                    (tmp3353[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_z[i, j])
                    TaylorSeries.zero!(temp_accZ_j[i, j])
                    (temp_accZ_j[i, j]).coeffs[1] = constant_term(accZ[j]) - constant_term(tmp3353[i, j])
                    TaylorSeries.zero!(accZ[j])
                    (accZ[j]).coeffs[1] = identity(constant_term(temp_accZ_j[i, j]))
                    TaylorSeries.zero!(tmp3355[i, j])
                    (tmp3355[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_x[i, j])
                    TaylorSeries.zero!(temp_accX_i[i, j])
                    (temp_accX_i[i, j]).coeffs[1] = constant_term(accX[i]) + constant_term(tmp3355[i, j])
                    TaylorSeries.zero!(accX[i])
                    (accX[i]).coeffs[1] = identity(constant_term(temp_accX_i[i, j]))
                    TaylorSeries.zero!(tmp3357[i, j])
                    (tmp3357[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_y[i, j])
                    TaylorSeries.zero!(temp_accY_i[i, j])
                    (temp_accY_i[i, j]).coeffs[1] = constant_term(accY[i]) + constant_term(tmp3357[i, j])
                    TaylorSeries.zero!(accY[i])
                    (accY[i]).coeffs[1] = identity(constant_term(temp_accY_i[i, j]))
                    TaylorSeries.zero!(tmp3359[i, j])
                    (tmp3359[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_z[i, j])
                    TaylorSeries.zero!(temp_accZ_i[i, j])
                    (temp_accZ_i[i, j]).coeffs[1] = constant_term(accZ[i]) + constant_term(tmp3359[i, j])
                    TaylorSeries.zero!(accZ[i])
                    (accZ[i]).coeffs[1] = identity(constant_term(temp_accZ_i[i, j]))
                    if j == mo
                        TaylorSeries.zero!(tmp3361[i, j])
                        (tmp3361[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j])
                        TaylorSeries.zero!(tmp3362[i, j])
                        (tmp3362[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j])
                        TaylorSeries.zero!(tmp3363[i, j])
                        (tmp3363[i, j]).coeffs[1] = constant_term(tmp3361[i, j]) - constant_term(tmp3362[i, j])
                        TaylorSeries.zero!(N_MfigM_pmA_x[i])
                        (N_MfigM_pmA_x[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp3363[i, j])
                        TaylorSeries.zero!(tmp3365[i, j])
                        (tmp3365[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j])
                        TaylorSeries.zero!(tmp3366[i, j])
                        (tmp3366[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_z[i, j])
                        TaylorSeries.zero!(tmp3367[i, j])
                        (tmp3367[i, j]).coeffs[1] = constant_term(tmp3365[i, j]) - constant_term(tmp3366[i, j])
                        TaylorSeries.zero!(N_MfigM_pmA_y[i])
                        (N_MfigM_pmA_y[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp3367[i, j])
                        TaylorSeries.zero!(tmp3369[i, j])
                        (tmp3369[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_y[i, j])
                        TaylorSeries.zero!(tmp3370[i, j])
                        (tmp3370[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j])
                        TaylorSeries.zero!(tmp3371[i, j])
                        (tmp3371[i, j]).coeffs[1] = constant_term(tmp3369[i, j]) - constant_term(tmp3370[i, j])
                        TaylorSeries.zero!(N_MfigM_pmA_z[i])
                        (N_MfigM_pmA_z[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp3371[i, j])
                        TaylorSeries.zero!(temp_N_M_x[i])
                        (temp_N_M_x[i]).coeffs[1] = constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i])
                        TaylorSeries.zero!(N_MfigM[1])
                        (N_MfigM[1]).coeffs[1] = identity(constant_term(temp_N_M_x[i]))
                        TaylorSeries.zero!(temp_N_M_y[i])
                        (temp_N_M_y[i]).coeffs[1] = constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i])
                        TaylorSeries.zero!(N_MfigM[2])
                        (N_MfigM[2]).coeffs[1] = identity(constant_term(temp_N_M_y[i]))
                        TaylorSeries.zero!(temp_N_M_z[i])
                        (temp_N_M_z[i]).coeffs[1] = constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i])
                        TaylorSeries.zero!(N_MfigM[3])
                        (N_MfigM[3]).coeffs[1] = identity(constant_term(temp_N_M_z[i]))
                    end
                end
            end
        end
    end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1619 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.zero!(_4ϕj[i, j])
                    (_4ϕj[i, j]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[j])
                    TaylorSeries.zero!(ϕi_plus_4ϕj[i, j])
                    (ϕi_plus_4ϕj[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j])
                    TaylorSeries.zero!(_2v2[i, j])
                    (_2v2[i, j]).coeffs[1] = constant_term(2) * constant_term(v2[i])
                    TaylorSeries.zero!(sj2_plus_2si2[i, j])
                    (sj2_plus_2si2[i, j]).coeffs[1] = constant_term(v2[j]) + constant_term(_2v2[i, j])
                    TaylorSeries.zero!(tmp3383[i, j])
                    (tmp3383[i, j]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i, j])
                    TaylorSeries.zero!(sj2_plus_2si2_minus_4vivj[i, j])
                    (sj2_plus_2si2_minus_4vivj[i, j]).coeffs[1] = constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp3383[i, j])
                    TaylorSeries.zero!(ϕs_and_vs[i, j])
                    (ϕs_and_vs[i, j]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j])
                    TaylorSeries.zero!(Xij_t_Ui[i, j])
                    (Xij_t_Ui[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(dq[3i - 2])
                    TaylorSeries.zero!(Yij_t_Vi[i, j])
                    (Yij_t_Vi[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(dq[3i - 1])
                    TaylorSeries.zero!(Zij_t_Wi[i, j])
                    (Zij_t_Wi[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(dq[3i])
                    TaylorSeries.zero!(tmp3389[i, j])
                    (tmp3389[i, j]).coeffs[1] = constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j])
                    TaylorSeries.zero!(Rij_dot_Vi[i, j])
                    (Rij_dot_Vi[i, j]).coeffs[1] = constant_term(tmp3389[i, j]) + constant_term(Zij_t_Wi[i, j])
                    TaylorSeries.zero!(tmp3392[i, j])
                    (tmp3392[i, j]).coeffs[1] = constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2))
                    TaylorSeries.zero!(rij_dot_vi_div_rij_sq[i, j])
                    (rij_dot_vi_div_rij_sq[i, j]).coeffs[1] = constant_term(tmp3392[i, j]) / constant_term(r_p2[i, j])
                    TaylorSeries.zero!(tmp3395[i, j])
                    (tmp3395[i, j]).coeffs[1] = constant_term(1.5) * constant_term(rij_dot_vi_div_rij_sq[i, j])
                    TaylorSeries.zero!(pn1t2_7[i, j])
                    (pn1t2_7[i, j]).coeffs[1] = constant_term(ϕs_and_vs[i, j]) - constant_term(tmp3395[i, j])
                    TaylorSeries.zero!(pn1t1_7[i, j])
                    (pn1t1_7[i, j]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i, j])
                end
            end
            TaylorSeries.zero!(pntempX[j])
            (pntempX[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(pntempY[j])
            (pntempY[j]).coeffs[1] = identity(constant_term(zero_q_1))
            TaylorSeries.zero!(pntempZ[j])
            (pntempZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1658 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.zero!(pNX_t_X[i, j])
                    (pNX_t_X[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(X[i, j])
                    TaylorSeries.zero!(pNY_t_Y[i, j])
                    (pNY_t_Y[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(Y[i, j])
                    TaylorSeries.zero!(pNZ_t_Z[i, j])
                    (pNZ_t_Z[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(Z[i, j])
                    TaylorSeries.zero!(tmp3402[i, j])
                    (tmp3402[i, j]).coeffs[1] = constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j])
                    TaylorSeries.zero!(tmp3403[i, j])
                    (tmp3403[i, j]).coeffs[1] = constant_term(tmp3402[i, j]) + constant_term(pNZ_t_Z[i, j])
                    TaylorSeries.zero!(tmp3404[i, j])
                    (tmp3404[i, j]).coeffs[1] = constant_term(0.5) * constant_term(tmp3403[i, j])
                    TaylorSeries.zero!(pn1[i, j])
                    (pn1[i, j]).coeffs[1] = constant_term(pn1t1_7[i, j]) + constant_term(tmp3404[i, j])
                    TaylorSeries.zero!(X_t_pn1[i, j])
                    (X_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j])
                    TaylorSeries.zero!(Y_t_pn1[i, j])
                    (Y_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j])
                    TaylorSeries.zero!(Z_t_pn1[i, j])
                    (Z_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j])
                    TaylorSeries.zero!(pNX_t_pn3[i, j])
                    (pNX_t_pn3[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(pn3[i, j])
                    TaylorSeries.zero!(pNY_t_pn3[i, j])
                    (pNY_t_pn3[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(pn3[i, j])
                    TaylorSeries.zero!(pNZ_t_pn3[i, j])
                    (pNZ_t_pn3[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(pn3[i, j])
                    TaylorSeries.zero!(tmp3412[i, j])
                    (tmp3412[i, j]).coeffs[1] = constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j])
                    TaylorSeries.zero!(termpnx[i, j])
                    (termpnx[i, j]).coeffs[1] = constant_term(X_t_pn1[i, j]) + constant_term(tmp3412[i, j])
                    TaylorSeries.zero!(sumpnx[i, j])
                    (sumpnx[i, j]).coeffs[1] = constant_term(pntempX[j]) + constant_term(termpnx[i, j])
                    TaylorSeries.zero!(pntempX[j])
                    (pntempX[j]).coeffs[1] = identity(constant_term(sumpnx[i, j]))
                    TaylorSeries.zero!(tmp3415[i, j])
                    (tmp3415[i, j]).coeffs[1] = constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j])
                    TaylorSeries.zero!(termpny[i, j])
                    (termpny[i, j]).coeffs[1] = constant_term(Y_t_pn1[i, j]) + constant_term(tmp3415[i, j])
                    TaylorSeries.zero!(sumpny[i, j])
                    (sumpny[i, j]).coeffs[1] = constant_term(pntempY[j]) + constant_term(termpny[i, j])
                    TaylorSeries.zero!(pntempY[j])
                    (pntempY[j]).coeffs[1] = identity(constant_term(sumpny[i, j]))
                    TaylorSeries.zero!(tmp3418[i, j])
                    (tmp3418[i, j]).coeffs[1] = constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j])
                    TaylorSeries.zero!(termpnz[i, j])
                    (termpnz[i, j]).coeffs[1] = constant_term(Z_t_pn1[i, j]) + constant_term(tmp3418[i, j])
                    TaylorSeries.zero!(sumpnz[i, j])
                    (sumpnz[i, j]).coeffs[1] = constant_term(pntempZ[j]) + constant_term(termpnz[i, j])
                    TaylorSeries.zero!(pntempZ[j])
                    (pntempZ[j]).coeffs[1] = identity(constant_term(sumpnz[i, j]))
                end
            end
            TaylorSeries.zero!(postNewtonX[j])
            (postNewtonX[j]).coeffs[1] = constant_term(pntempX[j]) * constant_term(c_m2)
            TaylorSeries.zero!(postNewtonY[j])
            (postNewtonY[j]).coeffs[1] = constant_term(pntempY[j]) * constant_term(c_m2)
            TaylorSeries.zero!(postNewtonZ[j])
            (postNewtonZ[j]).coeffs[1] = constant_term(pntempZ[j]) * constant_term(c_m2)
        end
    TaylorSeries.zero!(x0s_M)
    x0s_M.coeffs[1] = identity(constant_term(r_star_M_0[1]))
    TaylorSeries.zero!(y0s_M)
    y0s_M.coeffs[1] = identity(constant_term(r_star_M_0[2]))
    TaylorSeries.zero!(z0s_M)
    z0s_M.coeffs[1] = identity(constant_term(r_star_M_0[3]))
    TaylorSeries.zero!(tmp3425)
    tmp3425.coeffs[1] = constant_term(x0s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3427)
    tmp3427.coeffs[1] = constant_term(y0s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(ρ0s2_M)
    ρ0s2_M.coeffs[1] = constant_term(tmp3425) + constant_term(tmp3427)
    TaylorSeries.zero!(ρ0s_M)
    ρ0s_M.coeffs[1] = sqrt(constant_term(ρ0s2_M))
    TaylorSeries.zero!(z0s2_M)
    z0s2_M.coeffs[1] = constant_term(z0s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(r0s2_M)
    r0s2_M.coeffs[1] = constant_term(ρ0s2_M) + constant_term(z0s2_M)
    TaylorSeries.zero!(r0s_M)
    r0s_M.coeffs[1] = sqrt(constant_term(r0s2_M))
    TaylorSeries.zero!(r0s5_M)
    r0s5_M.coeffs[1] = constant_term(r0s_M) ^ float(constant_term(5))
    TaylorSeries.zero!(x0s_S)
    x0s_S.coeffs[1] = identity(constant_term(r_star_S_0[1]))
    TaylorSeries.zero!(y0s_S)
    y0s_S.coeffs[1] = identity(constant_term(r_star_S_0[2]))
    TaylorSeries.zero!(z0s_S)
    z0s_S.coeffs[1] = identity(constant_term(r_star_S_0[3]))
    TaylorSeries.zero!(tmp3437)
    tmp3437.coeffs[1] = constant_term(x0s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3439)
    tmp3439.coeffs[1] = constant_term(y0s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(ρ0s2_S)
    ρ0s2_S.coeffs[1] = constant_term(tmp3437) + constant_term(tmp3439)
    TaylorSeries.zero!(ρ0s_S)
    ρ0s_S.coeffs[1] = sqrt(constant_term(ρ0s2_S))
    TaylorSeries.zero!(z0s2_S)
    z0s2_S.coeffs[1] = constant_term(z0s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(r0s2_S)
    r0s2_S.coeffs[1] = constant_term(ρ0s2_S) + constant_term(z0s2_S)
    TaylorSeries.zero!(r0s_S)
    r0s_S.coeffs[1] = sqrt(constant_term(r0s2_S))
    TaylorSeries.zero!(r0s5_S)
    r0s5_S.coeffs[1] = constant_term(r0s_S) ^ float(constant_term(5))
    TaylorSeries.zero!(tmp3449)
    tmp3449.coeffs[1] = constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_0[3])
    TaylorSeries.zero!(tmp3451)
    tmp3451.coeffs[1] = constant_term(tmp3449) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3453)
    tmp3453.coeffs[1] = constant_term(r_xy[mo, ea]) * constant_term(ρ0s_M)
    TaylorSeries.zero!(tmp3455)
    tmp3455.coeffs[1] = constant_term(tmp3453) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3456)
    tmp3456.coeffs[1] = constant_term(0.5) * constant_term(tmp3455)
    TaylorSeries.zero!(tmp3457)
    tmp3457.coeffs[1] = constant_term(tmp3451) + constant_term(tmp3456)
    TaylorSeries.zero!(tmp3458)
    tmp3458.coeffs[1] = constant_term(tmp3457) / constant_term(r_p2[mo, ea])
    TaylorSeries.zero!(tmp3459)
    tmp3459.coeffs[1] = constant_term(5) * constant_term(tmp3458)
    TaylorSeries.zero!(coeff0_M)
    coeff0_M.coeffs[1] = constant_term(r0s2_M) - constant_term(tmp3459)
    TaylorSeries.zero!(tmp3462)
    tmp3462.coeffs[1] = constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_0[3])
    TaylorSeries.zero!(tmp3464)
    tmp3464.coeffs[1] = constant_term(tmp3462) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3466)
    tmp3466.coeffs[1] = constant_term(r_xy[mo, ea]) * constant_term(ρ0s_S)
    TaylorSeries.zero!(tmp3468)
    tmp3468.coeffs[1] = constant_term(tmp3466) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3469)
    tmp3469.coeffs[1] = constant_term(0.5) * constant_term(tmp3468)
    TaylorSeries.zero!(tmp3470)
    tmp3470.coeffs[1] = constant_term(tmp3464) + constant_term(tmp3469)
    TaylorSeries.zero!(tmp3471)
    tmp3471.coeffs[1] = constant_term(tmp3470) / constant_term(r_p2[mo, ea])
    TaylorSeries.zero!(tmp3472)
    tmp3472.coeffs[1] = constant_term(5) * constant_term(tmp3471)
    TaylorSeries.zero!(coeff0_S)
    coeff0_S.coeffs[1] = constant_term(r0s2_S) - constant_term(tmp3472)
    TaylorSeries.zero!(k_20E_div_r0s5_M)
    k_20E_div_r0s5_M.coeffs[1] = constant_term(k_20E) / constant_term(r0s5_M)
    TaylorSeries.zero!(k_20E_div_r0s5_S)
    k_20E_div_r0s5_S.coeffs[1] = constant_term(k_20E) / constant_term(r0s5_S)
    TaylorSeries.zero!(tmp3476)
    tmp3476.coeffs[1] = constant_term(ρ0s2_M) + constant_term(coeff0_M)
    TaylorSeries.zero!(tmp3477)
    tmp3477.coeffs[1] = constant_term(k_20E_div_r0s5_M) * constant_term(tmp3476)
    TaylorSeries.zero!(a_tid_0_M_x)
    a_tid_0_M_x.coeffs[1] = constant_term(tmp3477) * constant_term(X_bf[mo, ea])
    TaylorSeries.zero!(tmp3479)
    tmp3479.coeffs[1] = constant_term(ρ0s2_M) + constant_term(coeff0_M)
    TaylorSeries.zero!(tmp3480)
    tmp3480.coeffs[1] = constant_term(k_20E_div_r0s5_M) * constant_term(tmp3479)
    TaylorSeries.zero!(a_tid_0_M_y)
    a_tid_0_M_y.coeffs[1] = constant_term(tmp3480) * constant_term(Y_bf[mo, ea])
    TaylorSeries.zero!(tmp3483)
    tmp3483.coeffs[1] = constant_term(2) * constant_term(z0s2_M)
    TaylorSeries.zero!(tmp3484)
    tmp3484.coeffs[1] = constant_term(tmp3483) + constant_term(coeff0_M)
    TaylorSeries.zero!(tmp3485)
    tmp3485.coeffs[1] = constant_term(k_20E_div_r0s5_M) * constant_term(tmp3484)
    TaylorSeries.zero!(a_tid_0_M_z)
    a_tid_0_M_z.coeffs[1] = constant_term(tmp3485) * constant_term(Z_bf[mo, ea])
    TaylorSeries.zero!(tmp3487)
    tmp3487.coeffs[1] = constant_term(ρ0s2_S) + constant_term(coeff0_S)
    TaylorSeries.zero!(tmp3488)
    tmp3488.coeffs[1] = constant_term(k_20E_div_r0s5_S) * constant_term(tmp3487)
    TaylorSeries.zero!(a_tid_0_S_x)
    a_tid_0_S_x.coeffs[1] = constant_term(tmp3488) * constant_term(X_bf[mo, ea])
    TaylorSeries.zero!(tmp3490)
    tmp3490.coeffs[1] = constant_term(ρ0s2_S) + constant_term(coeff0_S)
    TaylorSeries.zero!(tmp3491)
    tmp3491.coeffs[1] = constant_term(k_20E_div_r0s5_S) * constant_term(tmp3490)
    TaylorSeries.zero!(a_tid_0_S_y)
    a_tid_0_S_y.coeffs[1] = constant_term(tmp3491) * constant_term(Y_bf[mo, ea])
    TaylorSeries.zero!(tmp3494)
    tmp3494.coeffs[1] = constant_term(2) * constant_term(z0s2_S)
    TaylorSeries.zero!(tmp3495)
    tmp3495.coeffs[1] = constant_term(tmp3494) + constant_term(coeff0_S)
    TaylorSeries.zero!(tmp3496)
    tmp3496.coeffs[1] = constant_term(k_20E_div_r0s5_S) * constant_term(tmp3495)
    TaylorSeries.zero!(a_tid_0_S_z)
    a_tid_0_S_z.coeffs[1] = constant_term(tmp3496) * constant_term(Z_bf[mo, ea])
    TaylorSeries.zero!(x1s_M)
    x1s_M.coeffs[1] = identity(constant_term(r_star_M_1[1]))
    TaylorSeries.zero!(y1s_M)
    y1s_M.coeffs[1] = identity(constant_term(r_star_M_1[2]))
    TaylorSeries.zero!(z1s_M)
    z1s_M.coeffs[1] = identity(constant_term(r_star_M_1[3]))
    TaylorSeries.zero!(tmp3499)
    tmp3499.coeffs[1] = constant_term(x1s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3501)
    tmp3501.coeffs[1] = constant_term(y1s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(ρ1s2_M)
    ρ1s2_M.coeffs[1] = constant_term(tmp3499) + constant_term(tmp3501)
    TaylorSeries.zero!(ρ1s_M)
    ρ1s_M.coeffs[1] = sqrt(constant_term(ρ1s2_M))
    TaylorSeries.zero!(z1s2_M)
    z1s2_M.coeffs[1] = constant_term(z1s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(r1s2_M)
    r1s2_M.coeffs[1] = constant_term(ρ1s2_M) + constant_term(z1s2_M)
    TaylorSeries.zero!(r1s_M)
    r1s_M.coeffs[1] = sqrt(constant_term(r1s2_M))
    TaylorSeries.zero!(r1s5_M)
    r1s5_M.coeffs[1] = constant_term(r1s_M) ^ float(constant_term(5))
    TaylorSeries.zero!(x1s_S)
    x1s_S.coeffs[1] = identity(constant_term(r_star_S_1[1]))
    TaylorSeries.zero!(y1s_S)
    y1s_S.coeffs[1] = identity(constant_term(r_star_S_1[2]))
    TaylorSeries.zero!(z1s_S)
    z1s_S.coeffs[1] = identity(constant_term(r_star_S_1[3]))
    TaylorSeries.zero!(tmp3511)
    tmp3511.coeffs[1] = constant_term(x1s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3513)
    tmp3513.coeffs[1] = constant_term(y1s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(ρ1s2_S)
    ρ1s2_S.coeffs[1] = constant_term(tmp3511) + constant_term(tmp3513)
    TaylorSeries.zero!(ρ1s_S)
    ρ1s_S.coeffs[1] = sqrt(constant_term(ρ1s2_S))
    TaylorSeries.zero!(z1s2_S)
    z1s2_S.coeffs[1] = constant_term(z1s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(r1s2_S)
    r1s2_S.coeffs[1] = constant_term(ρ1s2_S) + constant_term(z1s2_S)
    TaylorSeries.zero!(r1s_S)
    r1s_S.coeffs[1] = sqrt(constant_term(r1s2_S))
    TaylorSeries.zero!(r1s5_S)
    r1s5_S.coeffs[1] = constant_term(r1s_S) ^ float(constant_term(5))
    TaylorSeries.zero!(tmp3522)
    tmp3522.coeffs[1] = constant_term(X_bf[mo, ea]) * constant_term(r_star_M_1[1])
    TaylorSeries.zero!(tmp3523)
    tmp3523.coeffs[1] = constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_1[2])
    TaylorSeries.zero!(coeff1_1_M)
    coeff1_1_M.coeffs[1] = constant_term(tmp3522) + constant_term(tmp3523)
    TaylorSeries.zero!(tmp3525)
    tmp3525.coeffs[1] = constant_term(X_bf[mo, ea]) * constant_term(r_star_S_1[1])
    TaylorSeries.zero!(tmp3526)
    tmp3526.coeffs[1] = constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_1[2])
    TaylorSeries.zero!(coeff1_1_S)
    coeff1_1_S.coeffs[1] = constant_term(tmp3525) + constant_term(tmp3526)
    TaylorSeries.zero!(coeff2_1_M)
    coeff2_1_M.coeffs[1] = constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_1[3])
    TaylorSeries.zero!(coeff2_1_S)
    coeff2_1_S.coeffs[1] = constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_1[3])
    TaylorSeries.zero!(tmp3531)
    tmp3531.coeffs[1] = constant_term(10) * constant_term(coeff1_1_M)
    TaylorSeries.zero!(tmp3532)
    tmp3532.coeffs[1] = constant_term(tmp3531) * constant_term(coeff2_1_M)
    TaylorSeries.zero!(coeff3_1_M)
    coeff3_1_M.coeffs[1] = constant_term(tmp3532) / constant_term(r_p2[mo, ea])
    TaylorSeries.zero!(tmp3535)
    tmp3535.coeffs[1] = constant_term(10) * constant_term(coeff1_1_S)
    TaylorSeries.zero!(tmp3536)
    tmp3536.coeffs[1] = constant_term(tmp3535) * constant_term(coeff2_1_S)
    TaylorSeries.zero!(coeff3_1_S)
    coeff3_1_S.coeffs[1] = constant_term(tmp3536) / constant_term(r_p2[mo, ea])
    TaylorSeries.zero!(k_21E_div_r1s5_M)
    k_21E_div_r1s5_M.coeffs[1] = constant_term(k_21E) / constant_term(r1s5_M)
    TaylorSeries.zero!(k_21E_div_r1s5_S)
    k_21E_div_r1s5_S.coeffs[1] = constant_term(k_21E) / constant_term(r1s5_S)
    TaylorSeries.zero!(tmp3541)
    tmp3541.coeffs[1] = constant_term(2) * constant_term(coeff2_1_M)
    TaylorSeries.zero!(tmp3542)
    tmp3542.coeffs[1] = constant_term(tmp3541) * constant_term(r_star_M_1[1])
    TaylorSeries.zero!(tmp3543)
    tmp3543.coeffs[1] = constant_term(coeff3_1_M) * constant_term(X_bf[mo, ea])
    TaylorSeries.zero!(tmp3544)
    tmp3544.coeffs[1] = constant_term(tmp3542) - constant_term(tmp3543)
    TaylorSeries.zero!(a_tid_1_M_x)
    a_tid_1_M_x.coeffs[1] = constant_term(k_21E_div_r1s5_M) * constant_term(tmp3544)
    TaylorSeries.zero!(tmp3547)
    tmp3547.coeffs[1] = constant_term(2) * constant_term(coeff2_1_M)
    TaylorSeries.zero!(tmp3548)
    tmp3548.coeffs[1] = constant_term(tmp3547) * constant_term(r_star_M_1[2])
    TaylorSeries.zero!(tmp3549)
    tmp3549.coeffs[1] = constant_term(coeff3_1_M) * constant_term(Y_bf[mo, ea])
    TaylorSeries.zero!(tmp3550)
    tmp3550.coeffs[1] = constant_term(tmp3548) - constant_term(tmp3549)
    TaylorSeries.zero!(a_tid_1_M_y)
    a_tid_1_M_y.coeffs[1] = constant_term(k_21E_div_r1s5_M) * constant_term(tmp3550)
    TaylorSeries.zero!(tmp3553)
    tmp3553.coeffs[1] = constant_term(2) * constant_term(coeff1_1_M)
    TaylorSeries.zero!(tmp3554)
    tmp3554.coeffs[1] = constant_term(tmp3553) * constant_term(r_star_M_1[3])
    TaylorSeries.zero!(tmp3555)
    tmp3555.coeffs[1] = constant_term(coeff3_1_M) * constant_term(Z_bf[mo, ea])
    TaylorSeries.zero!(tmp3556)
    tmp3556.coeffs[1] = constant_term(tmp3554) - constant_term(tmp3555)
    TaylorSeries.zero!(a_tid_1_M_z)
    a_tid_1_M_z.coeffs[1] = constant_term(k_21E_div_r1s5_M) * constant_term(tmp3556)
    TaylorSeries.zero!(tmp3559)
    tmp3559.coeffs[1] = constant_term(2) * constant_term(coeff2_1_S)
    TaylorSeries.zero!(tmp3560)
    tmp3560.coeffs[1] = constant_term(tmp3559) * constant_term(r_star_S_1[1])
    TaylorSeries.zero!(tmp3561)
    tmp3561.coeffs[1] = constant_term(coeff3_1_S) * constant_term(X_bf[mo, ea])
    TaylorSeries.zero!(tmp3562)
    tmp3562.coeffs[1] = constant_term(tmp3560) - constant_term(tmp3561)
    TaylorSeries.zero!(a_tid_1_S_x)
    a_tid_1_S_x.coeffs[1] = constant_term(k_21E_div_r1s5_S) * constant_term(tmp3562)
    TaylorSeries.zero!(tmp3565)
    tmp3565.coeffs[1] = constant_term(2) * constant_term(coeff2_1_S)
    TaylorSeries.zero!(tmp3566)
    tmp3566.coeffs[1] = constant_term(tmp3565) * constant_term(r_star_S_1[2])
    TaylorSeries.zero!(tmp3567)
    tmp3567.coeffs[1] = constant_term(coeff3_1_S) * constant_term(Y_bf[mo, ea])
    TaylorSeries.zero!(tmp3568)
    tmp3568.coeffs[1] = constant_term(tmp3566) - constant_term(tmp3567)
    TaylorSeries.zero!(a_tid_1_S_y)
    a_tid_1_S_y.coeffs[1] = constant_term(k_21E_div_r1s5_S) * constant_term(tmp3568)
    TaylorSeries.zero!(tmp3571)
    tmp3571.coeffs[1] = constant_term(2) * constant_term(coeff1_1_S)
    TaylorSeries.zero!(tmp3572)
    tmp3572.coeffs[1] = constant_term(tmp3571) * constant_term(r_star_S_1[3])
    TaylorSeries.zero!(tmp3573)
    tmp3573.coeffs[1] = constant_term(coeff3_1_S) * constant_term(Z_bf[mo, ea])
    TaylorSeries.zero!(tmp3574)
    tmp3574.coeffs[1] = constant_term(tmp3572) - constant_term(tmp3573)
    TaylorSeries.zero!(a_tid_1_S_z)
    a_tid_1_S_z.coeffs[1] = constant_term(k_21E_div_r1s5_S) * constant_term(tmp3574)
    TaylorSeries.zero!(x2s_M)
    x2s_M.coeffs[1] = identity(constant_term(r_star_M_2[1]))
    TaylorSeries.zero!(y2s_M)
    y2s_M.coeffs[1] = identity(constant_term(r_star_M_2[2]))
    TaylorSeries.zero!(z2s_M)
    z2s_M.coeffs[1] = identity(constant_term(r_star_M_2[3]))
    TaylorSeries.zero!(tmp3577)
    tmp3577.coeffs[1] = constant_term(x2s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3579)
    tmp3579.coeffs[1] = constant_term(y2s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(ρ2s2_M)
    ρ2s2_M.coeffs[1] = constant_term(tmp3577) + constant_term(tmp3579)
    TaylorSeries.zero!(ρ2s_M)
    ρ2s_M.coeffs[1] = sqrt(constant_term(ρ2s2_M))
    TaylorSeries.zero!(z2s2_M)
    z2s2_M.coeffs[1] = constant_term(z2s_M) ^ float(constant_term(2))
    TaylorSeries.zero!(r2s2_M)
    r2s2_M.coeffs[1] = constant_term(ρ2s2_M) + constant_term(z2s2_M)
    TaylorSeries.zero!(r2s_M)
    r2s_M.coeffs[1] = sqrt(constant_term(r2s2_M))
    TaylorSeries.zero!(r2s5_M)
    r2s5_M.coeffs[1] = constant_term(r2s_M) ^ float(constant_term(5))
    TaylorSeries.zero!(x2s_S)
    x2s_S.coeffs[1] = identity(constant_term(r_star_S_2[1]))
    TaylorSeries.zero!(y2s_S)
    y2s_S.coeffs[1] = identity(constant_term(r_star_S_2[2]))
    TaylorSeries.zero!(z2s_S)
    z2s_S.coeffs[1] = identity(constant_term(r_star_S_2[3]))
    TaylorSeries.zero!(tmp3589)
    tmp3589.coeffs[1] = constant_term(x2s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3591)
    tmp3591.coeffs[1] = constant_term(y2s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(ρ2s2_S)
    ρ2s2_S.coeffs[1] = constant_term(tmp3589) + constant_term(tmp3591)
    TaylorSeries.zero!(ρ2s_S)
    ρ2s_S.coeffs[1] = sqrt(constant_term(ρ2s2_S))
    TaylorSeries.zero!(z2s2_S)
    z2s2_S.coeffs[1] = constant_term(z2s_S) ^ float(constant_term(2))
    TaylorSeries.zero!(r2s2_S)
    r2s2_S.coeffs[1] = constant_term(ρ2s2_S) + constant_term(z2s2_S)
    TaylorSeries.zero!(r2s_S)
    r2s_S.coeffs[1] = sqrt(constant_term(r2s2_S))
    TaylorSeries.zero!(r2s5_S)
    r2s5_S.coeffs[1] = constant_term(r2s_S) ^ float(constant_term(5))
    TaylorSeries.zero!(tmp3600)
    tmp3600.coeffs[1] = constant_term(X_bf[mo, ea]) * constant_term(r_star_M_2[1])
    TaylorSeries.zero!(tmp3601)
    tmp3601.coeffs[1] = constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_2[2])
    TaylorSeries.zero!(coeff1_2_M)
    coeff1_2_M.coeffs[1] = constant_term(tmp3600) + constant_term(tmp3601)
    TaylorSeries.zero!(tmp3603)
    tmp3603.coeffs[1] = constant_term(X_bf[mo, ea]) * constant_term(r_star_S_2[1])
    TaylorSeries.zero!(tmp3604)
    tmp3604.coeffs[1] = constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_2[2])
    TaylorSeries.zero!(coeff1_2_S)
    coeff1_2_S.coeffs[1] = constant_term(tmp3603) + constant_term(tmp3604)
    TaylorSeries.zero!(tmp3608)
    tmp3608.coeffs[1] = constant_term(coeff1_2_M) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3611)
    tmp3611.coeffs[1] = constant_term(r_xy[mo, ea]) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3612)
    tmp3612.coeffs[1] = constant_term(0.5) * constant_term(tmp3611)
    TaylorSeries.zero!(tmp3613)
    tmp3613.coeffs[1] = constant_term(tmp3612) * constant_term(ρ2s2_M)
    TaylorSeries.zero!(tmp3614)
    tmp3614.coeffs[1] = constant_term(tmp3608) - constant_term(tmp3613)
    TaylorSeries.zero!(tmp3615)
    tmp3615.coeffs[1] = constant_term(5) * constant_term(tmp3614)
    TaylorSeries.zero!(coeff3_2_M)
    coeff3_2_M.coeffs[1] = constant_term(tmp3615) / constant_term(r_p2[mo, ea])
    TaylorSeries.zero!(tmp3619)
    tmp3619.coeffs[1] = constant_term(coeff1_2_S) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3622)
    tmp3622.coeffs[1] = constant_term(r_xy[mo, ea]) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3623)
    tmp3623.coeffs[1] = constant_term(0.5) * constant_term(tmp3622)
    TaylorSeries.zero!(tmp3624)
    tmp3624.coeffs[1] = constant_term(tmp3623) * constant_term(ρ2s2_S)
    TaylorSeries.zero!(tmp3625)
    tmp3625.coeffs[1] = constant_term(tmp3619) - constant_term(tmp3624)
    TaylorSeries.zero!(tmp3626)
    tmp3626.coeffs[1] = constant_term(5) * constant_term(tmp3625)
    TaylorSeries.zero!(coeff3_2_S)
    coeff3_2_S.coeffs[1] = constant_term(tmp3626) / constant_term(r_p2[mo, ea])
    TaylorSeries.zero!(k_22E_div_r2s5_M)
    k_22E_div_r2s5_M.coeffs[1] = constant_term(k_22E) / constant_term(r2s5_M)
    TaylorSeries.zero!(k_22E_div_r2s5_S)
    k_22E_div_r2s5_S.coeffs[1] = constant_term(k_22E) / constant_term(r2s5_S)
    TaylorSeries.zero!(tmp3631)
    tmp3631.coeffs[1] = constant_term(2) * constant_term(coeff1_2_M)
    TaylorSeries.zero!(tmp3632)
    tmp3632.coeffs[1] = constant_term(tmp3631) * constant_term(r_star_M_2[1])
    TaylorSeries.zero!(tmp3633)
    tmp3633.coeffs[1] = constant_term(ρ2s2_M) + constant_term(coeff3_2_M)
    TaylorSeries.zero!(tmp3634)
    tmp3634.coeffs[1] = constant_term(tmp3633) * constant_term(X_bf[mo, ea])
    TaylorSeries.zero!(tmp3635)
    tmp3635.coeffs[1] = constant_term(tmp3632) - constant_term(tmp3634)
    TaylorSeries.zero!(a_tid_2_M_x)
    a_tid_2_M_x.coeffs[1] = constant_term(k_22E_div_r2s5_M) * constant_term(tmp3635)
    TaylorSeries.zero!(tmp3638)
    tmp3638.coeffs[1] = constant_term(2) * constant_term(coeff1_2_M)
    TaylorSeries.zero!(tmp3639)
    tmp3639.coeffs[1] = constant_term(tmp3638) * constant_term(r_star_M_2[2])
    TaylorSeries.zero!(tmp3640)
    tmp3640.coeffs[1] = constant_term(ρ2s2_M) + constant_term(coeff3_2_M)
    TaylorSeries.zero!(tmp3641)
    tmp3641.coeffs[1] = constant_term(tmp3640) * constant_term(Y_bf[mo, ea])
    TaylorSeries.zero!(tmp3642)
    tmp3642.coeffs[1] = constant_term(tmp3639) - constant_term(tmp3641)
    TaylorSeries.zero!(a_tid_2_M_y)
    a_tid_2_M_y.coeffs[1] = constant_term(k_22E_div_r2s5_M) * constant_term(tmp3642)
    TaylorSeries.zero!(tmp3644)
    tmp3644.coeffs[1] = -(constant_term(coeff3_2_M))
    TaylorSeries.zero!(tmp3645)
    tmp3645.coeffs[1] = constant_term(k_22E_div_r2s5_M) * constant_term(tmp3644)
    TaylorSeries.zero!(a_tid_2_M_z)
    a_tid_2_M_z.coeffs[1] = constant_term(tmp3645) * constant_term(Z_bf[mo, ea])
    TaylorSeries.zero!(tmp3648)
    tmp3648.coeffs[1] = constant_term(2) * constant_term(coeff1_2_S)
    TaylorSeries.zero!(tmp3649)
    tmp3649.coeffs[1] = constant_term(tmp3648) * constant_term(r_star_S_2[1])
    TaylorSeries.zero!(tmp3650)
    tmp3650.coeffs[1] = constant_term(ρ2s2_S) + constant_term(coeff3_2_S)
    TaylorSeries.zero!(tmp3651)
    tmp3651.coeffs[1] = constant_term(tmp3650) * constant_term(X_bf[mo, ea])
    TaylorSeries.zero!(tmp3652)
    tmp3652.coeffs[1] = constant_term(tmp3649) - constant_term(tmp3651)
    TaylorSeries.zero!(a_tid_2_S_x)
    a_tid_2_S_x.coeffs[1] = constant_term(k_22E_div_r2s5_S) * constant_term(tmp3652)
    TaylorSeries.zero!(tmp3655)
    tmp3655.coeffs[1] = constant_term(2) * constant_term(coeff1_2_S)
    TaylorSeries.zero!(tmp3656)
    tmp3656.coeffs[1] = constant_term(tmp3655) * constant_term(r_star_S_2[2])
    TaylorSeries.zero!(tmp3657)
    tmp3657.coeffs[1] = constant_term(ρ2s2_S) + constant_term(coeff3_2_S)
    TaylorSeries.zero!(tmp3658)
    tmp3658.coeffs[1] = constant_term(tmp3657) * constant_term(Y_bf[mo, ea])
    TaylorSeries.zero!(tmp3659)
    tmp3659.coeffs[1] = constant_term(tmp3656) - constant_term(tmp3658)
    TaylorSeries.zero!(a_tid_2_S_y)
    a_tid_2_S_y.coeffs[1] = constant_term(k_22E_div_r2s5_S) * constant_term(tmp3659)
    TaylorSeries.zero!(tmp3661)
    tmp3661.coeffs[1] = -(constant_term(coeff3_2_S))
    TaylorSeries.zero!(tmp3662)
    tmp3662.coeffs[1] = constant_term(k_22E_div_r2s5_S) * constant_term(tmp3661)
    TaylorSeries.zero!(a_tid_2_S_z)
    a_tid_2_S_z.coeffs[1] = constant_term(tmp3662) * constant_term(Z_bf[mo, ea])
    TaylorSeries.zero!(tmp3664)
    tmp3664.coeffs[1] = constant_term(RE_au) / constant_term(r_p1d2[mo, ea])
    TaylorSeries.zero!(RE_div_r_p5)
    RE_div_r_p5.coeffs[1] = constant_term(tmp3664) ^ float(constant_term(5))
    TaylorSeries.zero!(aux_tidacc)
    aux_tidacc.coeffs[1] = constant_term(tid_num_coeff) * constant_term(RE_div_r_p5)
    TaylorSeries.zero!(a_tidal_coeff_M)
    a_tidal_coeff_M.coeffs[1] = constant_term(μ[mo]) * constant_term(aux_tidacc)
    TaylorSeries.zero!(a_tidal_coeff_S)
    a_tidal_coeff_S.coeffs[1] = constant_term(μ[su]) * constant_term(aux_tidacc)
    TaylorSeries.zero!(tmp3670)
    tmp3670.coeffs[1] = constant_term(a_tid_0_M_x) + constant_term(a_tid_1_M_x)
    TaylorSeries.zero!(tmp3671)
    tmp3671.coeffs[1] = constant_term(tmp3670) + constant_term(a_tid_2_M_x)
    TaylorSeries.zero!(tmp3672)
    tmp3672.coeffs[1] = constant_term(a_tidal_coeff_M) * constant_term(tmp3671)
    TaylorSeries.zero!(tmp3673)
    tmp3673.coeffs[1] = constant_term(a_tid_0_S_x) + constant_term(a_tid_1_S_x)
    TaylorSeries.zero!(tmp3674)
    tmp3674.coeffs[1] = constant_term(tmp3673) + constant_term(a_tid_2_S_x)
    TaylorSeries.zero!(tmp3675)
    tmp3675.coeffs[1] = constant_term(a_tidal_coeff_S) * constant_term(tmp3674)
    TaylorSeries.zero!(a_tidal_tod_x)
    a_tidal_tod_x.coeffs[1] = constant_term(tmp3672) + constant_term(tmp3675)
    TaylorSeries.zero!(tmp3677)
    tmp3677.coeffs[1] = constant_term(a_tid_0_M_y) + constant_term(a_tid_1_M_y)
    TaylorSeries.zero!(tmp3678)
    tmp3678.coeffs[1] = constant_term(tmp3677) + constant_term(a_tid_2_M_y)
    TaylorSeries.zero!(tmp3679)
    tmp3679.coeffs[1] = constant_term(a_tidal_coeff_M) * constant_term(tmp3678)
    TaylorSeries.zero!(tmp3680)
    tmp3680.coeffs[1] = constant_term(a_tid_0_S_y) + constant_term(a_tid_1_S_y)
    TaylorSeries.zero!(tmp3681)
    tmp3681.coeffs[1] = constant_term(tmp3680) + constant_term(a_tid_2_S_y)
    TaylorSeries.zero!(tmp3682)
    tmp3682.coeffs[1] = constant_term(a_tidal_coeff_S) * constant_term(tmp3681)
    TaylorSeries.zero!(a_tidal_tod_y)
    a_tidal_tod_y.coeffs[1] = constant_term(tmp3679) + constant_term(tmp3682)
    TaylorSeries.zero!(tmp3684)
    tmp3684.coeffs[1] = constant_term(a_tid_0_M_z) + constant_term(a_tid_1_M_z)
    TaylorSeries.zero!(tmp3685)
    tmp3685.coeffs[1] = constant_term(tmp3684) + constant_term(a_tid_2_M_z)
    TaylorSeries.zero!(tmp3686)
    tmp3686.coeffs[1] = constant_term(a_tidal_coeff_M) * constant_term(tmp3685)
    TaylorSeries.zero!(tmp3687)
    tmp3687.coeffs[1] = constant_term(a_tid_0_S_z) + constant_term(a_tid_1_S_z)
    TaylorSeries.zero!(tmp3688)
    tmp3688.coeffs[1] = constant_term(tmp3687) + constant_term(a_tid_2_S_z)
    TaylorSeries.zero!(tmp3689)
    tmp3689.coeffs[1] = constant_term(a_tidal_coeff_S) * constant_term(tmp3688)
    TaylorSeries.zero!(a_tidal_tod_z)
    a_tidal_tod_z.coeffs[1] = constant_term(tmp3686) + constant_term(tmp3689)
    TaylorSeries.zero!(tmp3691)
    tmp3691.coeffs[1] = constant_term(RotM[1, 1, ea]) * constant_term(a_tidal_tod_x)
    TaylorSeries.zero!(tmp3692)
    tmp3692.coeffs[1] = constant_term(RotM[2, 1, ea]) * constant_term(a_tidal_tod_y)
    TaylorSeries.zero!(tmp3693)
    tmp3693.coeffs[1] = constant_term(tmp3691) + constant_term(tmp3692)
    TaylorSeries.zero!(tmp3694)
    tmp3694.coeffs[1] = constant_term(RotM[3, 1, ea]) * constant_term(a_tidal_tod_z)
    TaylorSeries.zero!(a_tidal_x)
    a_tidal_x.coeffs[1] = constant_term(tmp3693) + constant_term(tmp3694)
    TaylorSeries.zero!(tmp3696)
    tmp3696.coeffs[1] = constant_term(RotM[1, 2, ea]) * constant_term(a_tidal_tod_x)
    TaylorSeries.zero!(tmp3697)
    tmp3697.coeffs[1] = constant_term(RotM[2, 2, ea]) * constant_term(a_tidal_tod_y)
    TaylorSeries.zero!(tmp3698)
    tmp3698.coeffs[1] = constant_term(tmp3696) + constant_term(tmp3697)
    TaylorSeries.zero!(tmp3699)
    tmp3699.coeffs[1] = constant_term(RotM[3, 2, ea]) * constant_term(a_tidal_tod_z)
    TaylorSeries.zero!(a_tidal_y)
    a_tidal_y.coeffs[1] = constant_term(tmp3698) + constant_term(tmp3699)
    TaylorSeries.zero!(tmp3701)
    tmp3701.coeffs[1] = constant_term(RotM[1, 3, ea]) * constant_term(a_tidal_tod_x)
    TaylorSeries.zero!(tmp3702)
    tmp3702.coeffs[1] = constant_term(RotM[2, 3, ea]) * constant_term(a_tidal_tod_y)
    TaylorSeries.zero!(tmp3703)
    tmp3703.coeffs[1] = constant_term(tmp3701) + constant_term(tmp3702)
    TaylorSeries.zero!(tmp3704)
    tmp3704.coeffs[1] = constant_term(RotM[3, 3, ea]) * constant_term(a_tidal_tod_z)
    TaylorSeries.zero!(a_tidal_z)
    a_tidal_z.coeffs[1] = constant_term(tmp3703) + constant_term(tmp3704)
    TaylorSeries.zero!(accX_mo_tides)
    accX_mo_tides.coeffs[1] = constant_term(accX[mo]) + constant_term(a_tidal_x)
    TaylorSeries.zero!(accY_mo_tides)
    accY_mo_tides.coeffs[1] = constant_term(accY[mo]) + constant_term(a_tidal_y)
    TaylorSeries.zero!(accZ_mo_tides)
    accZ_mo_tides.coeffs[1] = constant_term(accZ[mo]) + constant_term(a_tidal_z)
    TaylorSeries.zero!(accX[mo])
    (accX[mo]).coeffs[1] = identity(constant_term(accX_mo_tides))
    TaylorSeries.zero!(accY[mo])
    (accY[mo]).coeffs[1] = identity(constant_term(accY_mo_tides))
    TaylorSeries.zero!(accZ[mo])
    (accZ[mo]).coeffs[1] = identity(constant_term(accZ_mo_tides))
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1896 =# Threads.@threads for i = 1:N_ext
            TaylorSeries.zero!(dq[3 * (N + i) - 2])
            (dq[3 * (N + i) - 2]).coeffs[1] = constant_term(postNewtonX[i]) + constant_term(accX[i])
            TaylorSeries.zero!(dq[3 * (N + i) - 1])
            (dq[3 * (N + i) - 1]).coeffs[1] = constant_term(postNewtonY[i]) + constant_term(accY[i])
            TaylorSeries.zero!(dq[3 * (N + i)])
            (dq[3 * (N + i)]).coeffs[1] = constant_term(postNewtonZ[i]) + constant_term(accZ[i])
        end
    #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1901 =# Threads.@threads for i = N_ext + 1:N
            TaylorSeries.zero!(dq[3 * (N + i) - 2])
            (dq[3 * (N + i) - 2]).coeffs[1] = identity(constant_term(postNewtonX[i]))
            TaylorSeries.zero!(dq[3 * (N + i) - 1])
            (dq[3 * (N + i) - 1]).coeffs[1] = identity(constant_term(postNewtonY[i]))
            TaylorSeries.zero!(dq[3 * (N + i)])
            (dq[3 * (N + i)]).coeffs[1] = identity(constant_term(postNewtonZ[i]))
        end
    TaylorSeries.zero!(tmp3712)
    tmp3712.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp3713)
    tmp3713.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp3714)
    tmp3714.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp3715)
    tmp3715.coeffs[1] = constant_term(tmp3713) + constant_term(tmp3714)
    TaylorSeries.zero!(Iω_x)
    Iω_x.coeffs[1] = constant_term(tmp3712) + constant_term(tmp3715)
    TaylorSeries.zero!(tmp3717)
    tmp3717.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp3718)
    tmp3718.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp3719)
    tmp3719.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp3720)
    tmp3720.coeffs[1] = constant_term(tmp3718) + constant_term(tmp3719)
    TaylorSeries.zero!(Iω_y)
    Iω_y.coeffs[1] = constant_term(tmp3717) + constant_term(tmp3720)
    TaylorSeries.zero!(tmp3722)
    tmp3722.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp3723)
    tmp3723.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp3724)
    tmp3724.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp3725)
    tmp3725.coeffs[1] = constant_term(tmp3723) + constant_term(tmp3724)
    TaylorSeries.zero!(Iω_z)
    Iω_z.coeffs[1] = constant_term(tmp3722) + constant_term(tmp3725)
    TaylorSeries.zero!(tmp3727)
    tmp3727.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_z)
    TaylorSeries.zero!(tmp3728)
    tmp3728.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_y)
    TaylorSeries.zero!(ωxIω_x)
    ωxIω_x.coeffs[1] = constant_term(tmp3727) - constant_term(tmp3728)
    TaylorSeries.zero!(tmp3730)
    tmp3730.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_x)
    TaylorSeries.zero!(tmp3731)
    tmp3731.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_z)
    TaylorSeries.zero!(ωxIω_y)
    ωxIω_y.coeffs[1] = constant_term(tmp3730) - constant_term(tmp3731)
    TaylorSeries.zero!(tmp3733)
    tmp3733.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_y)
    TaylorSeries.zero!(tmp3734)
    tmp3734.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_x)
    TaylorSeries.zero!(ωxIω_z)
    ωxIω_z.coeffs[1] = constant_term(tmp3733) - constant_term(tmp3734)
    TaylorSeries.zero!(tmp3736)
    tmp3736.coeffs[1] = constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp3737)
    tmp3737.coeffs[1] = constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp3738)
    tmp3738.coeffs[1] = constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp3739)
    tmp3739.coeffs[1] = constant_term(tmp3737) + constant_term(tmp3738)
    TaylorSeries.zero!(dIω_x)
    dIω_x.coeffs[1] = constant_term(tmp3736) + constant_term(tmp3739)
    TaylorSeries.zero!(tmp3741)
    tmp3741.coeffs[1] = constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp3742)
    tmp3742.coeffs[1] = constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp3743)
    tmp3743.coeffs[1] = constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp3744)
    tmp3744.coeffs[1] = constant_term(tmp3742) + constant_term(tmp3743)
    TaylorSeries.zero!(dIω_y)
    dIω_y.coeffs[1] = constant_term(tmp3741) + constant_term(tmp3744)
    TaylorSeries.zero!(tmp3746)
    tmp3746.coeffs[1] = constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp3747)
    tmp3747.coeffs[1] = constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp3748)
    tmp3748.coeffs[1] = constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6])
    TaylorSeries.zero!(tmp3749)
    tmp3749.coeffs[1] = constant_term(tmp3747) + constant_term(tmp3748)
    TaylorSeries.zero!(dIω_z)
    dIω_z.coeffs[1] = constant_term(tmp3746) + constant_term(tmp3749)
    TaylorSeries.zero!(er_EM_I_1)
    er_EM_I_1.coeffs[1] = constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo])
    TaylorSeries.zero!(er_EM_I_2)
    er_EM_I_2.coeffs[1] = constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo])
    TaylorSeries.zero!(er_EM_I_3)
    er_EM_I_3.coeffs[1] = constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo])
    TaylorSeries.zero!(p_E_I_1)
    p_E_I_1.coeffs[1] = identity(constant_term(RotM[3, 1, ea]))
    TaylorSeries.zero!(p_E_I_2)
    p_E_I_2.coeffs[1] = identity(constant_term(RotM[3, 2, ea]))
    TaylorSeries.zero!(p_E_I_3)
    p_E_I_3.coeffs[1] = identity(constant_term(RotM[3, 3, ea]))
    TaylorSeries.zero!(tmp3754)
    tmp3754.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1)
    TaylorSeries.zero!(tmp3755)
    tmp3755.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2)
    TaylorSeries.zero!(tmp3756)
    tmp3756.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3)
    TaylorSeries.zero!(tmp3757)
    tmp3757.coeffs[1] = constant_term(tmp3755) + constant_term(tmp3756)
    TaylorSeries.zero!(er_EM_1)
    er_EM_1.coeffs[1] = constant_term(tmp3754) + constant_term(tmp3757)
    TaylorSeries.zero!(tmp3759)
    tmp3759.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1)
    TaylorSeries.zero!(tmp3760)
    tmp3760.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2)
    TaylorSeries.zero!(tmp3761)
    tmp3761.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3)
    TaylorSeries.zero!(tmp3762)
    tmp3762.coeffs[1] = constant_term(tmp3760) + constant_term(tmp3761)
    TaylorSeries.zero!(er_EM_2)
    er_EM_2.coeffs[1] = constant_term(tmp3759) + constant_term(tmp3762)
    TaylorSeries.zero!(tmp3764)
    tmp3764.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1)
    TaylorSeries.zero!(tmp3765)
    tmp3765.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2)
    TaylorSeries.zero!(tmp3766)
    tmp3766.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3)
    TaylorSeries.zero!(tmp3767)
    tmp3767.coeffs[1] = constant_term(tmp3765) + constant_term(tmp3766)
    TaylorSeries.zero!(er_EM_3)
    er_EM_3.coeffs[1] = constant_term(tmp3764) + constant_term(tmp3767)
    TaylorSeries.zero!(tmp3769)
    tmp3769.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1)
    TaylorSeries.zero!(tmp3770)
    tmp3770.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2)
    TaylorSeries.zero!(tmp3771)
    tmp3771.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3)
    TaylorSeries.zero!(tmp3772)
    tmp3772.coeffs[1] = constant_term(tmp3770) + constant_term(tmp3771)
    TaylorSeries.zero!(p_E_1)
    p_E_1.coeffs[1] = constant_term(tmp3769) + constant_term(tmp3772)
    TaylorSeries.zero!(tmp3774)
    tmp3774.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1)
    TaylorSeries.zero!(tmp3775)
    tmp3775.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2)
    TaylorSeries.zero!(tmp3776)
    tmp3776.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3)
    TaylorSeries.zero!(tmp3777)
    tmp3777.coeffs[1] = constant_term(tmp3775) + constant_term(tmp3776)
    TaylorSeries.zero!(p_E_2)
    p_E_2.coeffs[1] = constant_term(tmp3774) + constant_term(tmp3777)
    TaylorSeries.zero!(tmp3779)
    tmp3779.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1)
    TaylorSeries.zero!(tmp3780)
    tmp3780.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2)
    TaylorSeries.zero!(tmp3781)
    tmp3781.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3)
    TaylorSeries.zero!(tmp3782)
    tmp3782.coeffs[1] = constant_term(tmp3780) + constant_term(tmp3781)
    TaylorSeries.zero!(p_E_3)
    p_E_3.coeffs[1] = constant_term(tmp3779) + constant_term(tmp3782)
    TaylorSeries.zero!(tmp3784)
    tmp3784.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(er_EM_1)
    TaylorSeries.zero!(tmp3785)
    tmp3785.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(er_EM_2)
    TaylorSeries.zero!(tmp3786)
    tmp3786.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(er_EM_3)
    TaylorSeries.zero!(tmp3787)
    tmp3787.coeffs[1] = constant_term(tmp3785) + constant_term(tmp3786)
    TaylorSeries.zero!(I_er_EM_1)
    I_er_EM_1.coeffs[1] = constant_term(tmp3784) + constant_term(tmp3787)
    TaylorSeries.zero!(tmp3789)
    tmp3789.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(er_EM_1)
    TaylorSeries.zero!(tmp3790)
    tmp3790.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(er_EM_2)
    TaylorSeries.zero!(tmp3791)
    tmp3791.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(er_EM_3)
    TaylorSeries.zero!(tmp3792)
    tmp3792.coeffs[1] = constant_term(tmp3790) + constant_term(tmp3791)
    TaylorSeries.zero!(I_er_EM_2)
    I_er_EM_2.coeffs[1] = constant_term(tmp3789) + constant_term(tmp3792)
    TaylorSeries.zero!(tmp3794)
    tmp3794.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(er_EM_1)
    TaylorSeries.zero!(tmp3795)
    tmp3795.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(er_EM_2)
    TaylorSeries.zero!(tmp3796)
    tmp3796.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(er_EM_3)
    TaylorSeries.zero!(tmp3797)
    tmp3797.coeffs[1] = constant_term(tmp3795) + constant_term(tmp3796)
    TaylorSeries.zero!(I_er_EM_3)
    I_er_EM_3.coeffs[1] = constant_term(tmp3794) + constant_term(tmp3797)
    TaylorSeries.zero!(tmp3799)
    tmp3799.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(p_E_1)
    TaylorSeries.zero!(tmp3800)
    tmp3800.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(p_E_2)
    TaylorSeries.zero!(tmp3801)
    tmp3801.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(p_E_3)
    TaylorSeries.zero!(tmp3802)
    tmp3802.coeffs[1] = constant_term(tmp3800) + constant_term(tmp3801)
    TaylorSeries.zero!(I_p_E_1)
    I_p_E_1.coeffs[1] = constant_term(tmp3799) + constant_term(tmp3802)
    TaylorSeries.zero!(tmp3804)
    tmp3804.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(p_E_1)
    TaylorSeries.zero!(tmp3805)
    tmp3805.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(p_E_2)
    TaylorSeries.zero!(tmp3806)
    tmp3806.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(p_E_3)
    TaylorSeries.zero!(tmp3807)
    tmp3807.coeffs[1] = constant_term(tmp3805) + constant_term(tmp3806)
    TaylorSeries.zero!(I_p_E_2)
    I_p_E_2.coeffs[1] = constant_term(tmp3804) + constant_term(tmp3807)
    TaylorSeries.zero!(tmp3809)
    tmp3809.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(p_E_1)
    TaylorSeries.zero!(tmp3810)
    tmp3810.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(p_E_2)
    TaylorSeries.zero!(tmp3811)
    tmp3811.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(p_E_3)
    TaylorSeries.zero!(tmp3812)
    tmp3812.coeffs[1] = constant_term(tmp3810) + constant_term(tmp3811)
    TaylorSeries.zero!(I_p_E_3)
    I_p_E_3.coeffs[1] = constant_term(tmp3809) + constant_term(tmp3812)
    TaylorSeries.zero!(tmp3814)
    tmp3814.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_3)
    TaylorSeries.zero!(tmp3815)
    tmp3815.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_2)
    TaylorSeries.zero!(er_EM_cross_I_er_EM_1)
    er_EM_cross_I_er_EM_1.coeffs[1] = constant_term(tmp3814) - constant_term(tmp3815)
    TaylorSeries.zero!(tmp3817)
    tmp3817.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_1)
    TaylorSeries.zero!(tmp3818)
    tmp3818.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_3)
    TaylorSeries.zero!(er_EM_cross_I_er_EM_2)
    er_EM_cross_I_er_EM_2.coeffs[1] = constant_term(tmp3817) - constant_term(tmp3818)
    TaylorSeries.zero!(tmp3820)
    tmp3820.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_2)
    TaylorSeries.zero!(tmp3821)
    tmp3821.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_1)
    TaylorSeries.zero!(er_EM_cross_I_er_EM_3)
    er_EM_cross_I_er_EM_3.coeffs[1] = constant_term(tmp3820) - constant_term(tmp3821)
    TaylorSeries.zero!(tmp3823)
    tmp3823.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_3)
    TaylorSeries.zero!(tmp3824)
    tmp3824.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_2)
    TaylorSeries.zero!(er_EM_cross_I_p_E_1)
    er_EM_cross_I_p_E_1.coeffs[1] = constant_term(tmp3823) - constant_term(tmp3824)
    TaylorSeries.zero!(tmp3826)
    tmp3826.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_1)
    TaylorSeries.zero!(tmp3827)
    tmp3827.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_3)
    TaylorSeries.zero!(er_EM_cross_I_p_E_2)
    er_EM_cross_I_p_E_2.coeffs[1] = constant_term(tmp3826) - constant_term(tmp3827)
    TaylorSeries.zero!(tmp3829)
    tmp3829.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_2)
    TaylorSeries.zero!(tmp3830)
    tmp3830.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_1)
    TaylorSeries.zero!(er_EM_cross_I_p_E_3)
    er_EM_cross_I_p_E_3.coeffs[1] = constant_term(tmp3829) - constant_term(tmp3830)
    TaylorSeries.zero!(tmp3832)
    tmp3832.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_3)
    TaylorSeries.zero!(tmp3833)
    tmp3833.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_2)
    TaylorSeries.zero!(p_E_cross_I_er_EM_1)
    p_E_cross_I_er_EM_1.coeffs[1] = constant_term(tmp3832) - constant_term(tmp3833)
    TaylorSeries.zero!(tmp3835)
    tmp3835.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_1)
    TaylorSeries.zero!(tmp3836)
    tmp3836.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_3)
    TaylorSeries.zero!(p_E_cross_I_er_EM_2)
    p_E_cross_I_er_EM_2.coeffs[1] = constant_term(tmp3835) - constant_term(tmp3836)
    TaylorSeries.zero!(tmp3838)
    tmp3838.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_2)
    TaylorSeries.zero!(tmp3839)
    tmp3839.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_1)
    TaylorSeries.zero!(p_E_cross_I_er_EM_3)
    p_E_cross_I_er_EM_3.coeffs[1] = constant_term(tmp3838) - constant_term(tmp3839)
    TaylorSeries.zero!(tmp3841)
    tmp3841.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_3)
    TaylorSeries.zero!(tmp3842)
    tmp3842.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_2)
    TaylorSeries.zero!(p_E_cross_I_p_E_1)
    p_E_cross_I_p_E_1.coeffs[1] = constant_term(tmp3841) - constant_term(tmp3842)
    TaylorSeries.zero!(tmp3844)
    tmp3844.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_1)
    TaylorSeries.zero!(tmp3845)
    tmp3845.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_3)
    TaylorSeries.zero!(p_E_cross_I_p_E_2)
    p_E_cross_I_p_E_2.coeffs[1] = constant_term(tmp3844) - constant_term(tmp3845)
    TaylorSeries.zero!(tmp3847)
    tmp3847.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_2)
    TaylorSeries.zero!(tmp3848)
    tmp3848.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_1)
    TaylorSeries.zero!(p_E_cross_I_p_E_3)
    p_E_cross_I_p_E_3.coeffs[1] = constant_term(tmp3847) - constant_term(tmp3848)
    TaylorSeries.zero!(tmp3852)
    tmp3852.coeffs[1] = constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3853)
    tmp3853.coeffs[1] = constant_term(7) * constant_term(tmp3852)
    TaylorSeries.zero!(one_minus_7sin2ϕEM)
    one_minus_7sin2ϕEM.coeffs[1] = constant_term(one_t) - constant_term(tmp3853)
    TaylorSeries.zero!(two_sinϕEM)
    two_sinϕEM.coeffs[1] = constant_term(2) * constant_term(sin_ϕ[ea, mo])
    TaylorSeries.zero!(tmp3858)
    tmp3858.coeffs[1] = constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5))
    TaylorSeries.zero!(N_MfigM_figE_factor_div_rEMp5)
    N_MfigM_figE_factor_div_rEMp5.coeffs[1] = constant_term(N_MfigM_figE_factor) / constant_term(tmp3858)
    TaylorSeries.zero!(tmp3860)
    tmp3860.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1)
    TaylorSeries.zero!(tmp3861)
    tmp3861.coeffs[1] = constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1)
    TaylorSeries.zero!(tmp3862)
    tmp3862.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp3861)
    TaylorSeries.zero!(tmp3863)
    tmp3863.coeffs[1] = constant_term(tmp3860) + constant_term(tmp3862)
    TaylorSeries.zero!(tmp3865)
    tmp3865.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_1)
    TaylorSeries.zero!(tmp3866)
    tmp3866.coeffs[1] = constant_term(tmp3863) - constant_term(tmp3865)
    TaylorSeries.zero!(N_MfigM_figE_1)
    N_MfigM_figE_1.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3866)
    TaylorSeries.zero!(tmp3868)
    tmp3868.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2)
    TaylorSeries.zero!(tmp3869)
    tmp3869.coeffs[1] = constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2)
    TaylorSeries.zero!(tmp3870)
    tmp3870.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp3869)
    TaylorSeries.zero!(tmp3871)
    tmp3871.coeffs[1] = constant_term(tmp3868) + constant_term(tmp3870)
    TaylorSeries.zero!(tmp3873)
    tmp3873.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_2)
    TaylorSeries.zero!(tmp3874)
    tmp3874.coeffs[1] = constant_term(tmp3871) - constant_term(tmp3873)
    TaylorSeries.zero!(N_MfigM_figE_2)
    N_MfigM_figE_2.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3874)
    TaylorSeries.zero!(tmp3876)
    tmp3876.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3)
    TaylorSeries.zero!(tmp3877)
    tmp3877.coeffs[1] = constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3)
    TaylorSeries.zero!(tmp3878)
    tmp3878.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp3877)
    TaylorSeries.zero!(tmp3879)
    tmp3879.coeffs[1] = constant_term(tmp3876) + constant_term(tmp3878)
    TaylorSeries.zero!(tmp3881)
    tmp3881.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_3)
    TaylorSeries.zero!(tmp3882)
    tmp3882.coeffs[1] = constant_term(tmp3879) - constant_term(tmp3881)
    TaylorSeries.zero!(N_MfigM_figE_3)
    N_MfigM_figE_3.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3882)
    TaylorSeries.zero!(tmp3884)
    tmp3884.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1])
    TaylorSeries.zero!(tmp3885)
    tmp3885.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2])
    TaylorSeries.zero!(tmp3886)
    tmp3886.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3])
    TaylorSeries.zero!(tmp3887)
    tmp3887.coeffs[1] = constant_term(tmp3885) + constant_term(tmp3886)
    TaylorSeries.zero!(N_1_LMF)
    N_1_LMF.coeffs[1] = constant_term(tmp3884) + constant_term(tmp3887)
    TaylorSeries.zero!(tmp3889)
    tmp3889.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1])
    TaylorSeries.zero!(tmp3890)
    tmp3890.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2])
    TaylorSeries.zero!(tmp3891)
    tmp3891.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3])
    TaylorSeries.zero!(tmp3892)
    tmp3892.coeffs[1] = constant_term(tmp3890) + constant_term(tmp3891)
    TaylorSeries.zero!(N_2_LMF)
    N_2_LMF.coeffs[1] = constant_term(tmp3889) + constant_term(tmp3892)
    TaylorSeries.zero!(tmp3894)
    tmp3894.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1])
    TaylorSeries.zero!(tmp3895)
    tmp3895.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2])
    TaylorSeries.zero!(tmp3896)
    tmp3896.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3])
    TaylorSeries.zero!(tmp3897)
    tmp3897.coeffs[1] = constant_term(tmp3895) + constant_term(tmp3896)
    TaylorSeries.zero!(N_3_LMF)
    N_3_LMF.coeffs[1] = constant_term(tmp3894) + constant_term(tmp3897)
    TaylorSeries.zero!(tmp3899)
    tmp3899.coeffs[1] = constant_term(q[6N + 10]) - constant_term(q[6N + 4])
    TaylorSeries.zero!(tmp3900)
    tmp3900.coeffs[1] = constant_term(k_ν) * constant_term(tmp3899)
    TaylorSeries.zero!(tmp3901)
    tmp3901.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp3902)
    tmp3902.coeffs[1] = constant_term(tmp3901) * constant_term(q[6N + 11])
    TaylorSeries.zero!(N_cmb_1)
    N_cmb_1.coeffs[1] = constant_term(tmp3900) - constant_term(tmp3902)
    TaylorSeries.zero!(tmp3904)
    tmp3904.coeffs[1] = constant_term(q[6N + 11]) - constant_term(q[6N + 5])
    TaylorSeries.zero!(tmp3905)
    tmp3905.coeffs[1] = constant_term(k_ν) * constant_term(tmp3904)
    TaylorSeries.zero!(tmp3906)
    tmp3906.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp3907)
    tmp3907.coeffs[1] = constant_term(tmp3906) * constant_term(q[6N + 10])
    TaylorSeries.zero!(N_cmb_2)
    N_cmb_2.coeffs[1] = constant_term(tmp3905) + constant_term(tmp3907)
    TaylorSeries.zero!(tmp3909)
    tmp3909.coeffs[1] = constant_term(q[6N + 12]) - constant_term(q[6N + 6])
    TaylorSeries.zero!(N_cmb_3)
    N_cmb_3.coeffs[1] = constant_term(k_ν) * constant_term(tmp3909)
    TaylorSeries.zero!(tmp3911)
    tmp3911.coeffs[1] = constant_term(μ[mo]) * constant_term(N_1_LMF)
    TaylorSeries.zero!(tmp3912)
    tmp3912.coeffs[1] = constant_term(N_MfigM_figE_1) + constant_term(tmp3911)
    TaylorSeries.zero!(tmp3913)
    tmp3913.coeffs[1] = constant_term(tmp3912) + constant_term(N_cmb_1)
    TaylorSeries.zero!(tmp3914)
    tmp3914.coeffs[1] = constant_term(dIω_x) + constant_term(ωxIω_x)
    TaylorSeries.zero!(I_dω_1)
    I_dω_1.coeffs[1] = constant_term(tmp3913) - constant_term(tmp3914)
    TaylorSeries.zero!(tmp3916)
    tmp3916.coeffs[1] = constant_term(μ[mo]) * constant_term(N_2_LMF)
    TaylorSeries.zero!(tmp3917)
    tmp3917.coeffs[1] = constant_term(N_MfigM_figE_2) + constant_term(tmp3916)
    TaylorSeries.zero!(tmp3918)
    tmp3918.coeffs[1] = constant_term(tmp3917) + constant_term(N_cmb_2)
    TaylorSeries.zero!(tmp3919)
    tmp3919.coeffs[1] = constant_term(dIω_y) + constant_term(ωxIω_y)
    TaylorSeries.zero!(I_dω_2)
    I_dω_2.coeffs[1] = constant_term(tmp3918) - constant_term(tmp3919)
    TaylorSeries.zero!(tmp3921)
    tmp3921.coeffs[1] = constant_term(μ[mo]) * constant_term(N_3_LMF)
    TaylorSeries.zero!(tmp3922)
    tmp3922.coeffs[1] = constant_term(N_MfigM_figE_3) + constant_term(tmp3921)
    TaylorSeries.zero!(tmp3923)
    tmp3923.coeffs[1] = constant_term(tmp3922) + constant_term(N_cmb_3)
    TaylorSeries.zero!(tmp3924)
    tmp3924.coeffs[1] = constant_term(dIω_z) + constant_term(ωxIω_z)
    TaylorSeries.zero!(I_dω_3)
    I_dω_3.coeffs[1] = constant_term(tmp3923) - constant_term(tmp3924)
    TaylorSeries.zero!(Ic_ωc_1)
    Ic_ωc_1.coeffs[1] = constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10])
    TaylorSeries.zero!(Ic_ωc_2)
    Ic_ωc_2.coeffs[1] = constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11])
    TaylorSeries.zero!(Ic_ωc_3)
    Ic_ωc_3.coeffs[1] = constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12])
    TaylorSeries.zero!(tmp3929)
    tmp3929.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_2)
    TaylorSeries.zero!(tmp3930)
    tmp3930.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_3)
    TaylorSeries.zero!(m_ωm_x_Icωc_1)
    m_ωm_x_Icωc_1.coeffs[1] = constant_term(tmp3929) - constant_term(tmp3930)
    TaylorSeries.zero!(tmp3932)
    tmp3932.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_3)
    TaylorSeries.zero!(tmp3933)
    tmp3933.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_1)
    TaylorSeries.zero!(m_ωm_x_Icωc_2)
    m_ωm_x_Icωc_2.coeffs[1] = constant_term(tmp3932) - constant_term(tmp3933)
    TaylorSeries.zero!(tmp3935)
    tmp3935.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_1)
    TaylorSeries.zero!(tmp3936)
    tmp3936.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_2)
    TaylorSeries.zero!(m_ωm_x_Icωc_3)
    m_ωm_x_Icωc_3.coeffs[1] = constant_term(tmp3935) - constant_term(tmp3936)
    TaylorSeries.zero!(Ic_dωc_1)
    Ic_dωc_1.coeffs[1] = constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1)
    TaylorSeries.zero!(Ic_dωc_2)
    Ic_dωc_2.coeffs[1] = constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2)
    TaylorSeries.zero!(Ic_dωc_3)
    Ic_dωc_3.coeffs[1] = constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3)
    TaylorSeries.zero!(tmp3941)
    tmp3941.coeffs[1] = sin(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp4072)
    tmp4072.coeffs[1] = cos(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp3942)
    tmp3942.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp3941)
    TaylorSeries.zero!(tmp3943)
    tmp3943.coeffs[1] = cos(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp4073)
    tmp4073.coeffs[1] = sin(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp3944)
    tmp3944.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp3943)
    TaylorSeries.zero!(tmp3945)
    tmp3945.coeffs[1] = constant_term(tmp3942) + constant_term(tmp3944)
    TaylorSeries.zero!(tmp3946)
    tmp3946.coeffs[1] = sin(constant_term(q[6N + 2]))
    TaylorSeries.zero!(tmp4074)
    tmp4074.coeffs[1] = cos(constant_term(q[6N + 2]))
    TaylorSeries.zero!(dq[6N + 1])
    (dq[6N + 1]).coeffs[1] = constant_term(tmp3945) / constant_term(tmp3946)
    TaylorSeries.zero!(tmp3948)
    tmp3948.coeffs[1] = cos(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp4075)
    tmp4075.coeffs[1] = sin(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp3949)
    tmp3949.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp3948)
    TaylorSeries.zero!(tmp3950)
    tmp3950.coeffs[1] = sin(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp4076)
    tmp4076.coeffs[1] = cos(constant_term(q[6N + 3]))
    TaylorSeries.zero!(tmp3951)
    tmp3951.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp3950)
    TaylorSeries.zero!(dq[6N + 2])
    (dq[6N + 2]).coeffs[1] = constant_term(tmp3949) - constant_term(tmp3951)
    TaylorSeries.zero!(tmp3953)
    tmp3953.coeffs[1] = cos(constant_term(q[6N + 2]))
    TaylorSeries.zero!(tmp4077)
    tmp4077.coeffs[1] = sin(constant_term(q[6N + 2]))
    TaylorSeries.zero!(tmp3954)
    tmp3954.coeffs[1] = constant_term(dq[6N + 1]) * constant_term(tmp3953)
    TaylorSeries.zero!(dq[6N + 3])
    (dq[6N + 3]).coeffs[1] = constant_term(q[6N + 6]) - constant_term(tmp3954)
    TaylorSeries.zero!(tmp3956)
    tmp3956.coeffs[1] = constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1)
    TaylorSeries.zero!(tmp3957)
    tmp3957.coeffs[1] = constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2)
    TaylorSeries.zero!(tmp3958)
    tmp3958.coeffs[1] = constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3)
    TaylorSeries.zero!(tmp3959)
    tmp3959.coeffs[1] = constant_term(tmp3957) + constant_term(tmp3958)
    TaylorSeries.zero!(dq[6N + 4])
    (dq[6N + 4]).coeffs[1] = constant_term(tmp3956) + constant_term(tmp3959)
    TaylorSeries.zero!(tmp3961)
    tmp3961.coeffs[1] = constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1)
    TaylorSeries.zero!(tmp3962)
    tmp3962.coeffs[1] = constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2)
    TaylorSeries.zero!(tmp3963)
    tmp3963.coeffs[1] = constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3)
    TaylorSeries.zero!(tmp3964)
    tmp3964.coeffs[1] = constant_term(tmp3962) + constant_term(tmp3963)
    TaylorSeries.zero!(dq[6N + 5])
    (dq[6N + 5]).coeffs[1] = constant_term(tmp3961) + constant_term(tmp3964)
    TaylorSeries.zero!(tmp3966)
    tmp3966.coeffs[1] = constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1)
    TaylorSeries.zero!(tmp3967)
    tmp3967.coeffs[1] = constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2)
    TaylorSeries.zero!(tmp3968)
    tmp3968.coeffs[1] = constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3)
    TaylorSeries.zero!(tmp3969)
    tmp3969.coeffs[1] = constant_term(tmp3967) + constant_term(tmp3968)
    TaylorSeries.zero!(dq[6N + 6])
    (dq[6N + 6]).coeffs[1] = constant_term(tmp3966) + constant_term(tmp3969)
    TaylorSeries.zero!(tmp3971)
    tmp3971.coeffs[1] = sin(constant_term(q[6N + 8]))
    TaylorSeries.zero!(tmp4078)
    tmp4078.coeffs[1] = cos(constant_term(q[6N + 8]))
    TaylorSeries.zero!(tmp3972)
    tmp3972.coeffs[1] = constant_term(ω_c_CE_2) / constant_term(tmp3971)
    TaylorSeries.zero!(dq[6N + 9])
    (dq[6N + 9]).coeffs[1] = -(constant_term(tmp3972))
    TaylorSeries.zero!(tmp3974)
    tmp3974.coeffs[1] = cos(constant_term(q[6N + 8]))
    TaylorSeries.zero!(tmp4079)
    tmp4079.coeffs[1] = sin(constant_term(q[6N + 8]))
    TaylorSeries.zero!(tmp3975)
    tmp3975.coeffs[1] = constant_term(dq[6N + 9]) * constant_term(tmp3974)
    TaylorSeries.zero!(dq[6N + 7])
    (dq[6N + 7]).coeffs[1] = constant_term(ω_c_CE_3) - constant_term(tmp3975)
    TaylorSeries.zero!(dq[6N + 8])
    (dq[6N + 8]).coeffs[1] = identity(constant_term(ω_c_CE_1))
    TaylorSeries.zero!(dq[6N + 10])
    (dq[6N + 10]).coeffs[1] = constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1)
    TaylorSeries.zero!(dq[6N + 11])
    (dq[6N + 11]).coeffs[1] = constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2)
    TaylorSeries.zero!(dq[6N + 12])
    (dq[6N + 12]).coeffs[1] = constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3)
    TaylorSeries.zero!(tmp3980)
    tmp3980.coeffs[1] = constant_term(newtonianCoeff[su, ea]) * constant_term(J2_t[su])
    TaylorSeries.zero!(tmp3983)
    tmp3983.coeffs[1] = constant_term(sin_ϕ[su, ea]) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3984)
    tmp3984.coeffs[1] = constant_term(3) * constant_term(tmp3983)
    TaylorSeries.zero!(tmp3985)
    tmp3985.coeffs[1] = constant_term(one_t) - constant_term(tmp3984)
    TaylorSeries.zero!(tmp3987)
    tmp3987.coeffs[1] = constant_term(tmp3985) / constant_term(2)
    TaylorSeries.zero!(w_LE)
    w_LE.coeffs[1] = constant_term(tmp3980) * constant_term(tmp3987)
    TaylorSeries.zero!(tmp3990)
    tmp3990.coeffs[1] = constant_term(0.5) * constant_term(v2[ea])
    TaylorSeries.zero!(tmp3991)
    tmp3991.coeffs[1] = constant_term(tmp3990) + constant_term(newtonianNb_Potential[ea])
    TaylorSeries.zero!(α_TTmTDB)
    α_TTmTDB.coeffs[1] = constant_term(tmp3991) + constant_term(w_LE)
    TaylorSeries.zero!(v4E)
    v4E.coeffs[1] = constant_term(v2[ea]) ^ float(constant_term(2))
    TaylorSeries.zero!(ϕ_Earth_Newtonian_sq)
    ϕ_Earth_Newtonian_sq.coeffs[1] = constant_term(newtonianNb_Potential[ea]) ^ float(constant_term(2))
    TaylorSeries.zero!(tmp3998)
    tmp3998.coeffs[1] = constant_term(ϕ_Earth_Newtonian_sq) / constant_term(2)
    TaylorSeries.zero!(tmp4000)
    tmp4000.coeffs[1] = constant_term(v4E) / constant_term(8)
    TaylorSeries.zero!(β_TTmTDB)
    β_TTmTDB.coeffs[1] = constant_term(tmp3998) - constant_term(tmp4000)
    for i = 1:N
        if i == ea
            continue
        else
            TaylorSeries.zero!(β_TTmTDB_i_1[i, ea])
            (β_TTmTDB_i_1[i, ea]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i, ea])
            TaylorSeries.zero!(tmp4005[ea])
            (tmp4005[ea]).coeffs[1] = constant_term(1.5) * constant_term(v2[ea])
            TaylorSeries.zero!(tmp4007[i])
            (tmp4007[i]).coeffs[1] = constant_term(2) * constant_term(v2[i])
            TaylorSeries.zero!(tmp4008[ea])
            (tmp4008[ea]).coeffs[1] = constant_term(tmp4005[ea]) + constant_term(tmp4007[i])
            TaylorSeries.zero!(β_TTmTDB_i_2[i])
            (β_TTmTDB_i_2[i]).coeffs[1] = constant_term(newtonianNb_Potential[i]) - constant_term(tmp4008[ea])
            TaylorSeries.zero!(tmp4010[i, ea])
            (tmp4010[i, ea]).coeffs[1] = constant_term(dq[3 * (N + i) - 2]) * constant_term(X[i, ea])
            TaylorSeries.zero!(tmp4011[i, ea])
            (tmp4011[i, ea]).coeffs[1] = constant_term(dq[3 * (N + i) - 1]) * constant_term(Y[i, ea])
            TaylorSeries.zero!(tmp4012[i, ea])
            (tmp4012[i, ea]).coeffs[1] = constant_term(tmp4010[i, ea]) + constant_term(tmp4011[i, ea])
            TaylorSeries.zero!(tmp4013[i, ea])
            (tmp4013[i, ea]).coeffs[1] = constant_term(dq[3 * (N + i)]) * constant_term(Z[i, ea])
            TaylorSeries.zero!(tmp4014[i, ea])
            (tmp4014[i, ea]).coeffs[1] = constant_term(tmp4012[i, ea]) + constant_term(tmp4013[i, ea])
            TaylorSeries.zero!(β_TTmTDB_i_3[i, ea])
            (β_TTmTDB_i_3[i, ea]).coeffs[1] = constant_term(tmp4014[i, ea]) / constant_term(2)
            TaylorSeries.zero!(β_TTmTDB_i_4[i, ea])
            (β_TTmTDB_i_4[i, ea]).coeffs[1] = constant_term(rij_dot_vi_div_rij_sq[i, ea]) / constant_term(2)
            TaylorSeries.zero!(tmp4019[i, ea])
            (tmp4019[i, ea]).coeffs[1] = constant_term(β_TTmTDB_i_1[i, ea]) + constant_term(β_TTmTDB_i_2[i])
            TaylorSeries.zero!(tmp4020[i, ea])
            (tmp4020[i, ea]).coeffs[1] = constant_term(β_TTmTDB_i_3[i, ea]) + constant_term(β_TTmTDB_i_4[i, ea])
            TaylorSeries.zero!(β_TTmTDB_i[i, ea])
            (β_TTmTDB_i[i, ea]).coeffs[1] = constant_term(tmp4019[i, ea]) + constant_term(tmp4020[i, ea])
            TaylorSeries.zero!(tmp4022[i, ea])
            (tmp4022[i, ea]).coeffs[1] = constant_term(newtonian1b_Potential[i, ea]) * constant_term(β_TTmTDB_i[i, ea])
            TaylorSeries.zero!(temp_β_TTmTDB[i, ea])
            (temp_β_TTmTDB[i, ea]).coeffs[1] = constant_term(β_TTmTDB) + constant_term(tmp4022[i, ea])
            TaylorSeries.zero!(β_TTmTDB)
            β_TTmTDB.coeffs[1] = identity(constant_term(temp_β_TTmTDB[i, ea]))
        end
    end
    TaylorSeries.zero!(tmp4024)
    tmp4024.coeffs[1] = constant_term(c_m2) * constant_term(α_TTmTDB)
    TaylorSeries.zero!(tmp4025)
    tmp4025.coeffs[1] = constant_term(L_B) - constant_term(tmp4024)
    TaylorSeries.zero!(tmp4026)
    tmp4026.coeffs[1] = constant_term(tmp4025) * constant_term(one_plus_L_B_minus_L_G)
    TaylorSeries.zero!(tmp4027)
    tmp4027.coeffs[1] = constant_term(c_m4) * constant_term(β_TTmTDB)
    TaylorSeries.zero!(tmp4028)
    tmp4028.coeffs[1] = constant_term(tmp4027) - constant_term(L_G)
    TaylorSeries.zero!(tmp4029)
    tmp4029.coeffs[1] = constant_term(tmp4026) + constant_term(tmp4028)
    TaylorSeries.zero!(dq[6N + 13])
    (dq[6N + 13]).coeffs[1] = constant_term(daysec) * constant_term(tmp4029)
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp4031, tmp2961, ϕ_m, ord)
        TaylorSeries.sincos!(tmp4032, tmp2962, ψ_m, ord)
        TaylorSeries.mul!(tmp2963, tmp2961, tmp2962, ord)
        TaylorSeries.sincos!(tmp4033, tmp2964, θ_m, ord)
        TaylorSeries.sincos!(tmp2965, tmp4034, ϕ_m, ord)
        TaylorSeries.mul!(tmp2966, tmp2964, tmp2965, ord)
        TaylorSeries.sincos!(tmp2967, tmp4035, ψ_m, ord)
        TaylorSeries.mul!(tmp2968, tmp2966, tmp2967, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp2963, tmp2968, ord)
        TaylorSeries.sincos!(tmp4036, tmp2970, θ_m, ord)
        TaylorSeries.subst!(tmp2971, tmp2970, ord)
        TaylorSeries.sincos!(tmp4037, tmp2972, ψ_m, ord)
        TaylorSeries.mul!(tmp2973, tmp2971, tmp2972, ord)
        TaylorSeries.sincos!(tmp2974, tmp4038, ϕ_m, ord)
        TaylorSeries.mul!(tmp2975, tmp2973, tmp2974, ord)
        TaylorSeries.sincos!(tmp4039, tmp2976, ϕ_m, ord)
        TaylorSeries.sincos!(tmp2977, tmp4040, ψ_m, ord)
        TaylorSeries.mul!(tmp2978, tmp2976, tmp2977, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp2975, tmp2978, ord)
        TaylorSeries.sincos!(tmp2980, tmp4041, θ_m, ord)
        TaylorSeries.sincos!(tmp2981, tmp4042, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp2980, tmp2981, ord)
        TaylorSeries.sincos!(tmp4043, tmp2983, ψ_m, ord)
        TaylorSeries.sincos!(tmp2984, tmp4044, ϕ_m, ord)
        TaylorSeries.mul!(tmp2985, tmp2983, tmp2984, ord)
        TaylorSeries.sincos!(tmp4045, tmp2986, θ_m, ord)
        TaylorSeries.sincos!(tmp4046, tmp2987, ϕ_m, ord)
        TaylorSeries.mul!(tmp2988, tmp2986, tmp2987, ord)
        TaylorSeries.sincos!(tmp2989, tmp4047, ψ_m, ord)
        TaylorSeries.mul!(tmp2990, tmp2988, tmp2989, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp2985, tmp2990, ord)
        TaylorSeries.sincos!(tmp4048, tmp2992, θ_m, ord)
        TaylorSeries.sincos!(tmp4049, tmp2993, ϕ_m, ord)
        TaylorSeries.mul!(tmp2994, tmp2992, tmp2993, ord)
        TaylorSeries.sincos!(tmp4050, tmp2995, ψ_m, ord)
        TaylorSeries.mul!(tmp2996, tmp2994, tmp2995, ord)
        TaylorSeries.sincos!(tmp2997, tmp4051, ϕ_m, ord)
        TaylorSeries.sincos!(tmp2998, tmp4052, ψ_m, ord)
        TaylorSeries.mul!(tmp2999, tmp2997, tmp2998, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp2996, tmp2999, ord)
        TaylorSeries.sincos!(tmp4053, tmp3001, ϕ_m, ord)
        TaylorSeries.subst!(tmp3002, tmp3001, ord)
        TaylorSeries.sincos!(tmp3003, tmp4054, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp3002, tmp3003, ord)
        TaylorSeries.sincos!(tmp3005, tmp4055, θ_m, ord)
        TaylorSeries.sincos!(tmp3006, tmp4056, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp3005, tmp3006, ord)
        TaylorSeries.sincos!(tmp4057, tmp3008, ψ_m, ord)
        TaylorSeries.sincos!(tmp3009, tmp4058, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp3008, tmp3009, ord)
        TaylorSeries.sincos!(tmp4059, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp4060, tmp3012, ϕ_c, ord)
        TaylorSeries.mul!(tmp3013, RotM[1, 1, mo], tmp3012, ord)
        TaylorSeries.sincos!(tmp3014, tmp4061, ϕ_c, ord)
        TaylorSeries.mul!(tmp3015, RotM[1, 2, mo], tmp3014, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp3013, tmp3015, ord)
        TaylorSeries.subst!(tmp3017, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp3018, tmp4062, ϕ_c, ord)
        TaylorSeries.mul!(tmp3019, tmp3017, tmp3018, ord)
        TaylorSeries.sincos!(tmp4063, tmp3020, ϕ_c, ord)
        TaylorSeries.mul!(tmp3021, RotM[1, 2, mo], tmp3020, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp3019, tmp3021, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp4064, tmp3023, ϕ_c, ord)
        TaylorSeries.mul!(tmp3024, RotM[2, 1, mo], tmp3023, ord)
        TaylorSeries.sincos!(tmp3025, tmp4065, ϕ_c, ord)
        TaylorSeries.mul!(tmp3026, RotM[2, 2, mo], tmp3025, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp3024, tmp3026, ord)
        TaylorSeries.subst!(tmp3028, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp3029, tmp4066, ϕ_c, ord)
        TaylorSeries.mul!(tmp3030, tmp3028, tmp3029, ord)
        TaylorSeries.sincos!(tmp4067, tmp3031, ϕ_c, ord)
        TaylorSeries.mul!(tmp3032, RotM[2, 2, mo], tmp3031, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp3030, tmp3032, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp4068, tmp3034, ϕ_c, ord)
        TaylorSeries.mul!(tmp3035, RotM[3, 1, mo], tmp3034, ord)
        TaylorSeries.sincos!(tmp3036, tmp4069, ϕ_c, ord)
        TaylorSeries.mul!(tmp3037, RotM[3, 2, mo], tmp3036, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp3035, tmp3037, ord)
        TaylorSeries.subst!(tmp3039, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp3040, tmp4070, ϕ_c, ord)
        TaylorSeries.mul!(tmp3041, tmp3039, tmp3040, ord)
        TaylorSeries.sincos!(tmp4071, tmp3042, ϕ_c, ord)
        TaylorSeries.mul!(tmp3043, RotM[3, 2, mo], tmp3042, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp3041, tmp3043, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp3045, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp3046, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp3047, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp3048, tmp3046, tmp3047, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp3045, tmp3048, ord)
        TaylorSeries.mul!(tmp3050, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp3051, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp3052, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp3053, tmp3051, tmp3052, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp3050, tmp3053, ord)
        TaylorSeries.mul!(tmp3055, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp3056, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp3057, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp3058, tmp3056, tmp3057, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp3055, tmp3058, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        for j = 1:N
            TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
            TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
            TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
            TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
        end
        for j = 1:N_ext
            TaylorSeries.identity!(accX[j], zero_q_1, ord)
            TaylorSeries.identity!(accY[j], zero_q_1, ord)
            TaylorSeries.identity!(accZ[j], zero_q_1, ord)
        end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1286 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                        TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                        TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                        TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.mul!(tmp3067[3j - 2], 4, dq[3j - 2], ord)
                        TaylorSeries.mul!(tmp3069[3i - 2], 3, dq[3i - 2], ord)
                        TaylorSeries.subst!(_4U_m_3X[i, j], tmp3067[3j - 2], tmp3069[3i - 2], ord)
                        TaylorSeries.mul!(tmp3072[3j - 1], 4, dq[3j - 1], ord)
                        TaylorSeries.mul!(tmp3074[3i - 1], 3, dq[3i - 1], ord)
                        TaylorSeries.subst!(_4V_m_3Y[i, j], tmp3072[3j - 1], tmp3074[3i - 1], ord)
                        TaylorSeries.mul!(tmp3077[3j], 4, dq[3j], ord)
                        TaylorSeries.mul!(tmp3079[3i], 3, dq[3i], ord)
                        TaylorSeries.subst!(_4W_m_3Z[i, j], tmp3077[3j], tmp3079[3i], ord)
                        TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                        TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                        TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                        TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.add!(tmp3087[i, j], UU[i, j], VV[i, j], ord)
                        TaylorSeries.add!(vi_dot_vj[i, j], tmp3087[i, j], WW[i, j], ord)
                        TaylorSeries.pow!(tmp3090[i, j], X[i, j], 2, ord)
                        TaylorSeries.pow!(tmp3092[i, j], Y[i, j], 2, ord)
                        TaylorSeries.add!(tmp3093[i, j], tmp3090[i, j], tmp3092[i, j], ord)
                        TaylorSeries.pow!(tmp3095[i, j], Z[i, j], 2, ord)
                        TaylorSeries.add!(r_p2[i, j], tmp3093[i, j], tmp3095[i, j], ord)
                        TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                        TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], 1.5, ord)
                        TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], 3.5, ord)
                        TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                        TaylorSeries.add!(tmp3103[i, j], pn2x[i, j], pn2y[i, j], ord)
                        TaylorSeries.add!(tmp3104[i, j], tmp3103[i, j], pn2z[i, j], ord)
                        TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp3104[i, j], ord)
                        TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                        TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                        TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                        TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                        TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                        TaylorSeries.mul!(tmp3115[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp3115[i, j], ord)
                        TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                        TaylorSeries.mul!(tmp3117[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp3117[i, j], ord)
                        TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                        TaylorSeries.mul!(tmp3119[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp3119[i, j], ord)
                        TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                        TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                        TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                    end
                end
                TaylorSeries.pow!(tmp3123[3j - 2], dq[3j - 2], 2, ord)
                TaylorSeries.pow!(tmp3125[3j - 1], dq[3j - 1], 2, ord)
                TaylorSeries.add!(tmp3126[3j - 2], tmp3123[3j - 2], tmp3125[3j - 1], ord)
                TaylorSeries.pow!(tmp3128[3j], dq[3j], 2, ord)
                TaylorSeries.add!(v2[j], tmp3126[3j - 2], tmp3128[3j], ord)
            end
        TaylorSeries.add!(tmp3130, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp3132, tmp3130, 2, ord)
        TaylorSeries.subst!(tmp3133, I_M_t[3, 3], tmp3132, ord)
        TaylorSeries.div!(J2M_t, tmp3133, μ[mo], ord)
        TaylorSeries.subst!(tmp3135, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp3136, tmp3135, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp3136, 4, ord)
        TaylorSeries.subst!(tmp3139, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp3139, μ[mo], ord)
        TaylorSeries.subst!(tmp3141, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp3141, μ[mo], ord)
        TaylorSeries.subst!(tmp3143, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp3144, tmp3143, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp3144, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1380 =# Threads.@threads for j = 1:N_ext
                for i = 1:N_ext
                    if i == j
                        continue
                    else
                        if UJ_interaction[i, j]
                            TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                            TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                            TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                            TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                            TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                            TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                            TaylorSeries.add!(tmp3156[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                            TaylorSeries.add!(X_bf[i, j], tmp3156[i, j], X_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp3158[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                            TaylorSeries.add!(Y_bf[i, j], tmp3158[i, j], Y_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp3160[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                            TaylorSeries.add!(Z_bf[i, j], tmp3160[i, j], Z_bf_3[i, j], ord)
                            TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.pow!(tmp3164[i, j], X_bf[i, j], 2, ord)
                            TaylorSeries.pow!(tmp3166[i, j], Y_bf[i, j], 2, ord)
                            TaylorSeries.add!(tmp3167[i, j], tmp3164[i, j], tmp3166[i, j], ord)
                            TaylorSeries.sqrt!(r_xy[i, j], tmp3167[i, j], ord)
                            TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                            TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                            TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                            for n = 2:n1SEM[j]
                                TaylorSeries.mul!(tmp3172[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3173[i, j, n], tmp3172[i, j, n], fact1_jsem[n], ord)
                                TaylorSeries.mul!(tmp3174[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                                TaylorSeries.subst!(P_n[i, j, n + 1], tmp3173[i, j, n], tmp3174[i, j, n - 1], ord)
                                TaylorSeries.mul!(tmp3176[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3177[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                                TaylorSeries.add!(dP_n[i, j, n + 1], tmp3176[i, j, n], tmp3177[i, j, n], ord)
                                TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], fact5_jsem[n], ord)
                            end
                            TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], 2, ord)
                            TaylorSeries.mul!(tmp3182[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                            TaylorSeries.mul!(tmp3183[i, j, 3], tmp3182[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ξ[i, j], tmp3183[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.subst!(tmp3185[i, j, 3], dP_n[i, j, 3], ord)
                            TaylorSeries.mul!(tmp3186[i, j, 3], tmp3185[i, j, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp3187[i, j, 3], tmp3186[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ζ[i, j], tmp3187[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n1SEM[j]
                                TaylorSeries.mul!(tmp3189[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                                TaylorSeries.mul!(tmp3190[i, j, n + 1], tmp3189[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp3191[i, j, n + 1], tmp3190[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjξ[i, j, n], tmp3191[i, j, n + 1], F_J_ξ_36[i, j], ord)
                                TaylorSeries.subst!(tmp3193[i, j, n + 1], dP_n[i, j, n + 1], ord)
                                TaylorSeries.mul!(tmp3194[i, j, n + 1], tmp3193[i, j, n + 1], cos_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3195[i, j, n + 1], tmp3194[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp3196[i, j, n + 1], tmp3195[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjζ[i, j, n], tmp3196[i, j, n + 1], F_J_ζ_36[i, j], ord)
                                TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                                TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                            end
                            if j == mo
                                for m = 1:n1SEM[mo]
                                    if m == 1
                                        TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                        TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                        TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                        TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                    else
                                        TaylorSeries.mul!(tmp3199[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp3200[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.add!(sin_mλ[i, j, m], tmp3199[i, j, m - 1], tmp3200[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp3202[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp3203[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.subst!(cos_mλ[i, j, m], tmp3202[i, j, m - 1], tmp3203[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp3205[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp3205[i, j, m - 1, m - 1], lnm5[m], ord)
                                        TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3208[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp3208[i, j, m, m], lnm3[m], ord)
                                    end
                                    for n = m + 1:n1SEM[mo]
                                        if n == m + 1
                                            TaylorSeries.mul!(tmp3210[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp3210[i, j, n - 1, m], lnm1[n, m], ord)
                                        else
                                            TaylorSeries.mul!(tmp3212[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(tmp3213[i, j, n - 1, m], tmp3212[i, j, n - 1, m], lnm1[n, m], ord)
                                            TaylorSeries.mul!(tmp3214[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                            TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp3213[i, j, n - 1, m], tmp3214[i, j, n - 2, m], ord)
                                        end
                                        TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3217[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3218[i, j, n, m], tmp3217[i, j, n, m], lnm3[n], ord)
                                        TaylorSeries.mul!(tmp3219[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                        TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp3218[i, j, n, m], tmp3219[i, j, n - 1, m], ord)
                                    end
                                end
                                TaylorSeries.mul!(tmp3221[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                                TaylorSeries.mul!(tmp3222[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3223[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp3224[i, j, 1], tmp3222[i, j, 1], tmp3223[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3225[i, j, 2, 1], tmp3221[i, j, 2, 1], tmp3224[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3226[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                                TaylorSeries.mul!(tmp3227[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3228[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp3229[i, j, 2], tmp3227[i, j, 2], tmp3228[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3230[i, j, 2, 2], tmp3226[i, j, 2, 2], tmp3229[i, j, 2], ord)
                                TaylorSeries.add!(tmp3231[i, j, 2, 1], tmp3225[i, j, 2, 1], tmp3230[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ξ[i, j], tmp3231[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp3233[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                                TaylorSeries.mul!(tmp3234[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3235[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.subst!(tmp3236[i, j, 1], tmp3234[i, j, 1], tmp3235[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3237[i, j, 2, 1], tmp3233[i, j, 2, 1], tmp3236[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3238[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                                TaylorSeries.mul!(tmp3239[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3240[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.subst!(tmp3241[i, j, 2], tmp3239[i, j, 2], tmp3240[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3242[i, j, 2, 2], tmp3238[i, j, 2, 2], tmp3241[i, j, 2], ord)
                                TaylorSeries.add!(tmp3243[i, j, 2, 1], tmp3237[i, j, 2, 1], tmp3242[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_η[i, j], tmp3243[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp3245[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3246[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp3247[i, j, 1], tmp3245[i, j, 1], tmp3246[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3248[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp3247[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3249[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3250[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp3251[i, j, 2], tmp3249[i, j, 2], tmp3250[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3252[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp3251[i, j, 2], ord)
                                TaylorSeries.add!(tmp3253[i, j, 2, 1], tmp3248[i, j, 2, 1], tmp3252[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ζ[i, j], tmp3253[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                                for n = 3:n2M
                                    for m = 1:n
                                        TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(tmp3259[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                        TaylorSeries.add!(tmp3260[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3261[i, j, n, m], tmp3259[i, j, n, m], tmp3260[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3262[i, j, n, m], tmp3261[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp3262[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                        TaylorSeries.mul!(tmp3264[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                        TaylorSeries.subst!(tmp3265[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3266[i, j, n, m], tmp3264[i, j, n, m], tmp3265[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3267[i, j, n, m], tmp3266[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp3267[i, j, n, m], F_CS_η_36[i, j], ord)
                                        TaylorSeries.add!(tmp3269[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3270[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp3269[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3271[i, j, n, m], tmp3270[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp3271[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                        TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                    end
                                end
                                TaylorSeries.add!(tmp3273[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.add!(tmp3274[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ξ[i, j], tmp3273[i, j], tmp3274[i, j], ord)
                                TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                                TaylorSeries.add!(tmp3277[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                                TaylorSeries.add!(tmp3278[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], tmp3277[i, j], tmp3278[i, j], ord)
                            else
                                TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            end
                            TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                            TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                            TaylorSeries.subst!(tmp3284[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp3284[i, j], cos_λ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                            TaylorSeries.subst!(tmp3287[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp3287[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                            TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp3289[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3290[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3291[i, j, 1, 1], tmp3289[i, j, 1, 1], tmp3290[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3292[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp3291[i, j, 1, 1], tmp3292[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3294[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3295[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3296[i, j, 2, 1], tmp3294[i, j, 2, 1], tmp3295[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3297[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp3296[i, j, 2, 1], tmp3297[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3299[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3300[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3301[i, j, 3, 1], tmp3299[i, j, 3, 1], tmp3300[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3302[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp3301[i, j, 3, 1], tmp3302[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3304[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3305[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3306[i, j, 1, 1], tmp3304[i, j, 1, 1], tmp3305[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3307[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp3306[i, j, 1, 1], tmp3307[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3309[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3310[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3311[i, j, 2, 1], tmp3309[i, j, 2, 1], tmp3310[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3312[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp3311[i, j, 2, 1], tmp3312[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3314[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3315[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3316[i, j, 3, 1], tmp3314[i, j, 3, 1], tmp3315[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3317[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp3316[i, j, 3, 1], tmp3317[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3319[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3320[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3321[i, j, 1, 1], tmp3319[i, j, 1, 1], tmp3320[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3322[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp3321[i, j, 1, 1], tmp3322[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3324[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3325[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3326[i, j, 2, 1], tmp3324[i, j, 2, 1], tmp3325[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3327[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp3326[i, j, 2, 1], tmp3327[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3329[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3330[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3331[i, j, 3, 1], tmp3329[i, j, 3, 1], tmp3330[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3332[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp3331[i, j, 3, 1], tmp3332[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3334[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                            TaylorSeries.mul!(tmp3335[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                            TaylorSeries.add!(tmp3336[i, j, 1, 1], tmp3334[i, j, 1, 1], tmp3335[i, j, 2, 1], ord)
                            TaylorSeries.mul!(tmp3337[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                            TaylorSeries.add!(F_JCS_x[i, j], tmp3336[i, j, 1, 1], tmp3337[i, j, 3, 1], ord)
                            TaylorSeries.mul!(tmp3339[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3340[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                            TaylorSeries.add!(tmp3341[i, j, 1, 2], tmp3339[i, j, 1, 2], tmp3340[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3342[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                            TaylorSeries.add!(F_JCS_y[i, j], tmp3341[i, j, 1, 2], tmp3342[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3344[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3345[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                            TaylorSeries.add!(tmp3346[i, j, 1, 3], tmp3344[i, j, 1, 3], tmp3345[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3347[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                            TaylorSeries.add!(F_JCS_z[i, j], tmp3346[i, j, 1, 3], tmp3347[i, j, 3, 3], ord)
                        end
                    end
                end
            end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp3349[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp3349[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp3351[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp3351[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp3353[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp3353[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp3355[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp3355[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp3357[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp3357[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp3359[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp3359[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp3361[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp3362[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp3363[i, j], tmp3361[i, j], tmp3362[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp3363[i, j], ord)
                            TaylorSeries.mul!(tmp3365[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp3366[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp3367[i, j], tmp3365[i, j], tmp3366[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp3367[i, j], ord)
                            TaylorSeries.mul!(tmp3369[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp3370[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp3371[i, j], tmp3369[i, j], tmp3370[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp3371[i, j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], N_MfigM_pmA_x[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], N_MfigM_pmA_y[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], N_MfigM_pmA_z[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1619 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                        TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                        TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                        TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                        TaylorSeries.mul!(tmp3383[i, j], 4, vi_dot_vj[i, j], ord)
                        TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp3383[i, j], ord)
                        TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                        TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                        TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                        TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                        TaylorSeries.add!(tmp3389[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                        TaylorSeries.add!(Rij_dot_Vi[i, j], tmp3389[i, j], Zij_t_Wi[i, j], ord)
                        TaylorSeries.pow!(tmp3392[i, j], Rij_dot_Vi[i, j], 2, ord)
                        TaylorSeries.div!(rij_dot_vi_div_rij_sq[i, j], tmp3392[i, j], r_p2[i, j], ord)
                        TaylorSeries.mul!(tmp3395[i, j], 1.5, rij_dot_vi_div_rij_sq[i, j], ord)
                        TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp3395[i, j], ord)
                        TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                    end
                end
                TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1658 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                        TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                        TaylorSeries.add!(tmp3402[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                        TaylorSeries.add!(tmp3403[i, j], tmp3402[i, j], pNZ_t_Z[i, j], ord)
                        TaylorSeries.mul!(tmp3404[i, j], 0.5, tmp3403[i, j], ord)
                        TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp3404[i, j], ord)
                        TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                        TaylorSeries.add!(tmp3412[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp3412[i, j], ord)
                        TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                        TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                        TaylorSeries.add!(tmp3415[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp3415[i, j], ord)
                        TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                        TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                        TaylorSeries.add!(tmp3418[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp3418[i, j], ord)
                        TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                        TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                    end
                end
                TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
            end
        TaylorSeries.identity!(x0s_M, r_star_M_0[1], ord)
        TaylorSeries.identity!(y0s_M, r_star_M_0[2], ord)
        TaylorSeries.identity!(z0s_M, r_star_M_0[3], ord)
        TaylorSeries.pow!(tmp3425, x0s_M, 2, ord)
        TaylorSeries.pow!(tmp3427, y0s_M, 2, ord)
        TaylorSeries.add!(ρ0s2_M, tmp3425, tmp3427, ord)
        TaylorSeries.sqrt!(ρ0s_M, ρ0s2_M, ord)
        TaylorSeries.pow!(z0s2_M, z0s_M, 2, ord)
        TaylorSeries.add!(r0s2_M, ρ0s2_M, z0s2_M, ord)
        TaylorSeries.sqrt!(r0s_M, r0s2_M, ord)
        TaylorSeries.pow!(r0s5_M, r0s_M, 5, ord)
        TaylorSeries.identity!(x0s_S, r_star_S_0[1], ord)
        TaylorSeries.identity!(y0s_S, r_star_S_0[2], ord)
        TaylorSeries.identity!(z0s_S, r_star_S_0[3], ord)
        TaylorSeries.pow!(tmp3437, x0s_S, 2, ord)
        TaylorSeries.pow!(tmp3439, y0s_S, 2, ord)
        TaylorSeries.add!(ρ0s2_S, tmp3437, tmp3439, ord)
        TaylorSeries.sqrt!(ρ0s_S, ρ0s2_S, ord)
        TaylorSeries.pow!(z0s2_S, z0s_S, 2, ord)
        TaylorSeries.add!(r0s2_S, ρ0s2_S, z0s2_S, ord)
        TaylorSeries.sqrt!(r0s_S, r0s2_S, ord)
        TaylorSeries.pow!(r0s5_S, r0s_S, 5, ord)
        TaylorSeries.mul!(tmp3449, Z_bf[mo, ea], r_star_M_0[3], ord)
        TaylorSeries.pow!(tmp3451, tmp3449, 2, ord)
        TaylorSeries.mul!(tmp3453, r_xy[mo, ea], ρ0s_M, ord)
        TaylorSeries.pow!(tmp3455, tmp3453, 2, ord)
        TaylorSeries.mul!(tmp3456, 0.5, tmp3455, ord)
        TaylorSeries.add!(tmp3457, tmp3451, tmp3456, ord)
        TaylorSeries.div!(tmp3458, tmp3457, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp3459, 5, tmp3458, ord)
        TaylorSeries.subst!(coeff0_M, r0s2_M, tmp3459, ord)
        TaylorSeries.mul!(tmp3462, Z_bf[mo, ea], r_star_S_0[3], ord)
        TaylorSeries.pow!(tmp3464, tmp3462, 2, ord)
        TaylorSeries.mul!(tmp3466, r_xy[mo, ea], ρ0s_S, ord)
        TaylorSeries.pow!(tmp3468, tmp3466, 2, ord)
        TaylorSeries.mul!(tmp3469, 0.5, tmp3468, ord)
        TaylorSeries.add!(tmp3470, tmp3464, tmp3469, ord)
        TaylorSeries.div!(tmp3471, tmp3470, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp3472, 5, tmp3471, ord)
        TaylorSeries.subst!(coeff0_S, r0s2_S, tmp3472, ord)
        TaylorSeries.div!(k_20E_div_r0s5_M, k_20E, r0s5_M, ord)
        TaylorSeries.div!(k_20E_div_r0s5_S, k_20E, r0s5_S, ord)
        TaylorSeries.add!(tmp3476, ρ0s2_M, coeff0_M, ord)
        TaylorSeries.mul!(tmp3477, k_20E_div_r0s5_M, tmp3476, ord)
        TaylorSeries.mul!(a_tid_0_M_x, tmp3477, X_bf[mo, ea], ord)
        TaylorSeries.add!(tmp3479, ρ0s2_M, coeff0_M, ord)
        TaylorSeries.mul!(tmp3480, k_20E_div_r0s5_M, tmp3479, ord)
        TaylorSeries.mul!(a_tid_0_M_y, tmp3480, Y_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp3483, 2, z0s2_M, ord)
        TaylorSeries.add!(tmp3484, tmp3483, coeff0_M, ord)
        TaylorSeries.mul!(tmp3485, k_20E_div_r0s5_M, tmp3484, ord)
        TaylorSeries.mul!(a_tid_0_M_z, tmp3485, Z_bf[mo, ea], ord)
        TaylorSeries.add!(tmp3487, ρ0s2_S, coeff0_S, ord)
        TaylorSeries.mul!(tmp3488, k_20E_div_r0s5_S, tmp3487, ord)
        TaylorSeries.mul!(a_tid_0_S_x, tmp3488, X_bf[mo, ea], ord)
        TaylorSeries.add!(tmp3490, ρ0s2_S, coeff0_S, ord)
        TaylorSeries.mul!(tmp3491, k_20E_div_r0s5_S, tmp3490, ord)
        TaylorSeries.mul!(a_tid_0_S_y, tmp3491, Y_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp3494, 2, z0s2_S, ord)
        TaylorSeries.add!(tmp3495, tmp3494, coeff0_S, ord)
        TaylorSeries.mul!(tmp3496, k_20E_div_r0s5_S, tmp3495, ord)
        TaylorSeries.mul!(a_tid_0_S_z, tmp3496, Z_bf[mo, ea], ord)
        TaylorSeries.identity!(x1s_M, r_star_M_1[1], ord)
        TaylorSeries.identity!(y1s_M, r_star_M_1[2], ord)
        TaylorSeries.identity!(z1s_M, r_star_M_1[3], ord)
        TaylorSeries.pow!(tmp3499, x1s_M, 2, ord)
        TaylorSeries.pow!(tmp3501, y1s_M, 2, ord)
        TaylorSeries.add!(ρ1s2_M, tmp3499, tmp3501, ord)
        TaylorSeries.sqrt!(ρ1s_M, ρ1s2_M, ord)
        TaylorSeries.pow!(z1s2_M, z1s_M, 2, ord)
        TaylorSeries.add!(r1s2_M, ρ1s2_M, z1s2_M, ord)
        TaylorSeries.sqrt!(r1s_M, r1s2_M, ord)
        TaylorSeries.pow!(r1s5_M, r1s_M, 5, ord)
        TaylorSeries.identity!(x1s_S, r_star_S_1[1], ord)
        TaylorSeries.identity!(y1s_S, r_star_S_1[2], ord)
        TaylorSeries.identity!(z1s_S, r_star_S_1[3], ord)
        TaylorSeries.pow!(tmp3511, x1s_S, 2, ord)
        TaylorSeries.pow!(tmp3513, y1s_S, 2, ord)
        TaylorSeries.add!(ρ1s2_S, tmp3511, tmp3513, ord)
        TaylorSeries.sqrt!(ρ1s_S, ρ1s2_S, ord)
        TaylorSeries.pow!(z1s2_S, z1s_S, 2, ord)
        TaylorSeries.add!(r1s2_S, ρ1s2_S, z1s2_S, ord)
        TaylorSeries.sqrt!(r1s_S, r1s2_S, ord)
        TaylorSeries.pow!(r1s5_S, r1s_S, 5, ord)
        TaylorSeries.mul!(tmp3522, X_bf[mo, ea], r_star_M_1[1], ord)
        TaylorSeries.mul!(tmp3523, Y_bf[mo, ea], r_star_M_1[2], ord)
        TaylorSeries.add!(coeff1_1_M, tmp3522, tmp3523, ord)
        TaylorSeries.mul!(tmp3525, X_bf[mo, ea], r_star_S_1[1], ord)
        TaylorSeries.mul!(tmp3526, Y_bf[mo, ea], r_star_S_1[2], ord)
        TaylorSeries.add!(coeff1_1_S, tmp3525, tmp3526, ord)
        TaylorSeries.mul!(coeff2_1_M, Z_bf[mo, ea], r_star_M_1[3], ord)
        TaylorSeries.mul!(coeff2_1_S, Z_bf[mo, ea], r_star_S_1[3], ord)
        TaylorSeries.mul!(tmp3531, 10, coeff1_1_M, ord)
        TaylorSeries.mul!(tmp3532, tmp3531, coeff2_1_M, ord)
        TaylorSeries.div!(coeff3_1_M, tmp3532, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp3535, 10, coeff1_1_S, ord)
        TaylorSeries.mul!(tmp3536, tmp3535, coeff2_1_S, ord)
        TaylorSeries.div!(coeff3_1_S, tmp3536, r_p2[mo, ea], ord)
        TaylorSeries.div!(k_21E_div_r1s5_M, k_21E, r1s5_M, ord)
        TaylorSeries.div!(k_21E_div_r1s5_S, k_21E, r1s5_S, ord)
        TaylorSeries.mul!(tmp3541, 2, coeff2_1_M, ord)
        TaylorSeries.mul!(tmp3542, tmp3541, r_star_M_1[1], ord)
        TaylorSeries.mul!(tmp3543, coeff3_1_M, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3544, tmp3542, tmp3543, ord)
        TaylorSeries.mul!(a_tid_1_M_x, k_21E_div_r1s5_M, tmp3544, ord)
        TaylorSeries.mul!(tmp3547, 2, coeff2_1_M, ord)
        TaylorSeries.mul!(tmp3548, tmp3547, r_star_M_1[2], ord)
        TaylorSeries.mul!(tmp3549, coeff3_1_M, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3550, tmp3548, tmp3549, ord)
        TaylorSeries.mul!(a_tid_1_M_y, k_21E_div_r1s5_M, tmp3550, ord)
        TaylorSeries.mul!(tmp3553, 2, coeff1_1_M, ord)
        TaylorSeries.mul!(tmp3554, tmp3553, r_star_M_1[3], ord)
        TaylorSeries.mul!(tmp3555, coeff3_1_M, Z_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3556, tmp3554, tmp3555, ord)
        TaylorSeries.mul!(a_tid_1_M_z, k_21E_div_r1s5_M, tmp3556, ord)
        TaylorSeries.mul!(tmp3559, 2, coeff2_1_S, ord)
        TaylorSeries.mul!(tmp3560, tmp3559, r_star_S_1[1], ord)
        TaylorSeries.mul!(tmp3561, coeff3_1_S, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3562, tmp3560, tmp3561, ord)
        TaylorSeries.mul!(a_tid_1_S_x, k_21E_div_r1s5_S, tmp3562, ord)
        TaylorSeries.mul!(tmp3565, 2, coeff2_1_S, ord)
        TaylorSeries.mul!(tmp3566, tmp3565, r_star_S_1[2], ord)
        TaylorSeries.mul!(tmp3567, coeff3_1_S, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3568, tmp3566, tmp3567, ord)
        TaylorSeries.mul!(a_tid_1_S_y, k_21E_div_r1s5_S, tmp3568, ord)
        TaylorSeries.mul!(tmp3571, 2, coeff1_1_S, ord)
        TaylorSeries.mul!(tmp3572, tmp3571, r_star_S_1[3], ord)
        TaylorSeries.mul!(tmp3573, coeff3_1_S, Z_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3574, tmp3572, tmp3573, ord)
        TaylorSeries.mul!(a_tid_1_S_z, k_21E_div_r1s5_S, tmp3574, ord)
        TaylorSeries.identity!(x2s_M, r_star_M_2[1], ord)
        TaylorSeries.identity!(y2s_M, r_star_M_2[2], ord)
        TaylorSeries.identity!(z2s_M, r_star_M_2[3], ord)
        TaylorSeries.pow!(tmp3577, x2s_M, 2, ord)
        TaylorSeries.pow!(tmp3579, y2s_M, 2, ord)
        TaylorSeries.add!(ρ2s2_M, tmp3577, tmp3579, ord)
        TaylorSeries.sqrt!(ρ2s_M, ρ2s2_M, ord)
        TaylorSeries.pow!(z2s2_M, z2s_M, 2, ord)
        TaylorSeries.add!(r2s2_M, ρ2s2_M, z2s2_M, ord)
        TaylorSeries.sqrt!(r2s_M, r2s2_M, ord)
        TaylorSeries.pow!(r2s5_M, r2s_M, 5, ord)
        TaylorSeries.identity!(x2s_S, r_star_S_2[1], ord)
        TaylorSeries.identity!(y2s_S, r_star_S_2[2], ord)
        TaylorSeries.identity!(z2s_S, r_star_S_2[3], ord)
        TaylorSeries.pow!(tmp3589, x2s_S, 2, ord)
        TaylorSeries.pow!(tmp3591, y2s_S, 2, ord)
        TaylorSeries.add!(ρ2s2_S, tmp3589, tmp3591, ord)
        TaylorSeries.sqrt!(ρ2s_S, ρ2s2_S, ord)
        TaylorSeries.pow!(z2s2_S, z2s_S, 2, ord)
        TaylorSeries.add!(r2s2_S, ρ2s2_S, z2s2_S, ord)
        TaylorSeries.sqrt!(r2s_S, r2s2_S, ord)
        TaylorSeries.pow!(r2s5_S, r2s_S, 5, ord)
        TaylorSeries.mul!(tmp3600, X_bf[mo, ea], r_star_M_2[1], ord)
        TaylorSeries.mul!(tmp3601, Y_bf[mo, ea], r_star_M_2[2], ord)
        TaylorSeries.add!(coeff1_2_M, tmp3600, tmp3601, ord)
        TaylorSeries.mul!(tmp3603, X_bf[mo, ea], r_star_S_2[1], ord)
        TaylorSeries.mul!(tmp3604, Y_bf[mo, ea], r_star_S_2[2], ord)
        TaylorSeries.add!(coeff1_2_S, tmp3603, tmp3604, ord)
        TaylorSeries.pow!(tmp3608, coeff1_2_M, 2, ord)
        TaylorSeries.pow!(tmp3611, r_xy[mo, ea], 2, ord)
        TaylorSeries.mul!(tmp3612, 0.5, tmp3611, ord)
        TaylorSeries.mul!(tmp3613, tmp3612, ρ2s2_M, ord)
        TaylorSeries.subst!(tmp3614, tmp3608, tmp3613, ord)
        TaylorSeries.mul!(tmp3615, 5, tmp3614, ord)
        TaylorSeries.div!(coeff3_2_M, tmp3615, r_p2[mo, ea], ord)
        TaylorSeries.pow!(tmp3619, coeff1_2_S, 2, ord)
        TaylorSeries.pow!(tmp3622, r_xy[mo, ea], 2, ord)
        TaylorSeries.mul!(tmp3623, 0.5, tmp3622, ord)
        TaylorSeries.mul!(tmp3624, tmp3623, ρ2s2_S, ord)
        TaylorSeries.subst!(tmp3625, tmp3619, tmp3624, ord)
        TaylorSeries.mul!(tmp3626, 5, tmp3625, ord)
        TaylorSeries.div!(coeff3_2_S, tmp3626, r_p2[mo, ea], ord)
        TaylorSeries.div!(k_22E_div_r2s5_M, k_22E, r2s5_M, ord)
        TaylorSeries.div!(k_22E_div_r2s5_S, k_22E, r2s5_S, ord)
        TaylorSeries.mul!(tmp3631, 2, coeff1_2_M, ord)
        TaylorSeries.mul!(tmp3632, tmp3631, r_star_M_2[1], ord)
        TaylorSeries.add!(tmp3633, ρ2s2_M, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp3634, tmp3633, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3635, tmp3632, tmp3634, ord)
        TaylorSeries.mul!(a_tid_2_M_x, k_22E_div_r2s5_M, tmp3635, ord)
        TaylorSeries.mul!(tmp3638, 2, coeff1_2_M, ord)
        TaylorSeries.mul!(tmp3639, tmp3638, r_star_M_2[2], ord)
        TaylorSeries.add!(tmp3640, ρ2s2_M, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp3641, tmp3640, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3642, tmp3639, tmp3641, ord)
        TaylorSeries.mul!(a_tid_2_M_y, k_22E_div_r2s5_M, tmp3642, ord)
        TaylorSeries.subst!(tmp3644, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp3645, k_22E_div_r2s5_M, tmp3644, ord)
        TaylorSeries.mul!(a_tid_2_M_z, tmp3645, Z_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp3648, 2, coeff1_2_S, ord)
        TaylorSeries.mul!(tmp3649, tmp3648, r_star_S_2[1], ord)
        TaylorSeries.add!(tmp3650, ρ2s2_S, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp3651, tmp3650, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3652, tmp3649, tmp3651, ord)
        TaylorSeries.mul!(a_tid_2_S_x, k_22E_div_r2s5_S, tmp3652, ord)
        TaylorSeries.mul!(tmp3655, 2, coeff1_2_S, ord)
        TaylorSeries.mul!(tmp3656, tmp3655, r_star_S_2[2], ord)
        TaylorSeries.add!(tmp3657, ρ2s2_S, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp3658, tmp3657, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp3659, tmp3656, tmp3658, ord)
        TaylorSeries.mul!(a_tid_2_S_y, k_22E_div_r2s5_S, tmp3659, ord)
        TaylorSeries.subst!(tmp3661, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp3662, k_22E_div_r2s5_S, tmp3661, ord)
        TaylorSeries.mul!(a_tid_2_S_z, tmp3662, Z_bf[mo, ea], ord)
        TaylorSeries.div!(tmp3664, RE_au, r_p1d2[mo, ea], ord)
        TaylorSeries.pow!(RE_div_r_p5, tmp3664, 5, ord)
        TaylorSeries.mul!(aux_tidacc, tid_num_coeff, RE_div_r_p5, ord)
        TaylorSeries.mul!(a_tidal_coeff_M, μ[mo], aux_tidacc, ord)
        TaylorSeries.mul!(a_tidal_coeff_S, μ[su], aux_tidacc, ord)
        TaylorSeries.add!(tmp3670, a_tid_0_M_x, a_tid_1_M_x, ord)
        TaylorSeries.add!(tmp3671, tmp3670, a_tid_2_M_x, ord)
        TaylorSeries.mul!(tmp3672, a_tidal_coeff_M, tmp3671, ord)
        TaylorSeries.add!(tmp3673, a_tid_0_S_x, a_tid_1_S_x, ord)
        TaylorSeries.add!(tmp3674, tmp3673, a_tid_2_S_x, ord)
        TaylorSeries.mul!(tmp3675, a_tidal_coeff_S, tmp3674, ord)
        TaylorSeries.add!(a_tidal_tod_x, tmp3672, tmp3675, ord)
        TaylorSeries.add!(tmp3677, a_tid_0_M_y, a_tid_1_M_y, ord)
        TaylorSeries.add!(tmp3678, tmp3677, a_tid_2_M_y, ord)
        TaylorSeries.mul!(tmp3679, a_tidal_coeff_M, tmp3678, ord)
        TaylorSeries.add!(tmp3680, a_tid_0_S_y, a_tid_1_S_y, ord)
        TaylorSeries.add!(tmp3681, tmp3680, a_tid_2_S_y, ord)
        TaylorSeries.mul!(tmp3682, a_tidal_coeff_S, tmp3681, ord)
        TaylorSeries.add!(a_tidal_tod_y, tmp3679, tmp3682, ord)
        TaylorSeries.add!(tmp3684, a_tid_0_M_z, a_tid_1_M_z, ord)
        TaylorSeries.add!(tmp3685, tmp3684, a_tid_2_M_z, ord)
        TaylorSeries.mul!(tmp3686, a_tidal_coeff_M, tmp3685, ord)
        TaylorSeries.add!(tmp3687, a_tid_0_S_z, a_tid_1_S_z, ord)
        TaylorSeries.add!(tmp3688, tmp3687, a_tid_2_S_z, ord)
        TaylorSeries.mul!(tmp3689, a_tidal_coeff_S, tmp3688, ord)
        TaylorSeries.add!(a_tidal_tod_z, tmp3686, tmp3689, ord)
        TaylorSeries.mul!(tmp3691, RotM[1, 1, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp3692, RotM[2, 1, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp3693, tmp3691, tmp3692, ord)
        TaylorSeries.mul!(tmp3694, RotM[3, 1, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_x, tmp3693, tmp3694, ord)
        TaylorSeries.mul!(tmp3696, RotM[1, 2, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp3697, RotM[2, 2, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp3698, tmp3696, tmp3697, ord)
        TaylorSeries.mul!(tmp3699, RotM[3, 2, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_y, tmp3698, tmp3699, ord)
        TaylorSeries.mul!(tmp3701, RotM[1, 3, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp3702, RotM[2, 3, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp3703, tmp3701, tmp3702, ord)
        TaylorSeries.mul!(tmp3704, RotM[3, 3, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_z, tmp3703, tmp3704, ord)
        TaylorSeries.add!(accX_mo_tides, accX[mo], a_tidal_x, ord)
        TaylorSeries.add!(accY_mo_tides, accY[mo], a_tidal_y, ord)
        TaylorSeries.add!(accZ_mo_tides, accZ[mo], a_tidal_z, ord)
        TaylorSeries.identity!(accX[mo], accX_mo_tides, ord)
        TaylorSeries.identity!(accY[mo], accY_mo_tides, ord)
        TaylorSeries.identity!(accZ[mo], accZ_mo_tides, ord)
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1896 =# Threads.@threads for i = 1:N_ext
                TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
                TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
                TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
            end
        #= /Users/Jorge/projects/PlanetaryEphemeris/newjetcoeffs.jl:1901 =# Threads.@threads for i = N_ext + 1:N
                TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
            end
        TaylorSeries.mul!(tmp3712, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3713, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3714, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3715, tmp3713, tmp3714, ord)
        TaylorSeries.add!(Iω_x, tmp3712, tmp3715, ord)
        TaylorSeries.mul!(tmp3717, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3718, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3719, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3720, tmp3718, tmp3719, ord)
        TaylorSeries.add!(Iω_y, tmp3717, tmp3720, ord)
        TaylorSeries.mul!(tmp3722, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3723, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3724, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3725, tmp3723, tmp3724, ord)
        TaylorSeries.add!(Iω_z, tmp3722, tmp3725, ord)
        TaylorSeries.mul!(tmp3727, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp3728, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp3727, tmp3728, ord)
        TaylorSeries.mul!(tmp3730, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp3731, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp3730, tmp3731, ord)
        TaylorSeries.mul!(tmp3733, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp3734, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp3733, tmp3734, ord)
        TaylorSeries.mul!(tmp3736, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3737, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3738, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3739, tmp3737, tmp3738, ord)
        TaylorSeries.add!(dIω_x, tmp3736, tmp3739, ord)
        TaylorSeries.mul!(tmp3741, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3742, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3743, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3744, tmp3742, tmp3743, ord)
        TaylorSeries.add!(dIω_y, tmp3741, tmp3744, ord)
        TaylorSeries.mul!(tmp3746, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3747, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3748, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3749, tmp3747, tmp3748, ord)
        TaylorSeries.add!(dIω_z, tmp3746, tmp3749, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp3754, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3755, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3756, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3757, tmp3755, tmp3756, ord)
        TaylorSeries.add!(er_EM_1, tmp3754, tmp3757, ord)
        TaylorSeries.mul!(tmp3759, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3760, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3761, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3762, tmp3760, tmp3761, ord)
        TaylorSeries.add!(er_EM_2, tmp3759, tmp3762, ord)
        TaylorSeries.mul!(tmp3764, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3765, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3766, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3767, tmp3765, tmp3766, ord)
        TaylorSeries.add!(er_EM_3, tmp3764, tmp3767, ord)
        TaylorSeries.mul!(tmp3769, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3770, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3771, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3772, tmp3770, tmp3771, ord)
        TaylorSeries.add!(p_E_1, tmp3769, tmp3772, ord)
        TaylorSeries.mul!(tmp3774, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3775, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3776, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3777, tmp3775, tmp3776, ord)
        TaylorSeries.add!(p_E_2, tmp3774, tmp3777, ord)
        TaylorSeries.mul!(tmp3779, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3780, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3781, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3782, tmp3780, tmp3781, ord)
        TaylorSeries.add!(p_E_3, tmp3779, tmp3782, ord)
        TaylorSeries.mul!(tmp3784, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3785, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3786, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3787, tmp3785, tmp3786, ord)
        TaylorSeries.add!(I_er_EM_1, tmp3784, tmp3787, ord)
        TaylorSeries.mul!(tmp3789, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3790, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3791, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3792, tmp3790, tmp3791, ord)
        TaylorSeries.add!(I_er_EM_2, tmp3789, tmp3792, ord)
        TaylorSeries.mul!(tmp3794, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3795, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3796, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3797, tmp3795, tmp3796, ord)
        TaylorSeries.add!(I_er_EM_3, tmp3794, tmp3797, ord)
        TaylorSeries.mul!(tmp3799, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3800, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3801, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3802, tmp3800, tmp3801, ord)
        TaylorSeries.add!(I_p_E_1, tmp3799, tmp3802, ord)
        TaylorSeries.mul!(tmp3804, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3805, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3806, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3807, tmp3805, tmp3806, ord)
        TaylorSeries.add!(I_p_E_2, tmp3804, tmp3807, ord)
        TaylorSeries.mul!(tmp3809, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3810, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3811, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3812, tmp3810, tmp3811, ord)
        TaylorSeries.add!(I_p_E_3, tmp3809, tmp3812, ord)
        TaylorSeries.mul!(tmp3814, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3815, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp3814, tmp3815, ord)
        TaylorSeries.mul!(tmp3817, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3818, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp3817, tmp3818, ord)
        TaylorSeries.mul!(tmp3820, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3821, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp3820, tmp3821, ord)
        TaylorSeries.mul!(tmp3823, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp3824, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp3823, tmp3824, ord)
        TaylorSeries.mul!(tmp3826, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp3827, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp3826, tmp3827, ord)
        TaylorSeries.mul!(tmp3829, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp3830, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp3829, tmp3830, ord)
        TaylorSeries.mul!(tmp3832, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3833, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp3832, tmp3833, ord)
        TaylorSeries.mul!(tmp3835, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3836, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp3835, tmp3836, ord)
        TaylorSeries.mul!(tmp3838, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3839, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp3838, tmp3839, ord)
        TaylorSeries.mul!(tmp3841, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp3842, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp3841, tmp3842, ord)
        TaylorSeries.mul!(tmp3844, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp3845, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp3844, tmp3845, ord)
        TaylorSeries.mul!(tmp3847, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp3848, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp3847, tmp3848, ord)
        TaylorSeries.pow!(tmp3852, sin_ϕ[ea, mo], 2, ord)
        TaylorSeries.mul!(tmp3853, 7, tmp3852, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp3853, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp3858, r_p1d2[mo, ea], 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp3858, ord)
        TaylorSeries.mul!(tmp3860, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp3861, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3862, two_sinϕEM, tmp3861, ord)
        TaylorSeries.add!(tmp3863, tmp3860, tmp3862, ord)
        TaylorSeries.mul!(tmp3865, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp3866, tmp3863, tmp3865, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp3866, ord)
        TaylorSeries.mul!(tmp3868, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp3869, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3870, two_sinϕEM, tmp3869, ord)
        TaylorSeries.add!(tmp3871, tmp3868, tmp3870, ord)
        TaylorSeries.mul!(tmp3873, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp3874, tmp3871, tmp3873, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp3874, ord)
        TaylorSeries.mul!(tmp3876, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp3877, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3878, two_sinϕEM, tmp3877, ord)
        TaylorSeries.add!(tmp3879, tmp3876, tmp3878, ord)
        TaylorSeries.mul!(tmp3881, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp3882, tmp3879, tmp3881, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp3882, ord)
        TaylorSeries.mul!(tmp3884, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3885, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3886, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3887, tmp3885, tmp3886, ord)
        TaylorSeries.add!(N_1_LMF, tmp3884, tmp3887, ord)
        TaylorSeries.mul!(tmp3889, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3890, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3891, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3892, tmp3890, tmp3891, ord)
        TaylorSeries.add!(N_2_LMF, tmp3889, tmp3892, ord)
        TaylorSeries.mul!(tmp3894, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3895, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3896, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3897, tmp3895, tmp3896, ord)
        TaylorSeries.add!(N_3_LMF, tmp3894, tmp3897, ord)
        TaylorSeries.subst!(tmp3899, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3900, k_ν, tmp3899, ord)
        TaylorSeries.mul!(tmp3901, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp3902, tmp3901, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp3900, tmp3902, ord)
        TaylorSeries.subst!(tmp3904, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3905, k_ν, tmp3904, ord)
        TaylorSeries.mul!(tmp3906, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp3907, tmp3906, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp3905, tmp3907, ord)
        TaylorSeries.subst!(tmp3909, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp3909, ord)
        TaylorSeries.mul!(tmp3911, μ[mo], N_1_LMF, ord)
        TaylorSeries.add!(tmp3912, N_MfigM_figE_1, tmp3911, ord)
        TaylorSeries.add!(tmp3913, tmp3912, N_cmb_1, ord)
        TaylorSeries.add!(tmp3914, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp3913, tmp3914, ord)
        TaylorSeries.mul!(tmp3916, μ[mo], N_2_LMF, ord)
        TaylorSeries.add!(tmp3917, N_MfigM_figE_2, tmp3916, ord)
        TaylorSeries.add!(tmp3918, tmp3917, N_cmb_2, ord)
        TaylorSeries.add!(tmp3919, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp3918, tmp3919, ord)
        TaylorSeries.mul!(tmp3921, μ[mo], N_3_LMF, ord)
        TaylorSeries.add!(tmp3922, N_MfigM_figE_3, tmp3921, ord)
        TaylorSeries.add!(tmp3923, tmp3922, N_cmb_3, ord)
        TaylorSeries.add!(tmp3924, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp3923, tmp3924, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp3929, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp3930, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp3929, tmp3930, ord)
        TaylorSeries.mul!(tmp3932, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp3933, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp3932, tmp3933, ord)
        TaylorSeries.mul!(tmp3935, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp3936, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp3935, tmp3936, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp3941, tmp4072, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3942, q[6N + 4], tmp3941, ord)
        TaylorSeries.sincos!(tmp4073, tmp3943, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3944, q[6N + 5], tmp3943, ord)
        TaylorSeries.add!(tmp3945, tmp3942, tmp3944, ord)
        TaylorSeries.sincos!(tmp3946, tmp4074, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp3945, tmp3946, ord)
        TaylorSeries.sincos!(tmp4075, tmp3948, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3949, q[6N + 4], tmp3948, ord)
        TaylorSeries.sincos!(tmp3950, tmp4076, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3951, q[6N + 5], tmp3950, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp3949, tmp3951, ord)
        TaylorSeries.sincos!(tmp4077, tmp3953, q[6N + 2], ord)
        TaylorSeries.mul!(tmp3954, dq[6N + 1], tmp3953, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp3954, ord)
        TaylorSeries.mul!(tmp3956, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3957, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3958, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3959, tmp3957, tmp3958, ord)
        TaylorSeries.add!(dq[6N + 4], tmp3956, tmp3959, ord)
        TaylorSeries.mul!(tmp3961, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3962, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3963, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3964, tmp3962, tmp3963, ord)
        TaylorSeries.add!(dq[6N + 5], tmp3961, tmp3964, ord)
        TaylorSeries.mul!(tmp3966, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3967, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3968, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3969, tmp3967, tmp3968, ord)
        TaylorSeries.add!(dq[6N + 6], tmp3966, tmp3969, ord)
        TaylorSeries.sincos!(tmp3971, tmp4078, q[6N + 8], ord)
        TaylorSeries.div!(tmp3972, ω_c_CE_2, tmp3971, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp3972, ord)
        TaylorSeries.sincos!(tmp4079, tmp3974, q[6N + 8], ord)
        TaylorSeries.mul!(tmp3975, dq[6N + 9], tmp3974, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp3975, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.mul!(tmp3980, newtonianCoeff[su, ea], J2_t[su], ord)
        TaylorSeries.pow!(tmp3983, sin_ϕ[su, ea], 2, ord)
        TaylorSeries.mul!(tmp3984, 3, tmp3983, ord)
        TaylorSeries.subst!(tmp3985, one_t, tmp3984, ord)
        TaylorSeries.div!(tmp3987, tmp3985, 2, ord)
        TaylorSeries.mul!(w_LE, tmp3980, tmp3987, ord)
        TaylorSeries.mul!(tmp3990, 0.5, v2[ea], ord)
        TaylorSeries.add!(tmp3991, tmp3990, newtonianNb_Potential[ea], ord)
        TaylorSeries.add!(α_TTmTDB, tmp3991, w_LE, ord)
        TaylorSeries.pow!(v4E, v2[ea], 2, ord)
        TaylorSeries.pow!(ϕ_Earth_Newtonian_sq, newtonianNb_Potential[ea], 2, ord)
        TaylorSeries.div!(tmp3998, ϕ_Earth_Newtonian_sq, 2, ord)
        TaylorSeries.div!(tmp4000, v4E, 8, ord)
        TaylorSeries.subst!(β_TTmTDB, tmp3998, tmp4000, ord)
        for i = 1:N
            if i == ea
                continue
            else
                TaylorSeries.mul!(β_TTmTDB_i_1[i, ea], 4, vi_dot_vj[i, ea], ord)
                TaylorSeries.mul!(tmp4005[ea], 1.5, v2[ea], ord)
                TaylorSeries.mul!(tmp4007[i], 2, v2[i], ord)
                TaylorSeries.add!(tmp4008[ea], tmp4005[ea], tmp4007[i], ord)
                TaylorSeries.subst!(β_TTmTDB_i_2[i], newtonianNb_Potential[i], tmp4008[ea], ord)
                TaylorSeries.mul!(tmp4010[i, ea], dq[3 * (N + i) - 2], X[i, ea], ord)
                TaylorSeries.mul!(tmp4011[i, ea], dq[3 * (N + i) - 1], Y[i, ea], ord)
                TaylorSeries.add!(tmp4012[i, ea], tmp4010[i, ea], tmp4011[i, ea], ord)
                TaylorSeries.mul!(tmp4013[i, ea], dq[3 * (N + i)], Z[i, ea], ord)
                TaylorSeries.add!(tmp4014[i, ea], tmp4012[i, ea], tmp4013[i, ea], ord)
                TaylorSeries.div!(β_TTmTDB_i_3[i, ea], tmp4014[i, ea], 2, ord)
                TaylorSeries.div!(β_TTmTDB_i_4[i, ea], rij_dot_vi_div_rij_sq[i, ea], 2, ord)
                TaylorSeries.add!(tmp4019[i, ea], β_TTmTDB_i_1[i, ea], β_TTmTDB_i_2[i], ord)
                TaylorSeries.add!(tmp4020[i, ea], β_TTmTDB_i_3[i, ea], β_TTmTDB_i_4[i, ea], ord)
                TaylorSeries.add!(β_TTmTDB_i[i, ea], tmp4019[i, ea], tmp4020[i, ea], ord)
                TaylorSeries.mul!(tmp4022[i, ea], newtonian1b_Potential[i, ea], β_TTmTDB_i[i, ea], ord)
                TaylorSeries.add!(temp_β_TTmTDB[i, ea], β_TTmTDB, tmp4022[i, ea], ord)
                TaylorSeries.identity!(β_TTmTDB, temp_β_TTmTDB[i, ea], ord)
            end
        end
        TaylorSeries.mul!(tmp4024, c_m2, α_TTmTDB, ord)
        TaylorSeries.subst!(tmp4025, L_B, tmp4024, ord)
        TaylorSeries.mul!(tmp4026, tmp4025, one_plus_L_B_minus_L_G, ord)
        TaylorSeries.mul!(tmp4027, c_m4, β_TTmTDB, ord)
        TaylorSeries.subst!(tmp4028, tmp4027, L_G, ord)
        TaylorSeries.add!(tmp4029, tmp4026, tmp4028, ord)
        TaylorSeries.mul!(dq[6N + 13], daysec, tmp4029, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end