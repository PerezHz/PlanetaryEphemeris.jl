### LASCIATE OGNE SPERANZA, VOI CH'INTRATE ###
### ABANDON ALL HOPE, YE WHO ENTER HERE ###

# DO NOT MODIFY THIS FILE BY HAND

# Methods of TaylorIntegration.jetcoeffs! and TaylorIntegration._allocate_jetcoeffs! generated by @taylorize for the functions in
# src/dynamical_model.jl

# To update the functions do the following:
# 1.- Update the corresponding function in src/dynamical_model.jl
# 2.- using TaylorIntegration
# 2.- ex = :(paste here the modified function)
# 3.- x, y = TaylorIntegration._make_parsed_coeffs(ex)
# 4.- Paste x and y in this file

# TaylorIntegration._allocate_jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S!
function TaylorIntegration._allocate_jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp1220 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1954 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1221 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1955 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1222 = Taylor1(constant_term(tmp1220) * constant_term(tmp1221), order)
    tmp1223 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1956 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1224 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1957 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1225 = Taylor1(constant_term(tmp1223) * constant_term(tmp1224), order)
    tmp1226 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1958 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1227 = Taylor1(constant_term(tmp1225) * constant_term(tmp1226), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp1222) - constant_term(tmp1227), order)
    tmp1229 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1959 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1230 = Taylor1(-(constant_term(tmp1229)), order)
    tmp1231 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1960 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1232 = Taylor1(constant_term(tmp1230) * constant_term(tmp1231), order)
    tmp1233 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1961 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1234 = Taylor1(constant_term(tmp1232) * constant_term(tmp1233), order)
    tmp1235 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1962 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1236 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1963 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1237 = Taylor1(constant_term(tmp1235) * constant_term(tmp1236), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp1234) - constant_term(tmp1237), order)
    tmp1239 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1964 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1240 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1965 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp1239) * constant_term(tmp1240), order)
    tmp1242 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1966 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1243 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1967 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1244 = Taylor1(constant_term(tmp1242) * constant_term(tmp1243), order)
    tmp1245 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1968 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1246 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1969 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1247 = Taylor1(constant_term(tmp1245) * constant_term(tmp1246), order)
    tmp1248 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1970 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1249 = Taylor1(constant_term(tmp1247) * constant_term(tmp1248), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp1244) + constant_term(tmp1249), order)
    tmp1251 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1971 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1252 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1972 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1253 = Taylor1(constant_term(tmp1251) * constant_term(tmp1252), order)
    tmp1254 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1973 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1255 = Taylor1(constant_term(tmp1253) * constant_term(tmp1254), order)
    tmp1256 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1974 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1257 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1975 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1258 = Taylor1(constant_term(tmp1256) * constant_term(tmp1257), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp1255) - constant_term(tmp1258), order)
    tmp1260 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1976 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1261 = Taylor1(-(constant_term(tmp1260)), order)
    tmp1262 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1977 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp1261) * constant_term(tmp1262), order)
    tmp1264 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1978 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1265 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1979 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp1264) * constant_term(tmp1265), order)
    tmp1267 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1980 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1268 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1981 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp1267) * constant_term(tmp1268), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp1982 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp1271 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1983 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1272 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp1271), order)
    tmp1273 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1984 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1274 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp1273), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp1272) + constant_term(tmp1274), order)
    tmp1276 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp1277 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1985 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1278 = Taylor1(constant_term(tmp1276) * constant_term(tmp1277), order)
    tmp1279 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1986 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1280 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp1279), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp1278) + constant_term(tmp1280), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp1282 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1987 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1283 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp1282), order)
    tmp1284 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1988 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1285 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp1284), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp1283) + constant_term(tmp1285), order)
    tmp1287 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp1288 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1989 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1289 = Taylor1(constant_term(tmp1287) * constant_term(tmp1288), order)
    tmp1290 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1990 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1291 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp1290), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp1289) + constant_term(tmp1291), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp1293 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1991 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1294 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp1293), order)
    tmp1295 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1992 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1296 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp1295), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp1294) + constant_term(tmp1296), order)
    tmp1298 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp1299 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1993 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1300 = Taylor1(constant_term(tmp1298) * constant_term(tmp1299), order)
    tmp1301 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1994 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1302 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp1301), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp1300) + constant_term(tmp1302), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp1304 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp1305 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp1306 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp1307 = Taylor1(constant_term(tmp1305) + constant_term(tmp1306), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp1304) + constant_term(tmp1307), order)
    tmp1309 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp1310 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp1311 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp1312 = Taylor1(constant_term(tmp1310) + constant_term(tmp1311), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp1309) + constant_term(tmp1312), order)
    tmp1314 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp1315 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp1316 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp1317 = Taylor1(constant_term(tmp1315) + constant_term(tmp1316), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp1314) + constant_term(tmp1317), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    for j = 1:N
        newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
        dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
        dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
    end
    for j = 1:N_ext
        accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
    end
    tmp1382 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1382 .= Taylor1(zero(_S), order)
    tmp1384 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1384 .= Taylor1(zero(_S), order)
    tmp1385 = Array{Taylor1{_S}}(undef, size(tmp1382))
    tmp1385 .= Taylor1(zero(_S), order)
    tmp1387 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1387 .= Taylor1(zero(_S), order)
    tmp1326 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1326 .= Taylor1(zero(_S), order)
    tmp1328 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1328 .= Taylor1(zero(_S), order)
    tmp1331 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1331 .= Taylor1(zero(_S), order)
    tmp1333 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1333 .= Taylor1(zero(_S), order)
    tmp1336 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1336 .= Taylor1(zero(_S), order)
    tmp1338 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1338 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp1346 = Array{Taylor1{_S}}(undef, size(UU))
    tmp1346 .= Taylor1(zero(_S), order)
    tmp1349 = Array{Taylor1{_S}}(undef, size(X))
    tmp1349 .= Taylor1(zero(_S), order)
    tmp1351 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1351 .= Taylor1(zero(_S), order)
    tmp1352 = Array{Taylor1{_S}}(undef, size(tmp1349))
    tmp1352 .= Taylor1(zero(_S), order)
    tmp1354 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1354 .= Taylor1(zero(_S), order)
    tmp1362 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp1362 .= Taylor1(zero(_S), order)
    tmp1363 = Array{Taylor1{_S}}(undef, size(tmp1362))
    tmp1363 .= Taylor1(zero(_S), order)
    tmp1374 = Array{Taylor1{_S}}(undef, size(X))
    tmp1374 .= Taylor1(zero(_S), order)
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp1374))
    temp_001 .= Taylor1(zero(_S), order)
    tmp1376 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1376 .= Taylor1(zero(_S), order)
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp1376))
    temp_002 .= Taylor1(zero(_S), order)
    tmp1378 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1378 .= Taylor1(zero(_S), order)
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp1378))
    temp_003 .= Taylor1(zero(_S), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                tmp1326[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                tmp1328[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                _4U_m_3X[i, j] = Taylor1(constant_term(tmp1326[3j - 2]) - constant_term(tmp1328[3i - 2]), order)
                tmp1331[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                tmp1333[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                _4V_m_3Y[i, j] = Taylor1(constant_term(tmp1331[3j - 1]) - constant_term(tmp1333[3i - 1]), order)
                tmp1336[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                tmp1338[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                _4W_m_3Z[i, j] = Taylor1(constant_term(tmp1336[3j]) - constant_term(tmp1338[3i]), order)
                pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                tmp1346[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                vi_dot_vj[i, j] = Taylor1(constant_term(tmp1346[i, j]) + constant_term(WW[i, j]), order)
                tmp1349[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                tmp1351[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                tmp1352[i, j] = Taylor1(constant_term(tmp1349[i, j]) + constant_term(tmp1351[i, j]), order)
                tmp1354[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                r_p2[i, j] = Taylor1(constant_term(tmp1352[i, j]) + constant_term(tmp1354[i, j]), order)
                r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                tmp1362[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                tmp1363[i, j] = Taylor1(constant_term(tmp1362[i, j]) + constant_term(pn2z[i, j]), order)
                pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp1363[i, j]), order)
                newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                tmp1374[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp1374[i, j]), order)
                newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                tmp1376[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp1376[i, j]), order)
                newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                tmp1378[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp1378[i, j]), order)
                newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
            end
        end
        tmp1382[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
        tmp1384[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
        tmp1385[3j - 2] = Taylor1(constant_term(tmp1382[3j - 2]) + constant_term(tmp1384[3j - 1]), order)
        tmp1387[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
        v2[j] = Taylor1(constant_term(tmp1385[3j - 2]) + constant_term(tmp1387[3j]), order)
    end
    tmp1389 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp1391 = Taylor1(constant_term(tmp1389) / constant_term(2), order)
    tmp1392 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp1391), order)
    J2M_t = Taylor1(constant_term(tmp1392) / constant_term(μ[mo]), order)
    tmp1394 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp1395 = Taylor1(constant_term(tmp1394) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp1395) / constant_term(4), order)
    tmp1398 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp1398) / constant_term(μ[mo]), order)
    tmp1400 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp1400) / constant_term(μ[mo]), order)
    tmp1402 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp1403 = Taylor1(constant_term(tmp1402) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp1403) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp1415 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    tmp1415 .= Taylor1(zero(_S), order)
    tmp1417 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    tmp1417 .= Taylor1(zero(_S), order)
    tmp1419 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    tmp1419 .= Taylor1(zero(_S), order)
    tmp1423 = Array{Taylor1{_S}}(undef, size(X_bf))
    tmp1423 .= Taylor1(zero(_S), order)
    tmp1425 = Array{Taylor1{_S}}(undef, size(Y_bf))
    tmp1425 .= Taylor1(zero(_S), order)
    tmp1426 = Array{Taylor1{_S}}(undef, size(tmp1423))
    tmp1426 .= Taylor1(zero(_S), order)
    tmp1441 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1441 .= Taylor1(zero(_S), order)
    tmp1442 = Array{Taylor1{_S}}(undef, size(tmp1441))
    tmp1442 .= Taylor1(zero(_S), order)
    tmp1444 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp1444 .= Taylor1(zero(_S), order)
    tmp1445 = Array{Taylor1{_S}}(undef, size(tmp1444))
    tmp1445 .= Taylor1(zero(_S), order)
    tmp1446 = Array{Taylor1{_S}}(undef, size(tmp1445))
    tmp1446 .= Taylor1(zero(_S), order)
    tmp1543 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp1543 .= Taylor1(zero(_S), order)
    tmp1546 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp1546 .= Taylor1(zero(_S), order)
    tmp1548 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1548 .= Taylor1(zero(_S), order)
    tmp1549 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1549 .= Taylor1(zero(_S), order)
    tmp1550 = Array{Taylor1{_S}}(undef, size(tmp1548))
    tmp1550 .= Taylor1(zero(_S), order)
    tmp1551 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1551 .= Taylor1(zero(_S), order)
    tmp1553 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1553 .= Taylor1(zero(_S), order)
    tmp1554 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1554 .= Taylor1(zero(_S), order)
    tmp1555 = Array{Taylor1{_S}}(undef, size(tmp1553))
    tmp1555 .= Taylor1(zero(_S), order)
    tmp1556 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1556 .= Taylor1(zero(_S), order)
    tmp1558 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1558 .= Taylor1(zero(_S), order)
    tmp1559 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1559 .= Taylor1(zero(_S), order)
    tmp1560 = Array{Taylor1{_S}}(undef, size(tmp1558))
    tmp1560 .= Taylor1(zero(_S), order)
    tmp1561 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1561 .= Taylor1(zero(_S), order)
    tmp1563 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1563 .= Taylor1(zero(_S), order)
    tmp1564 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1564 .= Taylor1(zero(_S), order)
    tmp1565 = Array{Taylor1{_S}}(undef, size(tmp1563))
    tmp1565 .= Taylor1(zero(_S), order)
    tmp1566 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1566 .= Taylor1(zero(_S), order)
    tmp1568 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1568 .= Taylor1(zero(_S), order)
    tmp1569 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1569 .= Taylor1(zero(_S), order)
    tmp1570 = Array{Taylor1{_S}}(undef, size(tmp1568))
    tmp1570 .= Taylor1(zero(_S), order)
    tmp1571 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1571 .= Taylor1(zero(_S), order)
    tmp1573 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1573 .= Taylor1(zero(_S), order)
    tmp1574 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1574 .= Taylor1(zero(_S), order)
    tmp1575 = Array{Taylor1{_S}}(undef, size(tmp1573))
    tmp1575 .= Taylor1(zero(_S), order)
    tmp1576 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1576 .= Taylor1(zero(_S), order)
    tmp1578 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1578 .= Taylor1(zero(_S), order)
    tmp1579 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1579 .= Taylor1(zero(_S), order)
    tmp1580 = Array{Taylor1{_S}}(undef, size(tmp1578))
    tmp1580 .= Taylor1(zero(_S), order)
    tmp1581 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1581 .= Taylor1(zero(_S), order)
    tmp1583 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1583 .= Taylor1(zero(_S), order)
    tmp1584 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1584 .= Taylor1(zero(_S), order)
    tmp1585 = Array{Taylor1{_S}}(undef, size(tmp1583))
    tmp1585 .= Taylor1(zero(_S), order)
    tmp1586 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1586 .= Taylor1(zero(_S), order)
    tmp1588 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1588 .= Taylor1(zero(_S), order)
    tmp1589 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1589 .= Taylor1(zero(_S), order)
    tmp1590 = Array{Taylor1{_S}}(undef, size(tmp1588))
    tmp1590 .= Taylor1(zero(_S), order)
    tmp1591 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1591 .= Taylor1(zero(_S), order)
    tmp1593 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1593 .= Taylor1(zero(_S), order)
    tmp1594 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1594 .= Taylor1(zero(_S), order)
    tmp1595 = Array{Taylor1{_S}}(undef, size(tmp1593))
    tmp1595 .= Taylor1(zero(_S), order)
    tmp1596 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1596 .= Taylor1(zero(_S), order)
    tmp1598 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1598 .= Taylor1(zero(_S), order)
    tmp1599 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1599 .= Taylor1(zero(_S), order)
    tmp1600 = Array{Taylor1{_S}}(undef, size(tmp1598))
    tmp1600 .= Taylor1(zero(_S), order)
    tmp1601 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1601 .= Taylor1(zero(_S), order)
    tmp1603 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1603 .= Taylor1(zero(_S), order)
    tmp1604 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1604 .= Taylor1(zero(_S), order)
    tmp1605 = Array{Taylor1{_S}}(undef, size(tmp1603))
    tmp1605 .= Taylor1(zero(_S), order)
    tmp1606 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1606 .= Taylor1(zero(_S), order)
    tmp1431 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1431 .= Taylor1(zero(_S), order)
    tmp1432 = Array{Taylor1{_S}}(undef, size(tmp1431))
    tmp1432 .= Taylor1(zero(_S), order)
    tmp1433 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1433 .= Taylor1(zero(_S), order)
    tmp1435 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp1435 .= Taylor1(zero(_S), order)
    tmp1436 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1436 .= Taylor1(zero(_S), order)
    tmp1448 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1448 .= Taylor1(zero(_S), order)
    tmp1449 = Array{Taylor1{_S}}(undef, size(tmp1448))
    tmp1449 .= Taylor1(zero(_S), order)
    tmp1450 = Array{Taylor1{_S}}(undef, size(tmp1449))
    tmp1450 .= Taylor1(zero(_S), order)
    tmp1452 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp1452 .= Taylor1(zero(_S), order)
    tmp1453 = Array{Taylor1{_S}}(undef, size(tmp1452))
    tmp1453 .= Taylor1(zero(_S), order)
    tmp1454 = Array{Taylor1{_S}}(undef, size(tmp1453))
    tmp1454 .= Taylor1(zero(_S), order)
    tmp1455 = Array{Taylor1{_S}}(undef, size(tmp1454))
    tmp1455 .= Taylor1(zero(_S), order)
    tmp1480 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp1480 .= Taylor1(zero(_S), order)
    tmp1481 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1481 .= Taylor1(zero(_S), order)
    tmp1482 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1482 .= Taylor1(zero(_S), order)
    tmp1483 = Array{Taylor1{_S}}(undef, size(tmp1481))
    tmp1483 .= Taylor1(zero(_S), order)
    tmp1484 = Array{Taylor1{_S}}(undef, size(tmp1480))
    tmp1484 .= Taylor1(zero(_S), order)
    tmp1485 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp1485 .= Taylor1(zero(_S), order)
    tmp1486 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1486 .= Taylor1(zero(_S), order)
    tmp1487 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1487 .= Taylor1(zero(_S), order)
    tmp1488 = Array{Taylor1{_S}}(undef, size(tmp1486))
    tmp1488 .= Taylor1(zero(_S), order)
    tmp1489 = Array{Taylor1{_S}}(undef, size(tmp1485))
    tmp1489 .= Taylor1(zero(_S), order)
    tmp1490 = Array{Taylor1{_S}}(undef, size(tmp1484))
    tmp1490 .= Taylor1(zero(_S), order)
    tmp1492 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1492 .= Taylor1(zero(_S), order)
    tmp1493 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1493 .= Taylor1(zero(_S), order)
    tmp1494 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1494 .= Taylor1(zero(_S), order)
    tmp1495 = Array{Taylor1{_S}}(undef, size(tmp1493))
    tmp1495 .= Taylor1(zero(_S), order)
    tmp1496 = Array{Taylor1{_S}}(undef, size(tmp1492))
    tmp1496 .= Taylor1(zero(_S), order)
    tmp1497 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1497 .= Taylor1(zero(_S), order)
    tmp1498 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1498 .= Taylor1(zero(_S), order)
    tmp1499 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1499 .= Taylor1(zero(_S), order)
    tmp1500 = Array{Taylor1{_S}}(undef, size(tmp1498))
    tmp1500 .= Taylor1(zero(_S), order)
    tmp1501 = Array{Taylor1{_S}}(undef, size(tmp1497))
    tmp1501 .= Taylor1(zero(_S), order)
    tmp1502 = Array{Taylor1{_S}}(undef, size(tmp1496))
    tmp1502 .= Taylor1(zero(_S), order)
    tmp1504 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1504 .= Taylor1(zero(_S), order)
    tmp1505 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1505 .= Taylor1(zero(_S), order)
    tmp1506 = Array{Taylor1{_S}}(undef, size(tmp1504))
    tmp1506 .= Taylor1(zero(_S), order)
    tmp1507 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp1507 .= Taylor1(zero(_S), order)
    tmp1508 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1508 .= Taylor1(zero(_S), order)
    tmp1509 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1509 .= Taylor1(zero(_S), order)
    tmp1510 = Array{Taylor1{_S}}(undef, size(tmp1508))
    tmp1510 .= Taylor1(zero(_S), order)
    tmp1511 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp1511 .= Taylor1(zero(_S), order)
    tmp1512 = Array{Taylor1{_S}}(undef, size(tmp1507))
    tmp1512 .= Taylor1(zero(_S), order)
    tmp1532 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    tmp1532 .= Taylor1(zero(_S), order)
    tmp1533 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    tmp1533 .= Taylor1(zero(_S), order)
    tmp1536 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    tmp1536 .= Taylor1(zero(_S), order)
    tmp1537 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    tmp1537 .= Taylor1(zero(_S), order)
    tmp1458 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1458 .= Taylor1(zero(_S), order)
    tmp1459 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1459 .= Taylor1(zero(_S), order)
    tmp1461 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1461 .= Taylor1(zero(_S), order)
    tmp1462 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1462 .= Taylor1(zero(_S), order)
    tmp1464 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1464 .= Taylor1(zero(_S), order)
    tmp1467 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1467 .= Taylor1(zero(_S), order)
    tmp1476 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1476 .= Taylor1(zero(_S), order)
    tmp1477 = Array{Taylor1{_S}}(undef, size(tmp1476))
    tmp1477 .= Taylor1(zero(_S), order)
    tmp1478 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1478 .= Taylor1(zero(_S), order)
    tmp1469 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1469 .= Taylor1(zero(_S), order)
    tmp1471 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1471 .= Taylor1(zero(_S), order)
    tmp1472 = Array{Taylor1{_S}}(undef, size(tmp1471))
    tmp1472 .= Taylor1(zero(_S), order)
    tmp1473 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1473 .= Taylor1(zero(_S), order)
    tmp1518 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp1518 .= Taylor1(zero(_S), order)
    tmp1519 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp1519 .= Taylor1(zero(_S), order)
    tmp1520 = Array{Taylor1{_S}}(undef, size(tmp1518))
    tmp1520 .= Taylor1(zero(_S), order)
    tmp1521 = Array{Taylor1{_S}}(undef, size(tmp1520))
    tmp1521 .= Taylor1(zero(_S), order)
    tmp1523 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1523 .= Taylor1(zero(_S), order)
    tmp1524 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    tmp1524 .= Taylor1(zero(_S), order)
    tmp1525 = Array{Taylor1{_S}}(undef, size(tmp1523))
    tmp1525 .= Taylor1(zero(_S), order)
    tmp1526 = Array{Taylor1{_S}}(undef, size(tmp1525))
    tmp1526 .= Taylor1(zero(_S), order)
    tmp1528 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp1528 .= Taylor1(zero(_S), order)
    tmp1529 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp1529 .= Taylor1(zero(_S), order)
    tmp1530 = Array{Taylor1{_S}}(undef, size(tmp1529))
    tmp1530 .= Taylor1(zero(_S), order)
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                    X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                    X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                    Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                    Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                    Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                    Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                    Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                    Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                    tmp1415[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                    X_bf[i, j] = Taylor1(constant_term(tmp1415[i, j]) + constant_term(X_bf_3[i, j]), order)
                    tmp1417[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                    Y_bf[i, j] = Taylor1(constant_term(tmp1417[i, j]) + constant_term(Y_bf_3[i, j]), order)
                    tmp1419[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                    Z_bf[i, j] = Taylor1(constant_term(tmp1419[i, j]) + constant_term(Z_bf_3[i, j]), order)
                    sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                    tmp1423[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                    tmp1425[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                    tmp1426[i, j] = Taylor1(constant_term(tmp1423[i, j]) + constant_term(tmp1425[i, j]), order)
                    r_xy[i, j] = Taylor1(sqrt(constant_term(tmp1426[i, j])), order)
                    cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                    sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                    cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                    P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                    P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                    dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                    dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                    for n = 2:n1SEM[j]
                        tmp1431[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                        tmp1432[i, j, n] = Taylor1(constant_term(tmp1431[i, j, n]) * constant_term(fact1_jsem[n]), order)
                        tmp1433[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                        P_n[i, j, n + 1] = Taylor1(constant_term(tmp1432[i, j, n]) - constant_term(tmp1433[i, j, n - 1]), order)
                        tmp1435[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                        tmp1436[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                        dP_n[i, j, n + 1] = Taylor1(constant_term(tmp1435[i, j, n]) + constant_term(tmp1436[i, j, n]), order)
                        temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                    end
                    r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                    tmp1441[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                    tmp1442[i, j, 3] = Taylor1(constant_term(tmp1441[i, j, 3]) * constant_term(J2_t[j]), order)
                    F_J_ξ[i, j] = Taylor1(constant_term(tmp1442[i, j, 3]) / constant_term(r_p4[i, j]), order)
                    tmp1444[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                    tmp1445[i, j, 3] = Taylor1(constant_term(tmp1444[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                    tmp1446[i, j, 3] = Taylor1(constant_term(tmp1445[i, j, 3]) * constant_term(J2_t[j]), order)
                    F_J_ζ[i, j] = Taylor1(constant_term(tmp1446[i, j, 3]) / constant_term(r_p4[i, j]), order)
                    F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                    F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                    for n = 3:n1SEM[j]
                        tmp1448[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                        tmp1449[i, j, n + 1] = Taylor1(constant_term(tmp1448[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                        tmp1450[i, j, n + 1] = Taylor1(constant_term(tmp1449[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                        temp_fjξ[i, j, n] = Taylor1(constant_term(tmp1450[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                        tmp1452[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                        tmp1453[i, j, n + 1] = Taylor1(constant_term(tmp1452[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                        tmp1454[i, j, n + 1] = Taylor1(constant_term(tmp1453[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                        tmp1455[i, j, n + 1] = Taylor1(constant_term(tmp1454[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                        temp_fjζ[i, j, n] = Taylor1(constant_term(tmp1455[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                    end
                    if j == mo
                        for m = 1:n1SEM[mo]
                            if m == 1
                                sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                            else
                                tmp1458[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                tmp1459[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                sin_mλ[i, j, m] = Taylor1(constant_term(tmp1458[i, j, m - 1]) + constant_term(tmp1459[i, j, m - 1]), order)
                                tmp1461[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                tmp1462[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                cos_mλ[i, j, m] = Taylor1(constant_term(tmp1461[i, j, m - 1]) - constant_term(tmp1462[i, j, m - 1]), order)
                                tmp1464[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp1464[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                tmp1467[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp1467[i, j, m, m]) * constant_term(lnm3[m]), order)
                            end
                            for n = m + 1:n1SEM[mo]
                                if n == m + 1
                                    tmp1469[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp1469[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                else
                                    tmp1471[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp1472[i, j, n - 1, m] = Taylor1(constant_term(tmp1471[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    tmp1473[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                    secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp1472[i, j, n - 1, m]) + constant_term(tmp1473[i, j, n - 2, m]), order)
                                end
                                P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                tmp1476[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                tmp1477[i, j, n, m] = Taylor1(constant_term(tmp1476[i, j, n, m]) * constant_term(lnm3[n]), order)
                                tmp1478[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp1477[i, j, n, m]) + constant_term(tmp1478[i, j, n - 1, m]), order)
                            end
                        end
                        tmp1480[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                        tmp1481[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                        tmp1482[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                        tmp1483[i, j, 1] = Taylor1(constant_term(tmp1481[i, j, 1]) + constant_term(tmp1482[i, j, 1]), order)
                        tmp1484[i, j, 2, 1] = Taylor1(constant_term(tmp1480[i, j, 2, 1]) * constant_term(tmp1483[i, j, 1]), order)
                        tmp1485[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                        tmp1486[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                        tmp1487[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                        tmp1488[i, j, 2] = Taylor1(constant_term(tmp1486[i, j, 2]) + constant_term(tmp1487[i, j, 2]), order)
                        tmp1489[i, j, 2, 2] = Taylor1(constant_term(tmp1485[i, j, 2, 2]) * constant_term(tmp1488[i, j, 2]), order)
                        tmp1490[i, j, 2, 1] = Taylor1(constant_term(tmp1484[i, j, 2, 1]) + constant_term(tmp1489[i, j, 2, 2]), order)
                        F_CS_ξ[i, j] = Taylor1(constant_term(tmp1490[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                        tmp1492[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                        tmp1493[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                        tmp1494[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                        tmp1495[i, j, 1] = Taylor1(constant_term(tmp1493[i, j, 1]) - constant_term(tmp1494[i, j, 1]), order)
                        tmp1496[i, j, 2, 1] = Taylor1(constant_term(tmp1492[i, j, 2, 1]) * constant_term(tmp1495[i, j, 1]), order)
                        tmp1497[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                        tmp1498[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                        tmp1499[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                        tmp1500[i, j, 2] = Taylor1(constant_term(tmp1498[i, j, 2]) - constant_term(tmp1499[i, j, 2]), order)
                        tmp1501[i, j, 2, 2] = Taylor1(constant_term(tmp1497[i, j, 2, 2]) * constant_term(tmp1500[i, j, 2]), order)
                        tmp1502[i, j, 2, 1] = Taylor1(constant_term(tmp1496[i, j, 2, 1]) + constant_term(tmp1501[i, j, 2, 2]), order)
                        F_CS_η[i, j] = Taylor1(constant_term(tmp1502[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                        tmp1504[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                        tmp1505[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                        tmp1506[i, j, 1] = Taylor1(constant_term(tmp1504[i, j, 1]) + constant_term(tmp1505[i, j, 1]), order)
                        tmp1507[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp1506[i, j, 1]), order)
                        tmp1508[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                        tmp1509[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                        tmp1510[i, j, 2] = Taylor1(constant_term(tmp1508[i, j, 2]) + constant_term(tmp1509[i, j, 2]), order)
                        tmp1511[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp1510[i, j, 2]), order)
                        tmp1512[i, j, 2, 1] = Taylor1(constant_term(tmp1507[i, j, 2, 1]) + constant_term(tmp1511[i, j, 2, 2]), order)
                        F_CS_ζ[i, j] = Taylor1(constant_term(tmp1512[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                        F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n2M
                            for m = 1:n
                                Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                tmp1518[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                tmp1519[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                tmp1520[i, j, n, m] = Taylor1(constant_term(tmp1518[i, j, n, m]) * constant_term(tmp1519[i, j, n, m]), order)
                                tmp1521[i, j, n, m] = Taylor1(constant_term(tmp1520[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp1521[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                tmp1523[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                tmp1524[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                tmp1525[i, j, n, m] = Taylor1(constant_term(tmp1523[i, j, n, m]) * constant_term(tmp1524[i, j, n, m]), order)
                                tmp1526[i, j, n, m] = Taylor1(constant_term(tmp1525[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp1526[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                tmp1528[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                tmp1529[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp1528[i, j, n, m]), order)
                                tmp1530[i, j, n, m] = Taylor1(constant_term(tmp1529[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp1530[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                            end
                        end
                        tmp1532[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                        tmp1533[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                        F_JCS_ξ[i, j] = Taylor1(constant_term(tmp1532[i, j]) + constant_term(tmp1533[i, j]), order)
                        F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                        tmp1536[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        tmp1537[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                        F_JCS_ζ[i, j] = Taylor1(constant_term(tmp1536[i, j]) + constant_term(tmp1537[i, j]), order)
                    else
                        F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                        F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                    end
                    Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                    Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                    tmp1543[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                    Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp1543[i, j]) * constant_term(cos_λ[i, j]), order)
                    Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                    Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                    tmp1546[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                    Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp1546[i, j]) * constant_term(sin_λ[i, j]), order)
                    Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                    Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                    Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                    tmp1548[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                    tmp1549[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                    tmp1550[i, j, 1, 1] = Taylor1(constant_term(tmp1548[i, j, 1, 1]) + constant_term(tmp1549[i, j, 1, 2]), order)
                    tmp1551[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                    Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp1550[i, j, 1, 1]) + constant_term(tmp1551[i, j, 1, 3]), order)
                    tmp1553[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                    tmp1554[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                    tmp1555[i, j, 2, 1] = Taylor1(constant_term(tmp1553[i, j, 2, 1]) + constant_term(tmp1554[i, j, 2, 2]), order)
                    tmp1556[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                    Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp1555[i, j, 2, 1]) + constant_term(tmp1556[i, j, 2, 3]), order)
                    tmp1558[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                    tmp1559[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                    tmp1560[i, j, 3, 1] = Taylor1(constant_term(tmp1558[i, j, 3, 1]) + constant_term(tmp1559[i, j, 3, 2]), order)
                    tmp1561[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                    Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp1560[i, j, 3, 1]) + constant_term(tmp1561[i, j, 3, 3]), order)
                    tmp1563[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                    tmp1564[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                    tmp1565[i, j, 1, 1] = Taylor1(constant_term(tmp1563[i, j, 1, 1]) + constant_term(tmp1564[i, j, 1, 2]), order)
                    tmp1566[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                    Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp1565[i, j, 1, 1]) + constant_term(tmp1566[i, j, 1, 3]), order)
                    tmp1568[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                    tmp1569[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                    tmp1570[i, j, 2, 1] = Taylor1(constant_term(tmp1568[i, j, 2, 1]) + constant_term(tmp1569[i, j, 2, 2]), order)
                    tmp1571[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                    Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp1570[i, j, 2, 1]) + constant_term(tmp1571[i, j, 2, 3]), order)
                    tmp1573[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                    tmp1574[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                    tmp1575[i, j, 3, 1] = Taylor1(constant_term(tmp1573[i, j, 3, 1]) + constant_term(tmp1574[i, j, 3, 2]), order)
                    tmp1576[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                    Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp1575[i, j, 3, 1]) + constant_term(tmp1576[i, j, 3, 3]), order)
                    tmp1578[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                    tmp1579[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                    tmp1580[i, j, 1, 1] = Taylor1(constant_term(tmp1578[i, j, 1, 1]) + constant_term(tmp1579[i, j, 1, 2]), order)
                    tmp1581[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                    Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp1580[i, j, 1, 1]) + constant_term(tmp1581[i, j, 1, 3]), order)
                    tmp1583[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                    tmp1584[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                    tmp1585[i, j, 2, 1] = Taylor1(constant_term(tmp1583[i, j, 2, 1]) + constant_term(tmp1584[i, j, 2, 2]), order)
                    tmp1586[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                    Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp1585[i, j, 2, 1]) + constant_term(tmp1586[i, j, 2, 3]), order)
                    tmp1588[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                    tmp1589[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                    tmp1590[i, j, 3, 1] = Taylor1(constant_term(tmp1588[i, j, 3, 1]) + constant_term(tmp1589[i, j, 3, 2]), order)
                    tmp1591[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                    Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp1590[i, j, 3, 1]) + constant_term(tmp1591[i, j, 3, 3]), order)
                    tmp1593[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                    tmp1594[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                    tmp1595[i, j, 1, 1] = Taylor1(constant_term(tmp1593[i, j, 1, 1]) + constant_term(tmp1594[i, j, 2, 1]), order)
                    tmp1596[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                    F_JCS_x[i, j] = Taylor1(constant_term(tmp1595[i, j, 1, 1]) + constant_term(tmp1596[i, j, 3, 1]), order)
                    tmp1598[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                    tmp1599[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                    tmp1600[i, j, 1, 2] = Taylor1(constant_term(tmp1598[i, j, 1, 2]) + constant_term(tmp1599[i, j, 2, 2]), order)
                    tmp1601[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                    F_JCS_y[i, j] = Taylor1(constant_term(tmp1600[i, j, 1, 2]) + constant_term(tmp1601[i, j, 3, 2]), order)
                    tmp1603[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                    tmp1604[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                    tmp1605[i, j, 1, 3] = Taylor1(constant_term(tmp1603[i, j, 1, 3]) + constant_term(tmp1604[i, j, 2, 3]), order)
                    tmp1606[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                    F_JCS_z[i, j] = Taylor1(constant_term(tmp1605[i, j, 1, 3]) + constant_term(tmp1606[i, j, 3, 3]), order)
                end
            end
        end
    end
    tmp1608 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp1608 .= Taylor1(zero(_S), order)
    tmp1610 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp1610 .= Taylor1(zero(_S), order)
    tmp1612 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp1612 .= Taylor1(zero(_S), order)
    tmp1614 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp1614 .= Taylor1(zero(_S), order)
    tmp1616 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp1616 .= Taylor1(zero(_S), order)
    tmp1618 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp1618 .= Taylor1(zero(_S), order)
    tmp1620 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1620 .= Taylor1(zero(_S), order)
    tmp1621 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1621 .= Taylor1(zero(_S), order)
    tmp1622 = Array{Taylor1{_S}}(undef, size(tmp1620))
    tmp1622 .= Taylor1(zero(_S), order)
    tmp1624 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1624 .= Taylor1(zero(_S), order)
    tmp1625 = Array{Taylor1{_S}}(undef, size(X))
    tmp1625 .= Taylor1(zero(_S), order)
    tmp1626 = Array{Taylor1{_S}}(undef, size(tmp1624))
    tmp1626 .= Taylor1(zero(_S), order)
    tmp1628 = Array{Taylor1{_S}}(undef, size(X))
    tmp1628 .= Taylor1(zero(_S), order)
    tmp1629 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1629 .= Taylor1(zero(_S), order)
    tmp1630 = Array{Taylor1{_S}}(undef, size(tmp1628))
    tmp1630 .= Taylor1(zero(_S), order)
    tmp1632 = Array{Taylor1{_S}}(undef, size(N_MfigM_pmA_x))
    tmp1632 .= Taylor1(zero(_S), order)
    tmp1634 = Array{Taylor1{_S}}(undef, size(N_MfigM_pmA_y))
    tmp1634 .= Taylor1(zero(_S), order)
    tmp1636 = Array{Taylor1{_S}}(undef, size(N_MfigM_pmA_z))
    tmp1636 .= Taylor1(zero(_S), order)
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp1608[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp1608[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp1610[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp1610[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp1612[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp1612[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp1614[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp1614[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp1616[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp1616[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp1618[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp1618[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp1620[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp1621[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp1622[i, j] = Taylor1(constant_term(tmp1620[i, j]) - constant_term(tmp1621[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1622[i, j]), order)
                        tmp1624[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp1625[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp1626[i, j] = Taylor1(constant_term(tmp1624[i, j]) - constant_term(tmp1625[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1626[i, j]), order)
                        tmp1628[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp1629[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp1630[i, j] = Taylor1(constant_term(tmp1628[i, j]) - constant_term(tmp1629[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1630[i, j]), order)
                        tmp1632[i] = Taylor1(constant_term(N_MfigM_pmA_x[i]) * constant_term(μ[j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(tmp1632[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        tmp1634[i] = Taylor1(constant_term(N_MfigM_pmA_y[i]) * constant_term(μ[j]), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(tmp1634[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        tmp1636[i] = Taylor1(constant_term(N_MfigM_pmA_z[i]) * constant_term(μ[j]), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(tmp1636[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp1645 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp1645 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp1651 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp1651 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp1651))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp1654 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp1654 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp1654))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp1657 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp1657 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                tmp1645[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp1645[i, j]), order)
                ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                tmp1651[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp1651[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                tmp1654[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                pn1t7[i, j] = Taylor1(constant_term(tmp1654[i, j]) / constant_term(r_p2[i, j]), order)
                tmp1657[i, j] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i, j]), order)
                pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp1657[i, j]), order)
                pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
            end
        end
        pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
    end
    tmp1664 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp1664 .= Taylor1(zero(_S), order)
    tmp1665 = Array{Taylor1{_S}}(undef, size(tmp1664))
    tmp1665 .= Taylor1(zero(_S), order)
    tmp1666 = Array{Taylor1{_S}}(undef, size(tmp1665))
    tmp1666 .= Taylor1(zero(_S), order)
    tmp1674 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp1674 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp1677 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp1677 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp1680 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp1680 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                tmp1664[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                tmp1665[i, j] = Taylor1(constant_term(tmp1664[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                tmp1666[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp1665[i, j]), order)
                pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp1666[i, j]), order)
                X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                tmp1674[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp1674[i, j]), order)
                sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                tmp1677[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp1677[i, j]), order)
                sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                tmp1680[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp1680[i, j]), order)
                sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
            end
        end
        postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
        postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
        postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
    end
    for i = 1:N_ext
        dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
        dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
        dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
    end
    for i = N_ext + 1:N
        dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
        dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
        dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
    end
    tmp1689 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp1690 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp1691 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp1692 = Taylor1(constant_term(tmp1690) + constant_term(tmp1691), order)
    Iω_x = Taylor1(constant_term(tmp1689) + constant_term(tmp1692), order)
    tmp1694 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp1695 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp1696 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp1697 = Taylor1(constant_term(tmp1695) + constant_term(tmp1696), order)
    Iω_y = Taylor1(constant_term(tmp1694) + constant_term(tmp1697), order)
    tmp1699 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp1700 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp1701 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp1702 = Taylor1(constant_term(tmp1700) + constant_term(tmp1701), order)
    Iω_z = Taylor1(constant_term(tmp1699) + constant_term(tmp1702), order)
    tmp1704 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp1705 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp1704) - constant_term(tmp1705), order)
    tmp1707 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp1708 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp1707) - constant_term(tmp1708), order)
    tmp1710 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp1711 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp1710) - constant_term(tmp1711), order)
    tmp1713 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp1714 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp1715 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp1716 = Taylor1(constant_term(tmp1714) + constant_term(tmp1715), order)
    dIω_x = Taylor1(constant_term(tmp1713) + constant_term(tmp1716), order)
    tmp1718 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp1719 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp1720 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp1721 = Taylor1(constant_term(tmp1719) + constant_term(tmp1720), order)
    dIω_y = Taylor1(constant_term(tmp1718) + constant_term(tmp1721), order)
    tmp1723 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp1724 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp1725 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp1726 = Taylor1(constant_term(tmp1724) + constant_term(tmp1725), order)
    dIω_z = Taylor1(constant_term(tmp1723) + constant_term(tmp1726), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp1731 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1732 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1733 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1734 = Taylor1(constant_term(tmp1732) + constant_term(tmp1733), order)
    er_EM_1 = Taylor1(constant_term(tmp1731) + constant_term(tmp1734), order)
    tmp1736 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1737 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1738 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1739 = Taylor1(constant_term(tmp1737) + constant_term(tmp1738), order)
    er_EM_2 = Taylor1(constant_term(tmp1736) + constant_term(tmp1739), order)
    tmp1741 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1742 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1743 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1744 = Taylor1(constant_term(tmp1742) + constant_term(tmp1743), order)
    er_EM_3 = Taylor1(constant_term(tmp1741) + constant_term(tmp1744), order)
    tmp1746 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1747 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1748 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1749 = Taylor1(constant_term(tmp1747) + constant_term(tmp1748), order)
    p_E_1 = Taylor1(constant_term(tmp1746) + constant_term(tmp1749), order)
    tmp1751 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1752 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1753 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1754 = Taylor1(constant_term(tmp1752) + constant_term(tmp1753), order)
    p_E_2 = Taylor1(constant_term(tmp1751) + constant_term(tmp1754), order)
    tmp1756 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1757 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1758 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1759 = Taylor1(constant_term(tmp1757) + constant_term(tmp1758), order)
    p_E_3 = Taylor1(constant_term(tmp1756) + constant_term(tmp1759), order)
    tmp1761 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp1762 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp1763 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp1764 = Taylor1(constant_term(tmp1762) + constant_term(tmp1763), order)
    I_er_EM_1 = Taylor1(constant_term(tmp1761) + constant_term(tmp1764), order)
    tmp1766 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp1767 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp1768 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp1769 = Taylor1(constant_term(tmp1767) + constant_term(tmp1768), order)
    I_er_EM_2 = Taylor1(constant_term(tmp1766) + constant_term(tmp1769), order)
    tmp1771 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp1772 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp1773 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp1774 = Taylor1(constant_term(tmp1772) + constant_term(tmp1773), order)
    I_er_EM_3 = Taylor1(constant_term(tmp1771) + constant_term(tmp1774), order)
    tmp1776 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp1777 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp1778 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp1779 = Taylor1(constant_term(tmp1777) + constant_term(tmp1778), order)
    I_p_E_1 = Taylor1(constant_term(tmp1776) + constant_term(tmp1779), order)
    tmp1781 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp1782 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp1783 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp1784 = Taylor1(constant_term(tmp1782) + constant_term(tmp1783), order)
    I_p_E_2 = Taylor1(constant_term(tmp1781) + constant_term(tmp1784), order)
    tmp1786 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp1787 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp1788 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp1789 = Taylor1(constant_term(tmp1787) + constant_term(tmp1788), order)
    I_p_E_3 = Taylor1(constant_term(tmp1786) + constant_term(tmp1789), order)
    tmp1791 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp1792 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp1791) - constant_term(tmp1792), order)
    tmp1794 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp1795 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp1794) - constant_term(tmp1795), order)
    tmp1797 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp1798 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp1797) - constant_term(tmp1798), order)
    tmp1800 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp1801 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp1800) - constant_term(tmp1801), order)
    tmp1803 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp1804 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp1803) - constant_term(tmp1804), order)
    tmp1806 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp1807 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp1806) - constant_term(tmp1807), order)
    tmp1809 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp1810 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp1809) - constant_term(tmp1810), order)
    tmp1812 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp1813 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp1812) - constant_term(tmp1813), order)
    tmp1815 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp1816 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp1815) - constant_term(tmp1816), order)
    tmp1818 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp1819 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp1818) - constant_term(tmp1819), order)
    tmp1821 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp1822 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp1821) - constant_term(tmp1822), order)
    tmp1824 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp1825 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp1824) - constant_term(tmp1825), order)
    tmp1829 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp1830 = Taylor1(constant_term(7) * constant_term(tmp1829), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp1830), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp1835 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp1835), order)
    tmp1837 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp1838 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp1839 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1838), order)
    tmp1840 = Taylor1(constant_term(tmp1837) + constant_term(tmp1839), order)
    tmp1842 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp1843 = Taylor1(constant_term(tmp1840) - constant_term(tmp1842), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1843), order)
    tmp1845 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp1846 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp1847 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1846), order)
    tmp1848 = Taylor1(constant_term(tmp1845) + constant_term(tmp1847), order)
    tmp1850 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp1851 = Taylor1(constant_term(tmp1848) - constant_term(tmp1850), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1851), order)
    tmp1853 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp1854 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp1855 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1854), order)
    tmp1856 = Taylor1(constant_term(tmp1853) + constant_term(tmp1855), order)
    tmp1858 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp1859 = Taylor1(constant_term(tmp1856) - constant_term(tmp1858), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1859), order)
    tmp1861 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1862 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1863 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1864 = Taylor1(constant_term(tmp1862) + constant_term(tmp1863), order)
    N_1_LMF = Taylor1(constant_term(tmp1861) + constant_term(tmp1864), order)
    tmp1866 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1867 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1868 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1869 = Taylor1(constant_term(tmp1867) + constant_term(tmp1868), order)
    N_2_LMF = Taylor1(constant_term(tmp1866) + constant_term(tmp1869), order)
    tmp1871 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1872 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1873 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1874 = Taylor1(constant_term(tmp1872) + constant_term(tmp1873), order)
    N_3_LMF = Taylor1(constant_term(tmp1871) + constant_term(tmp1874), order)
    tmp1876 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp1877 = Taylor1(constant_term(k_ν) * constant_term(tmp1876), order)
    tmp1878 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp1879 = Taylor1(constant_term(tmp1878) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp1877) - constant_term(tmp1879), order)
    tmp1881 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp1882 = Taylor1(constant_term(k_ν) * constant_term(tmp1881), order)
    tmp1883 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp1884 = Taylor1(constant_term(tmp1883) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp1882) + constant_term(tmp1884), order)
    tmp1886 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp1886), order)
    tmp1888 = Taylor1(constant_term(N_1_LMF) + constant_term(N_MfigM_figE_1), order)
    tmp1889 = Taylor1(constant_term(tmp1888) + constant_term(N_cmb_1), order)
    tmp1890 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp1889) - constant_term(tmp1890), order)
    tmp1892 = Taylor1(constant_term(N_2_LMF) + constant_term(N_MfigM_figE_2), order)
    tmp1893 = Taylor1(constant_term(tmp1892) + constant_term(N_cmb_2), order)
    tmp1894 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp1893) - constant_term(tmp1894), order)
    tmp1896 = Taylor1(constant_term(N_3_LMF) + constant_term(N_MfigM_figE_3), order)
    tmp1897 = Taylor1(constant_term(tmp1896) + constant_term(N_cmb_3), order)
    tmp1898 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp1897) - constant_term(tmp1898), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp1903 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp1904 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp1903) - constant_term(tmp1904), order)
    tmp1906 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp1907 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp1906) - constant_term(tmp1907), order)
    tmp1909 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp1910 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp1909) - constant_term(tmp1910), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp1915 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1995 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1916 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp1915), order)
    tmp1917 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1996 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1918 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp1917), order)
    tmp1919 = Taylor1(constant_term(tmp1916) + constant_term(tmp1918), order)
    tmp1920 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp1997 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp1919) / constant_term(tmp1920), order)
    tmp1922 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1998 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1923 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp1922), order)
    tmp1924 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1999 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1925 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp1924), order)
    dq[6N + 2] = Taylor1(constant_term(tmp1923) - constant_term(tmp1925), order)
    tmp1927 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp2000 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp1928 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp1927), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp1928), order)
    tmp1930 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp1931 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp1932 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp1933 = Taylor1(constant_term(tmp1931) + constant_term(tmp1932), order)
    dq[6N + 4] = Taylor1(constant_term(tmp1930) + constant_term(tmp1933), order)
    tmp1935 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp1936 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp1937 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp1938 = Taylor1(constant_term(tmp1936) + constant_term(tmp1937), order)
    dq[6N + 5] = Taylor1(constant_term(tmp1935) + constant_term(tmp1938), order)
    tmp1940 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp1941 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp1942 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp1943 = Taylor1(constant_term(tmp1941) + constant_term(tmp1942), order)
    dq[6N + 6] = Taylor1(constant_term(tmp1940) + constant_term(tmp1943), order)
    tmp1945 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp2001 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp1946 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp1945), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp1946)), order)
    tmp1948 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp2002 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp1949 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp1948), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp1949), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    dq[6N + 13] = Taylor1(identity(constant_term(zero_q_1)), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp1220, tmp1221, tmp1222, tmp1223, tmp1224, tmp1225, tmp1226, tmp1227, tmp1229, tmp1230, tmp1231, tmp1232, tmp1233, tmp1234, tmp1235, tmp1236, tmp1237, tmp1239, tmp1240, tmp1242, tmp1243, tmp1244, tmp1245, tmp1246, tmp1247, tmp1248, tmp1249, tmp1251, tmp1252, tmp1253, tmp1254, tmp1255, tmp1256, tmp1257, tmp1258, tmp1260, tmp1261, tmp1262, tmp1264, tmp1265, tmp1267, tmp1268, tmp1271, tmp1272, tmp1273, tmp1274, tmp1276, tmp1277, tmp1278, tmp1279, tmp1280, tmp1282, tmp1283, tmp1284, tmp1285, tmp1287, tmp1288, tmp1289, tmp1290, tmp1291, tmp1293, tmp1294, tmp1295, tmp1296, tmp1298, tmp1299, tmp1300, tmp1301, tmp1302, tmp1304, tmp1305, tmp1306, tmp1307, tmp1309, tmp1310, tmp1311, tmp1312, tmp1314, tmp1315, tmp1316, tmp1317, tmp1389, tmp1391, tmp1392, tmp1394, tmp1395, tmp1398, tmp1400, tmp1402, tmp1403, tmp1689, tmp1690, tmp1691, tmp1692, tmp1694, tmp1695, tmp1696, tmp1697, tmp1699, tmp1700, tmp1701, tmp1702, tmp1704, tmp1705, tmp1707, tmp1708, tmp1710, tmp1711, tmp1713, tmp1714, tmp1715, tmp1716, tmp1718, tmp1719, tmp1720, tmp1721, tmp1723, tmp1724, tmp1725, tmp1726, tmp1731, tmp1732, tmp1733, tmp1734, tmp1736, tmp1737, tmp1738, tmp1739, tmp1741, tmp1742, tmp1743, tmp1744, tmp1746, tmp1747, tmp1748, tmp1749, tmp1751, tmp1752, tmp1753, tmp1754, tmp1756, tmp1757, tmp1758, tmp1759, tmp1761, tmp1762, tmp1763, tmp1764, tmp1766, tmp1767, tmp1768, tmp1769, tmp1771, tmp1772, tmp1773, tmp1774, tmp1776, tmp1777, tmp1778, tmp1779, tmp1781, tmp1782, tmp1783, tmp1784, tmp1786, tmp1787, tmp1788, tmp1789, tmp1791, tmp1792, tmp1794, tmp1795, tmp1797, tmp1798, tmp1800, tmp1801, tmp1803, tmp1804, tmp1806, tmp1807, tmp1809, tmp1810, tmp1812, tmp1813, tmp1815, tmp1816, tmp1818, tmp1819, tmp1821, tmp1822, tmp1824, tmp1825, tmp1829, tmp1830, tmp1835, tmp1837, tmp1838, tmp1839, tmp1840, tmp1842, tmp1843, tmp1845, tmp1846, tmp1847, tmp1848, tmp1850, tmp1851, tmp1853, tmp1854, tmp1855, tmp1856, tmp1858, tmp1859, tmp1861, tmp1862, tmp1863, tmp1864, tmp1866, tmp1867, tmp1868, tmp1869, tmp1871, tmp1872, tmp1873, tmp1874, tmp1876, tmp1877, tmp1878, tmp1879, tmp1881, tmp1882, tmp1883, tmp1884, tmp1886, tmp1888, tmp1889, tmp1890, tmp1892, tmp1893, tmp1894, tmp1896, tmp1897, tmp1898, tmp1903, tmp1904, tmp1906, tmp1907, tmp1909, tmp1910, tmp1915, tmp1916, tmp1917, tmp1918, tmp1919, tmp1920, tmp1922, tmp1923, tmp1924, tmp1925, tmp1927, tmp1928, tmp1930, tmp1931, tmp1932, tmp1933, tmp1935, tmp1936, tmp1937, tmp1938, tmp1940, tmp1941, tmp1942, tmp1943, tmp1945, tmp1946, tmp1948, tmp1949, ϕ_m, θ_m, ψ_m, tmp1954, tmp1955, tmp1956, tmp1957, tmp1958, tmp1959, tmp1960, tmp1961, tmp1962, tmp1963, tmp1964, tmp1965, tmp1966, tmp1967, tmp1968, tmp1969, tmp1970, tmp1971, tmp1972, tmp1973, tmp1974, tmp1975, tmp1976, tmp1977, tmp1978, tmp1979, tmp1980, tmp1981, tmp1982, ϕ_c, tmp1983, tmp1984, tmp1985, tmp1986, tmp1987, tmp1988, tmp1989, tmp1990, tmp1991, tmp1992, tmp1993, tmp1994, ω_c_CE_1, ω_c_CE_2, ω_c_CE_3, J2M_t, C22M_t, C21M_t, S21M_t, S22M_t, Iω_x, Iω_y, Iω_z, ωxIω_x, ωxIω_y, ωxIω_z, dIω_x, dIω_y, dIω_z, er_EM_I_1, er_EM_I_2, er_EM_I_3, p_E_I_1, p_E_I_2, p_E_I_3, er_EM_1, er_EM_2, er_EM_3, p_E_1, p_E_2, p_E_3, I_er_EM_1, I_er_EM_2, I_er_EM_3, I_p_E_1, I_p_E_2, I_p_E_3, er_EM_cross_I_er_EM_1, er_EM_cross_I_er_EM_2, er_EM_cross_I_er_EM_3, er_EM_cross_I_p_E_1, er_EM_cross_I_p_E_2, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_1, p_E_cross_I_er_EM_2, p_E_cross_I_er_EM_3, p_E_cross_I_p_E_1, p_E_cross_I_p_E_2, p_E_cross_I_p_E_3, one_minus_7sin2ϕEM, two_sinϕEM, N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_1, N_MfigM_figE_2, N_MfigM_figE_3, N_1_LMF, N_2_LMF, N_3_LMF, N_cmb_1, N_cmb_2, N_cmb_3, I_dω_1, I_dω_2, I_dω_3, Ic_ωc_1, Ic_ωc_2, Ic_ωc_3, m_ωm_x_Icωc_1, m_ωm_x_Icωc_2, m_ωm_x_Icωc_3, Ic_dωc_1, Ic_dωc_2, Ic_dωc_3, tmp1995, tmp1996, tmp1997, tmp1998, tmp1999, tmp2000, tmp2001, tmp2002], [newtonX, newtonY, newtonZ, newtonianNb_Potential, v2, pntempX, pntempY, pntempZ, postNewtonX, postNewtonY, postNewtonZ, accX, accY, accZ, N_MfigM_pmA_x, N_MfigM_pmA_y, N_MfigM_pmA_z, temp_N_M_x, temp_N_M_y, temp_N_M_z, N_MfigM, J2_t, tmp1326, tmp1328, tmp1331, tmp1333, tmp1336, tmp1338, tmp1382, tmp1384, tmp1385, tmp1387, tmp1632, tmp1634, tmp1636], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, _2v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, X_bf_1, Y_bf_1, Z_bf_1, X_bf_2, Y_bf_2, Z_bf_2, X_bf_3, Y_bf_3, Z_bf_3, X_bf, Y_bf, Z_bf, F_JCS_x, F_JCS_y, F_JCS_z, temp_accX_j, temp_accY_j, temp_accZ_j, temp_accX_i, temp_accY_i, temp_accZ_i, sin_ϕ, cos_ϕ, sin_λ, cos_λ, r_xy, r_p4, F_CS_ξ_36, F_CS_η_36, F_CS_ζ_36, F_J_ξ_36, F_J_ζ_36, F_J_ξ, F_J_ζ, F_CS_ξ, F_CS_η, F_CS_ζ, F_JCS_ξ, F_JCS_η, F_JCS_ζ, mantlef2coref, pn2x, pn2y, pn2z, tmp1346, tmp1349, tmp1351, tmp1352, tmp1354, tmp1362, tmp1363, tmp1374, temp_001, tmp1376, temp_002, tmp1378, temp_003, temp_004, tmp1415, tmp1417, tmp1419, tmp1423, tmp1425, tmp1426, tmp1532, tmp1533, tmp1536, tmp1537, tmp1543, tmp1546, tmp1608, tmp1610, tmp1612, tmp1614, tmp1616, tmp1618, tmp1620, tmp1621, tmp1622, tmp1624, tmp1625, tmp1626, tmp1628, tmp1629, tmp1630, tmp1645, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp1651, Rij_dot_Vi, tmp1654, pn1t7, tmp1657, pn1t2_7, tmp1664, tmp1665, tmp1666, tmp1674, termpnx, sumpnx, tmp1677, termpny, sumpny, tmp1680, termpnz, sumpnz], [P_n, dP_n, temp_fjξ, temp_fjζ, temp_rn, sin_mλ, cos_mλ, RotM, tmp1431, tmp1432, tmp1433, tmp1435, tmp1436, tmp1441, tmp1442, tmp1444, tmp1445, tmp1446, tmp1448, tmp1449, tmp1450, tmp1452, tmp1453, tmp1454, tmp1455, tmp1458, tmp1459, tmp1461, tmp1462, tmp1481, tmp1482, tmp1483, tmp1486, tmp1487, tmp1488, tmp1493, tmp1494, tmp1495, tmp1498, tmp1499, tmp1500, tmp1504, tmp1505, tmp1506, tmp1508, tmp1509, tmp1510], [temp_CS_ξ, temp_CS_η, temp_CS_ζ, Cnm_cosmλ, Cnm_sinmλ, Snm_cosmλ, Snm_sinmλ, secϕ_P_nm, P_nm, cosϕ_dP_nm, Rb2p, Gc2p, tmp1464, tmp1467, tmp1469, tmp1471, tmp1472, tmp1473, tmp1476, tmp1477, tmp1478, tmp1480, tmp1484, tmp1485, tmp1489, tmp1490, tmp1492, tmp1496, tmp1497, tmp1501, tmp1502, tmp1507, tmp1511, tmp1512, tmp1518, tmp1519, tmp1520, tmp1521, tmp1523, tmp1524, tmp1525, tmp1526, tmp1528, tmp1529, tmp1530, tmp1548, tmp1549, tmp1550, tmp1551, tmp1553, tmp1554, tmp1555, tmp1556, tmp1558, tmp1559, tmp1560, tmp1561, tmp1563, tmp1564, tmp1565, tmp1566, tmp1568, tmp1569, tmp1570, tmp1571, tmp1573, tmp1574, tmp1575, tmp1576, tmp1578, tmp1579, tmp1580, tmp1581, tmp1583, tmp1584, tmp1585, tmp1586, tmp1588, tmp1589, tmp1590, tmp1591, tmp1593, tmp1594, tmp1595, tmp1596, tmp1598, tmp1599, tmp1600, tmp1601, tmp1603, tmp1604, tmp1605, tmp1606])
end
# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S!
function TaylorIntegration.jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp1220 = __ralloc.v0[1]::Taylor1{_S}
    tmp1221 = __ralloc.v0[2]::Taylor1{_S}
    tmp1222 = __ralloc.v0[3]::Taylor1{_S}
    tmp1223 = __ralloc.v0[4]::Taylor1{_S}
    tmp1224 = __ralloc.v0[5]::Taylor1{_S}
    tmp1225 = __ralloc.v0[6]::Taylor1{_S}
    tmp1226 = __ralloc.v0[7]::Taylor1{_S}
    tmp1227 = __ralloc.v0[8]::Taylor1{_S}
    tmp1229 = __ralloc.v0[9]::Taylor1{_S}
    tmp1230 = __ralloc.v0[10]::Taylor1{_S}
    tmp1231 = __ralloc.v0[11]::Taylor1{_S}
    tmp1232 = __ralloc.v0[12]::Taylor1{_S}
    tmp1233 = __ralloc.v0[13]::Taylor1{_S}
    tmp1234 = __ralloc.v0[14]::Taylor1{_S}
    tmp1235 = __ralloc.v0[15]::Taylor1{_S}
    tmp1236 = __ralloc.v0[16]::Taylor1{_S}
    tmp1237 = __ralloc.v0[17]::Taylor1{_S}
    tmp1239 = __ralloc.v0[18]::Taylor1{_S}
    tmp1240 = __ralloc.v0[19]::Taylor1{_S}
    tmp1242 = __ralloc.v0[20]::Taylor1{_S}
    tmp1243 = __ralloc.v0[21]::Taylor1{_S}
    tmp1244 = __ralloc.v0[22]::Taylor1{_S}
    tmp1245 = __ralloc.v0[23]::Taylor1{_S}
    tmp1246 = __ralloc.v0[24]::Taylor1{_S}
    tmp1247 = __ralloc.v0[25]::Taylor1{_S}
    tmp1248 = __ralloc.v0[26]::Taylor1{_S}
    tmp1249 = __ralloc.v0[27]::Taylor1{_S}
    tmp1251 = __ralloc.v0[28]::Taylor1{_S}
    tmp1252 = __ralloc.v0[29]::Taylor1{_S}
    tmp1253 = __ralloc.v0[30]::Taylor1{_S}
    tmp1254 = __ralloc.v0[31]::Taylor1{_S}
    tmp1255 = __ralloc.v0[32]::Taylor1{_S}
    tmp1256 = __ralloc.v0[33]::Taylor1{_S}
    tmp1257 = __ralloc.v0[34]::Taylor1{_S}
    tmp1258 = __ralloc.v0[35]::Taylor1{_S}
    tmp1260 = __ralloc.v0[36]::Taylor1{_S}
    tmp1261 = __ralloc.v0[37]::Taylor1{_S}
    tmp1262 = __ralloc.v0[38]::Taylor1{_S}
    tmp1264 = __ralloc.v0[39]::Taylor1{_S}
    tmp1265 = __ralloc.v0[40]::Taylor1{_S}
    tmp1267 = __ralloc.v0[41]::Taylor1{_S}
    tmp1268 = __ralloc.v0[42]::Taylor1{_S}
    tmp1271 = __ralloc.v0[43]::Taylor1{_S}
    tmp1272 = __ralloc.v0[44]::Taylor1{_S}
    tmp1273 = __ralloc.v0[45]::Taylor1{_S}
    tmp1274 = __ralloc.v0[46]::Taylor1{_S}
    tmp1276 = __ralloc.v0[47]::Taylor1{_S}
    tmp1277 = __ralloc.v0[48]::Taylor1{_S}
    tmp1278 = __ralloc.v0[49]::Taylor1{_S}
    tmp1279 = __ralloc.v0[50]::Taylor1{_S}
    tmp1280 = __ralloc.v0[51]::Taylor1{_S}
    tmp1282 = __ralloc.v0[52]::Taylor1{_S}
    tmp1283 = __ralloc.v0[53]::Taylor1{_S}
    tmp1284 = __ralloc.v0[54]::Taylor1{_S}
    tmp1285 = __ralloc.v0[55]::Taylor1{_S}
    tmp1287 = __ralloc.v0[56]::Taylor1{_S}
    tmp1288 = __ralloc.v0[57]::Taylor1{_S}
    tmp1289 = __ralloc.v0[58]::Taylor1{_S}
    tmp1290 = __ralloc.v0[59]::Taylor1{_S}
    tmp1291 = __ralloc.v0[60]::Taylor1{_S}
    tmp1293 = __ralloc.v0[61]::Taylor1{_S}
    tmp1294 = __ralloc.v0[62]::Taylor1{_S}
    tmp1295 = __ralloc.v0[63]::Taylor1{_S}
    tmp1296 = __ralloc.v0[64]::Taylor1{_S}
    tmp1298 = __ralloc.v0[65]::Taylor1{_S}
    tmp1299 = __ralloc.v0[66]::Taylor1{_S}
    tmp1300 = __ralloc.v0[67]::Taylor1{_S}
    tmp1301 = __ralloc.v0[68]::Taylor1{_S}
    tmp1302 = __ralloc.v0[69]::Taylor1{_S}
    tmp1304 = __ralloc.v0[70]::Taylor1{_S}
    tmp1305 = __ralloc.v0[71]::Taylor1{_S}
    tmp1306 = __ralloc.v0[72]::Taylor1{_S}
    tmp1307 = __ralloc.v0[73]::Taylor1{_S}
    tmp1309 = __ralloc.v0[74]::Taylor1{_S}
    tmp1310 = __ralloc.v0[75]::Taylor1{_S}
    tmp1311 = __ralloc.v0[76]::Taylor1{_S}
    tmp1312 = __ralloc.v0[77]::Taylor1{_S}
    tmp1314 = __ralloc.v0[78]::Taylor1{_S}
    tmp1315 = __ralloc.v0[79]::Taylor1{_S}
    tmp1316 = __ralloc.v0[80]::Taylor1{_S}
    tmp1317 = __ralloc.v0[81]::Taylor1{_S}
    tmp1389 = __ralloc.v0[82]::Taylor1{_S}
    tmp1391 = __ralloc.v0[83]::Taylor1{_S}
    tmp1392 = __ralloc.v0[84]::Taylor1{_S}
    tmp1394 = __ralloc.v0[85]::Taylor1{_S}
    tmp1395 = __ralloc.v0[86]::Taylor1{_S}
    tmp1398 = __ralloc.v0[87]::Taylor1{_S}
    tmp1400 = __ralloc.v0[88]::Taylor1{_S}
    tmp1402 = __ralloc.v0[89]::Taylor1{_S}
    tmp1403 = __ralloc.v0[90]::Taylor1{_S}
    tmp1689 = __ralloc.v0[91]::Taylor1{_S}
    tmp1690 = __ralloc.v0[92]::Taylor1{_S}
    tmp1691 = __ralloc.v0[93]::Taylor1{_S}
    tmp1692 = __ralloc.v0[94]::Taylor1{_S}
    tmp1694 = __ralloc.v0[95]::Taylor1{_S}
    tmp1695 = __ralloc.v0[96]::Taylor1{_S}
    tmp1696 = __ralloc.v0[97]::Taylor1{_S}
    tmp1697 = __ralloc.v0[98]::Taylor1{_S}
    tmp1699 = __ralloc.v0[99]::Taylor1{_S}
    tmp1700 = __ralloc.v0[100]::Taylor1{_S}
    tmp1701 = __ralloc.v0[101]::Taylor1{_S}
    tmp1702 = __ralloc.v0[102]::Taylor1{_S}
    tmp1704 = __ralloc.v0[103]::Taylor1{_S}
    tmp1705 = __ralloc.v0[104]::Taylor1{_S}
    tmp1707 = __ralloc.v0[105]::Taylor1{_S}
    tmp1708 = __ralloc.v0[106]::Taylor1{_S}
    tmp1710 = __ralloc.v0[107]::Taylor1{_S}
    tmp1711 = __ralloc.v0[108]::Taylor1{_S}
    tmp1713 = __ralloc.v0[109]::Taylor1{_S}
    tmp1714 = __ralloc.v0[110]::Taylor1{_S}
    tmp1715 = __ralloc.v0[111]::Taylor1{_S}
    tmp1716 = __ralloc.v0[112]::Taylor1{_S}
    tmp1718 = __ralloc.v0[113]::Taylor1{_S}
    tmp1719 = __ralloc.v0[114]::Taylor1{_S}
    tmp1720 = __ralloc.v0[115]::Taylor1{_S}
    tmp1721 = __ralloc.v0[116]::Taylor1{_S}
    tmp1723 = __ralloc.v0[117]::Taylor1{_S}
    tmp1724 = __ralloc.v0[118]::Taylor1{_S}
    tmp1725 = __ralloc.v0[119]::Taylor1{_S}
    tmp1726 = __ralloc.v0[120]::Taylor1{_S}
    tmp1731 = __ralloc.v0[121]::Taylor1{_S}
    tmp1732 = __ralloc.v0[122]::Taylor1{_S}
    tmp1733 = __ralloc.v0[123]::Taylor1{_S}
    tmp1734 = __ralloc.v0[124]::Taylor1{_S}
    tmp1736 = __ralloc.v0[125]::Taylor1{_S}
    tmp1737 = __ralloc.v0[126]::Taylor1{_S}
    tmp1738 = __ralloc.v0[127]::Taylor1{_S}
    tmp1739 = __ralloc.v0[128]::Taylor1{_S}
    tmp1741 = __ralloc.v0[129]::Taylor1{_S}
    tmp1742 = __ralloc.v0[130]::Taylor1{_S}
    tmp1743 = __ralloc.v0[131]::Taylor1{_S}
    tmp1744 = __ralloc.v0[132]::Taylor1{_S}
    tmp1746 = __ralloc.v0[133]::Taylor1{_S}
    tmp1747 = __ralloc.v0[134]::Taylor1{_S}
    tmp1748 = __ralloc.v0[135]::Taylor1{_S}
    tmp1749 = __ralloc.v0[136]::Taylor1{_S}
    tmp1751 = __ralloc.v0[137]::Taylor1{_S}
    tmp1752 = __ralloc.v0[138]::Taylor1{_S}
    tmp1753 = __ralloc.v0[139]::Taylor1{_S}
    tmp1754 = __ralloc.v0[140]::Taylor1{_S}
    tmp1756 = __ralloc.v0[141]::Taylor1{_S}
    tmp1757 = __ralloc.v0[142]::Taylor1{_S}
    tmp1758 = __ralloc.v0[143]::Taylor1{_S}
    tmp1759 = __ralloc.v0[144]::Taylor1{_S}
    tmp1761 = __ralloc.v0[145]::Taylor1{_S}
    tmp1762 = __ralloc.v0[146]::Taylor1{_S}
    tmp1763 = __ralloc.v0[147]::Taylor1{_S}
    tmp1764 = __ralloc.v0[148]::Taylor1{_S}
    tmp1766 = __ralloc.v0[149]::Taylor1{_S}
    tmp1767 = __ralloc.v0[150]::Taylor1{_S}
    tmp1768 = __ralloc.v0[151]::Taylor1{_S}
    tmp1769 = __ralloc.v0[152]::Taylor1{_S}
    tmp1771 = __ralloc.v0[153]::Taylor1{_S}
    tmp1772 = __ralloc.v0[154]::Taylor1{_S}
    tmp1773 = __ralloc.v0[155]::Taylor1{_S}
    tmp1774 = __ralloc.v0[156]::Taylor1{_S}
    tmp1776 = __ralloc.v0[157]::Taylor1{_S}
    tmp1777 = __ralloc.v0[158]::Taylor1{_S}
    tmp1778 = __ralloc.v0[159]::Taylor1{_S}
    tmp1779 = __ralloc.v0[160]::Taylor1{_S}
    tmp1781 = __ralloc.v0[161]::Taylor1{_S}
    tmp1782 = __ralloc.v0[162]::Taylor1{_S}
    tmp1783 = __ralloc.v0[163]::Taylor1{_S}
    tmp1784 = __ralloc.v0[164]::Taylor1{_S}
    tmp1786 = __ralloc.v0[165]::Taylor1{_S}
    tmp1787 = __ralloc.v0[166]::Taylor1{_S}
    tmp1788 = __ralloc.v0[167]::Taylor1{_S}
    tmp1789 = __ralloc.v0[168]::Taylor1{_S}
    tmp1791 = __ralloc.v0[169]::Taylor1{_S}
    tmp1792 = __ralloc.v0[170]::Taylor1{_S}
    tmp1794 = __ralloc.v0[171]::Taylor1{_S}
    tmp1795 = __ralloc.v0[172]::Taylor1{_S}
    tmp1797 = __ralloc.v0[173]::Taylor1{_S}
    tmp1798 = __ralloc.v0[174]::Taylor1{_S}
    tmp1800 = __ralloc.v0[175]::Taylor1{_S}
    tmp1801 = __ralloc.v0[176]::Taylor1{_S}
    tmp1803 = __ralloc.v0[177]::Taylor1{_S}
    tmp1804 = __ralloc.v0[178]::Taylor1{_S}
    tmp1806 = __ralloc.v0[179]::Taylor1{_S}
    tmp1807 = __ralloc.v0[180]::Taylor1{_S}
    tmp1809 = __ralloc.v0[181]::Taylor1{_S}
    tmp1810 = __ralloc.v0[182]::Taylor1{_S}
    tmp1812 = __ralloc.v0[183]::Taylor1{_S}
    tmp1813 = __ralloc.v0[184]::Taylor1{_S}
    tmp1815 = __ralloc.v0[185]::Taylor1{_S}
    tmp1816 = __ralloc.v0[186]::Taylor1{_S}
    tmp1818 = __ralloc.v0[187]::Taylor1{_S}
    tmp1819 = __ralloc.v0[188]::Taylor1{_S}
    tmp1821 = __ralloc.v0[189]::Taylor1{_S}
    tmp1822 = __ralloc.v0[190]::Taylor1{_S}
    tmp1824 = __ralloc.v0[191]::Taylor1{_S}
    tmp1825 = __ralloc.v0[192]::Taylor1{_S}
    tmp1829 = __ralloc.v0[193]::Taylor1{_S}
    tmp1830 = __ralloc.v0[194]::Taylor1{_S}
    tmp1835 = __ralloc.v0[195]::Taylor1{_S}
    tmp1837 = __ralloc.v0[196]::Taylor1{_S}
    tmp1838 = __ralloc.v0[197]::Taylor1{_S}
    tmp1839 = __ralloc.v0[198]::Taylor1{_S}
    tmp1840 = __ralloc.v0[199]::Taylor1{_S}
    tmp1842 = __ralloc.v0[200]::Taylor1{_S}
    tmp1843 = __ralloc.v0[201]::Taylor1{_S}
    tmp1845 = __ralloc.v0[202]::Taylor1{_S}
    tmp1846 = __ralloc.v0[203]::Taylor1{_S}
    tmp1847 = __ralloc.v0[204]::Taylor1{_S}
    tmp1848 = __ralloc.v0[205]::Taylor1{_S}
    tmp1850 = __ralloc.v0[206]::Taylor1{_S}
    tmp1851 = __ralloc.v0[207]::Taylor1{_S}
    tmp1853 = __ralloc.v0[208]::Taylor1{_S}
    tmp1854 = __ralloc.v0[209]::Taylor1{_S}
    tmp1855 = __ralloc.v0[210]::Taylor1{_S}
    tmp1856 = __ralloc.v0[211]::Taylor1{_S}
    tmp1858 = __ralloc.v0[212]::Taylor1{_S}
    tmp1859 = __ralloc.v0[213]::Taylor1{_S}
    tmp1861 = __ralloc.v0[214]::Taylor1{_S}
    tmp1862 = __ralloc.v0[215]::Taylor1{_S}
    tmp1863 = __ralloc.v0[216]::Taylor1{_S}
    tmp1864 = __ralloc.v0[217]::Taylor1{_S}
    tmp1866 = __ralloc.v0[218]::Taylor1{_S}
    tmp1867 = __ralloc.v0[219]::Taylor1{_S}
    tmp1868 = __ralloc.v0[220]::Taylor1{_S}
    tmp1869 = __ralloc.v0[221]::Taylor1{_S}
    tmp1871 = __ralloc.v0[222]::Taylor1{_S}
    tmp1872 = __ralloc.v0[223]::Taylor1{_S}
    tmp1873 = __ralloc.v0[224]::Taylor1{_S}
    tmp1874 = __ralloc.v0[225]::Taylor1{_S}
    tmp1876 = __ralloc.v0[226]::Taylor1{_S}
    tmp1877 = __ralloc.v0[227]::Taylor1{_S}
    tmp1878 = __ralloc.v0[228]::Taylor1{_S}
    tmp1879 = __ralloc.v0[229]::Taylor1{_S}
    tmp1881 = __ralloc.v0[230]::Taylor1{_S}
    tmp1882 = __ralloc.v0[231]::Taylor1{_S}
    tmp1883 = __ralloc.v0[232]::Taylor1{_S}
    tmp1884 = __ralloc.v0[233]::Taylor1{_S}
    tmp1886 = __ralloc.v0[234]::Taylor1{_S}
    tmp1888 = __ralloc.v0[235]::Taylor1{_S}
    tmp1889 = __ralloc.v0[236]::Taylor1{_S}
    tmp1890 = __ralloc.v0[237]::Taylor1{_S}
    tmp1892 = __ralloc.v0[238]::Taylor1{_S}
    tmp1893 = __ralloc.v0[239]::Taylor1{_S}
    tmp1894 = __ralloc.v0[240]::Taylor1{_S}
    tmp1896 = __ralloc.v0[241]::Taylor1{_S}
    tmp1897 = __ralloc.v0[242]::Taylor1{_S}
    tmp1898 = __ralloc.v0[243]::Taylor1{_S}
    tmp1903 = __ralloc.v0[244]::Taylor1{_S}
    tmp1904 = __ralloc.v0[245]::Taylor1{_S}
    tmp1906 = __ralloc.v0[246]::Taylor1{_S}
    tmp1907 = __ralloc.v0[247]::Taylor1{_S}
    tmp1909 = __ralloc.v0[248]::Taylor1{_S}
    tmp1910 = __ralloc.v0[249]::Taylor1{_S}
    tmp1915 = __ralloc.v0[250]::Taylor1{_S}
    tmp1916 = __ralloc.v0[251]::Taylor1{_S}
    tmp1917 = __ralloc.v0[252]::Taylor1{_S}
    tmp1918 = __ralloc.v0[253]::Taylor1{_S}
    tmp1919 = __ralloc.v0[254]::Taylor1{_S}
    tmp1920 = __ralloc.v0[255]::Taylor1{_S}
    tmp1922 = __ralloc.v0[256]::Taylor1{_S}
    tmp1923 = __ralloc.v0[257]::Taylor1{_S}
    tmp1924 = __ralloc.v0[258]::Taylor1{_S}
    tmp1925 = __ralloc.v0[259]::Taylor1{_S}
    tmp1927 = __ralloc.v0[260]::Taylor1{_S}
    tmp1928 = __ralloc.v0[261]::Taylor1{_S}
    tmp1930 = __ralloc.v0[262]::Taylor1{_S}
    tmp1931 = __ralloc.v0[263]::Taylor1{_S}
    tmp1932 = __ralloc.v0[264]::Taylor1{_S}
    tmp1933 = __ralloc.v0[265]::Taylor1{_S}
    tmp1935 = __ralloc.v0[266]::Taylor1{_S}
    tmp1936 = __ralloc.v0[267]::Taylor1{_S}
    tmp1937 = __ralloc.v0[268]::Taylor1{_S}
    tmp1938 = __ralloc.v0[269]::Taylor1{_S}
    tmp1940 = __ralloc.v0[270]::Taylor1{_S}
    tmp1941 = __ralloc.v0[271]::Taylor1{_S}
    tmp1942 = __ralloc.v0[272]::Taylor1{_S}
    tmp1943 = __ralloc.v0[273]::Taylor1{_S}
    tmp1945 = __ralloc.v0[274]::Taylor1{_S}
    tmp1946 = __ralloc.v0[275]::Taylor1{_S}
    tmp1948 = __ralloc.v0[276]::Taylor1{_S}
    tmp1949 = __ralloc.v0[277]::Taylor1{_S}
    ϕ_m = __ralloc.v0[278]::Taylor1{_S}
    θ_m = __ralloc.v0[279]::Taylor1{_S}
    ψ_m = __ralloc.v0[280]::Taylor1{_S}
    tmp1954 = __ralloc.v0[281]::Taylor1{_S}
    tmp1955 = __ralloc.v0[282]::Taylor1{_S}
    tmp1956 = __ralloc.v0[283]::Taylor1{_S}
    tmp1957 = __ralloc.v0[284]::Taylor1{_S}
    tmp1958 = __ralloc.v0[285]::Taylor1{_S}
    tmp1959 = __ralloc.v0[286]::Taylor1{_S}
    tmp1960 = __ralloc.v0[287]::Taylor1{_S}
    tmp1961 = __ralloc.v0[288]::Taylor1{_S}
    tmp1962 = __ralloc.v0[289]::Taylor1{_S}
    tmp1963 = __ralloc.v0[290]::Taylor1{_S}
    tmp1964 = __ralloc.v0[291]::Taylor1{_S}
    tmp1965 = __ralloc.v0[292]::Taylor1{_S}
    tmp1966 = __ralloc.v0[293]::Taylor1{_S}
    tmp1967 = __ralloc.v0[294]::Taylor1{_S}
    tmp1968 = __ralloc.v0[295]::Taylor1{_S}
    tmp1969 = __ralloc.v0[296]::Taylor1{_S}
    tmp1970 = __ralloc.v0[297]::Taylor1{_S}
    tmp1971 = __ralloc.v0[298]::Taylor1{_S}
    tmp1972 = __ralloc.v0[299]::Taylor1{_S}
    tmp1973 = __ralloc.v0[300]::Taylor1{_S}
    tmp1974 = __ralloc.v0[301]::Taylor1{_S}
    tmp1975 = __ralloc.v0[302]::Taylor1{_S}
    tmp1976 = __ralloc.v0[303]::Taylor1{_S}
    tmp1977 = __ralloc.v0[304]::Taylor1{_S}
    tmp1978 = __ralloc.v0[305]::Taylor1{_S}
    tmp1979 = __ralloc.v0[306]::Taylor1{_S}
    tmp1980 = __ralloc.v0[307]::Taylor1{_S}
    tmp1981 = __ralloc.v0[308]::Taylor1{_S}
    tmp1982 = __ralloc.v0[309]::Taylor1{_S}
    ϕ_c = __ralloc.v0[310]::Taylor1{_S}
    tmp1983 = __ralloc.v0[311]::Taylor1{_S}
    tmp1984 = __ralloc.v0[312]::Taylor1{_S}
    tmp1985 = __ralloc.v0[313]::Taylor1{_S}
    tmp1986 = __ralloc.v0[314]::Taylor1{_S}
    tmp1987 = __ralloc.v0[315]::Taylor1{_S}
    tmp1988 = __ralloc.v0[316]::Taylor1{_S}
    tmp1989 = __ralloc.v0[317]::Taylor1{_S}
    tmp1990 = __ralloc.v0[318]::Taylor1{_S}
    tmp1991 = __ralloc.v0[319]::Taylor1{_S}
    tmp1992 = __ralloc.v0[320]::Taylor1{_S}
    tmp1993 = __ralloc.v0[321]::Taylor1{_S}
    tmp1994 = __ralloc.v0[322]::Taylor1{_S}
    ω_c_CE_1 = __ralloc.v0[323]::Taylor1{_S}
    ω_c_CE_2 = __ralloc.v0[324]::Taylor1{_S}
    ω_c_CE_3 = __ralloc.v0[325]::Taylor1{_S}
    J2M_t = __ralloc.v0[326]::Taylor1{_S}
    C22M_t = __ralloc.v0[327]::Taylor1{_S}
    C21M_t = __ralloc.v0[328]::Taylor1{_S}
    S21M_t = __ralloc.v0[329]::Taylor1{_S}
    S22M_t = __ralloc.v0[330]::Taylor1{_S}
    Iω_x = __ralloc.v0[331]::Taylor1{_S}
    Iω_y = __ralloc.v0[332]::Taylor1{_S}
    Iω_z = __ralloc.v0[333]::Taylor1{_S}
    ωxIω_x = __ralloc.v0[334]::Taylor1{_S}
    ωxIω_y = __ralloc.v0[335]::Taylor1{_S}
    ωxIω_z = __ralloc.v0[336]::Taylor1{_S}
    dIω_x = __ralloc.v0[337]::Taylor1{_S}
    dIω_y = __ralloc.v0[338]::Taylor1{_S}
    dIω_z = __ralloc.v0[339]::Taylor1{_S}
    er_EM_I_1 = __ralloc.v0[340]::Taylor1{_S}
    er_EM_I_2 = __ralloc.v0[341]::Taylor1{_S}
    er_EM_I_3 = __ralloc.v0[342]::Taylor1{_S}
    p_E_I_1 = __ralloc.v0[343]::Taylor1{_S}
    p_E_I_2 = __ralloc.v0[344]::Taylor1{_S}
    p_E_I_3 = __ralloc.v0[345]::Taylor1{_S}
    er_EM_1 = __ralloc.v0[346]::Taylor1{_S}
    er_EM_2 = __ralloc.v0[347]::Taylor1{_S}
    er_EM_3 = __ralloc.v0[348]::Taylor1{_S}
    p_E_1 = __ralloc.v0[349]::Taylor1{_S}
    p_E_2 = __ralloc.v0[350]::Taylor1{_S}
    p_E_3 = __ralloc.v0[351]::Taylor1{_S}
    I_er_EM_1 = __ralloc.v0[352]::Taylor1{_S}
    I_er_EM_2 = __ralloc.v0[353]::Taylor1{_S}
    I_er_EM_3 = __ralloc.v0[354]::Taylor1{_S}
    I_p_E_1 = __ralloc.v0[355]::Taylor1{_S}
    I_p_E_2 = __ralloc.v0[356]::Taylor1{_S}
    I_p_E_3 = __ralloc.v0[357]::Taylor1{_S}
    er_EM_cross_I_er_EM_1 = __ralloc.v0[358]::Taylor1{_S}
    er_EM_cross_I_er_EM_2 = __ralloc.v0[359]::Taylor1{_S}
    er_EM_cross_I_er_EM_3 = __ralloc.v0[360]::Taylor1{_S}
    er_EM_cross_I_p_E_1 = __ralloc.v0[361]::Taylor1{_S}
    er_EM_cross_I_p_E_2 = __ralloc.v0[362]::Taylor1{_S}
    er_EM_cross_I_p_E_3 = __ralloc.v0[363]::Taylor1{_S}
    p_E_cross_I_er_EM_1 = __ralloc.v0[364]::Taylor1{_S}
    p_E_cross_I_er_EM_2 = __ralloc.v0[365]::Taylor1{_S}
    p_E_cross_I_er_EM_3 = __ralloc.v0[366]::Taylor1{_S}
    p_E_cross_I_p_E_1 = __ralloc.v0[367]::Taylor1{_S}
    p_E_cross_I_p_E_2 = __ralloc.v0[368]::Taylor1{_S}
    p_E_cross_I_p_E_3 = __ralloc.v0[369]::Taylor1{_S}
    one_minus_7sin2ϕEM = __ralloc.v0[370]::Taylor1{_S}
    two_sinϕEM = __ralloc.v0[371]::Taylor1{_S}
    N_MfigM_figE_factor_div_rEMp5 = __ralloc.v0[372]::Taylor1{_S}
    N_MfigM_figE_1 = __ralloc.v0[373]::Taylor1{_S}
    N_MfigM_figE_2 = __ralloc.v0[374]::Taylor1{_S}
    N_MfigM_figE_3 = __ralloc.v0[375]::Taylor1{_S}
    N_1_LMF = __ralloc.v0[376]::Taylor1{_S}
    N_2_LMF = __ralloc.v0[377]::Taylor1{_S}
    N_3_LMF = __ralloc.v0[378]::Taylor1{_S}
    N_cmb_1 = __ralloc.v0[379]::Taylor1{_S}
    N_cmb_2 = __ralloc.v0[380]::Taylor1{_S}
    N_cmb_3 = __ralloc.v0[381]::Taylor1{_S}
    I_dω_1 = __ralloc.v0[382]::Taylor1{_S}
    I_dω_2 = __ralloc.v0[383]::Taylor1{_S}
    I_dω_3 = __ralloc.v0[384]::Taylor1{_S}
    Ic_ωc_1 = __ralloc.v0[385]::Taylor1{_S}
    Ic_ωc_2 = __ralloc.v0[386]::Taylor1{_S}
    Ic_ωc_3 = __ralloc.v0[387]::Taylor1{_S}
    m_ωm_x_Icωc_1 = __ralloc.v0[388]::Taylor1{_S}
    m_ωm_x_Icωc_2 = __ralloc.v0[389]::Taylor1{_S}
    m_ωm_x_Icωc_3 = __ralloc.v0[390]::Taylor1{_S}
    Ic_dωc_1 = __ralloc.v0[391]::Taylor1{_S}
    Ic_dωc_2 = __ralloc.v0[392]::Taylor1{_S}
    Ic_dωc_3 = __ralloc.v0[393]::Taylor1{_S}
    tmp1995 = __ralloc.v0[394]::Taylor1{_S}
    tmp1996 = __ralloc.v0[395]::Taylor1{_S}
    tmp1997 = __ralloc.v0[396]::Taylor1{_S}
    tmp1998 = __ralloc.v0[397]::Taylor1{_S}
    tmp1999 = __ralloc.v0[398]::Taylor1{_S}
    tmp2000 = __ralloc.v0[399]::Taylor1{_S}
    tmp2001 = __ralloc.v0[400]::Taylor1{_S}
    tmp2002 = __ralloc.v0[401]::Taylor1{_S}
    newtonX = __ralloc.v1[1]::Vector{Taylor1{_S}}
    newtonY = __ralloc.v1[2]::Vector{Taylor1{_S}}
    newtonZ = __ralloc.v1[3]::Vector{Taylor1{_S}}
    newtonianNb_Potential = __ralloc.v1[4]::Vector{Taylor1{_S}}
    v2 = __ralloc.v1[5]::Vector{Taylor1{_S}}
    pntempX = __ralloc.v1[6]::Vector{Taylor1{_S}}
    pntempY = __ralloc.v1[7]::Vector{Taylor1{_S}}
    pntempZ = __ralloc.v1[8]::Vector{Taylor1{_S}}
    postNewtonX = __ralloc.v1[9]::Vector{Taylor1{_S}}
    postNewtonY = __ralloc.v1[10]::Vector{Taylor1{_S}}
    postNewtonZ = __ralloc.v1[11]::Vector{Taylor1{_S}}
    accX = __ralloc.v1[12]::Vector{Taylor1{_S}}
    accY = __ralloc.v1[13]::Vector{Taylor1{_S}}
    accZ = __ralloc.v1[14]::Vector{Taylor1{_S}}
    N_MfigM_pmA_x = __ralloc.v1[15]::Vector{Taylor1{_S}}
    N_MfigM_pmA_y = __ralloc.v1[16]::Vector{Taylor1{_S}}
    N_MfigM_pmA_z = __ralloc.v1[17]::Vector{Taylor1{_S}}
    temp_N_M_x = __ralloc.v1[18]::Vector{Taylor1{_S}}
    temp_N_M_y = __ralloc.v1[19]::Vector{Taylor1{_S}}
    temp_N_M_z = __ralloc.v1[20]::Vector{Taylor1{_S}}
    N_MfigM = __ralloc.v1[21]::Vector{Taylor1{_S}}
    J2_t = __ralloc.v1[22]::Vector{Taylor1{_S}}
    tmp1326 = __ralloc.v1[23]::Vector{Taylor1{_S}}
    tmp1328 = __ralloc.v1[24]::Vector{Taylor1{_S}}
    tmp1331 = __ralloc.v1[25]::Vector{Taylor1{_S}}
    tmp1333 = __ralloc.v1[26]::Vector{Taylor1{_S}}
    tmp1336 = __ralloc.v1[27]::Vector{Taylor1{_S}}
    tmp1338 = __ralloc.v1[28]::Vector{Taylor1{_S}}
    tmp1382 = __ralloc.v1[29]::Vector{Taylor1{_S}}
    tmp1384 = __ralloc.v1[30]::Vector{Taylor1{_S}}
    tmp1385 = __ralloc.v1[31]::Vector{Taylor1{_S}}
    tmp1387 = __ralloc.v1[32]::Vector{Taylor1{_S}}
    tmp1632 = __ralloc.v1[33]::Vector{Taylor1{_S}}
    tmp1634 = __ralloc.v1[34]::Vector{Taylor1{_S}}
    tmp1636 = __ralloc.v1[35]::Vector{Taylor1{_S}}
    X = __ralloc.v2[1]::Array{Taylor1{_S}, 2}
    Y = __ralloc.v2[2]::Array{Taylor1{_S}, 2}
    Z = __ralloc.v2[3]::Array{Taylor1{_S}, 2}
    r_p2 = __ralloc.v2[4]::Array{Taylor1{_S}, 2}
    r_p1d2 = __ralloc.v2[5]::Array{Taylor1{_S}, 2}
    r_p3d2 = __ralloc.v2[6]::Array{Taylor1{_S}, 2}
    r_p7d2 = __ralloc.v2[7]::Array{Taylor1{_S}, 2}
    newtonianCoeff = __ralloc.v2[8]::Array{Taylor1{_S}, 2}
    U = __ralloc.v2[9]::Array{Taylor1{_S}, 2}
    V = __ralloc.v2[10]::Array{Taylor1{_S}, 2}
    W = __ralloc.v2[11]::Array{Taylor1{_S}, 2}
    _4U_m_3X = __ralloc.v2[12]::Array{Taylor1{_S}, 2}
    _4V_m_3Y = __ralloc.v2[13]::Array{Taylor1{_S}, 2}
    _4W_m_3Z = __ralloc.v2[14]::Array{Taylor1{_S}, 2}
    UU = __ralloc.v2[15]::Array{Taylor1{_S}, 2}
    VV = __ralloc.v2[16]::Array{Taylor1{_S}, 2}
    WW = __ralloc.v2[17]::Array{Taylor1{_S}, 2}
    newtonian1b_Potential = __ralloc.v2[18]::Array{Taylor1{_S}, 2}
    newton_acc_X = __ralloc.v2[19]::Array{Taylor1{_S}, 2}
    newton_acc_Y = __ralloc.v2[20]::Array{Taylor1{_S}, 2}
    newton_acc_Z = __ralloc.v2[21]::Array{Taylor1{_S}, 2}
    _2v2 = __ralloc.v2[22]::Array{Taylor1{_S}, 2}
    vi_dot_vj = __ralloc.v2[23]::Array{Taylor1{_S}, 2}
    pn2 = __ralloc.v2[24]::Array{Taylor1{_S}, 2}
    U_t_pn2 = __ralloc.v2[25]::Array{Taylor1{_S}, 2}
    V_t_pn2 = __ralloc.v2[26]::Array{Taylor1{_S}, 2}
    W_t_pn2 = __ralloc.v2[27]::Array{Taylor1{_S}, 2}
    pn3 = __ralloc.v2[28]::Array{Taylor1{_S}, 2}
    pNX_t_pn3 = __ralloc.v2[29]::Array{Taylor1{_S}, 2}
    pNY_t_pn3 = __ralloc.v2[30]::Array{Taylor1{_S}, 2}
    pNZ_t_pn3 = __ralloc.v2[31]::Array{Taylor1{_S}, 2}
    _4ϕj = __ralloc.v2[32]::Array{Taylor1{_S}, 2}
    ϕi_plus_4ϕj = __ralloc.v2[33]::Array{Taylor1{_S}, 2}
    sj2_plus_2si2 = __ralloc.v2[34]::Array{Taylor1{_S}, 2}
    sj2_plus_2si2_minus_4vivj = __ralloc.v2[35]::Array{Taylor1{_S}, 2}
    ϕs_and_vs = __ralloc.v2[36]::Array{Taylor1{_S}, 2}
    pn1t1_7 = __ralloc.v2[37]::Array{Taylor1{_S}, 2}
    pNX_t_X = __ralloc.v2[38]::Array{Taylor1{_S}, 2}
    pNY_t_Y = __ralloc.v2[39]::Array{Taylor1{_S}, 2}
    pNZ_t_Z = __ralloc.v2[40]::Array{Taylor1{_S}, 2}
    pn1 = __ralloc.v2[41]::Array{Taylor1{_S}, 2}
    X_t_pn1 = __ralloc.v2[42]::Array{Taylor1{_S}, 2}
    Y_t_pn1 = __ralloc.v2[43]::Array{Taylor1{_S}, 2}
    Z_t_pn1 = __ralloc.v2[44]::Array{Taylor1{_S}, 2}
    X_bf_1 = __ralloc.v2[45]::Array{Taylor1{_S}, 2}
    Y_bf_1 = __ralloc.v2[46]::Array{Taylor1{_S}, 2}
    Z_bf_1 = __ralloc.v2[47]::Array{Taylor1{_S}, 2}
    X_bf_2 = __ralloc.v2[48]::Array{Taylor1{_S}, 2}
    Y_bf_2 = __ralloc.v2[49]::Array{Taylor1{_S}, 2}
    Z_bf_2 = __ralloc.v2[50]::Array{Taylor1{_S}, 2}
    X_bf_3 = __ralloc.v2[51]::Array{Taylor1{_S}, 2}
    Y_bf_3 = __ralloc.v2[52]::Array{Taylor1{_S}, 2}
    Z_bf_3 = __ralloc.v2[53]::Array{Taylor1{_S}, 2}
    X_bf = __ralloc.v2[54]::Array{Taylor1{_S}, 2}
    Y_bf = __ralloc.v2[55]::Array{Taylor1{_S}, 2}
    Z_bf = __ralloc.v2[56]::Array{Taylor1{_S}, 2}
    F_JCS_x = __ralloc.v2[57]::Array{Taylor1{_S}, 2}
    F_JCS_y = __ralloc.v2[58]::Array{Taylor1{_S}, 2}
    F_JCS_z = __ralloc.v2[59]::Array{Taylor1{_S}, 2}
    temp_accX_j = __ralloc.v2[60]::Array{Taylor1{_S}, 2}
    temp_accY_j = __ralloc.v2[61]::Array{Taylor1{_S}, 2}
    temp_accZ_j = __ralloc.v2[62]::Array{Taylor1{_S}, 2}
    temp_accX_i = __ralloc.v2[63]::Array{Taylor1{_S}, 2}
    temp_accY_i = __ralloc.v2[64]::Array{Taylor1{_S}, 2}
    temp_accZ_i = __ralloc.v2[65]::Array{Taylor1{_S}, 2}
    sin_ϕ = __ralloc.v2[66]::Array{Taylor1{_S}, 2}
    cos_ϕ = __ralloc.v2[67]::Array{Taylor1{_S}, 2}
    sin_λ = __ralloc.v2[68]::Array{Taylor1{_S}, 2}
    cos_λ = __ralloc.v2[69]::Array{Taylor1{_S}, 2}
    r_xy = __ralloc.v2[70]::Array{Taylor1{_S}, 2}
    r_p4 = __ralloc.v2[71]::Array{Taylor1{_S}, 2}
    F_CS_ξ_36 = __ralloc.v2[72]::Array{Taylor1{_S}, 2}
    F_CS_η_36 = __ralloc.v2[73]::Array{Taylor1{_S}, 2}
    F_CS_ζ_36 = __ralloc.v2[74]::Array{Taylor1{_S}, 2}
    F_J_ξ_36 = __ralloc.v2[75]::Array{Taylor1{_S}, 2}
    F_J_ζ_36 = __ralloc.v2[76]::Array{Taylor1{_S}, 2}
    F_J_ξ = __ralloc.v2[77]::Array{Taylor1{_S}, 2}
    F_J_ζ = __ralloc.v2[78]::Array{Taylor1{_S}, 2}
    F_CS_ξ = __ralloc.v2[79]::Array{Taylor1{_S}, 2}
    F_CS_η = __ralloc.v2[80]::Array{Taylor1{_S}, 2}
    F_CS_ζ = __ralloc.v2[81]::Array{Taylor1{_S}, 2}
    F_JCS_ξ = __ralloc.v2[82]::Array{Taylor1{_S}, 2}
    F_JCS_η = __ralloc.v2[83]::Array{Taylor1{_S}, 2}
    F_JCS_ζ = __ralloc.v2[84]::Array{Taylor1{_S}, 2}
    mantlef2coref = __ralloc.v2[85]::Array{Taylor1{_S}, 2}
    pn2x = __ralloc.v2[86]::Array{Taylor1{_S}, 2}
    pn2y = __ralloc.v2[87]::Array{Taylor1{_S}, 2}
    pn2z = __ralloc.v2[88]::Array{Taylor1{_S}, 2}
    tmp1346 = __ralloc.v2[89]::Array{Taylor1{_S}, 2}
    tmp1349 = __ralloc.v2[90]::Array{Taylor1{_S}, 2}
    tmp1351 = __ralloc.v2[91]::Array{Taylor1{_S}, 2}
    tmp1352 = __ralloc.v2[92]::Array{Taylor1{_S}, 2}
    tmp1354 = __ralloc.v2[93]::Array{Taylor1{_S}, 2}
    tmp1362 = __ralloc.v2[94]::Array{Taylor1{_S}, 2}
    tmp1363 = __ralloc.v2[95]::Array{Taylor1{_S}, 2}
    tmp1374 = __ralloc.v2[96]::Array{Taylor1{_S}, 2}
    temp_001 = __ralloc.v2[97]::Array{Taylor1{_S}, 2}
    tmp1376 = __ralloc.v2[98]::Array{Taylor1{_S}, 2}
    temp_002 = __ralloc.v2[99]::Array{Taylor1{_S}, 2}
    tmp1378 = __ralloc.v2[100]::Array{Taylor1{_S}, 2}
    temp_003 = __ralloc.v2[101]::Array{Taylor1{_S}, 2}
    temp_004 = __ralloc.v2[102]::Array{Taylor1{_S}, 2}
    tmp1415 = __ralloc.v2[103]::Array{Taylor1{_S}, 2}
    tmp1417 = __ralloc.v2[104]::Array{Taylor1{_S}, 2}
    tmp1419 = __ralloc.v2[105]::Array{Taylor1{_S}, 2}
    tmp1423 = __ralloc.v2[106]::Array{Taylor1{_S}, 2}
    tmp1425 = __ralloc.v2[107]::Array{Taylor1{_S}, 2}
    tmp1426 = __ralloc.v2[108]::Array{Taylor1{_S}, 2}
    tmp1532 = __ralloc.v2[109]::Array{Taylor1{_S}, 2}
    tmp1533 = __ralloc.v2[110]::Array{Taylor1{_S}, 2}
    tmp1536 = __ralloc.v2[111]::Array{Taylor1{_S}, 2}
    tmp1537 = __ralloc.v2[112]::Array{Taylor1{_S}, 2}
    tmp1543 = __ralloc.v2[113]::Array{Taylor1{_S}, 2}
    tmp1546 = __ralloc.v2[114]::Array{Taylor1{_S}, 2}
    tmp1608 = __ralloc.v2[115]::Array{Taylor1{_S}, 2}
    tmp1610 = __ralloc.v2[116]::Array{Taylor1{_S}, 2}
    tmp1612 = __ralloc.v2[117]::Array{Taylor1{_S}, 2}
    tmp1614 = __ralloc.v2[118]::Array{Taylor1{_S}, 2}
    tmp1616 = __ralloc.v2[119]::Array{Taylor1{_S}, 2}
    tmp1618 = __ralloc.v2[120]::Array{Taylor1{_S}, 2}
    tmp1620 = __ralloc.v2[121]::Array{Taylor1{_S}, 2}
    tmp1621 = __ralloc.v2[122]::Array{Taylor1{_S}, 2}
    tmp1622 = __ralloc.v2[123]::Array{Taylor1{_S}, 2}
    tmp1624 = __ralloc.v2[124]::Array{Taylor1{_S}, 2}
    tmp1625 = __ralloc.v2[125]::Array{Taylor1{_S}, 2}
    tmp1626 = __ralloc.v2[126]::Array{Taylor1{_S}, 2}
    tmp1628 = __ralloc.v2[127]::Array{Taylor1{_S}, 2}
    tmp1629 = __ralloc.v2[128]::Array{Taylor1{_S}, 2}
    tmp1630 = __ralloc.v2[129]::Array{Taylor1{_S}, 2}
    tmp1645 = __ralloc.v2[130]::Array{Taylor1{_S}, 2}
    Xij_t_Ui = __ralloc.v2[131]::Array{Taylor1{_S}, 2}
    Yij_t_Vi = __ralloc.v2[132]::Array{Taylor1{_S}, 2}
    Zij_t_Wi = __ralloc.v2[133]::Array{Taylor1{_S}, 2}
    tmp1651 = __ralloc.v2[134]::Array{Taylor1{_S}, 2}
    Rij_dot_Vi = __ralloc.v2[135]::Array{Taylor1{_S}, 2}
    tmp1654 = __ralloc.v2[136]::Array{Taylor1{_S}, 2}
    pn1t7 = __ralloc.v2[137]::Array{Taylor1{_S}, 2}
    tmp1657 = __ralloc.v2[138]::Array{Taylor1{_S}, 2}
    pn1t2_7 = __ralloc.v2[139]::Array{Taylor1{_S}, 2}
    tmp1664 = __ralloc.v2[140]::Array{Taylor1{_S}, 2}
    tmp1665 = __ralloc.v2[141]::Array{Taylor1{_S}, 2}
    tmp1666 = __ralloc.v2[142]::Array{Taylor1{_S}, 2}
    tmp1674 = __ralloc.v2[143]::Array{Taylor1{_S}, 2}
    termpnx = __ralloc.v2[144]::Array{Taylor1{_S}, 2}
    sumpnx = __ralloc.v2[145]::Array{Taylor1{_S}, 2}
    tmp1677 = __ralloc.v2[146]::Array{Taylor1{_S}, 2}
    termpny = __ralloc.v2[147]::Array{Taylor1{_S}, 2}
    sumpny = __ralloc.v2[148]::Array{Taylor1{_S}, 2}
    tmp1680 = __ralloc.v2[149]::Array{Taylor1{_S}, 2}
    termpnz = __ralloc.v2[150]::Array{Taylor1{_S}, 2}
    sumpnz = __ralloc.v2[151]::Array{Taylor1{_S}, 2}
    P_n = __ralloc.v3[1]::Array{Taylor1{_S}, 3}
    dP_n = __ralloc.v3[2]::Array{Taylor1{_S}, 3}
    temp_fjξ = __ralloc.v3[3]::Array{Taylor1{_S}, 3}
    temp_fjζ = __ralloc.v3[4]::Array{Taylor1{_S}, 3}
    temp_rn = __ralloc.v3[5]::Array{Taylor1{_S}, 3}
    sin_mλ = __ralloc.v3[6]::Array{Taylor1{_S}, 3}
    cos_mλ = __ralloc.v3[7]::Array{Taylor1{_S}, 3}
    RotM = __ralloc.v3[8]::Array{Taylor1{_S}, 3}
    tmp1431 = __ralloc.v3[9]::Array{Taylor1{_S}, 3}
    tmp1432 = __ralloc.v3[10]::Array{Taylor1{_S}, 3}
    tmp1433 = __ralloc.v3[11]::Array{Taylor1{_S}, 3}
    tmp1435 = __ralloc.v3[12]::Array{Taylor1{_S}, 3}
    tmp1436 = __ralloc.v3[13]::Array{Taylor1{_S}, 3}
    tmp1441 = __ralloc.v3[14]::Array{Taylor1{_S}, 3}
    tmp1442 = __ralloc.v3[15]::Array{Taylor1{_S}, 3}
    tmp1444 = __ralloc.v3[16]::Array{Taylor1{_S}, 3}
    tmp1445 = __ralloc.v3[17]::Array{Taylor1{_S}, 3}
    tmp1446 = __ralloc.v3[18]::Array{Taylor1{_S}, 3}
    tmp1448 = __ralloc.v3[19]::Array{Taylor1{_S}, 3}
    tmp1449 = __ralloc.v3[20]::Array{Taylor1{_S}, 3}
    tmp1450 = __ralloc.v3[21]::Array{Taylor1{_S}, 3}
    tmp1452 = __ralloc.v3[22]::Array{Taylor1{_S}, 3}
    tmp1453 = __ralloc.v3[23]::Array{Taylor1{_S}, 3}
    tmp1454 = __ralloc.v3[24]::Array{Taylor1{_S}, 3}
    tmp1455 = __ralloc.v3[25]::Array{Taylor1{_S}, 3}
    tmp1458 = __ralloc.v3[26]::Array{Taylor1{_S}, 3}
    tmp1459 = __ralloc.v3[27]::Array{Taylor1{_S}, 3}
    tmp1461 = __ralloc.v3[28]::Array{Taylor1{_S}, 3}
    tmp1462 = __ralloc.v3[29]::Array{Taylor1{_S}, 3}
    tmp1481 = __ralloc.v3[30]::Array{Taylor1{_S}, 3}
    tmp1482 = __ralloc.v3[31]::Array{Taylor1{_S}, 3}
    tmp1483 = __ralloc.v3[32]::Array{Taylor1{_S}, 3}
    tmp1486 = __ralloc.v3[33]::Array{Taylor1{_S}, 3}
    tmp1487 = __ralloc.v3[34]::Array{Taylor1{_S}, 3}
    tmp1488 = __ralloc.v3[35]::Array{Taylor1{_S}, 3}
    tmp1493 = __ralloc.v3[36]::Array{Taylor1{_S}, 3}
    tmp1494 = __ralloc.v3[37]::Array{Taylor1{_S}, 3}
    tmp1495 = __ralloc.v3[38]::Array{Taylor1{_S}, 3}
    tmp1498 = __ralloc.v3[39]::Array{Taylor1{_S}, 3}
    tmp1499 = __ralloc.v3[40]::Array{Taylor1{_S}, 3}
    tmp1500 = __ralloc.v3[41]::Array{Taylor1{_S}, 3}
    tmp1504 = __ralloc.v3[42]::Array{Taylor1{_S}, 3}
    tmp1505 = __ralloc.v3[43]::Array{Taylor1{_S}, 3}
    tmp1506 = __ralloc.v3[44]::Array{Taylor1{_S}, 3}
    tmp1508 = __ralloc.v3[45]::Array{Taylor1{_S}, 3}
    tmp1509 = __ralloc.v3[46]::Array{Taylor1{_S}, 3}
    tmp1510 = __ralloc.v3[47]::Array{Taylor1{_S}, 3}
    temp_CS_ξ = __ralloc.v4[1]::Array{Taylor1{_S}, 4}
    temp_CS_η = __ralloc.v4[2]::Array{Taylor1{_S}, 4}
    temp_CS_ζ = __ralloc.v4[3]::Array{Taylor1{_S}, 4}
    Cnm_cosmλ = __ralloc.v4[4]::Array{Taylor1{_S}, 4}
    Cnm_sinmλ = __ralloc.v4[5]::Array{Taylor1{_S}, 4}
    Snm_cosmλ = __ralloc.v4[6]::Array{Taylor1{_S}, 4}
    Snm_sinmλ = __ralloc.v4[7]::Array{Taylor1{_S}, 4}
    secϕ_P_nm = __ralloc.v4[8]::Array{Taylor1{_S}, 4}
    P_nm = __ralloc.v4[9]::Array{Taylor1{_S}, 4}
    cosϕ_dP_nm = __ralloc.v4[10]::Array{Taylor1{_S}, 4}
    Rb2p = __ralloc.v4[11]::Array{Taylor1{_S}, 4}
    Gc2p = __ralloc.v4[12]::Array{Taylor1{_S}, 4}
    tmp1464 = __ralloc.v4[13]::Array{Taylor1{_S}, 4}
    tmp1467 = __ralloc.v4[14]::Array{Taylor1{_S}, 4}
    tmp1469 = __ralloc.v4[15]::Array{Taylor1{_S}, 4}
    tmp1471 = __ralloc.v4[16]::Array{Taylor1{_S}, 4}
    tmp1472 = __ralloc.v4[17]::Array{Taylor1{_S}, 4}
    tmp1473 = __ralloc.v4[18]::Array{Taylor1{_S}, 4}
    tmp1476 = __ralloc.v4[19]::Array{Taylor1{_S}, 4}
    tmp1477 = __ralloc.v4[20]::Array{Taylor1{_S}, 4}
    tmp1478 = __ralloc.v4[21]::Array{Taylor1{_S}, 4}
    tmp1480 = __ralloc.v4[22]::Array{Taylor1{_S}, 4}
    tmp1484 = __ralloc.v4[23]::Array{Taylor1{_S}, 4}
    tmp1485 = __ralloc.v4[24]::Array{Taylor1{_S}, 4}
    tmp1489 = __ralloc.v4[25]::Array{Taylor1{_S}, 4}
    tmp1490 = __ralloc.v4[26]::Array{Taylor1{_S}, 4}
    tmp1492 = __ralloc.v4[27]::Array{Taylor1{_S}, 4}
    tmp1496 = __ralloc.v4[28]::Array{Taylor1{_S}, 4}
    tmp1497 = __ralloc.v4[29]::Array{Taylor1{_S}, 4}
    tmp1501 = __ralloc.v4[30]::Array{Taylor1{_S}, 4}
    tmp1502 = __ralloc.v4[31]::Array{Taylor1{_S}, 4}
    tmp1507 = __ralloc.v4[32]::Array{Taylor1{_S}, 4}
    tmp1511 = __ralloc.v4[33]::Array{Taylor1{_S}, 4}
    tmp1512 = __ralloc.v4[34]::Array{Taylor1{_S}, 4}
    tmp1518 = __ralloc.v4[35]::Array{Taylor1{_S}, 4}
    tmp1519 = __ralloc.v4[36]::Array{Taylor1{_S}, 4}
    tmp1520 = __ralloc.v4[37]::Array{Taylor1{_S}, 4}
    tmp1521 = __ralloc.v4[38]::Array{Taylor1{_S}, 4}
    tmp1523 = __ralloc.v4[39]::Array{Taylor1{_S}, 4}
    tmp1524 = __ralloc.v4[40]::Array{Taylor1{_S}, 4}
    tmp1525 = __ralloc.v4[41]::Array{Taylor1{_S}, 4}
    tmp1526 = __ralloc.v4[42]::Array{Taylor1{_S}, 4}
    tmp1528 = __ralloc.v4[43]::Array{Taylor1{_S}, 4}
    tmp1529 = __ralloc.v4[44]::Array{Taylor1{_S}, 4}
    tmp1530 = __ralloc.v4[45]::Array{Taylor1{_S}, 4}
    tmp1548 = __ralloc.v4[46]::Array{Taylor1{_S}, 4}
    tmp1549 = __ralloc.v4[47]::Array{Taylor1{_S}, 4}
    tmp1550 = __ralloc.v4[48]::Array{Taylor1{_S}, 4}
    tmp1551 = __ralloc.v4[49]::Array{Taylor1{_S}, 4}
    tmp1553 = __ralloc.v4[50]::Array{Taylor1{_S}, 4}
    tmp1554 = __ralloc.v4[51]::Array{Taylor1{_S}, 4}
    tmp1555 = __ralloc.v4[52]::Array{Taylor1{_S}, 4}
    tmp1556 = __ralloc.v4[53]::Array{Taylor1{_S}, 4}
    tmp1558 = __ralloc.v4[54]::Array{Taylor1{_S}, 4}
    tmp1559 = __ralloc.v4[55]::Array{Taylor1{_S}, 4}
    tmp1560 = __ralloc.v4[56]::Array{Taylor1{_S}, 4}
    tmp1561 = __ralloc.v4[57]::Array{Taylor1{_S}, 4}
    tmp1563 = __ralloc.v4[58]::Array{Taylor1{_S}, 4}
    tmp1564 = __ralloc.v4[59]::Array{Taylor1{_S}, 4}
    tmp1565 = __ralloc.v4[60]::Array{Taylor1{_S}, 4}
    tmp1566 = __ralloc.v4[61]::Array{Taylor1{_S}, 4}
    tmp1568 = __ralloc.v4[62]::Array{Taylor1{_S}, 4}
    tmp1569 = __ralloc.v4[63]::Array{Taylor1{_S}, 4}
    tmp1570 = __ralloc.v4[64]::Array{Taylor1{_S}, 4}
    tmp1571 = __ralloc.v4[65]::Array{Taylor1{_S}, 4}
    tmp1573 = __ralloc.v4[66]::Array{Taylor1{_S}, 4}
    tmp1574 = __ralloc.v4[67]::Array{Taylor1{_S}, 4}
    tmp1575 = __ralloc.v4[68]::Array{Taylor1{_S}, 4}
    tmp1576 = __ralloc.v4[69]::Array{Taylor1{_S}, 4}
    tmp1578 = __ralloc.v4[70]::Array{Taylor1{_S}, 4}
    tmp1579 = __ralloc.v4[71]::Array{Taylor1{_S}, 4}
    tmp1580 = __ralloc.v4[72]::Array{Taylor1{_S}, 4}
    tmp1581 = __ralloc.v4[73]::Array{Taylor1{_S}, 4}
    tmp1583 = __ralloc.v4[74]::Array{Taylor1{_S}, 4}
    tmp1584 = __ralloc.v4[75]::Array{Taylor1{_S}, 4}
    tmp1585 = __ralloc.v4[76]::Array{Taylor1{_S}, 4}
    tmp1586 = __ralloc.v4[77]::Array{Taylor1{_S}, 4}
    tmp1588 = __ralloc.v4[78]::Array{Taylor1{_S}, 4}
    tmp1589 = __ralloc.v4[79]::Array{Taylor1{_S}, 4}
    tmp1590 = __ralloc.v4[80]::Array{Taylor1{_S}, 4}
    tmp1591 = __ralloc.v4[81]::Array{Taylor1{_S}, 4}
    tmp1593 = __ralloc.v4[82]::Array{Taylor1{_S}, 4}
    tmp1594 = __ralloc.v4[83]::Array{Taylor1{_S}, 4}
    tmp1595 = __ralloc.v4[84]::Array{Taylor1{_S}, 4}
    tmp1596 = __ralloc.v4[85]::Array{Taylor1{_S}, 4}
    tmp1598 = __ralloc.v4[86]::Array{Taylor1{_S}, 4}
    tmp1599 = __ralloc.v4[87]::Array{Taylor1{_S}, 4}
    tmp1600 = __ralloc.v4[88]::Array{Taylor1{_S}, 4}
    tmp1601 = __ralloc.v4[89]::Array{Taylor1{_S}, 4}
    tmp1603 = __ralloc.v4[90]::Array{Taylor1{_S}, 4}
    tmp1604 = __ralloc.v4[91]::Array{Taylor1{_S}, 4}
    tmp1605 = __ralloc.v4[92]::Array{Taylor1{_S}, 4}
    tmp1606 = __ralloc.v4[93]::Array{Taylor1{_S}, 4}
    local (N, jd0) = params
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    (N_MfigM[1]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[1]).coeffs[2:order + 1] .= zero((N_MfigM[1]).coeffs[1])
    (N_MfigM[2]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[2]).coeffs[2:order + 1] .= zero((N_MfigM[2]).coeffs[1])
    (N_MfigM[3]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[3]).coeffs[2:order + 1] .= zero((N_MfigM[3]).coeffs[1])
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m.coeffs[1] = identity(constant_term(q[6N + 1]))
    ϕ_m.coeffs[2:order + 1] .= zero(ϕ_m.coeffs[1])
    θ_m.coeffs[1] = identity(constant_term(q[6N + 2]))
    θ_m.coeffs[2:order + 1] .= zero(θ_m.coeffs[1])
    ψ_m.coeffs[1] = identity(constant_term(q[6N + 3]))
    ψ_m.coeffs[2:order + 1] .= zero(ψ_m.coeffs[1])
    tmp1220.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1220.coeffs[2:order + 1] .= zero(tmp1220.coeffs[1])
    tmp1954.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1954.coeffs[2:order + 1] .= zero(tmp1954.coeffs[1])
    tmp1221.coeffs[1] = cos(constant_term(ψ_m))
    tmp1221.coeffs[2:order + 1] .= zero(tmp1221.coeffs[1])
    tmp1955.coeffs[1] = sin(constant_term(ψ_m))
    tmp1955.coeffs[2:order + 1] .= zero(tmp1955.coeffs[1])
    tmp1222.coeffs[1] = constant_term(tmp1220) * constant_term(tmp1221)
    tmp1222.coeffs[2:order + 1] .= zero(tmp1222.coeffs[1])
    tmp1223.coeffs[1] = cos(constant_term(θ_m))
    tmp1223.coeffs[2:order + 1] .= zero(tmp1223.coeffs[1])
    tmp1956.coeffs[1] = sin(constant_term(θ_m))
    tmp1956.coeffs[2:order + 1] .= zero(tmp1956.coeffs[1])
    tmp1224.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1224.coeffs[2:order + 1] .= zero(tmp1224.coeffs[1])
    tmp1957.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1957.coeffs[2:order + 1] .= zero(tmp1957.coeffs[1])
    tmp1225.coeffs[1] = constant_term(tmp1223) * constant_term(tmp1224)
    tmp1225.coeffs[2:order + 1] .= zero(tmp1225.coeffs[1])
    tmp1226.coeffs[1] = sin(constant_term(ψ_m))
    tmp1226.coeffs[2:order + 1] .= zero(tmp1226.coeffs[1])
    tmp1958.coeffs[1] = cos(constant_term(ψ_m))
    tmp1958.coeffs[2:order + 1] .= zero(tmp1958.coeffs[1])
    tmp1227.coeffs[1] = constant_term(tmp1225) * constant_term(tmp1226)
    tmp1227.coeffs[2:order + 1] .= zero(tmp1227.coeffs[1])
    (RotM[1, 1, mo]).coeffs[1] = constant_term(tmp1222) - constant_term(tmp1227)
    (RotM[1, 1, mo]).coeffs[2:order + 1] .= zero((RotM[1, 1, mo]).coeffs[1])
    tmp1229.coeffs[1] = cos(constant_term(θ_m))
    tmp1229.coeffs[2:order + 1] .= zero(tmp1229.coeffs[1])
    tmp1959.coeffs[1] = sin(constant_term(θ_m))
    tmp1959.coeffs[2:order + 1] .= zero(tmp1959.coeffs[1])
    tmp1230.coeffs[1] = -(constant_term(tmp1229))
    tmp1230.coeffs[2:order + 1] .= zero(tmp1230.coeffs[1])
    tmp1231.coeffs[1] = cos(constant_term(ψ_m))
    tmp1231.coeffs[2:order + 1] .= zero(tmp1231.coeffs[1])
    tmp1960.coeffs[1] = sin(constant_term(ψ_m))
    tmp1960.coeffs[2:order + 1] .= zero(tmp1960.coeffs[1])
    tmp1232.coeffs[1] = constant_term(tmp1230) * constant_term(tmp1231)
    tmp1232.coeffs[2:order + 1] .= zero(tmp1232.coeffs[1])
    tmp1233.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1233.coeffs[2:order + 1] .= zero(tmp1233.coeffs[1])
    tmp1961.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1961.coeffs[2:order + 1] .= zero(tmp1961.coeffs[1])
    tmp1234.coeffs[1] = constant_term(tmp1232) * constant_term(tmp1233)
    tmp1234.coeffs[2:order + 1] .= zero(tmp1234.coeffs[1])
    tmp1235.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1235.coeffs[2:order + 1] .= zero(tmp1235.coeffs[1])
    tmp1962.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1962.coeffs[2:order + 1] .= zero(tmp1962.coeffs[1])
    tmp1236.coeffs[1] = sin(constant_term(ψ_m))
    tmp1236.coeffs[2:order + 1] .= zero(tmp1236.coeffs[1])
    tmp1963.coeffs[1] = cos(constant_term(ψ_m))
    tmp1963.coeffs[2:order + 1] .= zero(tmp1963.coeffs[1])
    tmp1237.coeffs[1] = constant_term(tmp1235) * constant_term(tmp1236)
    tmp1237.coeffs[2:order + 1] .= zero(tmp1237.coeffs[1])
    (RotM[2, 1, mo]).coeffs[1] = constant_term(tmp1234) - constant_term(tmp1237)
    (RotM[2, 1, mo]).coeffs[2:order + 1] .= zero((RotM[2, 1, mo]).coeffs[1])
    tmp1239.coeffs[1] = sin(constant_term(θ_m))
    tmp1239.coeffs[2:order + 1] .= zero(tmp1239.coeffs[1])
    tmp1964.coeffs[1] = cos(constant_term(θ_m))
    tmp1964.coeffs[2:order + 1] .= zero(tmp1964.coeffs[1])
    tmp1240.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1240.coeffs[2:order + 1] .= zero(tmp1240.coeffs[1])
    tmp1965.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1965.coeffs[2:order + 1] .= zero(tmp1965.coeffs[1])
    (RotM[3, 1, mo]).coeffs[1] = constant_term(tmp1239) * constant_term(tmp1240)
    (RotM[3, 1, mo]).coeffs[2:order + 1] .= zero((RotM[3, 1, mo]).coeffs[1])
    tmp1242.coeffs[1] = cos(constant_term(ψ_m))
    tmp1242.coeffs[2:order + 1] .= zero(tmp1242.coeffs[1])
    tmp1966.coeffs[1] = sin(constant_term(ψ_m))
    tmp1966.coeffs[2:order + 1] .= zero(tmp1966.coeffs[1])
    tmp1243.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1243.coeffs[2:order + 1] .= zero(tmp1243.coeffs[1])
    tmp1967.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1967.coeffs[2:order + 1] .= zero(tmp1967.coeffs[1])
    tmp1244.coeffs[1] = constant_term(tmp1242) * constant_term(tmp1243)
    tmp1244.coeffs[2:order + 1] .= zero(tmp1244.coeffs[1])
    tmp1245.coeffs[1] = cos(constant_term(θ_m))
    tmp1245.coeffs[2:order + 1] .= zero(tmp1245.coeffs[1])
    tmp1968.coeffs[1] = sin(constant_term(θ_m))
    tmp1968.coeffs[2:order + 1] .= zero(tmp1968.coeffs[1])
    tmp1246.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1246.coeffs[2:order + 1] .= zero(tmp1246.coeffs[1])
    tmp1969.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1969.coeffs[2:order + 1] .= zero(tmp1969.coeffs[1])
    tmp1247.coeffs[1] = constant_term(tmp1245) * constant_term(tmp1246)
    tmp1247.coeffs[2:order + 1] .= zero(tmp1247.coeffs[1])
    tmp1248.coeffs[1] = sin(constant_term(ψ_m))
    tmp1248.coeffs[2:order + 1] .= zero(tmp1248.coeffs[1])
    tmp1970.coeffs[1] = cos(constant_term(ψ_m))
    tmp1970.coeffs[2:order + 1] .= zero(tmp1970.coeffs[1])
    tmp1249.coeffs[1] = constant_term(tmp1247) * constant_term(tmp1248)
    tmp1249.coeffs[2:order + 1] .= zero(tmp1249.coeffs[1])
    (RotM[1, 2, mo]).coeffs[1] = constant_term(tmp1244) + constant_term(tmp1249)
    (RotM[1, 2, mo]).coeffs[2:order + 1] .= zero((RotM[1, 2, mo]).coeffs[1])
    tmp1251.coeffs[1] = cos(constant_term(θ_m))
    tmp1251.coeffs[2:order + 1] .= zero(tmp1251.coeffs[1])
    tmp1971.coeffs[1] = sin(constant_term(θ_m))
    tmp1971.coeffs[2:order + 1] .= zero(tmp1971.coeffs[1])
    tmp1252.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1252.coeffs[2:order + 1] .= zero(tmp1252.coeffs[1])
    tmp1972.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1972.coeffs[2:order + 1] .= zero(tmp1972.coeffs[1])
    tmp1253.coeffs[1] = constant_term(tmp1251) * constant_term(tmp1252)
    tmp1253.coeffs[2:order + 1] .= zero(tmp1253.coeffs[1])
    tmp1254.coeffs[1] = cos(constant_term(ψ_m))
    tmp1254.coeffs[2:order + 1] .= zero(tmp1254.coeffs[1])
    tmp1973.coeffs[1] = sin(constant_term(ψ_m))
    tmp1973.coeffs[2:order + 1] .= zero(tmp1973.coeffs[1])
    tmp1255.coeffs[1] = constant_term(tmp1253) * constant_term(tmp1254)
    tmp1255.coeffs[2:order + 1] .= zero(tmp1255.coeffs[1])
    tmp1256.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1256.coeffs[2:order + 1] .= zero(tmp1256.coeffs[1])
    tmp1974.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1974.coeffs[2:order + 1] .= zero(tmp1974.coeffs[1])
    tmp1257.coeffs[1] = sin(constant_term(ψ_m))
    tmp1257.coeffs[2:order + 1] .= zero(tmp1257.coeffs[1])
    tmp1975.coeffs[1] = cos(constant_term(ψ_m))
    tmp1975.coeffs[2:order + 1] .= zero(tmp1975.coeffs[1])
    tmp1258.coeffs[1] = constant_term(tmp1256) * constant_term(tmp1257)
    tmp1258.coeffs[2:order + 1] .= zero(tmp1258.coeffs[1])
    (RotM[2, 2, mo]).coeffs[1] = constant_term(tmp1255) - constant_term(tmp1258)
    (RotM[2, 2, mo]).coeffs[2:order + 1] .= zero((RotM[2, 2, mo]).coeffs[1])
    tmp1260.coeffs[1] = cos(constant_term(ϕ_m))
    tmp1260.coeffs[2:order + 1] .= zero(tmp1260.coeffs[1])
    tmp1976.coeffs[1] = sin(constant_term(ϕ_m))
    tmp1976.coeffs[2:order + 1] .= zero(tmp1976.coeffs[1])
    tmp1261.coeffs[1] = -(constant_term(tmp1260))
    tmp1261.coeffs[2:order + 1] .= zero(tmp1261.coeffs[1])
    tmp1262.coeffs[1] = sin(constant_term(θ_m))
    tmp1262.coeffs[2:order + 1] .= zero(tmp1262.coeffs[1])
    tmp1977.coeffs[1] = cos(constant_term(θ_m))
    tmp1977.coeffs[2:order + 1] .= zero(tmp1977.coeffs[1])
    (RotM[3, 2, mo]).coeffs[1] = constant_term(tmp1261) * constant_term(tmp1262)
    (RotM[3, 2, mo]).coeffs[2:order + 1] .= zero((RotM[3, 2, mo]).coeffs[1])
    tmp1264.coeffs[1] = sin(constant_term(θ_m))
    tmp1264.coeffs[2:order + 1] .= zero(tmp1264.coeffs[1])
    tmp1978.coeffs[1] = cos(constant_term(θ_m))
    tmp1978.coeffs[2:order + 1] .= zero(tmp1978.coeffs[1])
    tmp1265.coeffs[1] = sin(constant_term(ψ_m))
    tmp1265.coeffs[2:order + 1] .= zero(tmp1265.coeffs[1])
    tmp1979.coeffs[1] = cos(constant_term(ψ_m))
    tmp1979.coeffs[2:order + 1] .= zero(tmp1979.coeffs[1])
    (RotM[1, 3, mo]).coeffs[1] = constant_term(tmp1264) * constant_term(tmp1265)
    (RotM[1, 3, mo]).coeffs[2:order + 1] .= zero((RotM[1, 3, mo]).coeffs[1])
    tmp1267.coeffs[1] = cos(constant_term(ψ_m))
    tmp1267.coeffs[2:order + 1] .= zero(tmp1267.coeffs[1])
    tmp1980.coeffs[1] = sin(constant_term(ψ_m))
    tmp1980.coeffs[2:order + 1] .= zero(tmp1980.coeffs[1])
    tmp1268.coeffs[1] = sin(constant_term(θ_m))
    tmp1268.coeffs[2:order + 1] .= zero(tmp1268.coeffs[1])
    tmp1981.coeffs[1] = cos(constant_term(θ_m))
    tmp1981.coeffs[2:order + 1] .= zero(tmp1981.coeffs[1])
    (RotM[2, 3, mo]).coeffs[1] = constant_term(tmp1267) * constant_term(tmp1268)
    (RotM[2, 3, mo]).coeffs[2:order + 1] .= zero((RotM[2, 3, mo]).coeffs[1])
    (RotM[3, 3, mo]).coeffs[1] = cos(constant_term(θ_m))
    (RotM[3, 3, mo]).coeffs[2:order + 1] .= zero((RotM[3, 3, mo]).coeffs[1])
    tmp1982.coeffs[1] = sin(constant_term(θ_m))
    tmp1982.coeffs[2:order + 1] .= zero(tmp1982.coeffs[1])
    ϕ_c.coeffs[1] = identity(constant_term(q[6N + 7]))
    ϕ_c.coeffs[2:order + 1] .= zero(ϕ_c.coeffs[1])
    tmp1271.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1271.coeffs[2:order + 1] .= zero(tmp1271.coeffs[1])
    tmp1983.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1983.coeffs[2:order + 1] .= zero(tmp1983.coeffs[1])
    tmp1272.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(tmp1271)
    tmp1272.coeffs[2:order + 1] .= zero(tmp1272.coeffs[1])
    tmp1273.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1273.coeffs[2:order + 1] .= zero(tmp1273.coeffs[1])
    tmp1984.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1984.coeffs[2:order + 1] .= zero(tmp1984.coeffs[1])
    tmp1274.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp1273)
    tmp1274.coeffs[2:order + 1] .= zero(tmp1274.coeffs[1])
    (mantlef2coref[1, 1]).coeffs[1] = constant_term(tmp1272) + constant_term(tmp1274)
    (mantlef2coref[1, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 1]).coeffs[1])
    tmp1276.coeffs[1] = -(constant_term(RotM[1, 1, mo]))
    tmp1276.coeffs[2:order + 1] .= zero(tmp1276.coeffs[1])
    tmp1277.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1277.coeffs[2:order + 1] .= zero(tmp1277.coeffs[1])
    tmp1985.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1985.coeffs[2:order + 1] .= zero(tmp1985.coeffs[1])
    tmp1278.coeffs[1] = constant_term(tmp1276) * constant_term(tmp1277)
    tmp1278.coeffs[2:order + 1] .= zero(tmp1278.coeffs[1])
    tmp1279.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1279.coeffs[2:order + 1] .= zero(tmp1279.coeffs[1])
    tmp1986.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1986.coeffs[2:order + 1] .= zero(tmp1986.coeffs[1])
    tmp1280.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp1279)
    tmp1280.coeffs[2:order + 1] .= zero(tmp1280.coeffs[1])
    (mantlef2coref[2, 1]).coeffs[1] = constant_term(tmp1278) + constant_term(tmp1280)
    (mantlef2coref[2, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 1]).coeffs[1])
    (mantlef2coref[3, 1]).coeffs[1] = identity(constant_term(RotM[1, 3, mo]))
    (mantlef2coref[3, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 1]).coeffs[1])
    tmp1282.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1282.coeffs[2:order + 1] .= zero(tmp1282.coeffs[1])
    tmp1987.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1987.coeffs[2:order + 1] .= zero(tmp1987.coeffs[1])
    tmp1283.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(tmp1282)
    tmp1283.coeffs[2:order + 1] .= zero(tmp1283.coeffs[1])
    tmp1284.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1284.coeffs[2:order + 1] .= zero(tmp1284.coeffs[1])
    tmp1988.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1988.coeffs[2:order + 1] .= zero(tmp1988.coeffs[1])
    tmp1285.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp1284)
    tmp1285.coeffs[2:order + 1] .= zero(tmp1285.coeffs[1])
    (mantlef2coref[1, 2]).coeffs[1] = constant_term(tmp1283) + constant_term(tmp1285)
    (mantlef2coref[1, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 2]).coeffs[1])
    tmp1287.coeffs[1] = -(constant_term(RotM[2, 1, mo]))
    tmp1287.coeffs[2:order + 1] .= zero(tmp1287.coeffs[1])
    tmp1288.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1288.coeffs[2:order + 1] .= zero(tmp1288.coeffs[1])
    tmp1989.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1989.coeffs[2:order + 1] .= zero(tmp1989.coeffs[1])
    tmp1289.coeffs[1] = constant_term(tmp1287) * constant_term(tmp1288)
    tmp1289.coeffs[2:order + 1] .= zero(tmp1289.coeffs[1])
    tmp1290.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1290.coeffs[2:order + 1] .= zero(tmp1290.coeffs[1])
    tmp1990.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1990.coeffs[2:order + 1] .= zero(tmp1990.coeffs[1])
    tmp1291.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp1290)
    tmp1291.coeffs[2:order + 1] .= zero(tmp1291.coeffs[1])
    (mantlef2coref[2, 2]).coeffs[1] = constant_term(tmp1289) + constant_term(tmp1291)
    (mantlef2coref[2, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 2]).coeffs[1])
    (mantlef2coref[3, 2]).coeffs[1] = identity(constant_term(RotM[2, 3, mo]))
    (mantlef2coref[3, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 2]).coeffs[1])
    tmp1293.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1293.coeffs[2:order + 1] .= zero(tmp1293.coeffs[1])
    tmp1991.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1991.coeffs[2:order + 1] .= zero(tmp1991.coeffs[1])
    tmp1294.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(tmp1293)
    tmp1294.coeffs[2:order + 1] .= zero(tmp1294.coeffs[1])
    tmp1295.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1295.coeffs[2:order + 1] .= zero(tmp1295.coeffs[1])
    tmp1992.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1992.coeffs[2:order + 1] .= zero(tmp1992.coeffs[1])
    tmp1296.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp1295)
    tmp1296.coeffs[2:order + 1] .= zero(tmp1296.coeffs[1])
    (mantlef2coref[1, 3]).coeffs[1] = constant_term(tmp1294) + constant_term(tmp1296)
    (mantlef2coref[1, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 3]).coeffs[1])
    tmp1298.coeffs[1] = -(constant_term(RotM[3, 1, mo]))
    tmp1298.coeffs[2:order + 1] .= zero(tmp1298.coeffs[1])
    tmp1299.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1299.coeffs[2:order + 1] .= zero(tmp1299.coeffs[1])
    tmp1993.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1993.coeffs[2:order + 1] .= zero(tmp1993.coeffs[1])
    tmp1300.coeffs[1] = constant_term(tmp1298) * constant_term(tmp1299)
    tmp1300.coeffs[2:order + 1] .= zero(tmp1300.coeffs[1])
    tmp1301.coeffs[1] = cos(constant_term(ϕ_c))
    tmp1301.coeffs[2:order + 1] .= zero(tmp1301.coeffs[1])
    tmp1994.coeffs[1] = sin(constant_term(ϕ_c))
    tmp1994.coeffs[2:order + 1] .= zero(tmp1994.coeffs[1])
    tmp1302.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp1301)
    tmp1302.coeffs[2:order + 1] .= zero(tmp1302.coeffs[1])
    (mantlef2coref[2, 3]).coeffs[1] = constant_term(tmp1300) + constant_term(tmp1302)
    (mantlef2coref[2, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 3]).coeffs[1])
    (mantlef2coref[3, 3]).coeffs[1] = identity(constant_term(RotM[3, 3, mo]))
    (mantlef2coref[3, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 3]).coeffs[1])
    tmp1304.coeffs[1] = constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10])
    tmp1304.coeffs[2:order + 1] .= zero(tmp1304.coeffs[1])
    tmp1305.coeffs[1] = constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11])
    tmp1305.coeffs[2:order + 1] .= zero(tmp1305.coeffs[1])
    tmp1306.coeffs[1] = constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12])
    tmp1306.coeffs[2:order + 1] .= zero(tmp1306.coeffs[1])
    tmp1307.coeffs[1] = constant_term(tmp1305) + constant_term(tmp1306)
    tmp1307.coeffs[2:order + 1] .= zero(tmp1307.coeffs[1])
    ω_c_CE_1.coeffs[1] = constant_term(tmp1304) + constant_term(tmp1307)
    ω_c_CE_1.coeffs[2:order + 1] .= zero(ω_c_CE_1.coeffs[1])
    tmp1309.coeffs[1] = constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10])
    tmp1309.coeffs[2:order + 1] .= zero(tmp1309.coeffs[1])
    tmp1310.coeffs[1] = constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11])
    tmp1310.coeffs[2:order + 1] .= zero(tmp1310.coeffs[1])
    tmp1311.coeffs[1] = constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12])
    tmp1311.coeffs[2:order + 1] .= zero(tmp1311.coeffs[1])
    tmp1312.coeffs[1] = constant_term(tmp1310) + constant_term(tmp1311)
    tmp1312.coeffs[2:order + 1] .= zero(tmp1312.coeffs[1])
    ω_c_CE_2.coeffs[1] = constant_term(tmp1309) + constant_term(tmp1312)
    ω_c_CE_2.coeffs[2:order + 1] .= zero(ω_c_CE_2.coeffs[1])
    tmp1314.coeffs[1] = constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10])
    tmp1314.coeffs[2:order + 1] .= zero(tmp1314.coeffs[1])
    tmp1315.coeffs[1] = constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11])
    tmp1315.coeffs[2:order + 1] .= zero(tmp1315.coeffs[1])
    tmp1316.coeffs[1] = constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12])
    tmp1316.coeffs[2:order + 1] .= zero(tmp1316.coeffs[1])
    tmp1317.coeffs[1] = constant_term(tmp1315) + constant_term(tmp1316)
    tmp1317.coeffs[2:order + 1] .= zero(tmp1317.coeffs[1])
    ω_c_CE_3.coeffs[1] = constant_term(tmp1314) + constant_term(tmp1317)
    ω_c_CE_3.coeffs[2:order + 1] .= zero(ω_c_CE_3.coeffs[1])
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    (J2_t[su]).coeffs[1] = identity(constant_term(J2S_t))
    (J2_t[su]).coeffs[2:order + 1] .= zero((J2_t[su]).coeffs[1])
    (J2_t[ea]).coeffs[1] = identity(constant_term(J2E_t))
    (J2_t[ea]).coeffs[2:order + 1] .= zero((J2_t[ea]).coeffs[1])
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    for j = 1:N
        (newtonX[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (newtonX[j]).coeffs[2:order + 1] .= zero((newtonX[j]).coeffs[1])
        (newtonY[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (newtonY[j]).coeffs[2:order + 1] .= zero((newtonY[j]).coeffs[1])
        (newtonZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (newtonZ[j]).coeffs[2:order + 1] .= zero((newtonZ[j]).coeffs[1])
        (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (newtonianNb_Potential[j]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[j]).coeffs[1])
        (dq[3j - 2]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 2]))
        (dq[3j - 2]).coeffs[2:order + 1] .= zero((dq[3j - 2]).coeffs[1])
        (dq[3j - 1]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 1]))
        (dq[3j - 1]).coeffs[2:order + 1] .= zero((dq[3j - 1]).coeffs[1])
        (dq[3j]).coeffs[1] = identity(constant_term(q[3 * (N + j)]))
        (dq[3j]).coeffs[2:order + 1] .= zero((dq[3j]).coeffs[1])
    end
    for j = 1:N_ext
        (accX[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (accX[j]).coeffs[2:order + 1] .= zero((accX[j]).coeffs[1])
        (accY[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (accY[j]).coeffs[2:order + 1] .= zero((accY[j]).coeffs[1])
        (accZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (accZ[j]).coeffs[2:order + 1] .= zero((accZ[j]).coeffs[1])
    end
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                (X[i, j]).coeffs[1] = constant_term(q[3i - 2]) - constant_term(q[3j - 2])
                (X[i, j]).coeffs[2:order + 1] .= zero((X[i, j]).coeffs[1])
                (Y[i, j]).coeffs[1] = constant_term(q[3i - 1]) - constant_term(q[3j - 1])
                (Y[i, j]).coeffs[2:order + 1] .= zero((Y[i, j]).coeffs[1])
                (Z[i, j]).coeffs[1] = constant_term(q[3i]) - constant_term(q[3j])
                (Z[i, j]).coeffs[2:order + 1] .= zero((Z[i, j]).coeffs[1])
                (U[i, j]).coeffs[1] = constant_term(dq[3i - 2]) - constant_term(dq[3j - 2])
                (U[i, j]).coeffs[2:order + 1] .= zero((U[i, j]).coeffs[1])
                (V[i, j]).coeffs[1] = constant_term(dq[3i - 1]) - constant_term(dq[3j - 1])
                (V[i, j]).coeffs[2:order + 1] .= zero((V[i, j]).coeffs[1])
                (W[i, j]).coeffs[1] = constant_term(dq[3i]) - constant_term(dq[3j])
                (W[i, j]).coeffs[2:order + 1] .= zero((W[i, j]).coeffs[1])
                (tmp1326[3j - 2]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 2])
                (tmp1326[3j - 2]).coeffs[2:order + 1] .= zero((tmp1326[3j - 2]).coeffs[1])
                (tmp1328[3i - 2]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 2])
                (tmp1328[3i - 2]).coeffs[2:order + 1] .= zero((tmp1328[3i - 2]).coeffs[1])
                (_4U_m_3X[i, j]).coeffs[1] = constant_term(tmp1326[3j - 2]) - constant_term(tmp1328[3i - 2])
                (_4U_m_3X[i, j]).coeffs[2:order + 1] .= zero((_4U_m_3X[i, j]).coeffs[1])
                (tmp1331[3j - 1]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 1])
                (tmp1331[3j - 1]).coeffs[2:order + 1] .= zero((tmp1331[3j - 1]).coeffs[1])
                (tmp1333[3i - 1]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 1])
                (tmp1333[3i - 1]).coeffs[2:order + 1] .= zero((tmp1333[3i - 1]).coeffs[1])
                (_4V_m_3Y[i, j]).coeffs[1] = constant_term(tmp1331[3j - 1]) - constant_term(tmp1333[3i - 1])
                (_4V_m_3Y[i, j]).coeffs[2:order + 1] .= zero((_4V_m_3Y[i, j]).coeffs[1])
                (tmp1336[3j]).coeffs[1] = constant_term(4) * constant_term(dq[3j])
                (tmp1336[3j]).coeffs[2:order + 1] .= zero((tmp1336[3j]).coeffs[1])
                (tmp1338[3i]).coeffs[1] = constant_term(3) * constant_term(dq[3i])
                (tmp1338[3i]).coeffs[2:order + 1] .= zero((tmp1338[3i]).coeffs[1])
                (_4W_m_3Z[i, j]).coeffs[1] = constant_term(tmp1336[3j]) - constant_term(tmp1338[3i])
                (_4W_m_3Z[i, j]).coeffs[2:order + 1] .= zero((_4W_m_3Z[i, j]).coeffs[1])
                (pn2x[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j])
                (pn2x[i, j]).coeffs[2:order + 1] .= zero((pn2x[i, j]).coeffs[1])
                (pn2y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j])
                (pn2y[i, j]).coeffs[2:order + 1] .= zero((pn2y[i, j]).coeffs[1])
                (pn2z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j])
                (pn2z[i, j]).coeffs[2:order + 1] .= zero((pn2z[i, j]).coeffs[1])
                (UU[i, j]).coeffs[1] = constant_term(dq[3i - 2]) * constant_term(dq[3j - 2])
                (UU[i, j]).coeffs[2:order + 1] .= zero((UU[i, j]).coeffs[1])
                (VV[i, j]).coeffs[1] = constant_term(dq[3i - 1]) * constant_term(dq[3j - 1])
                (VV[i, j]).coeffs[2:order + 1] .= zero((VV[i, j]).coeffs[1])
                (WW[i, j]).coeffs[1] = constant_term(dq[3i]) * constant_term(dq[3j])
                (WW[i, j]).coeffs[2:order + 1] .= zero((WW[i, j]).coeffs[1])
                (tmp1346[i, j]).coeffs[1] = constant_term(UU[i, j]) + constant_term(VV[i, j])
                (tmp1346[i, j]).coeffs[2:order + 1] .= zero((tmp1346[i, j]).coeffs[1])
                (vi_dot_vj[i, j]).coeffs[1] = constant_term(tmp1346[i, j]) + constant_term(WW[i, j])
                (vi_dot_vj[i, j]).coeffs[2:order + 1] .= zero((vi_dot_vj[i, j]).coeffs[1])
                (tmp1349[i, j]).coeffs[1] = constant_term(X[i, j]) ^ float(constant_term(2))
                (tmp1349[i, j]).coeffs[2:order + 1] .= zero((tmp1349[i, j]).coeffs[1])
                (tmp1351[i, j]).coeffs[1] = constant_term(Y[i, j]) ^ float(constant_term(2))
                (tmp1351[i, j]).coeffs[2:order + 1] .= zero((tmp1351[i, j]).coeffs[1])
                (tmp1352[i, j]).coeffs[1] = constant_term(tmp1349[i, j]) + constant_term(tmp1351[i, j])
                (tmp1352[i, j]).coeffs[2:order + 1] .= zero((tmp1352[i, j]).coeffs[1])
                (tmp1354[i, j]).coeffs[1] = constant_term(Z[i, j]) ^ float(constant_term(2))
                (tmp1354[i, j]).coeffs[2:order + 1] .= zero((tmp1354[i, j]).coeffs[1])
                (r_p2[i, j]).coeffs[1] = constant_term(tmp1352[i, j]) + constant_term(tmp1354[i, j])
                (r_p2[i, j]).coeffs[2:order + 1] .= zero((r_p2[i, j]).coeffs[1])
                (r_p1d2[i, j]).coeffs[1] = sqrt(constant_term(r_p2[i, j]))
                (r_p1d2[i, j]).coeffs[2:order + 1] .= zero((r_p1d2[i, j]).coeffs[1])
                (r_p3d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(1.5))
                (r_p3d2[i, j]).coeffs[2:order + 1] .= zero((r_p3d2[i, j]).coeffs[1])
                (r_p7d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(3.5))
                (r_p7d2[i, j]).coeffs[2:order + 1] .= zero((r_p7d2[i, j]).coeffs[1])
                (newtonianCoeff[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i, j])
                (newtonianCoeff[i, j]).coeffs[2:order + 1] .= zero((newtonianCoeff[i, j]).coeffs[1])
                (tmp1362[i, j]).coeffs[1] = constant_term(pn2x[i, j]) + constant_term(pn2y[i, j])
                (tmp1362[i, j]).coeffs[2:order + 1] .= zero((tmp1362[i, j]).coeffs[1])
                (tmp1363[i, j]).coeffs[1] = constant_term(tmp1362[i, j]) + constant_term(pn2z[i, j])
                (tmp1363[i, j]).coeffs[2:order + 1] .= zero((tmp1363[i, j]).coeffs[1])
                (pn2[i, j]).coeffs[1] = constant_term(newtonianCoeff[i, j]) * constant_term(tmp1363[i, j])
                (pn2[i, j]).coeffs[2:order + 1] .= zero((pn2[i, j]).coeffs[1])
                (newton_acc_X[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                (newton_acc_X[i, j]).coeffs[2:order + 1] .= zero((newton_acc_X[i, j]).coeffs[1])
                (newton_acc_Y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                (newton_acc_Y[i, j]).coeffs[2:order + 1] .= zero((newton_acc_Y[i, j]).coeffs[1])
                (newton_acc_Z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                (newton_acc_Z[i, j]).coeffs[2:order + 1] .= zero((newton_acc_Z[i, j]).coeffs[1])
                (newtonian1b_Potential[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i, j])
                (newtonian1b_Potential[i, j]).coeffs[2:order + 1] .= zero((newtonian1b_Potential[i, j]).coeffs[1])
                (pn3[i, j]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i, j])
                (pn3[i, j]).coeffs[2:order + 1] .= zero((pn3[i, j]).coeffs[1])
                (U_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(U[i, j])
                (U_t_pn2[i, j]).coeffs[2:order + 1] .= zero((U_t_pn2[i, j]).coeffs[1])
                (V_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(V[i, j])
                (V_t_pn2[i, j]).coeffs[2:order + 1] .= zero((V_t_pn2[i, j]).coeffs[1])
                (W_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(W[i, j])
                (W_t_pn2[i, j]).coeffs[2:order + 1] .= zero((W_t_pn2[i, j]).coeffs[1])
                (tmp1374[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                (tmp1374[i, j]).coeffs[2:order + 1] .= zero((tmp1374[i, j]).coeffs[1])
                (temp_001[i, j]).coeffs[1] = constant_term(newtonX[j]) + constant_term(tmp1374[i, j])
                (temp_001[i, j]).coeffs[2:order + 1] .= zero((temp_001[i, j]).coeffs[1])
                (newtonX[j]).coeffs[1] = identity(constant_term(temp_001[i, j]))
                (newtonX[j]).coeffs[2:order + 1] .= zero((newtonX[j]).coeffs[1])
                (tmp1376[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                (tmp1376[i, j]).coeffs[2:order + 1] .= zero((tmp1376[i, j]).coeffs[1])
                (temp_002[i, j]).coeffs[1] = constant_term(newtonY[j]) + constant_term(tmp1376[i, j])
                (temp_002[i, j]).coeffs[2:order + 1] .= zero((temp_002[i, j]).coeffs[1])
                (newtonY[j]).coeffs[1] = identity(constant_term(temp_002[i, j]))
                (newtonY[j]).coeffs[2:order + 1] .= zero((newtonY[j]).coeffs[1])
                (tmp1378[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                (tmp1378[i, j]).coeffs[2:order + 1] .= zero((tmp1378[i, j]).coeffs[1])
                (temp_003[i, j]).coeffs[1] = constant_term(newtonZ[j]) + constant_term(tmp1378[i, j])
                (temp_003[i, j]).coeffs[2:order + 1] .= zero((temp_003[i, j]).coeffs[1])
                (newtonZ[j]).coeffs[1] = identity(constant_term(temp_003[i, j]))
                (newtonZ[j]).coeffs[2:order + 1] .= zero((newtonZ[j]).coeffs[1])
                (temp_004[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j])
                (temp_004[i, j]).coeffs[2:order + 1] .= zero((temp_004[i, j]).coeffs[1])
                (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(temp_004[i, j]))
                (newtonianNb_Potential[j]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[j]).coeffs[1])
            end
        end
        (tmp1382[3j - 2]).coeffs[1] = constant_term(dq[3j - 2]) ^ float(constant_term(2))
        (tmp1382[3j - 2]).coeffs[2:order + 1] .= zero((tmp1382[3j - 2]).coeffs[1])
        (tmp1384[3j - 1]).coeffs[1] = constant_term(dq[3j - 1]) ^ float(constant_term(2))
        (tmp1384[3j - 1]).coeffs[2:order + 1] .= zero((tmp1384[3j - 1]).coeffs[1])
        (tmp1385[3j - 2]).coeffs[1] = constant_term(tmp1382[3j - 2]) + constant_term(tmp1384[3j - 1])
        (tmp1385[3j - 2]).coeffs[2:order + 1] .= zero((tmp1385[3j - 2]).coeffs[1])
        (tmp1387[3j]).coeffs[1] = constant_term(dq[3j]) ^ float(constant_term(2))
        (tmp1387[3j]).coeffs[2:order + 1] .= zero((tmp1387[3j]).coeffs[1])
        (v2[j]).coeffs[1] = constant_term(tmp1385[3j - 2]) + constant_term(tmp1387[3j])
        (v2[j]).coeffs[2:order + 1] .= zero((v2[j]).coeffs[1])
    end
    tmp1389.coeffs[1] = constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2])
    tmp1389.coeffs[2:order + 1] .= zero(tmp1389.coeffs[1])
    tmp1391.coeffs[1] = constant_term(tmp1389) / constant_term(2)
    tmp1391.coeffs[2:order + 1] .= zero(tmp1391.coeffs[1])
    tmp1392.coeffs[1] = constant_term(I_M_t[3, 3]) - constant_term(tmp1391)
    tmp1392.coeffs[2:order + 1] .= zero(tmp1392.coeffs[1])
    J2M_t.coeffs[1] = constant_term(tmp1392) / constant_term(μ[mo])
    J2M_t.coeffs[2:order + 1] .= zero(J2M_t.coeffs[1])
    tmp1394.coeffs[1] = constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1])
    tmp1394.coeffs[2:order + 1] .= zero(tmp1394.coeffs[1])
    tmp1395.coeffs[1] = constant_term(tmp1394) / constant_term(μ[mo])
    tmp1395.coeffs[2:order + 1] .= zero(tmp1395.coeffs[1])
    C22M_t.coeffs[1] = constant_term(tmp1395) / constant_term(4)
    C22M_t.coeffs[2:order + 1] .= zero(C22M_t.coeffs[1])
    tmp1398.coeffs[1] = -(constant_term(I_M_t[1, 3]))
    tmp1398.coeffs[2:order + 1] .= zero(tmp1398.coeffs[1])
    C21M_t.coeffs[1] = constant_term(tmp1398) / constant_term(μ[mo])
    C21M_t.coeffs[2:order + 1] .= zero(C21M_t.coeffs[1])
    tmp1400.coeffs[1] = -(constant_term(I_M_t[3, 2]))
    tmp1400.coeffs[2:order + 1] .= zero(tmp1400.coeffs[1])
    S21M_t.coeffs[1] = constant_term(tmp1400) / constant_term(μ[mo])
    S21M_t.coeffs[2:order + 1] .= zero(S21M_t.coeffs[1])
    tmp1402.coeffs[1] = -(constant_term(I_M_t[2, 1]))
    tmp1402.coeffs[2:order + 1] .= zero(tmp1402.coeffs[1])
    tmp1403.coeffs[1] = constant_term(tmp1402) / constant_term(μ[mo])
    tmp1403.coeffs[2:order + 1] .= zero(tmp1403.coeffs[1])
    S22M_t.coeffs[1] = constant_term(tmp1403) / constant_term(2)
    S22M_t.coeffs[2:order + 1] .= zero(S22M_t.coeffs[1])
    (J2_t[mo]).coeffs[1] = identity(constant_term(J2M_t))
    (J2_t[mo]).coeffs[2:order + 1] .= zero((J2_t[mo]).coeffs[1])
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    (X_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[1, 1, j])
                    (X_bf_1[i, j]).coeffs[2:order + 1] .= zero((X_bf_1[i, j]).coeffs[1])
                    (X_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[1, 2, j])
                    (X_bf_2[i, j]).coeffs[2:order + 1] .= zero((X_bf_2[i, j]).coeffs[1])
                    (X_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[1, 3, j])
                    (X_bf_3[i, j]).coeffs[2:order + 1] .= zero((X_bf_3[i, j]).coeffs[1])
                    (Y_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[2, 1, j])
                    (Y_bf_1[i, j]).coeffs[2:order + 1] .= zero((Y_bf_1[i, j]).coeffs[1])
                    (Y_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[2, 2, j])
                    (Y_bf_2[i, j]).coeffs[2:order + 1] .= zero((Y_bf_2[i, j]).coeffs[1])
                    (Y_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[2, 3, j])
                    (Y_bf_3[i, j]).coeffs[2:order + 1] .= zero((Y_bf_3[i, j]).coeffs[1])
                    (Z_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[3, 1, j])
                    (Z_bf_1[i, j]).coeffs[2:order + 1] .= zero((Z_bf_1[i, j]).coeffs[1])
                    (Z_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[3, 2, j])
                    (Z_bf_2[i, j]).coeffs[2:order + 1] .= zero((Z_bf_2[i, j]).coeffs[1])
                    (Z_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[3, 3, j])
                    (Z_bf_3[i, j]).coeffs[2:order + 1] .= zero((Z_bf_3[i, j]).coeffs[1])
                    (tmp1415[i, j]).coeffs[1] = constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j])
                    (tmp1415[i, j]).coeffs[2:order + 1] .= zero((tmp1415[i, j]).coeffs[1])
                    (X_bf[i, j]).coeffs[1] = constant_term(tmp1415[i, j]) + constant_term(X_bf_3[i, j])
                    (X_bf[i, j]).coeffs[2:order + 1] .= zero((X_bf[i, j]).coeffs[1])
                    (tmp1417[i, j]).coeffs[1] = constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j])
                    (tmp1417[i, j]).coeffs[2:order + 1] .= zero((tmp1417[i, j]).coeffs[1])
                    (Y_bf[i, j]).coeffs[1] = constant_term(tmp1417[i, j]) + constant_term(Y_bf_3[i, j])
                    (Y_bf[i, j]).coeffs[2:order + 1] .= zero((Y_bf[i, j]).coeffs[1])
                    (tmp1419[i, j]).coeffs[1] = constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j])
                    (tmp1419[i, j]).coeffs[2:order + 1] .= zero((tmp1419[i, j]).coeffs[1])
                    (Z_bf[i, j]).coeffs[1] = constant_term(tmp1419[i, j]) + constant_term(Z_bf_3[i, j])
                    (Z_bf[i, j]).coeffs[2:order + 1] .= zero((Z_bf[i, j]).coeffs[1])
                    (sin_ϕ[i, j]).coeffs[1] = constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j])
                    (sin_ϕ[i, j]).coeffs[2:order + 1] .= zero((sin_ϕ[i, j]).coeffs[1])
                    (tmp1423[i, j]).coeffs[1] = constant_term(X_bf[i, j]) ^ float(constant_term(2))
                    (tmp1423[i, j]).coeffs[2:order + 1] .= zero((tmp1423[i, j]).coeffs[1])
                    (tmp1425[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) ^ float(constant_term(2))
                    (tmp1425[i, j]).coeffs[2:order + 1] .= zero((tmp1425[i, j]).coeffs[1])
                    (tmp1426[i, j]).coeffs[1] = constant_term(tmp1423[i, j]) + constant_term(tmp1425[i, j])
                    (tmp1426[i, j]).coeffs[2:order + 1] .= zero((tmp1426[i, j]).coeffs[1])
                    (r_xy[i, j]).coeffs[1] = sqrt(constant_term(tmp1426[i, j]))
                    (r_xy[i, j]).coeffs[2:order + 1] .= zero((r_xy[i, j]).coeffs[1])
                    (cos_ϕ[i, j]).coeffs[1] = constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j])
                    (cos_ϕ[i, j]).coeffs[2:order + 1] .= zero((cos_ϕ[i, j]).coeffs[1])
                    (sin_λ[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j])
                    (sin_λ[i, j]).coeffs[2:order + 1] .= zero((sin_λ[i, j]).coeffs[1])
                    (cos_λ[i, j]).coeffs[1] = constant_term(X_bf[i, j]) / constant_term(r_xy[i, j])
                    (cos_λ[i, j]).coeffs[2:order + 1] .= zero((cos_λ[i, j]).coeffs[1])
                    (P_n[i, j, 1]).coeffs[1] = identity(constant_term(one_t))
                    (P_n[i, j, 1]).coeffs[2:order + 1] .= zero((P_n[i, j, 1]).coeffs[1])
                    (P_n[i, j, 2]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                    (P_n[i, j, 2]).coeffs[2:order + 1] .= zero((P_n[i, j, 2]).coeffs[1])
                    (dP_n[i, j, 1]).coeffs[1] = identity(constant_term(zero_q_1))
                    (dP_n[i, j, 1]).coeffs[2:order + 1] .= zero((dP_n[i, j, 1]).coeffs[1])
                    (dP_n[i, j, 2]).coeffs[1] = identity(constant_term(one_t))
                    (dP_n[i, j, 2]).coeffs[2:order + 1] .= zero((dP_n[i, j, 2]).coeffs[1])
                    for n = 2:n1SEM[j]
                        (tmp1431[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                        (tmp1431[i, j, n]).coeffs[2:order + 1] .= zero((tmp1431[i, j, n]).coeffs[1])
                        (tmp1432[i, j, n]).coeffs[1] = constant_term(tmp1431[i, j, n]) * constant_term(fact1_jsem[n])
                        (tmp1432[i, j, n]).coeffs[2:order + 1] .= zero((tmp1432[i, j, n]).coeffs[1])
                        (tmp1433[i, j, n - 1]).coeffs[1] = constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n])
                        (tmp1433[i, j, n - 1]).coeffs[2:order + 1] .= zero((tmp1433[i, j, n - 1]).coeffs[1])
                        (P_n[i, j, n + 1]).coeffs[1] = constant_term(tmp1432[i, j, n]) - constant_term(tmp1433[i, j, n - 1])
                        (P_n[i, j, n + 1]).coeffs[2:order + 1] .= zero((P_n[i, j, n + 1]).coeffs[1])
                        (tmp1435[i, j, n]).coeffs[1] = constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                        (tmp1435[i, j, n]).coeffs[2:order + 1] .= zero((tmp1435[i, j, n]).coeffs[1])
                        (tmp1436[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n])
                        (tmp1436[i, j, n]).coeffs[2:order + 1] .= zero((tmp1436[i, j, n]).coeffs[1])
                        (dP_n[i, j, n + 1]).coeffs[1] = constant_term(tmp1435[i, j, n]) + constant_term(tmp1436[i, j, n])
                        (dP_n[i, j, n + 1]).coeffs[2:order + 1] .= zero((dP_n[i, j, n + 1]).coeffs[1])
                        (temp_rn[i, j, n]).coeffs[1] = constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n]))
                        (temp_rn[i, j, n]).coeffs[2:order + 1] .= zero((temp_rn[i, j, n]).coeffs[1])
                    end
                    (r_p4[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(2))
                    (r_p4[i, j]).coeffs[2:order + 1] .= zero((r_p4[i, j]).coeffs[1])
                    (tmp1441[i, j, 3]).coeffs[1] = constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2])
                    (tmp1441[i, j, 3]).coeffs[2:order + 1] .= zero((tmp1441[i, j, 3]).coeffs[1])
                    (tmp1442[i, j, 3]).coeffs[1] = constant_term(tmp1441[i, j, 3]) * constant_term(J2_t[j])
                    (tmp1442[i, j, 3]).coeffs[2:order + 1] .= zero((tmp1442[i, j, 3]).coeffs[1])
                    (F_J_ξ[i, j]).coeffs[1] = constant_term(tmp1442[i, j, 3]) / constant_term(r_p4[i, j])
                    (F_J_ξ[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ[i, j]).coeffs[1])
                    (tmp1444[i, j, 3]).coeffs[1] = -(constant_term(dP_n[i, j, 3]))
                    (tmp1444[i, j, 3]).coeffs[2:order + 1] .= zero((tmp1444[i, j, 3]).coeffs[1])
                    (tmp1445[i, j, 3]).coeffs[1] = constant_term(tmp1444[i, j, 3]) * constant_term(cos_ϕ[i, j])
                    (tmp1445[i, j, 3]).coeffs[2:order + 1] .= zero((tmp1445[i, j, 3]).coeffs[1])
                    (tmp1446[i, j, 3]).coeffs[1] = constant_term(tmp1445[i, j, 3]) * constant_term(J2_t[j])
                    (tmp1446[i, j, 3]).coeffs[2:order + 1] .= zero((tmp1446[i, j, 3]).coeffs[1])
                    (F_J_ζ[i, j]).coeffs[1] = constant_term(tmp1446[i, j, 3]) / constant_term(r_p4[i, j])
                    (F_J_ζ[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ[i, j]).coeffs[1])
                    (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                    (F_J_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ_36[i, j]).coeffs[1])
                    (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                    (F_J_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ_36[i, j]).coeffs[1])
                    for n = 3:n1SEM[j]
                        (tmp1448[i, j, n + 1]).coeffs[1] = constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n])
                        (tmp1448[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp1448[i, j, n + 1]).coeffs[1])
                        (tmp1449[i, j, n + 1]).coeffs[1] = constant_term(tmp1448[i, j, n + 1]) * constant_term(JSEM[j, n])
                        (tmp1449[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp1449[i, j, n + 1]).coeffs[1])
                        (tmp1450[i, j, n + 1]).coeffs[1] = constant_term(tmp1449[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                        (tmp1450[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp1450[i, j, n + 1]).coeffs[1])
                        (temp_fjξ[i, j, n]).coeffs[1] = constant_term(tmp1450[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j])
                        (temp_fjξ[i, j, n]).coeffs[2:order + 1] .= zero((temp_fjξ[i, j, n]).coeffs[1])
                        (tmp1452[i, j, n + 1]).coeffs[1] = -(constant_term(dP_n[i, j, n + 1]))
                        (tmp1452[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp1452[i, j, n + 1]).coeffs[1])
                        (tmp1453[i, j, n + 1]).coeffs[1] = constant_term(tmp1452[i, j, n + 1]) * constant_term(cos_ϕ[i, j])
                        (tmp1453[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp1453[i, j, n + 1]).coeffs[1])
                        (tmp1454[i, j, n + 1]).coeffs[1] = constant_term(tmp1453[i, j, n + 1]) * constant_term(JSEM[j, n])
                        (tmp1454[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp1454[i, j, n + 1]).coeffs[1])
                        (tmp1455[i, j, n + 1]).coeffs[1] = constant_term(tmp1454[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                        (tmp1455[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp1455[i, j, n + 1]).coeffs[1])
                        (temp_fjζ[i, j, n]).coeffs[1] = constant_term(tmp1455[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j])
                        (temp_fjζ[i, j, n]).coeffs[2:order + 1] .= zero((temp_fjζ[i, j, n]).coeffs[1])
                        (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjξ[i, j, n]))
                        (F_J_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ_36[i, j]).coeffs[1])
                        (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjζ[i, j, n]))
                        (F_J_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ_36[i, j]).coeffs[1])
                    end
                    if j == mo
                        for m = 1:n1SEM[mo]
                            if m == 1
                                (sin_mλ[i, j, 1]).coeffs[1] = identity(constant_term(sin_λ[i, j]))
                                (sin_mλ[i, j, 1]).coeffs[2:order + 1] .= zero((sin_mλ[i, j, 1]).coeffs[1])
                                (cos_mλ[i, j, 1]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                                (cos_mλ[i, j, 1]).coeffs[2:order + 1] .= zero((cos_mλ[i, j, 1]).coeffs[1])
                                (secϕ_P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(one_t))
                                (secϕ_P_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, 1, 1]).coeffs[1])
                                (P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                                (P_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((P_nm[i, j, 1, 1]).coeffs[1])
                                (cosϕ_dP_nm[i, j, 1, 1]).coeffs[1] = constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1])
                                (cosϕ_dP_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, 1, 1]).coeffs[1])
                            else
                                (tmp1458[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                (tmp1458[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp1458[i, j, m - 1]).coeffs[1])
                                (tmp1459[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                (tmp1459[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp1459[i, j, m - 1]).coeffs[1])
                                (sin_mλ[i, j, m]).coeffs[1] = constant_term(tmp1458[i, j, m - 1]) + constant_term(tmp1459[i, j, m - 1])
                                (sin_mλ[i, j, m]).coeffs[2:order + 1] .= zero((sin_mλ[i, j, m]).coeffs[1])
                                (tmp1461[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                (tmp1461[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp1461[i, j, m - 1]).coeffs[1])
                                (tmp1462[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                (tmp1462[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp1462[i, j, m - 1]).coeffs[1])
                                (cos_mλ[i, j, m]).coeffs[1] = constant_term(tmp1461[i, j, m - 1]) - constant_term(tmp1462[i, j, m - 1])
                                (cos_mλ[i, j, m]).coeffs[2:order + 1] .= zero((cos_mλ[i, j, m]).coeffs[1])
                                (tmp1464[i, j, m - 1, m - 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j])
                                (tmp1464[i, j, m - 1, m - 1]).coeffs[2:order + 1] .= zero((tmp1464[i, j, m - 1, m - 1]).coeffs[1])
                                (secϕ_P_nm[i, j, m, m]).coeffs[1] = constant_term(tmp1464[i, j, m - 1, m - 1]) * constant_term(lnm5[m])
                                (secϕ_P_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, m, m]).coeffs[1])
                                (P_nm[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j])
                                (P_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((P_nm[i, j, m, m]).coeffs[1])
                                (tmp1467[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j])
                                (tmp1467[i, j, m, m]).coeffs[2:order + 1] .= zero((tmp1467[i, j, m, m]).coeffs[1])
                                (cosϕ_dP_nm[i, j, m, m]).coeffs[1] = constant_term(tmp1467[i, j, m, m]) * constant_term(lnm3[m])
                                (cosϕ_dP_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, m, m]).coeffs[1])
                            end
                            for n = m + 1:n1SEM[mo]
                                if n == m + 1
                                    (tmp1469[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                    (tmp1469[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp1469[i, j, n - 1, m]).coeffs[1])
                                    (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp1469[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                    (secϕ_P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, n, m]).coeffs[1])
                                else
                                    (tmp1471[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                    (tmp1471[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp1471[i, j, n - 1, m]).coeffs[1])
                                    (tmp1472[i, j, n - 1, m]).coeffs[1] = constant_term(tmp1471[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                    (tmp1472[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp1472[i, j, n - 1, m]).coeffs[1])
                                    (tmp1473[i, j, n - 2, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m])
                                    (tmp1473[i, j, n - 2, m]).coeffs[2:order + 1] .= zero((tmp1473[i, j, n - 2, m]).coeffs[1])
                                    (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp1472[i, j, n - 1, m]) + constant_term(tmp1473[i, j, n - 2, m])
                                    (secϕ_P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, n, m]).coeffs[1])
                                end
                                (P_nm[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j])
                                (P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((P_nm[i, j, n, m]).coeffs[1])
                                (tmp1476[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j])
                                (tmp1476[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1476[i, j, n, m]).coeffs[1])
                                (tmp1477[i, j, n, m]).coeffs[1] = constant_term(tmp1476[i, j, n, m]) * constant_term(lnm3[n])
                                (tmp1477[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1477[i, j, n, m]).coeffs[1])
                                (tmp1478[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m])
                                (tmp1478[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp1478[i, j, n - 1, m]).coeffs[1])
                                (cosϕ_dP_nm[i, j, n, m]).coeffs[1] = constant_term(tmp1477[i, j, n, m]) + constant_term(tmp1478[i, j, n - 1, m])
                                (cosϕ_dP_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, n, m]).coeffs[1])
                            end
                        end
                        (tmp1480[i, j, 2, 1]).coeffs[1] = constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2])
                        (tmp1480[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1480[i, j, 2, 1]).coeffs[1])
                        (tmp1481[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                        (tmp1481[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1481[i, j, 1]).coeffs[1])
                        (tmp1482[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                        (tmp1482[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1482[i, j, 1]).coeffs[1])
                        (tmp1483[i, j, 1]).coeffs[1] = constant_term(tmp1481[i, j, 1]) + constant_term(tmp1482[i, j, 1])
                        (tmp1483[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1483[i, j, 1]).coeffs[1])
                        (tmp1484[i, j, 2, 1]).coeffs[1] = constant_term(tmp1480[i, j, 2, 1]) * constant_term(tmp1483[i, j, 1])
                        (tmp1484[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1484[i, j, 2, 1]).coeffs[1])
                        (tmp1485[i, j, 2, 2]).coeffs[1] = constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2])
                        (tmp1485[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1485[i, j, 2, 2]).coeffs[1])
                        (tmp1486[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                        (tmp1486[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1486[i, j, 2]).coeffs[1])
                        (tmp1487[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                        (tmp1487[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1487[i, j, 2]).coeffs[1])
                        (tmp1488[i, j, 2]).coeffs[1] = constant_term(tmp1486[i, j, 2]) + constant_term(tmp1487[i, j, 2])
                        (tmp1488[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1488[i, j, 2]).coeffs[1])
                        (tmp1489[i, j, 2, 2]).coeffs[1] = constant_term(tmp1485[i, j, 2, 2]) * constant_term(tmp1488[i, j, 2])
                        (tmp1489[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1489[i, j, 2, 2]).coeffs[1])
                        (tmp1490[i, j, 2, 1]).coeffs[1] = constant_term(tmp1484[i, j, 2, 1]) + constant_term(tmp1489[i, j, 2, 2])
                        (tmp1490[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1490[i, j, 2, 1]).coeffs[1])
                        (F_CS_ξ[i, j]).coeffs[1] = constant_term(tmp1490[i, j, 2, 1]) / constant_term(r_p4[i, j])
                        (F_CS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ[i, j]).coeffs[1])
                        (tmp1492[i, j, 2, 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1])
                        (tmp1492[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1492[i, j, 2, 1]).coeffs[1])
                        (tmp1493[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1])
                        (tmp1493[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1493[i, j, 1]).coeffs[1])
                        (tmp1494[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1])
                        (tmp1494[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1494[i, j, 1]).coeffs[1])
                        (tmp1495[i, j, 1]).coeffs[1] = constant_term(tmp1493[i, j, 1]) - constant_term(tmp1494[i, j, 1])
                        (tmp1495[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1495[i, j, 1]).coeffs[1])
                        (tmp1496[i, j, 2, 1]).coeffs[1] = constant_term(tmp1492[i, j, 2, 1]) * constant_term(tmp1495[i, j, 1])
                        (tmp1496[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1496[i, j, 2, 1]).coeffs[1])
                        (tmp1497[i, j, 2, 2]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2])
                        (tmp1497[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1497[i, j, 2, 2]).coeffs[1])
                        (tmp1498[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2])
                        (tmp1498[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1498[i, j, 2]).coeffs[1])
                        (tmp1499[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2])
                        (tmp1499[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1499[i, j, 2]).coeffs[1])
                        (tmp1500[i, j, 2]).coeffs[1] = constant_term(tmp1498[i, j, 2]) - constant_term(tmp1499[i, j, 2])
                        (tmp1500[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1500[i, j, 2]).coeffs[1])
                        (tmp1501[i, j, 2, 2]).coeffs[1] = constant_term(tmp1497[i, j, 2, 2]) * constant_term(tmp1500[i, j, 2])
                        (tmp1501[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1501[i, j, 2, 2]).coeffs[1])
                        (tmp1502[i, j, 2, 1]).coeffs[1] = constant_term(tmp1496[i, j, 2, 1]) + constant_term(tmp1501[i, j, 2, 2])
                        (tmp1502[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1502[i, j, 2, 1]).coeffs[1])
                        (F_CS_η[i, j]).coeffs[1] = constant_term(tmp1502[i, j, 2, 1]) / constant_term(r_p4[i, j])
                        (F_CS_η[i, j]).coeffs[2:order + 1] .= zero((F_CS_η[i, j]).coeffs[1])
                        (tmp1504[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                        (tmp1504[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1504[i, j, 1]).coeffs[1])
                        (tmp1505[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                        (tmp1505[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1505[i, j, 1]).coeffs[1])
                        (tmp1506[i, j, 1]).coeffs[1] = constant_term(tmp1504[i, j, 1]) + constant_term(tmp1505[i, j, 1])
                        (tmp1506[i, j, 1]).coeffs[2:order + 1] .= zero((tmp1506[i, j, 1]).coeffs[1])
                        (tmp1507[i, j, 2, 1]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp1506[i, j, 1])
                        (tmp1507[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1507[i, j, 2, 1]).coeffs[1])
                        (tmp1508[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                        (tmp1508[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1508[i, j, 2]).coeffs[1])
                        (tmp1509[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                        (tmp1509[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1509[i, j, 2]).coeffs[1])
                        (tmp1510[i, j, 2]).coeffs[1] = constant_term(tmp1508[i, j, 2]) + constant_term(tmp1509[i, j, 2])
                        (tmp1510[i, j, 2]).coeffs[2:order + 1] .= zero((tmp1510[i, j, 2]).coeffs[1])
                        (tmp1511[i, j, 2, 2]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp1510[i, j, 2])
                        (tmp1511[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1511[i, j, 2, 2]).coeffs[1])
                        (tmp1512[i, j, 2, 1]).coeffs[1] = constant_term(tmp1507[i, j, 2, 1]) + constant_term(tmp1511[i, j, 2, 2])
                        (tmp1512[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1512[i, j, 2, 1]).coeffs[1])
                        (F_CS_ζ[i, j]).coeffs[1] = constant_term(tmp1512[i, j, 2, 1]) / constant_term(r_p4[i, j])
                        (F_CS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ[i, j]).coeffs[1])
                        (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        (F_CS_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ_36[i, j]).coeffs[1])
                        (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        (F_CS_η_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_η_36[i, j]).coeffs[1])
                        (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        (F_CS_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ_36[i, j]).coeffs[1])
                        for n = 3:n2M
                            for m = 1:n
                                (Cnm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m])
                                (Cnm_cosmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Cnm_cosmλ[i, j, n, m]).coeffs[1])
                                (Cnm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m])
                                (Cnm_sinmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Cnm_sinmλ[i, j, n, m]).coeffs[1])
                                (Snm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m])
                                (Snm_cosmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Snm_cosmλ[i, j, n, m]).coeffs[1])
                                (Snm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m])
                                (Snm_sinmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Snm_sinmλ[i, j, n, m]).coeffs[1])
                                (tmp1518[i, j, n, m]).coeffs[1] = constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n])
                                (tmp1518[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1518[i, j, n, m]).coeffs[1])
                                (tmp1519[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                (tmp1519[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1519[i, j, n, m]).coeffs[1])
                                (tmp1520[i, j, n, m]).coeffs[1] = constant_term(tmp1518[i, j, n, m]) * constant_term(tmp1519[i, j, n, m])
                                (tmp1520[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1520[i, j, n, m]).coeffs[1])
                                (tmp1521[i, j, n, m]).coeffs[1] = constant_term(tmp1520[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                (tmp1521[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1521[i, j, n, m]).coeffs[1])
                                (temp_CS_ξ[i, j, n, m]).coeffs[1] = constant_term(tmp1521[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j])
                                (temp_CS_ξ[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_ξ[i, j, n, m]).coeffs[1])
                                (tmp1523[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m])
                                (tmp1523[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1523[i, j, n, m]).coeffs[1])
                                (tmp1524[i, j, n, m]).coeffs[1] = constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m])
                                (tmp1524[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1524[i, j, n, m]).coeffs[1])
                                (tmp1525[i, j, n, m]).coeffs[1] = constant_term(tmp1523[i, j, n, m]) * constant_term(tmp1524[i, j, n, m])
                                (tmp1525[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1525[i, j, n, m]).coeffs[1])
                                (tmp1526[i, j, n, m]).coeffs[1] = constant_term(tmp1525[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                (tmp1526[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1526[i, j, n, m]).coeffs[1])
                                (temp_CS_η[i, j, n, m]).coeffs[1] = constant_term(tmp1526[i, j, n, m]) + constant_term(F_CS_η_36[i, j])
                                (temp_CS_η[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_η[i, j, n, m]).coeffs[1])
                                (tmp1528[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                (tmp1528[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1528[i, j, n, m]).coeffs[1])
                                (tmp1529[i, j, n, m]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp1528[i, j, n, m])
                                (tmp1529[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1529[i, j, n, m]).coeffs[1])
                                (tmp1530[i, j, n, m]).coeffs[1] = constant_term(tmp1529[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                (tmp1530[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp1530[i, j, n, m]).coeffs[1])
                                (temp_CS_ζ[i, j, n, m]).coeffs[1] = constant_term(tmp1530[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j])
                                (temp_CS_ζ[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_ζ[i, j, n, m]).coeffs[1])
                                (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ξ[i, j, n, m]))
                                (F_CS_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ_36[i, j]).coeffs[1])
                                (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_η[i, j, n, m]))
                                (F_CS_η_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_η_36[i, j]).coeffs[1])
                                (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ζ[i, j, n, m]))
                                (F_CS_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ_36[i, j]).coeffs[1])
                            end
                        end
                        (tmp1532[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                        (tmp1532[i, j]).coeffs[2:order + 1] .= zero((tmp1532[i, j]).coeffs[1])
                        (tmp1533[i, j]).coeffs[1] = constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j])
                        (tmp1533[i, j]).coeffs[2:order + 1] .= zero((tmp1533[i, j]).coeffs[1])
                        (F_JCS_ξ[i, j]).coeffs[1] = constant_term(tmp1532[i, j]) + constant_term(tmp1533[i, j])
                        (F_JCS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ξ[i, j]).coeffs[1])
                        (F_JCS_η[i, j]).coeffs[1] = constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j])
                        (F_JCS_η[i, j]).coeffs[2:order + 1] .= zero((F_JCS_η[i, j]).coeffs[1])
                        (tmp1536[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                        (tmp1536[i, j]).coeffs[2:order + 1] .= zero((tmp1536[i, j]).coeffs[1])
                        (tmp1537[i, j]).coeffs[1] = constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j])
                        (tmp1537[i, j]).coeffs[2:order + 1] .= zero((tmp1537[i, j]).coeffs[1])
                        (F_JCS_ζ[i, j]).coeffs[1] = constant_term(tmp1536[i, j]) + constant_term(tmp1537[i, j])
                        (F_JCS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ζ[i, j]).coeffs[1])
                    else
                        (F_JCS_ξ[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                        (F_JCS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ξ[i, j]).coeffs[1])
                        (F_JCS_η[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        (F_JCS_η[i, j]).coeffs[2:order + 1] .= zero((F_JCS_η[i, j]).coeffs[1])
                        (F_JCS_ζ[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                        (F_JCS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ζ[i, j]).coeffs[1])
                    end
                    (Rb2p[i, j, 1, 1]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j])
                    (Rb2p[i, j, 1, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 1]).coeffs[1])
                    (Rb2p[i, j, 2, 1]).coeffs[1] = -(constant_term(sin_λ[i, j]))
                    (Rb2p[i, j, 2, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 1]).coeffs[1])
                    (tmp1543[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                    (tmp1543[i, j]).coeffs[2:order + 1] .= zero((tmp1543[i, j]).coeffs[1])
                    (Rb2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp1543[i, j]) * constant_term(cos_λ[i, j])
                    (Rb2p[i, j, 3, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 1]).coeffs[1])
                    (Rb2p[i, j, 1, 2]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j])
                    (Rb2p[i, j, 1, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 2]).coeffs[1])
                    (Rb2p[i, j, 2, 2]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                    (Rb2p[i, j, 2, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 2]).coeffs[1])
                    (tmp1546[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                    (tmp1546[i, j]).coeffs[2:order + 1] .= zero((tmp1546[i, j]).coeffs[1])
                    (Rb2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp1546[i, j]) * constant_term(sin_λ[i, j])
                    (Rb2p[i, j, 3, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 2]).coeffs[1])
                    (Rb2p[i, j, 1, 3]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                    (Rb2p[i, j, 1, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 3]).coeffs[1])
                    (Rb2p[i, j, 2, 3]).coeffs[1] = identity(constant_term(zero_q_1))
                    (Rb2p[i, j, 2, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 3]).coeffs[1])
                    (Rb2p[i, j, 3, 3]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                    (Rb2p[i, j, 3, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 3]).coeffs[1])
                    (tmp1548[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j])
                    (tmp1548[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp1548[i, j, 1, 1]).coeffs[1])
                    (tmp1549[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j])
                    (tmp1549[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp1549[i, j, 1, 2]).coeffs[1])
                    (tmp1550[i, j, 1, 1]).coeffs[1] = constant_term(tmp1548[i, j, 1, 1]) + constant_term(tmp1549[i, j, 1, 2])
                    (tmp1550[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp1550[i, j, 1, 1]).coeffs[1])
                    (tmp1551[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j])
                    (tmp1551[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp1551[i, j, 1, 3]).coeffs[1])
                    (Gc2p[i, j, 1, 1]).coeffs[1] = constant_term(tmp1550[i, j, 1, 1]) + constant_term(tmp1551[i, j, 1, 3])
                    (Gc2p[i, j, 1, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 1]).coeffs[1])
                    (tmp1553[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j])
                    (tmp1553[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1553[i, j, 2, 1]).coeffs[1])
                    (tmp1554[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j])
                    (tmp1554[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1554[i, j, 2, 2]).coeffs[1])
                    (tmp1555[i, j, 2, 1]).coeffs[1] = constant_term(tmp1553[i, j, 2, 1]) + constant_term(tmp1554[i, j, 2, 2])
                    (tmp1555[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1555[i, j, 2, 1]).coeffs[1])
                    (tmp1556[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j])
                    (tmp1556[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp1556[i, j, 2, 3]).coeffs[1])
                    (Gc2p[i, j, 2, 1]).coeffs[1] = constant_term(tmp1555[i, j, 2, 1]) + constant_term(tmp1556[i, j, 2, 3])
                    (Gc2p[i, j, 2, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 1]).coeffs[1])
                    (tmp1558[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j])
                    (tmp1558[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp1558[i, j, 3, 1]).coeffs[1])
                    (tmp1559[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j])
                    (tmp1559[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp1559[i, j, 3, 2]).coeffs[1])
                    (tmp1560[i, j, 3, 1]).coeffs[1] = constant_term(tmp1558[i, j, 3, 1]) + constant_term(tmp1559[i, j, 3, 2])
                    (tmp1560[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp1560[i, j, 3, 1]).coeffs[1])
                    (tmp1561[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j])
                    (tmp1561[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp1561[i, j, 3, 3]).coeffs[1])
                    (Gc2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp1560[i, j, 3, 1]) + constant_term(tmp1561[i, j, 3, 3])
                    (Gc2p[i, j, 3, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 1]).coeffs[1])
                    (tmp1563[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j])
                    (tmp1563[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp1563[i, j, 1, 1]).coeffs[1])
                    (tmp1564[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j])
                    (tmp1564[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp1564[i, j, 1, 2]).coeffs[1])
                    (tmp1565[i, j, 1, 1]).coeffs[1] = constant_term(tmp1563[i, j, 1, 1]) + constant_term(tmp1564[i, j, 1, 2])
                    (tmp1565[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp1565[i, j, 1, 1]).coeffs[1])
                    (tmp1566[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j])
                    (tmp1566[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp1566[i, j, 1, 3]).coeffs[1])
                    (Gc2p[i, j, 1, 2]).coeffs[1] = constant_term(tmp1565[i, j, 1, 1]) + constant_term(tmp1566[i, j, 1, 3])
                    (Gc2p[i, j, 1, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 2]).coeffs[1])
                    (tmp1568[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j])
                    (tmp1568[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1568[i, j, 2, 1]).coeffs[1])
                    (tmp1569[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j])
                    (tmp1569[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1569[i, j, 2, 2]).coeffs[1])
                    (tmp1570[i, j, 2, 1]).coeffs[1] = constant_term(tmp1568[i, j, 2, 1]) + constant_term(tmp1569[i, j, 2, 2])
                    (tmp1570[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1570[i, j, 2, 1]).coeffs[1])
                    (tmp1571[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j])
                    (tmp1571[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp1571[i, j, 2, 3]).coeffs[1])
                    (Gc2p[i, j, 2, 2]).coeffs[1] = constant_term(tmp1570[i, j, 2, 1]) + constant_term(tmp1571[i, j, 2, 3])
                    (Gc2p[i, j, 2, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 2]).coeffs[1])
                    (tmp1573[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j])
                    (tmp1573[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp1573[i, j, 3, 1]).coeffs[1])
                    (tmp1574[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j])
                    (tmp1574[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp1574[i, j, 3, 2]).coeffs[1])
                    (tmp1575[i, j, 3, 1]).coeffs[1] = constant_term(tmp1573[i, j, 3, 1]) + constant_term(tmp1574[i, j, 3, 2])
                    (tmp1575[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp1575[i, j, 3, 1]).coeffs[1])
                    (tmp1576[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j])
                    (tmp1576[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp1576[i, j, 3, 3]).coeffs[1])
                    (Gc2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp1575[i, j, 3, 1]) + constant_term(tmp1576[i, j, 3, 3])
                    (Gc2p[i, j, 3, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 2]).coeffs[1])
                    (tmp1578[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j])
                    (tmp1578[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp1578[i, j, 1, 1]).coeffs[1])
                    (tmp1579[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j])
                    (tmp1579[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp1579[i, j, 1, 2]).coeffs[1])
                    (tmp1580[i, j, 1, 1]).coeffs[1] = constant_term(tmp1578[i, j, 1, 1]) + constant_term(tmp1579[i, j, 1, 2])
                    (tmp1580[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp1580[i, j, 1, 1]).coeffs[1])
                    (tmp1581[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j])
                    (tmp1581[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp1581[i, j, 1, 3]).coeffs[1])
                    (Gc2p[i, j, 1, 3]).coeffs[1] = constant_term(tmp1580[i, j, 1, 1]) + constant_term(tmp1581[i, j, 1, 3])
                    (Gc2p[i, j, 1, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 3]).coeffs[1])
                    (tmp1583[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j])
                    (tmp1583[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1583[i, j, 2, 1]).coeffs[1])
                    (tmp1584[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j])
                    (tmp1584[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1584[i, j, 2, 2]).coeffs[1])
                    (tmp1585[i, j, 2, 1]).coeffs[1] = constant_term(tmp1583[i, j, 2, 1]) + constant_term(tmp1584[i, j, 2, 2])
                    (tmp1585[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1585[i, j, 2, 1]).coeffs[1])
                    (tmp1586[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j])
                    (tmp1586[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp1586[i, j, 2, 3]).coeffs[1])
                    (Gc2p[i, j, 2, 3]).coeffs[1] = constant_term(tmp1585[i, j, 2, 1]) + constant_term(tmp1586[i, j, 2, 3])
                    (Gc2p[i, j, 2, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 3]).coeffs[1])
                    (tmp1588[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j])
                    (tmp1588[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp1588[i, j, 3, 1]).coeffs[1])
                    (tmp1589[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j])
                    (tmp1589[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp1589[i, j, 3, 2]).coeffs[1])
                    (tmp1590[i, j, 3, 1]).coeffs[1] = constant_term(tmp1588[i, j, 3, 1]) + constant_term(tmp1589[i, j, 3, 2])
                    (tmp1590[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp1590[i, j, 3, 1]).coeffs[1])
                    (tmp1591[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j])
                    (tmp1591[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp1591[i, j, 3, 3]).coeffs[1])
                    (Gc2p[i, j, 3, 3]).coeffs[1] = constant_term(tmp1590[i, j, 3, 1]) + constant_term(tmp1591[i, j, 3, 3])
                    (Gc2p[i, j, 3, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 3]).coeffs[1])
                    (tmp1593[i, j, 1, 1]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1])
                    (tmp1593[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp1593[i, j, 1, 1]).coeffs[1])
                    (tmp1594[i, j, 2, 1]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1])
                    (tmp1594[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp1594[i, j, 2, 1]).coeffs[1])
                    (tmp1595[i, j, 1, 1]).coeffs[1] = constant_term(tmp1593[i, j, 1, 1]) + constant_term(tmp1594[i, j, 2, 1])
                    (tmp1595[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp1595[i, j, 1, 1]).coeffs[1])
                    (tmp1596[i, j, 3, 1]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1])
                    (tmp1596[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp1596[i, j, 3, 1]).coeffs[1])
                    (F_JCS_x[i, j]).coeffs[1] = constant_term(tmp1595[i, j, 1, 1]) + constant_term(tmp1596[i, j, 3, 1])
                    (F_JCS_x[i, j]).coeffs[2:order + 1] .= zero((F_JCS_x[i, j]).coeffs[1])
                    (tmp1598[i, j, 1, 2]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2])
                    (tmp1598[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp1598[i, j, 1, 2]).coeffs[1])
                    (tmp1599[i, j, 2, 2]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2])
                    (tmp1599[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp1599[i, j, 2, 2]).coeffs[1])
                    (tmp1600[i, j, 1, 2]).coeffs[1] = constant_term(tmp1598[i, j, 1, 2]) + constant_term(tmp1599[i, j, 2, 2])
                    (tmp1600[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp1600[i, j, 1, 2]).coeffs[1])
                    (tmp1601[i, j, 3, 2]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2])
                    (tmp1601[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp1601[i, j, 3, 2]).coeffs[1])
                    (F_JCS_y[i, j]).coeffs[1] = constant_term(tmp1600[i, j, 1, 2]) + constant_term(tmp1601[i, j, 3, 2])
                    (F_JCS_y[i, j]).coeffs[2:order + 1] .= zero((F_JCS_y[i, j]).coeffs[1])
                    (tmp1603[i, j, 1, 3]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3])
                    (tmp1603[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp1603[i, j, 1, 3]).coeffs[1])
                    (tmp1604[i, j, 2, 3]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3])
                    (tmp1604[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp1604[i, j, 2, 3]).coeffs[1])
                    (tmp1605[i, j, 1, 3]).coeffs[1] = constant_term(tmp1603[i, j, 1, 3]) + constant_term(tmp1604[i, j, 2, 3])
                    (tmp1605[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp1605[i, j, 1, 3]).coeffs[1])
                    (tmp1606[i, j, 3, 3]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3])
                    (tmp1606[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp1606[i, j, 3, 3]).coeffs[1])
                    (F_JCS_z[i, j]).coeffs[1] = constant_term(tmp1605[i, j, 1, 3]) + constant_term(tmp1606[i, j, 3, 3])
                    (F_JCS_z[i, j]).coeffs[2:order + 1] .= zero((F_JCS_z[i, j]).coeffs[1])
                end
            end
        end
    end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    (tmp1608[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_x[i, j])
                    (tmp1608[i, j]).coeffs[2:order + 1] .= zero((tmp1608[i, j]).coeffs[1])
                    (temp_accX_j[i, j]).coeffs[1] = constant_term(accX[j]) - constant_term(tmp1608[i, j])
                    (temp_accX_j[i, j]).coeffs[2:order + 1] .= zero((temp_accX_j[i, j]).coeffs[1])
                    (accX[j]).coeffs[1] = identity(constant_term(temp_accX_j[i, j]))
                    (accX[j]).coeffs[2:order + 1] .= zero((accX[j]).coeffs[1])
                    (tmp1610[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_y[i, j])
                    (tmp1610[i, j]).coeffs[2:order + 1] .= zero((tmp1610[i, j]).coeffs[1])
                    (temp_accY_j[i, j]).coeffs[1] = constant_term(accY[j]) - constant_term(tmp1610[i, j])
                    (temp_accY_j[i, j]).coeffs[2:order + 1] .= zero((temp_accY_j[i, j]).coeffs[1])
                    (accY[j]).coeffs[1] = identity(constant_term(temp_accY_j[i, j]))
                    (accY[j]).coeffs[2:order + 1] .= zero((accY[j]).coeffs[1])
                    (tmp1612[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_z[i, j])
                    (tmp1612[i, j]).coeffs[2:order + 1] .= zero((tmp1612[i, j]).coeffs[1])
                    (temp_accZ_j[i, j]).coeffs[1] = constant_term(accZ[j]) - constant_term(tmp1612[i, j])
                    (temp_accZ_j[i, j]).coeffs[2:order + 1] .= zero((temp_accZ_j[i, j]).coeffs[1])
                    (accZ[j]).coeffs[1] = identity(constant_term(temp_accZ_j[i, j]))
                    (accZ[j]).coeffs[2:order + 1] .= zero((accZ[j]).coeffs[1])
                    (tmp1614[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_x[i, j])
                    (tmp1614[i, j]).coeffs[2:order + 1] .= zero((tmp1614[i, j]).coeffs[1])
                    (temp_accX_i[i, j]).coeffs[1] = constant_term(accX[i]) + constant_term(tmp1614[i, j])
                    (temp_accX_i[i, j]).coeffs[2:order + 1] .= zero((temp_accX_i[i, j]).coeffs[1])
                    (accX[i]).coeffs[1] = identity(constant_term(temp_accX_i[i, j]))
                    (accX[i]).coeffs[2:order + 1] .= zero((accX[i]).coeffs[1])
                    (tmp1616[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_y[i, j])
                    (tmp1616[i, j]).coeffs[2:order + 1] .= zero((tmp1616[i, j]).coeffs[1])
                    (temp_accY_i[i, j]).coeffs[1] = constant_term(accY[i]) + constant_term(tmp1616[i, j])
                    (temp_accY_i[i, j]).coeffs[2:order + 1] .= zero((temp_accY_i[i, j]).coeffs[1])
                    (accY[i]).coeffs[1] = identity(constant_term(temp_accY_i[i, j]))
                    (accY[i]).coeffs[2:order + 1] .= zero((accY[i]).coeffs[1])
                    (tmp1618[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_z[i, j])
                    (tmp1618[i, j]).coeffs[2:order + 1] .= zero((tmp1618[i, j]).coeffs[1])
                    (temp_accZ_i[i, j]).coeffs[1] = constant_term(accZ[i]) + constant_term(tmp1618[i, j])
                    (temp_accZ_i[i, j]).coeffs[2:order + 1] .= zero((temp_accZ_i[i, j]).coeffs[1])
                    (accZ[i]).coeffs[1] = identity(constant_term(temp_accZ_i[i, j]))
                    (accZ[i]).coeffs[2:order + 1] .= zero((accZ[i]).coeffs[1])
                    if j == mo
                        (tmp1620[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j])
                        (tmp1620[i, j]).coeffs[2:order + 1] .= zero((tmp1620[i, j]).coeffs[1])
                        (tmp1621[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j])
                        (tmp1621[i, j]).coeffs[2:order + 1] .= zero((tmp1621[i, j]).coeffs[1])
                        (tmp1622[i, j]).coeffs[1] = constant_term(tmp1620[i, j]) - constant_term(tmp1621[i, j])
                        (tmp1622[i, j]).coeffs[2:order + 1] .= zero((tmp1622[i, j]).coeffs[1])
                        (N_MfigM_pmA_x[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp1622[i, j])
                        (N_MfigM_pmA_x[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_x[i]).coeffs[1])
                        (tmp1624[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j])
                        (tmp1624[i, j]).coeffs[2:order + 1] .= zero((tmp1624[i, j]).coeffs[1])
                        (tmp1625[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_z[i, j])
                        (tmp1625[i, j]).coeffs[2:order + 1] .= zero((tmp1625[i, j]).coeffs[1])
                        (tmp1626[i, j]).coeffs[1] = constant_term(tmp1624[i, j]) - constant_term(tmp1625[i, j])
                        (tmp1626[i, j]).coeffs[2:order + 1] .= zero((tmp1626[i, j]).coeffs[1])
                        (N_MfigM_pmA_y[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp1626[i, j])
                        (N_MfigM_pmA_y[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_y[i]).coeffs[1])
                        (tmp1628[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_y[i, j])
                        (tmp1628[i, j]).coeffs[2:order + 1] .= zero((tmp1628[i, j]).coeffs[1])
                        (tmp1629[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j])
                        (tmp1629[i, j]).coeffs[2:order + 1] .= zero((tmp1629[i, j]).coeffs[1])
                        (tmp1630[i, j]).coeffs[1] = constant_term(tmp1628[i, j]) - constant_term(tmp1629[i, j])
                        (tmp1630[i, j]).coeffs[2:order + 1] .= zero((tmp1630[i, j]).coeffs[1])
                        (N_MfigM_pmA_z[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp1630[i, j])
                        (N_MfigM_pmA_z[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_z[i]).coeffs[1])
                        (tmp1632[i]).coeffs[1] = constant_term(N_MfigM_pmA_x[i]) * constant_term(μ[j])
                        (tmp1632[i]).coeffs[2:order + 1] .= zero((tmp1632[i]).coeffs[1])
                        (temp_N_M_x[i]).coeffs[1] = constant_term(N_MfigM[1]) - constant_term(tmp1632[i])
                        (temp_N_M_x[i]).coeffs[2:order + 1] .= zero((temp_N_M_x[i]).coeffs[1])
                        (N_MfigM[1]).coeffs[1] = identity(constant_term(temp_N_M_x[i]))
                        (N_MfigM[1]).coeffs[2:order + 1] .= zero((N_MfigM[1]).coeffs[1])
                        (tmp1634[i]).coeffs[1] = constant_term(N_MfigM_pmA_y[i]) * constant_term(μ[j])
                        (tmp1634[i]).coeffs[2:order + 1] .= zero((tmp1634[i]).coeffs[1])
                        (temp_N_M_y[i]).coeffs[1] = constant_term(N_MfigM[2]) - constant_term(tmp1634[i])
                        (temp_N_M_y[i]).coeffs[2:order + 1] .= zero((temp_N_M_y[i]).coeffs[1])
                        (N_MfigM[2]).coeffs[1] = identity(constant_term(temp_N_M_y[i]))
                        (N_MfigM[2]).coeffs[2:order + 1] .= zero((N_MfigM[2]).coeffs[1])
                        (tmp1636[i]).coeffs[1] = constant_term(N_MfigM_pmA_z[i]) * constant_term(μ[j])
                        (tmp1636[i]).coeffs[2:order + 1] .= zero((tmp1636[i]).coeffs[1])
                        (temp_N_M_z[i]).coeffs[1] = constant_term(N_MfigM[3]) - constant_term(tmp1636[i])
                        (temp_N_M_z[i]).coeffs[2:order + 1] .= zero((temp_N_M_z[i]).coeffs[1])
                        (N_MfigM[3]).coeffs[1] = identity(constant_term(temp_N_M_z[i]))
                        (N_MfigM[3]).coeffs[2:order + 1] .= zero((N_MfigM[3]).coeffs[1])
                    end
                end
            end
        end
    end
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                (_4ϕj[i, j]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[j])
                (_4ϕj[i, j]).coeffs[2:order + 1] .= zero((_4ϕj[i, j]).coeffs[1])
                (ϕi_plus_4ϕj[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j])
                (ϕi_plus_4ϕj[i, j]).coeffs[2:order + 1] .= zero((ϕi_plus_4ϕj[i, j]).coeffs[1])
                (_2v2[i, j]).coeffs[1] = constant_term(2) * constant_term(v2[i])
                (_2v2[i, j]).coeffs[2:order + 1] .= zero((_2v2[i, j]).coeffs[1])
                (sj2_plus_2si2[i, j]).coeffs[1] = constant_term(v2[j]) + constant_term(_2v2[i, j])
                (sj2_plus_2si2[i, j]).coeffs[2:order + 1] .= zero((sj2_plus_2si2[i, j]).coeffs[1])
                (tmp1645[i, j]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i, j])
                (tmp1645[i, j]).coeffs[2:order + 1] .= zero((tmp1645[i, j]).coeffs[1])
                (sj2_plus_2si2_minus_4vivj[i, j]).coeffs[1] = constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp1645[i, j])
                (sj2_plus_2si2_minus_4vivj[i, j]).coeffs[2:order + 1] .= zero((sj2_plus_2si2_minus_4vivj[i, j]).coeffs[1])
                (ϕs_and_vs[i, j]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j])
                (ϕs_and_vs[i, j]).coeffs[2:order + 1] .= zero((ϕs_and_vs[i, j]).coeffs[1])
                (Xij_t_Ui[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(dq[3i - 2])
                (Xij_t_Ui[i, j]).coeffs[2:order + 1] .= zero((Xij_t_Ui[i, j]).coeffs[1])
                (Yij_t_Vi[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(dq[3i - 1])
                (Yij_t_Vi[i, j]).coeffs[2:order + 1] .= zero((Yij_t_Vi[i, j]).coeffs[1])
                (Zij_t_Wi[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(dq[3i])
                (Zij_t_Wi[i, j]).coeffs[2:order + 1] .= zero((Zij_t_Wi[i, j]).coeffs[1])
                (tmp1651[i, j]).coeffs[1] = constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j])
                (tmp1651[i, j]).coeffs[2:order + 1] .= zero((tmp1651[i, j]).coeffs[1])
                (Rij_dot_Vi[i, j]).coeffs[1] = constant_term(tmp1651[i, j]) + constant_term(Zij_t_Wi[i, j])
                (Rij_dot_Vi[i, j]).coeffs[2:order + 1] .= zero((Rij_dot_Vi[i, j]).coeffs[1])
                (tmp1654[i, j]).coeffs[1] = constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2))
                (tmp1654[i, j]).coeffs[2:order + 1] .= zero((tmp1654[i, j]).coeffs[1])
                (pn1t7[i, j]).coeffs[1] = constant_term(tmp1654[i, j]) / constant_term(r_p2[i, j])
                (pn1t7[i, j]).coeffs[2:order + 1] .= zero((pn1t7[i, j]).coeffs[1])
                (tmp1657[i, j]).coeffs[1] = constant_term(1.5) * constant_term(pn1t7[i, j])
                (tmp1657[i, j]).coeffs[2:order + 1] .= zero((tmp1657[i, j]).coeffs[1])
                (pn1t2_7[i, j]).coeffs[1] = constant_term(ϕs_and_vs[i, j]) - constant_term(tmp1657[i, j])
                (pn1t2_7[i, j]).coeffs[2:order + 1] .= zero((pn1t2_7[i, j]).coeffs[1])
                (pn1t1_7[i, j]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i, j])
                (pn1t1_7[i, j]).coeffs[2:order + 1] .= zero((pn1t1_7[i, j]).coeffs[1])
            end
        end
        (pntempX[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (pntempX[j]).coeffs[2:order + 1] .= zero((pntempX[j]).coeffs[1])
        (pntempY[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (pntempY[j]).coeffs[2:order + 1] .= zero((pntempY[j]).coeffs[1])
        (pntempZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (pntempZ[j]).coeffs[2:order + 1] .= zero((pntempZ[j]).coeffs[1])
    end
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                (pNX_t_X[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(X[i, j])
                (pNX_t_X[i, j]).coeffs[2:order + 1] .= zero((pNX_t_X[i, j]).coeffs[1])
                (pNY_t_Y[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(Y[i, j])
                (pNY_t_Y[i, j]).coeffs[2:order + 1] .= zero((pNY_t_Y[i, j]).coeffs[1])
                (pNZ_t_Z[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(Z[i, j])
                (pNZ_t_Z[i, j]).coeffs[2:order + 1] .= zero((pNZ_t_Z[i, j]).coeffs[1])
                (tmp1664[i, j]).coeffs[1] = constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j])
                (tmp1664[i, j]).coeffs[2:order + 1] .= zero((tmp1664[i, j]).coeffs[1])
                (tmp1665[i, j]).coeffs[1] = constant_term(tmp1664[i, j]) + constant_term(pNZ_t_Z[i, j])
                (tmp1665[i, j]).coeffs[2:order + 1] .= zero((tmp1665[i, j]).coeffs[1])
                (tmp1666[i, j]).coeffs[1] = constant_term(0.5) * constant_term(tmp1665[i, j])
                (tmp1666[i, j]).coeffs[2:order + 1] .= zero((tmp1666[i, j]).coeffs[1])
                (pn1[i, j]).coeffs[1] = constant_term(pn1t1_7[i, j]) + constant_term(tmp1666[i, j])
                (pn1[i, j]).coeffs[2:order + 1] .= zero((pn1[i, j]).coeffs[1])
                (X_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j])
                (X_t_pn1[i, j]).coeffs[2:order + 1] .= zero((X_t_pn1[i, j]).coeffs[1])
                (Y_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j])
                (Y_t_pn1[i, j]).coeffs[2:order + 1] .= zero((Y_t_pn1[i, j]).coeffs[1])
                (Z_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j])
                (Z_t_pn1[i, j]).coeffs[2:order + 1] .= zero((Z_t_pn1[i, j]).coeffs[1])
                (pNX_t_pn3[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(pn3[i, j])
                (pNX_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNX_t_pn3[i, j]).coeffs[1])
                (pNY_t_pn3[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(pn3[i, j])
                (pNY_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNY_t_pn3[i, j]).coeffs[1])
                (pNZ_t_pn3[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(pn3[i, j])
                (pNZ_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNZ_t_pn3[i, j]).coeffs[1])
                (tmp1674[i, j]).coeffs[1] = constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j])
                (tmp1674[i, j]).coeffs[2:order + 1] .= zero((tmp1674[i, j]).coeffs[1])
                (termpnx[i, j]).coeffs[1] = constant_term(X_t_pn1[i, j]) + constant_term(tmp1674[i, j])
                (termpnx[i, j]).coeffs[2:order + 1] .= zero((termpnx[i, j]).coeffs[1])
                (sumpnx[i, j]).coeffs[1] = constant_term(pntempX[j]) + constant_term(termpnx[i, j])
                (sumpnx[i, j]).coeffs[2:order + 1] .= zero((sumpnx[i, j]).coeffs[1])
                (pntempX[j]).coeffs[1] = identity(constant_term(sumpnx[i, j]))
                (pntempX[j]).coeffs[2:order + 1] .= zero((pntempX[j]).coeffs[1])
                (tmp1677[i, j]).coeffs[1] = constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j])
                (tmp1677[i, j]).coeffs[2:order + 1] .= zero((tmp1677[i, j]).coeffs[1])
                (termpny[i, j]).coeffs[1] = constant_term(Y_t_pn1[i, j]) + constant_term(tmp1677[i, j])
                (termpny[i, j]).coeffs[2:order + 1] .= zero((termpny[i, j]).coeffs[1])
                (sumpny[i, j]).coeffs[1] = constant_term(pntempY[j]) + constant_term(termpny[i, j])
                (sumpny[i, j]).coeffs[2:order + 1] .= zero((sumpny[i, j]).coeffs[1])
                (pntempY[j]).coeffs[1] = identity(constant_term(sumpny[i, j]))
                (pntempY[j]).coeffs[2:order + 1] .= zero((pntempY[j]).coeffs[1])
                (tmp1680[i, j]).coeffs[1] = constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j])
                (tmp1680[i, j]).coeffs[2:order + 1] .= zero((tmp1680[i, j]).coeffs[1])
                (termpnz[i, j]).coeffs[1] = constant_term(Z_t_pn1[i, j]) + constant_term(tmp1680[i, j])
                (termpnz[i, j]).coeffs[2:order + 1] .= zero((termpnz[i, j]).coeffs[1])
                (sumpnz[i, j]).coeffs[1] = constant_term(pntempZ[j]) + constant_term(termpnz[i, j])
                (sumpnz[i, j]).coeffs[2:order + 1] .= zero((sumpnz[i, j]).coeffs[1])
                (pntempZ[j]).coeffs[1] = identity(constant_term(sumpnz[i, j]))
                (pntempZ[j]).coeffs[2:order + 1] .= zero((pntempZ[j]).coeffs[1])
            end
        end
        (postNewtonX[j]).coeffs[1] = constant_term(pntempX[j]) * constant_term(c_m2)
        (postNewtonX[j]).coeffs[2:order + 1] .= zero((postNewtonX[j]).coeffs[1])
        (postNewtonY[j]).coeffs[1] = constant_term(pntempY[j]) * constant_term(c_m2)
        (postNewtonY[j]).coeffs[2:order + 1] .= zero((postNewtonY[j]).coeffs[1])
        (postNewtonZ[j]).coeffs[1] = constant_term(pntempZ[j]) * constant_term(c_m2)
        (postNewtonZ[j]).coeffs[2:order + 1] .= zero((postNewtonZ[j]).coeffs[1])
    end
    for i = 1:N_ext
        (dq[3 * (N + i) - 2]).coeffs[1] = constant_term(postNewtonX[i]) + constant_term(accX[i])
        (dq[3 * (N + i) - 2]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 2]).coeffs[1])
        (dq[3 * (N + i) - 1]).coeffs[1] = constant_term(postNewtonY[i]) + constant_term(accY[i])
        (dq[3 * (N + i) - 1]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 1]).coeffs[1])
        (dq[3 * (N + i)]).coeffs[1] = constant_term(postNewtonZ[i]) + constant_term(accZ[i])
        (dq[3 * (N + i)]).coeffs[2:order + 1] .= zero((dq[3 * (N + i)]).coeffs[1])
    end
    for i = N_ext + 1:N
        (dq[3 * (N + i) - 2]).coeffs[1] = identity(constant_term(postNewtonX[i]))
        (dq[3 * (N + i) - 2]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 2]).coeffs[1])
        (dq[3 * (N + i) - 1]).coeffs[1] = identity(constant_term(postNewtonY[i]))
        (dq[3 * (N + i) - 1]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 1]).coeffs[1])
        (dq[3 * (N + i)]).coeffs[1] = identity(constant_term(postNewtonZ[i]))
        (dq[3 * (N + i)]).coeffs[2:order + 1] .= zero((dq[3 * (N + i)]).coeffs[1])
    end
    tmp1689.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4])
    tmp1689.coeffs[2:order + 1] .= zero(tmp1689.coeffs[1])
    tmp1690.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5])
    tmp1690.coeffs[2:order + 1] .= zero(tmp1690.coeffs[1])
    tmp1691.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6])
    tmp1691.coeffs[2:order + 1] .= zero(tmp1691.coeffs[1])
    tmp1692.coeffs[1] = constant_term(tmp1690) + constant_term(tmp1691)
    tmp1692.coeffs[2:order + 1] .= zero(tmp1692.coeffs[1])
    Iω_x.coeffs[1] = constant_term(tmp1689) + constant_term(tmp1692)
    Iω_x.coeffs[2:order + 1] .= zero(Iω_x.coeffs[1])
    tmp1694.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4])
    tmp1694.coeffs[2:order + 1] .= zero(tmp1694.coeffs[1])
    tmp1695.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5])
    tmp1695.coeffs[2:order + 1] .= zero(tmp1695.coeffs[1])
    tmp1696.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6])
    tmp1696.coeffs[2:order + 1] .= zero(tmp1696.coeffs[1])
    tmp1697.coeffs[1] = constant_term(tmp1695) + constant_term(tmp1696)
    tmp1697.coeffs[2:order + 1] .= zero(tmp1697.coeffs[1])
    Iω_y.coeffs[1] = constant_term(tmp1694) + constant_term(tmp1697)
    Iω_y.coeffs[2:order + 1] .= zero(Iω_y.coeffs[1])
    tmp1699.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4])
    tmp1699.coeffs[2:order + 1] .= zero(tmp1699.coeffs[1])
    tmp1700.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5])
    tmp1700.coeffs[2:order + 1] .= zero(tmp1700.coeffs[1])
    tmp1701.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6])
    tmp1701.coeffs[2:order + 1] .= zero(tmp1701.coeffs[1])
    tmp1702.coeffs[1] = constant_term(tmp1700) + constant_term(tmp1701)
    tmp1702.coeffs[2:order + 1] .= zero(tmp1702.coeffs[1])
    Iω_z.coeffs[1] = constant_term(tmp1699) + constant_term(tmp1702)
    Iω_z.coeffs[2:order + 1] .= zero(Iω_z.coeffs[1])
    tmp1704.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_z)
    tmp1704.coeffs[2:order + 1] .= zero(tmp1704.coeffs[1])
    tmp1705.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_y)
    tmp1705.coeffs[2:order + 1] .= zero(tmp1705.coeffs[1])
    ωxIω_x.coeffs[1] = constant_term(tmp1704) - constant_term(tmp1705)
    ωxIω_x.coeffs[2:order + 1] .= zero(ωxIω_x.coeffs[1])
    tmp1707.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_x)
    tmp1707.coeffs[2:order + 1] .= zero(tmp1707.coeffs[1])
    tmp1708.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_z)
    tmp1708.coeffs[2:order + 1] .= zero(tmp1708.coeffs[1])
    ωxIω_y.coeffs[1] = constant_term(tmp1707) - constant_term(tmp1708)
    ωxIω_y.coeffs[2:order + 1] .= zero(ωxIω_y.coeffs[1])
    tmp1710.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_y)
    tmp1710.coeffs[2:order + 1] .= zero(tmp1710.coeffs[1])
    tmp1711.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_x)
    tmp1711.coeffs[2:order + 1] .= zero(tmp1711.coeffs[1])
    ωxIω_z.coeffs[1] = constant_term(tmp1710) - constant_term(tmp1711)
    ωxIω_z.coeffs[2:order + 1] .= zero(ωxIω_z.coeffs[1])
    tmp1713.coeffs[1] = constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4])
    tmp1713.coeffs[2:order + 1] .= zero(tmp1713.coeffs[1])
    tmp1714.coeffs[1] = constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5])
    tmp1714.coeffs[2:order + 1] .= zero(tmp1714.coeffs[1])
    tmp1715.coeffs[1] = constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6])
    tmp1715.coeffs[2:order + 1] .= zero(tmp1715.coeffs[1])
    tmp1716.coeffs[1] = constant_term(tmp1714) + constant_term(tmp1715)
    tmp1716.coeffs[2:order + 1] .= zero(tmp1716.coeffs[1])
    dIω_x.coeffs[1] = constant_term(tmp1713) + constant_term(tmp1716)
    dIω_x.coeffs[2:order + 1] .= zero(dIω_x.coeffs[1])
    tmp1718.coeffs[1] = constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4])
    tmp1718.coeffs[2:order + 1] .= zero(tmp1718.coeffs[1])
    tmp1719.coeffs[1] = constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5])
    tmp1719.coeffs[2:order + 1] .= zero(tmp1719.coeffs[1])
    tmp1720.coeffs[1] = constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6])
    tmp1720.coeffs[2:order + 1] .= zero(tmp1720.coeffs[1])
    tmp1721.coeffs[1] = constant_term(tmp1719) + constant_term(tmp1720)
    tmp1721.coeffs[2:order + 1] .= zero(tmp1721.coeffs[1])
    dIω_y.coeffs[1] = constant_term(tmp1718) + constant_term(tmp1721)
    dIω_y.coeffs[2:order + 1] .= zero(dIω_y.coeffs[1])
    tmp1723.coeffs[1] = constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4])
    tmp1723.coeffs[2:order + 1] .= zero(tmp1723.coeffs[1])
    tmp1724.coeffs[1] = constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5])
    tmp1724.coeffs[2:order + 1] .= zero(tmp1724.coeffs[1])
    tmp1725.coeffs[1] = constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6])
    tmp1725.coeffs[2:order + 1] .= zero(tmp1725.coeffs[1])
    tmp1726.coeffs[1] = constant_term(tmp1724) + constant_term(tmp1725)
    tmp1726.coeffs[2:order + 1] .= zero(tmp1726.coeffs[1])
    dIω_z.coeffs[1] = constant_term(tmp1723) + constant_term(tmp1726)
    dIω_z.coeffs[2:order + 1] .= zero(dIω_z.coeffs[1])
    er_EM_I_1.coeffs[1] = constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_1.coeffs[2:order + 1] .= zero(er_EM_I_1.coeffs[1])
    er_EM_I_2.coeffs[1] = constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_2.coeffs[2:order + 1] .= zero(er_EM_I_2.coeffs[1])
    er_EM_I_3.coeffs[1] = constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_3.coeffs[2:order + 1] .= zero(er_EM_I_3.coeffs[1])
    p_E_I_1.coeffs[1] = identity(constant_term(RotM[3, 1, ea]))
    p_E_I_1.coeffs[2:order + 1] .= zero(p_E_I_1.coeffs[1])
    p_E_I_2.coeffs[1] = identity(constant_term(RotM[3, 2, ea]))
    p_E_I_2.coeffs[2:order + 1] .= zero(p_E_I_2.coeffs[1])
    p_E_I_3.coeffs[1] = identity(constant_term(RotM[3, 3, ea]))
    p_E_I_3.coeffs[2:order + 1] .= zero(p_E_I_3.coeffs[1])
    tmp1731.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1)
    tmp1731.coeffs[2:order + 1] .= zero(tmp1731.coeffs[1])
    tmp1732.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2)
    tmp1732.coeffs[2:order + 1] .= zero(tmp1732.coeffs[1])
    tmp1733.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3)
    tmp1733.coeffs[2:order + 1] .= zero(tmp1733.coeffs[1])
    tmp1734.coeffs[1] = constant_term(tmp1732) + constant_term(tmp1733)
    tmp1734.coeffs[2:order + 1] .= zero(tmp1734.coeffs[1])
    er_EM_1.coeffs[1] = constant_term(tmp1731) + constant_term(tmp1734)
    er_EM_1.coeffs[2:order + 1] .= zero(er_EM_1.coeffs[1])
    tmp1736.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1)
    tmp1736.coeffs[2:order + 1] .= zero(tmp1736.coeffs[1])
    tmp1737.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2)
    tmp1737.coeffs[2:order + 1] .= zero(tmp1737.coeffs[1])
    tmp1738.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3)
    tmp1738.coeffs[2:order + 1] .= zero(tmp1738.coeffs[1])
    tmp1739.coeffs[1] = constant_term(tmp1737) + constant_term(tmp1738)
    tmp1739.coeffs[2:order + 1] .= zero(tmp1739.coeffs[1])
    er_EM_2.coeffs[1] = constant_term(tmp1736) + constant_term(tmp1739)
    er_EM_2.coeffs[2:order + 1] .= zero(er_EM_2.coeffs[1])
    tmp1741.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1)
    tmp1741.coeffs[2:order + 1] .= zero(tmp1741.coeffs[1])
    tmp1742.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2)
    tmp1742.coeffs[2:order + 1] .= zero(tmp1742.coeffs[1])
    tmp1743.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3)
    tmp1743.coeffs[2:order + 1] .= zero(tmp1743.coeffs[1])
    tmp1744.coeffs[1] = constant_term(tmp1742) + constant_term(tmp1743)
    tmp1744.coeffs[2:order + 1] .= zero(tmp1744.coeffs[1])
    er_EM_3.coeffs[1] = constant_term(tmp1741) + constant_term(tmp1744)
    er_EM_3.coeffs[2:order + 1] .= zero(er_EM_3.coeffs[1])
    tmp1746.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1)
    tmp1746.coeffs[2:order + 1] .= zero(tmp1746.coeffs[1])
    tmp1747.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2)
    tmp1747.coeffs[2:order + 1] .= zero(tmp1747.coeffs[1])
    tmp1748.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3)
    tmp1748.coeffs[2:order + 1] .= zero(tmp1748.coeffs[1])
    tmp1749.coeffs[1] = constant_term(tmp1747) + constant_term(tmp1748)
    tmp1749.coeffs[2:order + 1] .= zero(tmp1749.coeffs[1])
    p_E_1.coeffs[1] = constant_term(tmp1746) + constant_term(tmp1749)
    p_E_1.coeffs[2:order + 1] .= zero(p_E_1.coeffs[1])
    tmp1751.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1)
    tmp1751.coeffs[2:order + 1] .= zero(tmp1751.coeffs[1])
    tmp1752.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2)
    tmp1752.coeffs[2:order + 1] .= zero(tmp1752.coeffs[1])
    tmp1753.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3)
    tmp1753.coeffs[2:order + 1] .= zero(tmp1753.coeffs[1])
    tmp1754.coeffs[1] = constant_term(tmp1752) + constant_term(tmp1753)
    tmp1754.coeffs[2:order + 1] .= zero(tmp1754.coeffs[1])
    p_E_2.coeffs[1] = constant_term(tmp1751) + constant_term(tmp1754)
    p_E_2.coeffs[2:order + 1] .= zero(p_E_2.coeffs[1])
    tmp1756.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1)
    tmp1756.coeffs[2:order + 1] .= zero(tmp1756.coeffs[1])
    tmp1757.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2)
    tmp1757.coeffs[2:order + 1] .= zero(tmp1757.coeffs[1])
    tmp1758.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3)
    tmp1758.coeffs[2:order + 1] .= zero(tmp1758.coeffs[1])
    tmp1759.coeffs[1] = constant_term(tmp1757) + constant_term(tmp1758)
    tmp1759.coeffs[2:order + 1] .= zero(tmp1759.coeffs[1])
    p_E_3.coeffs[1] = constant_term(tmp1756) + constant_term(tmp1759)
    p_E_3.coeffs[2:order + 1] .= zero(p_E_3.coeffs[1])
    tmp1761.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(er_EM_1)
    tmp1761.coeffs[2:order + 1] .= zero(tmp1761.coeffs[1])
    tmp1762.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(er_EM_2)
    tmp1762.coeffs[2:order + 1] .= zero(tmp1762.coeffs[1])
    tmp1763.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(er_EM_3)
    tmp1763.coeffs[2:order + 1] .= zero(tmp1763.coeffs[1])
    tmp1764.coeffs[1] = constant_term(tmp1762) + constant_term(tmp1763)
    tmp1764.coeffs[2:order + 1] .= zero(tmp1764.coeffs[1])
    I_er_EM_1.coeffs[1] = constant_term(tmp1761) + constant_term(tmp1764)
    I_er_EM_1.coeffs[2:order + 1] .= zero(I_er_EM_1.coeffs[1])
    tmp1766.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(er_EM_1)
    tmp1766.coeffs[2:order + 1] .= zero(tmp1766.coeffs[1])
    tmp1767.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(er_EM_2)
    tmp1767.coeffs[2:order + 1] .= zero(tmp1767.coeffs[1])
    tmp1768.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(er_EM_3)
    tmp1768.coeffs[2:order + 1] .= zero(tmp1768.coeffs[1])
    tmp1769.coeffs[1] = constant_term(tmp1767) + constant_term(tmp1768)
    tmp1769.coeffs[2:order + 1] .= zero(tmp1769.coeffs[1])
    I_er_EM_2.coeffs[1] = constant_term(tmp1766) + constant_term(tmp1769)
    I_er_EM_2.coeffs[2:order + 1] .= zero(I_er_EM_2.coeffs[1])
    tmp1771.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(er_EM_1)
    tmp1771.coeffs[2:order + 1] .= zero(tmp1771.coeffs[1])
    tmp1772.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(er_EM_2)
    tmp1772.coeffs[2:order + 1] .= zero(tmp1772.coeffs[1])
    tmp1773.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(er_EM_3)
    tmp1773.coeffs[2:order + 1] .= zero(tmp1773.coeffs[1])
    tmp1774.coeffs[1] = constant_term(tmp1772) + constant_term(tmp1773)
    tmp1774.coeffs[2:order + 1] .= zero(tmp1774.coeffs[1])
    I_er_EM_3.coeffs[1] = constant_term(tmp1771) + constant_term(tmp1774)
    I_er_EM_3.coeffs[2:order + 1] .= zero(I_er_EM_3.coeffs[1])
    tmp1776.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(p_E_1)
    tmp1776.coeffs[2:order + 1] .= zero(tmp1776.coeffs[1])
    tmp1777.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(p_E_2)
    tmp1777.coeffs[2:order + 1] .= zero(tmp1777.coeffs[1])
    tmp1778.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(p_E_3)
    tmp1778.coeffs[2:order + 1] .= zero(tmp1778.coeffs[1])
    tmp1779.coeffs[1] = constant_term(tmp1777) + constant_term(tmp1778)
    tmp1779.coeffs[2:order + 1] .= zero(tmp1779.coeffs[1])
    I_p_E_1.coeffs[1] = constant_term(tmp1776) + constant_term(tmp1779)
    I_p_E_1.coeffs[2:order + 1] .= zero(I_p_E_1.coeffs[1])
    tmp1781.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(p_E_1)
    tmp1781.coeffs[2:order + 1] .= zero(tmp1781.coeffs[1])
    tmp1782.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(p_E_2)
    tmp1782.coeffs[2:order + 1] .= zero(tmp1782.coeffs[1])
    tmp1783.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(p_E_3)
    tmp1783.coeffs[2:order + 1] .= zero(tmp1783.coeffs[1])
    tmp1784.coeffs[1] = constant_term(tmp1782) + constant_term(tmp1783)
    tmp1784.coeffs[2:order + 1] .= zero(tmp1784.coeffs[1])
    I_p_E_2.coeffs[1] = constant_term(tmp1781) + constant_term(tmp1784)
    I_p_E_2.coeffs[2:order + 1] .= zero(I_p_E_2.coeffs[1])
    tmp1786.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(p_E_1)
    tmp1786.coeffs[2:order + 1] .= zero(tmp1786.coeffs[1])
    tmp1787.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(p_E_2)
    tmp1787.coeffs[2:order + 1] .= zero(tmp1787.coeffs[1])
    tmp1788.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(p_E_3)
    tmp1788.coeffs[2:order + 1] .= zero(tmp1788.coeffs[1])
    tmp1789.coeffs[1] = constant_term(tmp1787) + constant_term(tmp1788)
    tmp1789.coeffs[2:order + 1] .= zero(tmp1789.coeffs[1])
    I_p_E_3.coeffs[1] = constant_term(tmp1786) + constant_term(tmp1789)
    I_p_E_3.coeffs[2:order + 1] .= zero(I_p_E_3.coeffs[1])
    tmp1791.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_3)
    tmp1791.coeffs[2:order + 1] .= zero(tmp1791.coeffs[1])
    tmp1792.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_2)
    tmp1792.coeffs[2:order + 1] .= zero(tmp1792.coeffs[1])
    er_EM_cross_I_er_EM_1.coeffs[1] = constant_term(tmp1791) - constant_term(tmp1792)
    er_EM_cross_I_er_EM_1.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_1.coeffs[1])
    tmp1794.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_1)
    tmp1794.coeffs[2:order + 1] .= zero(tmp1794.coeffs[1])
    tmp1795.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_3)
    tmp1795.coeffs[2:order + 1] .= zero(tmp1795.coeffs[1])
    er_EM_cross_I_er_EM_2.coeffs[1] = constant_term(tmp1794) - constant_term(tmp1795)
    er_EM_cross_I_er_EM_2.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_2.coeffs[1])
    tmp1797.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_2)
    tmp1797.coeffs[2:order + 1] .= zero(tmp1797.coeffs[1])
    tmp1798.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_1)
    tmp1798.coeffs[2:order + 1] .= zero(tmp1798.coeffs[1])
    er_EM_cross_I_er_EM_3.coeffs[1] = constant_term(tmp1797) - constant_term(tmp1798)
    er_EM_cross_I_er_EM_3.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_3.coeffs[1])
    tmp1800.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_3)
    tmp1800.coeffs[2:order + 1] .= zero(tmp1800.coeffs[1])
    tmp1801.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_2)
    tmp1801.coeffs[2:order + 1] .= zero(tmp1801.coeffs[1])
    er_EM_cross_I_p_E_1.coeffs[1] = constant_term(tmp1800) - constant_term(tmp1801)
    er_EM_cross_I_p_E_1.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_1.coeffs[1])
    tmp1803.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_1)
    tmp1803.coeffs[2:order + 1] .= zero(tmp1803.coeffs[1])
    tmp1804.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_3)
    tmp1804.coeffs[2:order + 1] .= zero(tmp1804.coeffs[1])
    er_EM_cross_I_p_E_2.coeffs[1] = constant_term(tmp1803) - constant_term(tmp1804)
    er_EM_cross_I_p_E_2.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_2.coeffs[1])
    tmp1806.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_2)
    tmp1806.coeffs[2:order + 1] .= zero(tmp1806.coeffs[1])
    tmp1807.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_1)
    tmp1807.coeffs[2:order + 1] .= zero(tmp1807.coeffs[1])
    er_EM_cross_I_p_E_3.coeffs[1] = constant_term(tmp1806) - constant_term(tmp1807)
    er_EM_cross_I_p_E_3.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_3.coeffs[1])
    tmp1809.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_3)
    tmp1809.coeffs[2:order + 1] .= zero(tmp1809.coeffs[1])
    tmp1810.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_2)
    tmp1810.coeffs[2:order + 1] .= zero(tmp1810.coeffs[1])
    p_E_cross_I_er_EM_1.coeffs[1] = constant_term(tmp1809) - constant_term(tmp1810)
    p_E_cross_I_er_EM_1.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_1.coeffs[1])
    tmp1812.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_1)
    tmp1812.coeffs[2:order + 1] .= zero(tmp1812.coeffs[1])
    tmp1813.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_3)
    tmp1813.coeffs[2:order + 1] .= zero(tmp1813.coeffs[1])
    p_E_cross_I_er_EM_2.coeffs[1] = constant_term(tmp1812) - constant_term(tmp1813)
    p_E_cross_I_er_EM_2.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_2.coeffs[1])
    tmp1815.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_2)
    tmp1815.coeffs[2:order + 1] .= zero(tmp1815.coeffs[1])
    tmp1816.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_1)
    tmp1816.coeffs[2:order + 1] .= zero(tmp1816.coeffs[1])
    p_E_cross_I_er_EM_3.coeffs[1] = constant_term(tmp1815) - constant_term(tmp1816)
    p_E_cross_I_er_EM_3.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_3.coeffs[1])
    tmp1818.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_3)
    tmp1818.coeffs[2:order + 1] .= zero(tmp1818.coeffs[1])
    tmp1819.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_2)
    tmp1819.coeffs[2:order + 1] .= zero(tmp1819.coeffs[1])
    p_E_cross_I_p_E_1.coeffs[1] = constant_term(tmp1818) - constant_term(tmp1819)
    p_E_cross_I_p_E_1.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_1.coeffs[1])
    tmp1821.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_1)
    tmp1821.coeffs[2:order + 1] .= zero(tmp1821.coeffs[1])
    tmp1822.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_3)
    tmp1822.coeffs[2:order + 1] .= zero(tmp1822.coeffs[1])
    p_E_cross_I_p_E_2.coeffs[1] = constant_term(tmp1821) - constant_term(tmp1822)
    p_E_cross_I_p_E_2.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_2.coeffs[1])
    tmp1824.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_2)
    tmp1824.coeffs[2:order + 1] .= zero(tmp1824.coeffs[1])
    tmp1825.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_1)
    tmp1825.coeffs[2:order + 1] .= zero(tmp1825.coeffs[1])
    p_E_cross_I_p_E_3.coeffs[1] = constant_term(tmp1824) - constant_term(tmp1825)
    p_E_cross_I_p_E_3.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_3.coeffs[1])
    tmp1829.coeffs[1] = constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2))
    tmp1829.coeffs[2:order + 1] .= zero(tmp1829.coeffs[1])
    tmp1830.coeffs[1] = constant_term(7) * constant_term(tmp1829)
    tmp1830.coeffs[2:order + 1] .= zero(tmp1830.coeffs[1])
    one_minus_7sin2ϕEM.coeffs[1] = constant_term(one_t) - constant_term(tmp1830)
    one_minus_7sin2ϕEM.coeffs[2:order + 1] .= zero(one_minus_7sin2ϕEM.coeffs[1])
    two_sinϕEM.coeffs[1] = constant_term(2) * constant_term(sin_ϕ[ea, mo])
    two_sinϕEM.coeffs[2:order + 1] .= zero(two_sinϕEM.coeffs[1])
    tmp1835.coeffs[1] = constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5))
    tmp1835.coeffs[2:order + 1] .= zero(tmp1835.coeffs[1])
    N_MfigM_figE_factor_div_rEMp5.coeffs[1] = constant_term(N_MfigM_figE_factor) / constant_term(tmp1835)
    N_MfigM_figE_factor_div_rEMp5.coeffs[2:order + 1] .= zero(N_MfigM_figE_factor_div_rEMp5.coeffs[1])
    tmp1837.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1)
    tmp1837.coeffs[2:order + 1] .= zero(tmp1837.coeffs[1])
    tmp1838.coeffs[1] = constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1)
    tmp1838.coeffs[2:order + 1] .= zero(tmp1838.coeffs[1])
    tmp1839.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp1838)
    tmp1839.coeffs[2:order + 1] .= zero(tmp1839.coeffs[1])
    tmp1840.coeffs[1] = constant_term(tmp1837) + constant_term(tmp1839)
    tmp1840.coeffs[2:order + 1] .= zero(tmp1840.coeffs[1])
    tmp1842.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_1)
    tmp1842.coeffs[2:order + 1] .= zero(tmp1842.coeffs[1])
    tmp1843.coeffs[1] = constant_term(tmp1840) - constant_term(tmp1842)
    tmp1843.coeffs[2:order + 1] .= zero(tmp1843.coeffs[1])
    N_MfigM_figE_1.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1843)
    N_MfigM_figE_1.coeffs[2:order + 1] .= zero(N_MfigM_figE_1.coeffs[1])
    tmp1845.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2)
    tmp1845.coeffs[2:order + 1] .= zero(tmp1845.coeffs[1])
    tmp1846.coeffs[1] = constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2)
    tmp1846.coeffs[2:order + 1] .= zero(tmp1846.coeffs[1])
    tmp1847.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp1846)
    tmp1847.coeffs[2:order + 1] .= zero(tmp1847.coeffs[1])
    tmp1848.coeffs[1] = constant_term(tmp1845) + constant_term(tmp1847)
    tmp1848.coeffs[2:order + 1] .= zero(tmp1848.coeffs[1])
    tmp1850.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_2)
    tmp1850.coeffs[2:order + 1] .= zero(tmp1850.coeffs[1])
    tmp1851.coeffs[1] = constant_term(tmp1848) - constant_term(tmp1850)
    tmp1851.coeffs[2:order + 1] .= zero(tmp1851.coeffs[1])
    N_MfigM_figE_2.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1851)
    N_MfigM_figE_2.coeffs[2:order + 1] .= zero(N_MfigM_figE_2.coeffs[1])
    tmp1853.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3)
    tmp1853.coeffs[2:order + 1] .= zero(tmp1853.coeffs[1])
    tmp1854.coeffs[1] = constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3)
    tmp1854.coeffs[2:order + 1] .= zero(tmp1854.coeffs[1])
    tmp1855.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp1854)
    tmp1855.coeffs[2:order + 1] .= zero(tmp1855.coeffs[1])
    tmp1856.coeffs[1] = constant_term(tmp1853) + constant_term(tmp1855)
    tmp1856.coeffs[2:order + 1] .= zero(tmp1856.coeffs[1])
    tmp1858.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_3)
    tmp1858.coeffs[2:order + 1] .= zero(tmp1858.coeffs[1])
    tmp1859.coeffs[1] = constant_term(tmp1856) - constant_term(tmp1858)
    tmp1859.coeffs[2:order + 1] .= zero(tmp1859.coeffs[1])
    N_MfigM_figE_3.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1859)
    N_MfigM_figE_3.coeffs[2:order + 1] .= zero(N_MfigM_figE_3.coeffs[1])
    tmp1861.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1])
    tmp1861.coeffs[2:order + 1] .= zero(tmp1861.coeffs[1])
    tmp1862.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2])
    tmp1862.coeffs[2:order + 1] .= zero(tmp1862.coeffs[1])
    tmp1863.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3])
    tmp1863.coeffs[2:order + 1] .= zero(tmp1863.coeffs[1])
    tmp1864.coeffs[1] = constant_term(tmp1862) + constant_term(tmp1863)
    tmp1864.coeffs[2:order + 1] .= zero(tmp1864.coeffs[1])
    N_1_LMF.coeffs[1] = constant_term(tmp1861) + constant_term(tmp1864)
    N_1_LMF.coeffs[2:order + 1] .= zero(N_1_LMF.coeffs[1])
    tmp1866.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1])
    tmp1866.coeffs[2:order + 1] .= zero(tmp1866.coeffs[1])
    tmp1867.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2])
    tmp1867.coeffs[2:order + 1] .= zero(tmp1867.coeffs[1])
    tmp1868.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3])
    tmp1868.coeffs[2:order + 1] .= zero(tmp1868.coeffs[1])
    tmp1869.coeffs[1] = constant_term(tmp1867) + constant_term(tmp1868)
    tmp1869.coeffs[2:order + 1] .= zero(tmp1869.coeffs[1])
    N_2_LMF.coeffs[1] = constant_term(tmp1866) + constant_term(tmp1869)
    N_2_LMF.coeffs[2:order + 1] .= zero(N_2_LMF.coeffs[1])
    tmp1871.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1])
    tmp1871.coeffs[2:order + 1] .= zero(tmp1871.coeffs[1])
    tmp1872.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2])
    tmp1872.coeffs[2:order + 1] .= zero(tmp1872.coeffs[1])
    tmp1873.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3])
    tmp1873.coeffs[2:order + 1] .= zero(tmp1873.coeffs[1])
    tmp1874.coeffs[1] = constant_term(tmp1872) + constant_term(tmp1873)
    tmp1874.coeffs[2:order + 1] .= zero(tmp1874.coeffs[1])
    N_3_LMF.coeffs[1] = constant_term(tmp1871) + constant_term(tmp1874)
    N_3_LMF.coeffs[2:order + 1] .= zero(N_3_LMF.coeffs[1])
    tmp1876.coeffs[1] = constant_term(q[6N + 10]) - constant_term(q[6N + 4])
    tmp1876.coeffs[2:order + 1] .= zero(tmp1876.coeffs[1])
    tmp1877.coeffs[1] = constant_term(k_ν) * constant_term(tmp1876)
    tmp1877.coeffs[2:order + 1] .= zero(tmp1877.coeffs[1])
    tmp1878.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    tmp1878.coeffs[2:order + 1] .= zero(tmp1878.coeffs[1])
    tmp1879.coeffs[1] = constant_term(tmp1878) * constant_term(q[6N + 11])
    tmp1879.coeffs[2:order + 1] .= zero(tmp1879.coeffs[1])
    N_cmb_1.coeffs[1] = constant_term(tmp1877) - constant_term(tmp1879)
    N_cmb_1.coeffs[2:order + 1] .= zero(N_cmb_1.coeffs[1])
    tmp1881.coeffs[1] = constant_term(q[6N + 11]) - constant_term(q[6N + 5])
    tmp1881.coeffs[2:order + 1] .= zero(tmp1881.coeffs[1])
    tmp1882.coeffs[1] = constant_term(k_ν) * constant_term(tmp1881)
    tmp1882.coeffs[2:order + 1] .= zero(tmp1882.coeffs[1])
    tmp1883.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    tmp1883.coeffs[2:order + 1] .= zero(tmp1883.coeffs[1])
    tmp1884.coeffs[1] = constant_term(tmp1883) * constant_term(q[6N + 10])
    tmp1884.coeffs[2:order + 1] .= zero(tmp1884.coeffs[1])
    N_cmb_2.coeffs[1] = constant_term(tmp1882) + constant_term(tmp1884)
    N_cmb_2.coeffs[2:order + 1] .= zero(N_cmb_2.coeffs[1])
    tmp1886.coeffs[1] = constant_term(q[6N + 12]) - constant_term(q[6N + 6])
    tmp1886.coeffs[2:order + 1] .= zero(tmp1886.coeffs[1])
    N_cmb_3.coeffs[1] = constant_term(k_ν) * constant_term(tmp1886)
    N_cmb_3.coeffs[2:order + 1] .= zero(N_cmb_3.coeffs[1])
    tmp1888.coeffs[1] = constant_term(N_1_LMF) + constant_term(N_MfigM_figE_1)
    tmp1888.coeffs[2:order + 1] .= zero(tmp1888.coeffs[1])
    tmp1889.coeffs[1] = constant_term(tmp1888) + constant_term(N_cmb_1)
    tmp1889.coeffs[2:order + 1] .= zero(tmp1889.coeffs[1])
    tmp1890.coeffs[1] = constant_term(dIω_x) + constant_term(ωxIω_x)
    tmp1890.coeffs[2:order + 1] .= zero(tmp1890.coeffs[1])
    I_dω_1.coeffs[1] = constant_term(tmp1889) - constant_term(tmp1890)
    I_dω_1.coeffs[2:order + 1] .= zero(I_dω_1.coeffs[1])
    tmp1892.coeffs[1] = constant_term(N_2_LMF) + constant_term(N_MfigM_figE_2)
    tmp1892.coeffs[2:order + 1] .= zero(tmp1892.coeffs[1])
    tmp1893.coeffs[1] = constant_term(tmp1892) + constant_term(N_cmb_2)
    tmp1893.coeffs[2:order + 1] .= zero(tmp1893.coeffs[1])
    tmp1894.coeffs[1] = constant_term(dIω_y) + constant_term(ωxIω_y)
    tmp1894.coeffs[2:order + 1] .= zero(tmp1894.coeffs[1])
    I_dω_2.coeffs[1] = constant_term(tmp1893) - constant_term(tmp1894)
    I_dω_2.coeffs[2:order + 1] .= zero(I_dω_2.coeffs[1])
    tmp1896.coeffs[1] = constant_term(N_3_LMF) + constant_term(N_MfigM_figE_3)
    tmp1896.coeffs[2:order + 1] .= zero(tmp1896.coeffs[1])
    tmp1897.coeffs[1] = constant_term(tmp1896) + constant_term(N_cmb_3)
    tmp1897.coeffs[2:order + 1] .= zero(tmp1897.coeffs[1])
    tmp1898.coeffs[1] = constant_term(dIω_z) + constant_term(ωxIω_z)
    tmp1898.coeffs[2:order + 1] .= zero(tmp1898.coeffs[1])
    I_dω_3.coeffs[1] = constant_term(tmp1897) - constant_term(tmp1898)
    I_dω_3.coeffs[2:order + 1] .= zero(I_dω_3.coeffs[1])
    Ic_ωc_1.coeffs[1] = constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10])
    Ic_ωc_1.coeffs[2:order + 1] .= zero(Ic_ωc_1.coeffs[1])
    Ic_ωc_2.coeffs[1] = constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11])
    Ic_ωc_2.coeffs[2:order + 1] .= zero(Ic_ωc_2.coeffs[1])
    Ic_ωc_3.coeffs[1] = constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12])
    Ic_ωc_3.coeffs[2:order + 1] .= zero(Ic_ωc_3.coeffs[1])
    tmp1903.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_2)
    tmp1903.coeffs[2:order + 1] .= zero(tmp1903.coeffs[1])
    tmp1904.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_3)
    tmp1904.coeffs[2:order + 1] .= zero(tmp1904.coeffs[1])
    m_ωm_x_Icωc_1.coeffs[1] = constant_term(tmp1903) - constant_term(tmp1904)
    m_ωm_x_Icωc_1.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_1.coeffs[1])
    tmp1906.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_3)
    tmp1906.coeffs[2:order + 1] .= zero(tmp1906.coeffs[1])
    tmp1907.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_1)
    tmp1907.coeffs[2:order + 1] .= zero(tmp1907.coeffs[1])
    m_ωm_x_Icωc_2.coeffs[1] = constant_term(tmp1906) - constant_term(tmp1907)
    m_ωm_x_Icωc_2.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_2.coeffs[1])
    tmp1909.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_1)
    tmp1909.coeffs[2:order + 1] .= zero(tmp1909.coeffs[1])
    tmp1910.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_2)
    tmp1910.coeffs[2:order + 1] .= zero(tmp1910.coeffs[1])
    m_ωm_x_Icωc_3.coeffs[1] = constant_term(tmp1909) - constant_term(tmp1910)
    m_ωm_x_Icωc_3.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_3.coeffs[1])
    Ic_dωc_1.coeffs[1] = constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1)
    Ic_dωc_1.coeffs[2:order + 1] .= zero(Ic_dωc_1.coeffs[1])
    Ic_dωc_2.coeffs[1] = constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2)
    Ic_dωc_2.coeffs[2:order + 1] .= zero(Ic_dωc_2.coeffs[1])
    Ic_dωc_3.coeffs[1] = constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3)
    Ic_dωc_3.coeffs[2:order + 1] .= zero(Ic_dωc_3.coeffs[1])
    tmp1915.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp1915.coeffs[2:order + 1] .= zero(tmp1915.coeffs[1])
    tmp1995.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp1995.coeffs[2:order + 1] .= zero(tmp1995.coeffs[1])
    tmp1916.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp1915)
    tmp1916.coeffs[2:order + 1] .= zero(tmp1916.coeffs[1])
    tmp1917.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp1917.coeffs[2:order + 1] .= zero(tmp1917.coeffs[1])
    tmp1996.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp1996.coeffs[2:order + 1] .= zero(tmp1996.coeffs[1])
    tmp1918.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp1917)
    tmp1918.coeffs[2:order + 1] .= zero(tmp1918.coeffs[1])
    tmp1919.coeffs[1] = constant_term(tmp1916) + constant_term(tmp1918)
    tmp1919.coeffs[2:order + 1] .= zero(tmp1919.coeffs[1])
    tmp1920.coeffs[1] = sin(constant_term(q[6N + 2]))
    tmp1920.coeffs[2:order + 1] .= zero(tmp1920.coeffs[1])
    tmp1997.coeffs[1] = cos(constant_term(q[6N + 2]))
    tmp1997.coeffs[2:order + 1] .= zero(tmp1997.coeffs[1])
    (dq[6N + 1]).coeffs[1] = constant_term(tmp1919) / constant_term(tmp1920)
    (dq[6N + 1]).coeffs[2:order + 1] .= zero((dq[6N + 1]).coeffs[1])
    tmp1922.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp1922.coeffs[2:order + 1] .= zero(tmp1922.coeffs[1])
    tmp1998.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp1998.coeffs[2:order + 1] .= zero(tmp1998.coeffs[1])
    tmp1923.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp1922)
    tmp1923.coeffs[2:order + 1] .= zero(tmp1923.coeffs[1])
    tmp1924.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp1924.coeffs[2:order + 1] .= zero(tmp1924.coeffs[1])
    tmp1999.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp1999.coeffs[2:order + 1] .= zero(tmp1999.coeffs[1])
    tmp1925.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp1924)
    tmp1925.coeffs[2:order + 1] .= zero(tmp1925.coeffs[1])
    (dq[6N + 2]).coeffs[1] = constant_term(tmp1923) - constant_term(tmp1925)
    (dq[6N + 2]).coeffs[2:order + 1] .= zero((dq[6N + 2]).coeffs[1])
    tmp1927.coeffs[1] = cos(constant_term(q[6N + 2]))
    tmp1927.coeffs[2:order + 1] .= zero(tmp1927.coeffs[1])
    tmp2000.coeffs[1] = sin(constant_term(q[6N + 2]))
    tmp2000.coeffs[2:order + 1] .= zero(tmp2000.coeffs[1])
    tmp1928.coeffs[1] = constant_term(dq[6N + 1]) * constant_term(tmp1927)
    tmp1928.coeffs[2:order + 1] .= zero(tmp1928.coeffs[1])
    (dq[6N + 3]).coeffs[1] = constant_term(q[6N + 6]) - constant_term(tmp1928)
    (dq[6N + 3]).coeffs[2:order + 1] .= zero((dq[6N + 3]).coeffs[1])
    tmp1930.coeffs[1] = constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1)
    tmp1930.coeffs[2:order + 1] .= zero(tmp1930.coeffs[1])
    tmp1931.coeffs[1] = constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2)
    tmp1931.coeffs[2:order + 1] .= zero(tmp1931.coeffs[1])
    tmp1932.coeffs[1] = constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3)
    tmp1932.coeffs[2:order + 1] .= zero(tmp1932.coeffs[1])
    tmp1933.coeffs[1] = constant_term(tmp1931) + constant_term(tmp1932)
    tmp1933.coeffs[2:order + 1] .= zero(tmp1933.coeffs[1])
    (dq[6N + 4]).coeffs[1] = constant_term(tmp1930) + constant_term(tmp1933)
    (dq[6N + 4]).coeffs[2:order + 1] .= zero((dq[6N + 4]).coeffs[1])
    tmp1935.coeffs[1] = constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1)
    tmp1935.coeffs[2:order + 1] .= zero(tmp1935.coeffs[1])
    tmp1936.coeffs[1] = constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2)
    tmp1936.coeffs[2:order + 1] .= zero(tmp1936.coeffs[1])
    tmp1937.coeffs[1] = constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3)
    tmp1937.coeffs[2:order + 1] .= zero(tmp1937.coeffs[1])
    tmp1938.coeffs[1] = constant_term(tmp1936) + constant_term(tmp1937)
    tmp1938.coeffs[2:order + 1] .= zero(tmp1938.coeffs[1])
    (dq[6N + 5]).coeffs[1] = constant_term(tmp1935) + constant_term(tmp1938)
    (dq[6N + 5]).coeffs[2:order + 1] .= zero((dq[6N + 5]).coeffs[1])
    tmp1940.coeffs[1] = constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1)
    tmp1940.coeffs[2:order + 1] .= zero(tmp1940.coeffs[1])
    tmp1941.coeffs[1] = constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2)
    tmp1941.coeffs[2:order + 1] .= zero(tmp1941.coeffs[1])
    tmp1942.coeffs[1] = constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3)
    tmp1942.coeffs[2:order + 1] .= zero(tmp1942.coeffs[1])
    tmp1943.coeffs[1] = constant_term(tmp1941) + constant_term(tmp1942)
    tmp1943.coeffs[2:order + 1] .= zero(tmp1943.coeffs[1])
    (dq[6N + 6]).coeffs[1] = constant_term(tmp1940) + constant_term(tmp1943)
    (dq[6N + 6]).coeffs[2:order + 1] .= zero((dq[6N + 6]).coeffs[1])
    tmp1945.coeffs[1] = sin(constant_term(q[6N + 8]))
    tmp1945.coeffs[2:order + 1] .= zero(tmp1945.coeffs[1])
    tmp2001.coeffs[1] = cos(constant_term(q[6N + 8]))
    tmp2001.coeffs[2:order + 1] .= zero(tmp2001.coeffs[1])
    tmp1946.coeffs[1] = constant_term(ω_c_CE_2) / constant_term(tmp1945)
    tmp1946.coeffs[2:order + 1] .= zero(tmp1946.coeffs[1])
    (dq[6N + 9]).coeffs[1] = -(constant_term(tmp1946))
    (dq[6N + 9]).coeffs[2:order + 1] .= zero((dq[6N + 9]).coeffs[1])
    tmp1948.coeffs[1] = cos(constant_term(q[6N + 8]))
    tmp1948.coeffs[2:order + 1] .= zero(tmp1948.coeffs[1])
    tmp2002.coeffs[1] = sin(constant_term(q[6N + 8]))
    tmp2002.coeffs[2:order + 1] .= zero(tmp2002.coeffs[1])
    tmp1949.coeffs[1] = constant_term(dq[6N + 9]) * constant_term(tmp1948)
    tmp1949.coeffs[2:order + 1] .= zero(tmp1949.coeffs[1])
    (dq[6N + 7]).coeffs[1] = constant_term(ω_c_CE_3) - constant_term(tmp1949)
    (dq[6N + 7]).coeffs[2:order + 1] .= zero((dq[6N + 7]).coeffs[1])
    (dq[6N + 8]).coeffs[1] = identity(constant_term(ω_c_CE_1))
    (dq[6N + 8]).coeffs[2:order + 1] .= zero((dq[6N + 8]).coeffs[1])
    (dq[6N + 10]).coeffs[1] = constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1)
    (dq[6N + 10]).coeffs[2:order + 1] .= zero((dq[6N + 10]).coeffs[1])
    (dq[6N + 11]).coeffs[1] = constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2)
    (dq[6N + 11]).coeffs[2:order + 1] .= zero((dq[6N + 11]).coeffs[1])
    (dq[6N + 12]).coeffs[1] = constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3)
    (dq[6N + 12]).coeffs[2:order + 1] .= zero((dq[6N + 12]).coeffs[1])
    (dq[6N + 13]).coeffs[1] = identity(constant_term(zero_q_1))
    (dq[6N + 13]).coeffs[2:order + 1] .= zero((dq[6N + 13]).coeffs[1])
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp1954, tmp1220, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1955, tmp1221, ψ_m, ord)
        TaylorSeries.mul!(tmp1222, tmp1220, tmp1221, ord)
        TaylorSeries.sincos!(tmp1956, tmp1223, θ_m, ord)
        TaylorSeries.sincos!(tmp1224, tmp1957, ϕ_m, ord)
        TaylorSeries.mul!(tmp1225, tmp1223, tmp1224, ord)
        TaylorSeries.sincos!(tmp1226, tmp1958, ψ_m, ord)
        TaylorSeries.mul!(tmp1227, tmp1225, tmp1226, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp1222, tmp1227, ord)
        TaylorSeries.sincos!(tmp1959, tmp1229, θ_m, ord)
        TaylorSeries.subst!(tmp1230, tmp1229, ord)
        TaylorSeries.sincos!(tmp1960, tmp1231, ψ_m, ord)
        TaylorSeries.mul!(tmp1232, tmp1230, tmp1231, ord)
        TaylorSeries.sincos!(tmp1233, tmp1961, ϕ_m, ord)
        TaylorSeries.mul!(tmp1234, tmp1232, tmp1233, ord)
        TaylorSeries.sincos!(tmp1962, tmp1235, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1236, tmp1963, ψ_m, ord)
        TaylorSeries.mul!(tmp1237, tmp1235, tmp1236, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp1234, tmp1237, ord)
        TaylorSeries.sincos!(tmp1239, tmp1964, θ_m, ord)
        TaylorSeries.sincos!(tmp1240, tmp1965, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp1239, tmp1240, ord)
        TaylorSeries.sincos!(tmp1966, tmp1242, ψ_m, ord)
        TaylorSeries.sincos!(tmp1243, tmp1967, ϕ_m, ord)
        TaylorSeries.mul!(tmp1244, tmp1242, tmp1243, ord)
        TaylorSeries.sincos!(tmp1968, tmp1245, θ_m, ord)
        TaylorSeries.sincos!(tmp1969, tmp1246, ϕ_m, ord)
        TaylorSeries.mul!(tmp1247, tmp1245, tmp1246, ord)
        TaylorSeries.sincos!(tmp1248, tmp1970, ψ_m, ord)
        TaylorSeries.mul!(tmp1249, tmp1247, tmp1248, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp1244, tmp1249, ord)
        TaylorSeries.sincos!(tmp1971, tmp1251, θ_m, ord)
        TaylorSeries.sincos!(tmp1972, tmp1252, ϕ_m, ord)
        TaylorSeries.mul!(tmp1253, tmp1251, tmp1252, ord)
        TaylorSeries.sincos!(tmp1973, tmp1254, ψ_m, ord)
        TaylorSeries.mul!(tmp1255, tmp1253, tmp1254, ord)
        TaylorSeries.sincos!(tmp1256, tmp1974, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1257, tmp1975, ψ_m, ord)
        TaylorSeries.mul!(tmp1258, tmp1256, tmp1257, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp1255, tmp1258, ord)
        TaylorSeries.sincos!(tmp1976, tmp1260, ϕ_m, ord)
        TaylorSeries.subst!(tmp1261, tmp1260, ord)
        TaylorSeries.sincos!(tmp1262, tmp1977, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp1261, tmp1262, ord)
        TaylorSeries.sincos!(tmp1264, tmp1978, θ_m, ord)
        TaylorSeries.sincos!(tmp1265, tmp1979, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp1264, tmp1265, ord)
        TaylorSeries.sincos!(tmp1980, tmp1267, ψ_m, ord)
        TaylorSeries.sincos!(tmp1268, tmp1981, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp1267, tmp1268, ord)
        TaylorSeries.sincos!(tmp1982, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp1983, tmp1271, ϕ_c, ord)
        TaylorSeries.mul!(tmp1272, RotM[1, 1, mo], tmp1271, ord)
        TaylorSeries.sincos!(tmp1273, tmp1984, ϕ_c, ord)
        TaylorSeries.mul!(tmp1274, RotM[1, 2, mo], tmp1273, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp1272, tmp1274, ord)
        TaylorSeries.subst!(tmp1276, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp1277, tmp1985, ϕ_c, ord)
        TaylorSeries.mul!(tmp1278, tmp1276, tmp1277, ord)
        TaylorSeries.sincos!(tmp1986, tmp1279, ϕ_c, ord)
        TaylorSeries.mul!(tmp1280, RotM[1, 2, mo], tmp1279, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp1278, tmp1280, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp1987, tmp1282, ϕ_c, ord)
        TaylorSeries.mul!(tmp1283, RotM[2, 1, mo], tmp1282, ord)
        TaylorSeries.sincos!(tmp1284, tmp1988, ϕ_c, ord)
        TaylorSeries.mul!(tmp1285, RotM[2, 2, mo], tmp1284, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp1283, tmp1285, ord)
        TaylorSeries.subst!(tmp1287, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp1288, tmp1989, ϕ_c, ord)
        TaylorSeries.mul!(tmp1289, tmp1287, tmp1288, ord)
        TaylorSeries.sincos!(tmp1990, tmp1290, ϕ_c, ord)
        TaylorSeries.mul!(tmp1291, RotM[2, 2, mo], tmp1290, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp1289, tmp1291, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp1991, tmp1293, ϕ_c, ord)
        TaylorSeries.mul!(tmp1294, RotM[3, 1, mo], tmp1293, ord)
        TaylorSeries.sincos!(tmp1295, tmp1992, ϕ_c, ord)
        TaylorSeries.mul!(tmp1296, RotM[3, 2, mo], tmp1295, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp1294, tmp1296, ord)
        TaylorSeries.subst!(tmp1298, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp1299, tmp1993, ϕ_c, ord)
        TaylorSeries.mul!(tmp1300, tmp1298, tmp1299, ord)
        TaylorSeries.sincos!(tmp1994, tmp1301, ϕ_c, ord)
        TaylorSeries.mul!(tmp1302, RotM[3, 2, mo], tmp1301, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp1300, tmp1302, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp1304, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1305, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1306, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1307, tmp1305, tmp1306, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp1304, tmp1307, ord)
        TaylorSeries.mul!(tmp1309, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1310, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1311, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1312, tmp1310, tmp1311, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp1309, tmp1312, ord)
        TaylorSeries.mul!(tmp1314, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1315, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1316, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1317, tmp1315, tmp1316, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp1314, tmp1317, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        for j = 1:N
            TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
            TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
            TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
            TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
        end
        for j = 1:N_ext
            TaylorSeries.identity!(accX[j], zero_q_1, ord)
            TaylorSeries.identity!(accY[j], zero_q_1, ord)
            TaylorSeries.identity!(accZ[j], zero_q_1, ord)
        end
        for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                    TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                    TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                    TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                    TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                    TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                    TaylorSeries.mul!(tmp1326[3j - 2], 4, dq[3j - 2], ord)
                    TaylorSeries.mul!(tmp1328[3i - 2], 3, dq[3i - 2], ord)
                    TaylorSeries.subst!(_4U_m_3X[i, j], tmp1326[3j - 2], tmp1328[3i - 2], ord)
                    TaylorSeries.mul!(tmp1331[3j - 1], 4, dq[3j - 1], ord)
                    TaylorSeries.mul!(tmp1333[3i - 1], 3, dq[3i - 1], ord)
                    TaylorSeries.subst!(_4V_m_3Y[i, j], tmp1331[3j - 1], tmp1333[3i - 1], ord)
                    TaylorSeries.mul!(tmp1336[3j], 4, dq[3j], ord)
                    TaylorSeries.mul!(tmp1338[3i], 3, dq[3i], ord)
                    TaylorSeries.subst!(_4W_m_3Z[i, j], tmp1336[3j], tmp1338[3i], ord)
                    TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                    TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                    TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                    TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                    TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                    TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                    TaylorSeries.add!(tmp1346[i, j], UU[i, j], VV[i, j], ord)
                    TaylorSeries.add!(vi_dot_vj[i, j], tmp1346[i, j], WW[i, j], ord)
                    TaylorSeries.pow!(tmp1349[i, j], X[i, j], 2, ord)
                    TaylorSeries.pow!(tmp1351[i, j], Y[i, j], 2, ord)
                    TaylorSeries.add!(tmp1352[i, j], tmp1349[i, j], tmp1351[i, j], ord)
                    TaylorSeries.pow!(tmp1354[i, j], Z[i, j], 2, ord)
                    TaylorSeries.add!(r_p2[i, j], tmp1352[i, j], tmp1354[i, j], ord)
                    TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                    TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], 1.5, ord)
                    TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], 3.5, ord)
                    TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                    TaylorSeries.add!(tmp1362[i, j], pn2x[i, j], pn2y[i, j], ord)
                    TaylorSeries.add!(tmp1363[i, j], tmp1362[i, j], pn2z[i, j], ord)
                    TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp1363[i, j], ord)
                    TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                    TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                    TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                    TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                    TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                    TaylorSeries.mul!(tmp1374[i, j], X[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp1374[i, j], ord)
                    TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                    TaylorSeries.mul!(tmp1376[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp1376[i, j], ord)
                    TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                    TaylorSeries.mul!(tmp1378[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp1378[i, j], ord)
                    TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                    TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                    TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                end
            end
            TaylorSeries.pow!(tmp1382[3j - 2], dq[3j - 2], 2, ord)
            TaylorSeries.pow!(tmp1384[3j - 1], dq[3j - 1], 2, ord)
            TaylorSeries.add!(tmp1385[3j - 2], tmp1382[3j - 2], tmp1384[3j - 1], ord)
            TaylorSeries.pow!(tmp1387[3j], dq[3j], 2, ord)
            TaylorSeries.add!(v2[j], tmp1385[3j - 2], tmp1387[3j], ord)
        end
        TaylorSeries.add!(tmp1389, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp1391, tmp1389, 2, ord)
        TaylorSeries.subst!(tmp1392, I_M_t[3, 3], tmp1391, ord)
        TaylorSeries.div!(J2M_t, tmp1392, μ[mo], ord)
        TaylorSeries.subst!(tmp1394, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp1395, tmp1394, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp1395, 4, ord)
        TaylorSeries.subst!(tmp1398, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp1398, μ[mo], ord)
        TaylorSeries.subst!(tmp1400, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp1400, μ[mo], ord)
        TaylorSeries.subst!(tmp1402, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp1403, tmp1402, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp1403, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                        TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                        TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                        TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                        TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                        TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                        TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                        TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                        TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                        TaylorSeries.add!(tmp1415[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                        TaylorSeries.add!(X_bf[i, j], tmp1415[i, j], X_bf_3[i, j], ord)
                        TaylorSeries.add!(tmp1417[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                        TaylorSeries.add!(Y_bf[i, j], tmp1417[i, j], Y_bf_3[i, j], ord)
                        TaylorSeries.add!(tmp1419[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                        TaylorSeries.add!(Z_bf[i, j], tmp1419[i, j], Z_bf_3[i, j], ord)
                        TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                        TaylorSeries.pow!(tmp1423[i, j], X_bf[i, j], 2, ord)
                        TaylorSeries.pow!(tmp1425[i, j], Y_bf[i, j], 2, ord)
                        TaylorSeries.add!(tmp1426[i, j], tmp1423[i, j], tmp1425[i, j], ord)
                        TaylorSeries.sqrt!(r_xy[i, j], tmp1426[i, j], ord)
                        TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                        TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                        TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                        TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                        TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                        TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                        TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                        for n = 2:n1SEM[j]
                            TaylorSeries.mul!(tmp1431[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1432[i, j, n], tmp1431[i, j, n], fact1_jsem[n], ord)
                            TaylorSeries.mul!(tmp1433[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                            TaylorSeries.subst!(P_n[i, j, n + 1], tmp1432[i, j, n], tmp1433[i, j, n - 1], ord)
                            TaylorSeries.mul!(tmp1435[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1436[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                            TaylorSeries.add!(dP_n[i, j, n + 1], tmp1435[i, j, n], tmp1436[i, j, n], ord)
                            TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], fact5_jsem[n], ord)
                        end
                        TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], 2, ord)
                        TaylorSeries.mul!(tmp1441[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                        TaylorSeries.mul!(tmp1442[i, j, 3], tmp1441[i, j, 3], J2_t[j], ord)
                        TaylorSeries.div!(F_J_ξ[i, j], tmp1442[i, j, 3], r_p4[i, j], ord)
                        TaylorSeries.subst!(tmp1444[i, j, 3], dP_n[i, j, 3], ord)
                        TaylorSeries.mul!(tmp1445[i, j, 3], tmp1444[i, j, 3], cos_ϕ[i, j], ord)
                        TaylorSeries.mul!(tmp1446[i, j, 3], tmp1445[i, j, 3], J2_t[j], ord)
                        TaylorSeries.div!(F_J_ζ[i, j], tmp1446[i, j, 3], r_p4[i, j], ord)
                        TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                        TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                        for n = 3:n1SEM[j]
                            TaylorSeries.mul!(tmp1448[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                            TaylorSeries.mul!(tmp1449[i, j, n + 1], tmp1448[i, j, n + 1], JSEM[j, n], ord)
                            TaylorSeries.div!(tmp1450[i, j, n + 1], tmp1449[i, j, n + 1], temp_rn[i, j, n], ord)
                            TaylorSeries.add!(temp_fjξ[i, j, n], tmp1450[i, j, n + 1], F_J_ξ_36[i, j], ord)
                            TaylorSeries.subst!(tmp1452[i, j, n + 1], dP_n[i, j, n + 1], ord)
                            TaylorSeries.mul!(tmp1453[i, j, n + 1], tmp1452[i, j, n + 1], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1454[i, j, n + 1], tmp1453[i, j, n + 1], JSEM[j, n], ord)
                            TaylorSeries.div!(tmp1455[i, j, n + 1], tmp1454[i, j, n + 1], temp_rn[i, j, n], ord)
                            TaylorSeries.add!(temp_fjζ[i, j, n], tmp1455[i, j, n + 1], F_J_ζ_36[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                    TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                    TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                    TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                    TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                else
                                    TaylorSeries.mul!(tmp1458[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                    TaylorSeries.mul!(tmp1459[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                    TaylorSeries.add!(sin_mλ[i, j, m], tmp1458[i, j, m - 1], tmp1459[i, j, m - 1], ord)
                                    TaylorSeries.mul!(tmp1461[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                    TaylorSeries.mul!(tmp1462[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                    TaylorSeries.subst!(cos_mλ[i, j, m], tmp1461[i, j, m - 1], tmp1462[i, j, m - 1], ord)
                                    TaylorSeries.mul!(tmp1464[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                    TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp1464[i, j, m - 1, m - 1], lnm5[m], ord)
                                    TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                    TaylorSeries.mul!(tmp1467[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                    TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp1467[i, j, m, m], lnm3[m], ord)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        TaylorSeries.mul!(tmp1469[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp1469[i, j, n - 1, m], lnm1[n, m], ord)
                                    else
                                        TaylorSeries.mul!(tmp1471[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp1472[i, j, n - 1, m], tmp1471[i, j, n - 1, m], lnm1[n, m], ord)
                                        TaylorSeries.mul!(tmp1473[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                        TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp1472[i, j, n - 1, m], tmp1473[i, j, n - 2, m], ord)
                                    end
                                    TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                    TaylorSeries.mul!(tmp1476[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                    TaylorSeries.mul!(tmp1477[i, j, n, m], tmp1476[i, j, n, m], lnm3[n], ord)
                                    TaylorSeries.mul!(tmp1478[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                    TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp1477[i, j, n, m], tmp1478[i, j, n - 1, m], ord)
                                end
                            end
                            TaylorSeries.mul!(tmp1480[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                            TaylorSeries.mul!(tmp1481[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1482[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                            TaylorSeries.add!(tmp1483[i, j, 1], tmp1481[i, j, 1], tmp1482[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1484[i, j, 2, 1], tmp1480[i, j, 2, 1], tmp1483[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1485[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                            TaylorSeries.mul!(tmp1486[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1487[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                            TaylorSeries.add!(tmp1488[i, j, 2], tmp1486[i, j, 2], tmp1487[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1489[i, j, 2, 2], tmp1485[i, j, 2, 2], tmp1488[i, j, 2], ord)
                            TaylorSeries.add!(tmp1490[i, j, 2, 1], tmp1484[i, j, 2, 1], tmp1489[i, j, 2, 2], ord)
                            TaylorSeries.div!(F_CS_ξ[i, j], tmp1490[i, j, 2, 1], r_p4[i, j], ord)
                            TaylorSeries.mul!(tmp1492[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                            TaylorSeries.mul!(tmp1493[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1494[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                            TaylorSeries.subst!(tmp1495[i, j, 1], tmp1493[i, j, 1], tmp1494[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1496[i, j, 2, 1], tmp1492[i, j, 2, 1], tmp1495[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1497[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                            TaylorSeries.mul!(tmp1498[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1499[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                            TaylorSeries.subst!(tmp1500[i, j, 2], tmp1498[i, j, 2], tmp1499[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1501[i, j, 2, 2], tmp1497[i, j, 2, 2], tmp1500[i, j, 2], ord)
                            TaylorSeries.add!(tmp1502[i, j, 2, 1], tmp1496[i, j, 2, 1], tmp1501[i, j, 2, 2], ord)
                            TaylorSeries.div!(F_CS_η[i, j], tmp1502[i, j, 2, 1], r_p4[i, j], ord)
                            TaylorSeries.mul!(tmp1504[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1505[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                            TaylorSeries.add!(tmp1506[i, j, 1], tmp1504[i, j, 1], tmp1505[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1507[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp1506[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1508[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1509[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                            TaylorSeries.add!(tmp1510[i, j, 2], tmp1508[i, j, 2], tmp1509[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1511[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp1510[i, j, 2], ord)
                            TaylorSeries.add!(tmp1512[i, j, 2, 1], tmp1507[i, j, 2, 1], tmp1511[i, j, 2, 2], ord)
                            TaylorSeries.div!(F_CS_ζ[i, j], tmp1512[i, j, 2, 1], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n2M
                                for m = 1:n
                                    TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                    TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                    TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                    TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                    TaylorSeries.mul!(tmp1518[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                    TaylorSeries.add!(tmp1519[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                    TaylorSeries.mul!(tmp1520[i, j, n, m], tmp1518[i, j, n, m], tmp1519[i, j, n, m], ord)
                                    TaylorSeries.div!(tmp1521[i, j, n, m], tmp1520[i, j, n, m], temp_rn[i, j, n], ord)
                                    TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp1521[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                    TaylorSeries.mul!(tmp1523[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                    TaylorSeries.subst!(tmp1524[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                    TaylorSeries.mul!(tmp1525[i, j, n, m], tmp1523[i, j, n, m], tmp1524[i, j, n, m], ord)
                                    TaylorSeries.div!(tmp1526[i, j, n, m], tmp1525[i, j, n, m], temp_rn[i, j, n], ord)
                                    TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp1526[i, j, n, m], F_CS_η_36[i, j], ord)
                                    TaylorSeries.add!(tmp1528[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                    TaylorSeries.mul!(tmp1529[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp1528[i, j, n, m], ord)
                                    TaylorSeries.div!(tmp1530[i, j, n, m], tmp1529[i, j, n, m], temp_rn[i, j, n], ord)
                                    TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp1530[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                    TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                    TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                    TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                end
                            end
                            TaylorSeries.add!(tmp1532[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                            TaylorSeries.add!(tmp1533[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                            TaylorSeries.add!(F_JCS_ξ[i, j], tmp1532[i, j], tmp1533[i, j], ord)
                            TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                            TaylorSeries.add!(tmp1536[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            TaylorSeries.add!(tmp1537[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                            TaylorSeries.add!(F_JCS_ζ[i, j], tmp1536[i, j], tmp1537[i, j], ord)
                        else
                            TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                            TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                            TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                        end
                        TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                        TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                        TaylorSeries.subst!(tmp1543[i, j], sin_ϕ[i, j], ord)
                        TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp1543[i, j], cos_λ[i, j], ord)
                        TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                        TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                        TaylorSeries.subst!(tmp1546[i, j], sin_ϕ[i, j], ord)
                        TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp1546[i, j], sin_λ[i, j], ord)
                        TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                        TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                        TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                        TaylorSeries.mul!(tmp1548[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                        TaylorSeries.mul!(tmp1549[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                        TaylorSeries.add!(tmp1550[i, j, 1, 1], tmp1548[i, j, 1, 1], tmp1549[i, j, 1, 2], ord)
                        TaylorSeries.mul!(tmp1551[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp1550[i, j, 1, 1], tmp1551[i, j, 1, 3], ord)
                        TaylorSeries.mul!(tmp1553[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                        TaylorSeries.mul!(tmp1554[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                        TaylorSeries.add!(tmp1555[i, j, 2, 1], tmp1553[i, j, 2, 1], tmp1554[i, j, 2, 2], ord)
                        TaylorSeries.mul!(tmp1556[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp1555[i, j, 2, 1], tmp1556[i, j, 2, 3], ord)
                        TaylorSeries.mul!(tmp1558[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                        TaylorSeries.mul!(tmp1559[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                        TaylorSeries.add!(tmp1560[i, j, 3, 1], tmp1558[i, j, 3, 1], tmp1559[i, j, 3, 2], ord)
                        TaylorSeries.mul!(tmp1561[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp1560[i, j, 3, 1], tmp1561[i, j, 3, 3], ord)
                        TaylorSeries.mul!(tmp1563[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                        TaylorSeries.mul!(tmp1564[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                        TaylorSeries.add!(tmp1565[i, j, 1, 1], tmp1563[i, j, 1, 1], tmp1564[i, j, 1, 2], ord)
                        TaylorSeries.mul!(tmp1566[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp1565[i, j, 1, 1], tmp1566[i, j, 1, 3], ord)
                        TaylorSeries.mul!(tmp1568[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                        TaylorSeries.mul!(tmp1569[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                        TaylorSeries.add!(tmp1570[i, j, 2, 1], tmp1568[i, j, 2, 1], tmp1569[i, j, 2, 2], ord)
                        TaylorSeries.mul!(tmp1571[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp1570[i, j, 2, 1], tmp1571[i, j, 2, 3], ord)
                        TaylorSeries.mul!(tmp1573[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                        TaylorSeries.mul!(tmp1574[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                        TaylorSeries.add!(tmp1575[i, j, 3, 1], tmp1573[i, j, 3, 1], tmp1574[i, j, 3, 2], ord)
                        TaylorSeries.mul!(tmp1576[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp1575[i, j, 3, 1], tmp1576[i, j, 3, 3], ord)
                        TaylorSeries.mul!(tmp1578[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                        TaylorSeries.mul!(tmp1579[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                        TaylorSeries.add!(tmp1580[i, j, 1, 1], tmp1578[i, j, 1, 1], tmp1579[i, j, 1, 2], ord)
                        TaylorSeries.mul!(tmp1581[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp1580[i, j, 1, 1], tmp1581[i, j, 1, 3], ord)
                        TaylorSeries.mul!(tmp1583[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                        TaylorSeries.mul!(tmp1584[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                        TaylorSeries.add!(tmp1585[i, j, 2, 1], tmp1583[i, j, 2, 1], tmp1584[i, j, 2, 2], ord)
                        TaylorSeries.mul!(tmp1586[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp1585[i, j, 2, 1], tmp1586[i, j, 2, 3], ord)
                        TaylorSeries.mul!(tmp1588[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                        TaylorSeries.mul!(tmp1589[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                        TaylorSeries.add!(tmp1590[i, j, 3, 1], tmp1588[i, j, 3, 1], tmp1589[i, j, 3, 2], ord)
                        TaylorSeries.mul!(tmp1591[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp1590[i, j, 3, 1], tmp1591[i, j, 3, 3], ord)
                        TaylorSeries.mul!(tmp1593[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                        TaylorSeries.mul!(tmp1594[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                        TaylorSeries.add!(tmp1595[i, j, 1, 1], tmp1593[i, j, 1, 1], tmp1594[i, j, 2, 1], ord)
                        TaylorSeries.mul!(tmp1596[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                        TaylorSeries.add!(F_JCS_x[i, j], tmp1595[i, j, 1, 1], tmp1596[i, j, 3, 1], ord)
                        TaylorSeries.mul!(tmp1598[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                        TaylorSeries.mul!(tmp1599[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                        TaylorSeries.add!(tmp1600[i, j, 1, 2], tmp1598[i, j, 1, 2], tmp1599[i, j, 2, 2], ord)
                        TaylorSeries.mul!(tmp1601[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                        TaylorSeries.add!(F_JCS_y[i, j], tmp1600[i, j, 1, 2], tmp1601[i, j, 3, 2], ord)
                        TaylorSeries.mul!(tmp1603[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                        TaylorSeries.mul!(tmp1604[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                        TaylorSeries.add!(tmp1605[i, j, 1, 3], tmp1603[i, j, 1, 3], tmp1604[i, j, 2, 3], ord)
                        TaylorSeries.mul!(tmp1606[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                        TaylorSeries.add!(F_JCS_z[i, j], tmp1605[i, j, 1, 3], tmp1606[i, j, 3, 3], ord)
                    end
                end
            end
        end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp1608[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp1608[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp1610[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp1610[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp1612[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp1612[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp1614[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp1614[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp1616[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp1616[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp1618[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp1618[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp1620[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp1621[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp1622[i, j], tmp1620[i, j], tmp1621[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp1622[i, j], ord)
                            TaylorSeries.mul!(tmp1624[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp1625[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp1626[i, j], tmp1624[i, j], tmp1625[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp1626[i, j], ord)
                            TaylorSeries.mul!(tmp1628[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp1629[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp1630[i, j], tmp1628[i, j], tmp1629[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp1630[i, j], ord)
                            TaylorSeries.mul!(tmp1632[i], N_MfigM_pmA_x[i], μ[j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], tmp1632[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.mul!(tmp1634[i], N_MfigM_pmA_y[i], μ[j], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], tmp1634[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.mul!(tmp1636[i], N_MfigM_pmA_z[i], μ[j], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], tmp1636[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                    TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                    TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                    TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                    TaylorSeries.mul!(tmp1645[i, j], 4, vi_dot_vj[i, j], ord)
                    TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp1645[i, j], ord)
                    TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                    TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                    TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                    TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                    TaylorSeries.add!(tmp1651[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                    TaylorSeries.add!(Rij_dot_Vi[i, j], tmp1651[i, j], Zij_t_Wi[i, j], ord)
                    TaylorSeries.pow!(tmp1654[i, j], Rij_dot_Vi[i, j], 2, ord)
                    TaylorSeries.div!(pn1t7[i, j], tmp1654[i, j], r_p2[i, j], ord)
                    TaylorSeries.mul!(tmp1657[i, j], 1.5, pn1t7[i, j], ord)
                    TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp1657[i, j], ord)
                    TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                end
            end
            TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
            TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
            TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
        end
        for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                    TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                    TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                    TaylorSeries.add!(tmp1664[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                    TaylorSeries.add!(tmp1665[i, j], tmp1664[i, j], pNZ_t_Z[i, j], ord)
                    TaylorSeries.mul!(tmp1666[i, j], 0.5, tmp1665[i, j], ord)
                    TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp1666[i, j], ord)
                    TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                    TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                    TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                    TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                    TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                    TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                    TaylorSeries.add!(tmp1674[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                    TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp1674[i, j], ord)
                    TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                    TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                    TaylorSeries.add!(tmp1677[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                    TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp1677[i, j], ord)
                    TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                    TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                    TaylorSeries.add!(tmp1680[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                    TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp1680[i, j], ord)
                    TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                    TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                end
            end
            TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
            TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
            TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
        end
        for i = 1:N_ext
            TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
            TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
            TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
        end
        for i = N_ext + 1:N
            TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
            TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
            TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
        end
        TaylorSeries.mul!(tmp1689, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1690, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1691, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1692, tmp1690, tmp1691, ord)
        TaylorSeries.add!(Iω_x, tmp1689, tmp1692, ord)
        TaylorSeries.mul!(tmp1694, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1695, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1696, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1697, tmp1695, tmp1696, ord)
        TaylorSeries.add!(Iω_y, tmp1694, tmp1697, ord)
        TaylorSeries.mul!(tmp1699, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1700, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1701, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1702, tmp1700, tmp1701, ord)
        TaylorSeries.add!(Iω_z, tmp1699, tmp1702, ord)
        TaylorSeries.mul!(tmp1704, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp1705, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp1704, tmp1705, ord)
        TaylorSeries.mul!(tmp1707, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp1708, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp1707, tmp1708, ord)
        TaylorSeries.mul!(tmp1710, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp1711, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp1710, tmp1711, ord)
        TaylorSeries.mul!(tmp1713, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1714, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1715, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1716, tmp1714, tmp1715, ord)
        TaylorSeries.add!(dIω_x, tmp1713, tmp1716, ord)
        TaylorSeries.mul!(tmp1718, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1719, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1720, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1721, tmp1719, tmp1720, ord)
        TaylorSeries.add!(dIω_y, tmp1718, tmp1721, ord)
        TaylorSeries.mul!(tmp1723, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1724, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1725, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1726, tmp1724, tmp1725, ord)
        TaylorSeries.add!(dIω_z, tmp1723, tmp1726, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp1731, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1732, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1733, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1734, tmp1732, tmp1733, ord)
        TaylorSeries.add!(er_EM_1, tmp1731, tmp1734, ord)
        TaylorSeries.mul!(tmp1736, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1737, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1738, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1739, tmp1737, tmp1738, ord)
        TaylorSeries.add!(er_EM_2, tmp1736, tmp1739, ord)
        TaylorSeries.mul!(tmp1741, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1742, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1743, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1744, tmp1742, tmp1743, ord)
        TaylorSeries.add!(er_EM_3, tmp1741, tmp1744, ord)
        TaylorSeries.mul!(tmp1746, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1747, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1748, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1749, tmp1747, tmp1748, ord)
        TaylorSeries.add!(p_E_1, tmp1746, tmp1749, ord)
        TaylorSeries.mul!(tmp1751, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1752, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1753, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1754, tmp1752, tmp1753, ord)
        TaylorSeries.add!(p_E_2, tmp1751, tmp1754, ord)
        TaylorSeries.mul!(tmp1756, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1757, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1758, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1759, tmp1757, tmp1758, ord)
        TaylorSeries.add!(p_E_3, tmp1756, tmp1759, ord)
        TaylorSeries.mul!(tmp1761, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1762, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1763, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1764, tmp1762, tmp1763, ord)
        TaylorSeries.add!(I_er_EM_1, tmp1761, tmp1764, ord)
        TaylorSeries.mul!(tmp1766, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1767, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1768, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1769, tmp1767, tmp1768, ord)
        TaylorSeries.add!(I_er_EM_2, tmp1766, tmp1769, ord)
        TaylorSeries.mul!(tmp1771, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1772, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1773, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1774, tmp1772, tmp1773, ord)
        TaylorSeries.add!(I_er_EM_3, tmp1771, tmp1774, ord)
        TaylorSeries.mul!(tmp1776, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1777, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1778, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1779, tmp1777, tmp1778, ord)
        TaylorSeries.add!(I_p_E_1, tmp1776, tmp1779, ord)
        TaylorSeries.mul!(tmp1781, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1782, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1783, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1784, tmp1782, tmp1783, ord)
        TaylorSeries.add!(I_p_E_2, tmp1781, tmp1784, ord)
        TaylorSeries.mul!(tmp1786, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1787, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1788, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1789, tmp1787, tmp1788, ord)
        TaylorSeries.add!(I_p_E_3, tmp1786, tmp1789, ord)
        TaylorSeries.mul!(tmp1791, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1792, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp1791, tmp1792, ord)
        TaylorSeries.mul!(tmp1794, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1795, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp1794, tmp1795, ord)
        TaylorSeries.mul!(tmp1797, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1798, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp1797, tmp1798, ord)
        TaylorSeries.mul!(tmp1800, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp1801, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp1800, tmp1801, ord)
        TaylorSeries.mul!(tmp1803, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp1804, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp1803, tmp1804, ord)
        TaylorSeries.mul!(tmp1806, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp1807, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp1806, tmp1807, ord)
        TaylorSeries.mul!(tmp1809, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1810, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp1809, tmp1810, ord)
        TaylorSeries.mul!(tmp1812, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1813, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp1812, tmp1813, ord)
        TaylorSeries.mul!(tmp1815, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1816, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp1815, tmp1816, ord)
        TaylorSeries.mul!(tmp1818, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp1819, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp1818, tmp1819, ord)
        TaylorSeries.mul!(tmp1821, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp1822, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp1821, tmp1822, ord)
        TaylorSeries.mul!(tmp1824, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp1825, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp1824, tmp1825, ord)
        TaylorSeries.pow!(tmp1829, sin_ϕ[ea, mo], 2, ord)
        TaylorSeries.mul!(tmp1830, 7, tmp1829, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp1830, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp1835, r_p1d2[mo, ea], 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp1835, ord)
        TaylorSeries.mul!(tmp1837, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp1838, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1839, two_sinϕEM, tmp1838, ord)
        TaylorSeries.add!(tmp1840, tmp1837, tmp1839, ord)
        TaylorSeries.mul!(tmp1842, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp1843, tmp1840, tmp1842, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp1843, ord)
        TaylorSeries.mul!(tmp1845, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp1846, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1847, two_sinϕEM, tmp1846, ord)
        TaylorSeries.add!(tmp1848, tmp1845, tmp1847, ord)
        TaylorSeries.mul!(tmp1850, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp1851, tmp1848, tmp1850, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp1851, ord)
        TaylorSeries.mul!(tmp1853, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp1854, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1855, two_sinϕEM, tmp1854, ord)
        TaylorSeries.add!(tmp1856, tmp1853, tmp1855, ord)
        TaylorSeries.mul!(tmp1858, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp1859, tmp1856, tmp1858, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp1859, ord)
        TaylorSeries.mul!(tmp1861, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1862, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1863, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1864, tmp1862, tmp1863, ord)
        TaylorSeries.add!(N_1_LMF, tmp1861, tmp1864, ord)
        TaylorSeries.mul!(tmp1866, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1867, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1868, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1869, tmp1867, tmp1868, ord)
        TaylorSeries.add!(N_2_LMF, tmp1866, tmp1869, ord)
        TaylorSeries.mul!(tmp1871, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1872, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1873, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1874, tmp1872, tmp1873, ord)
        TaylorSeries.add!(N_3_LMF, tmp1871, tmp1874, ord)
        TaylorSeries.subst!(tmp1876, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1877, k_ν, tmp1876, ord)
        TaylorSeries.mul!(tmp1878, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp1879, tmp1878, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp1877, tmp1879, ord)
        TaylorSeries.subst!(tmp1881, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1882, k_ν, tmp1881, ord)
        TaylorSeries.mul!(tmp1883, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp1884, tmp1883, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp1882, tmp1884, ord)
        TaylorSeries.subst!(tmp1886, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp1886, ord)
        TaylorSeries.add!(tmp1888, N_1_LMF, N_MfigM_figE_1, ord)
        TaylorSeries.add!(tmp1889, tmp1888, N_cmb_1, ord)
        TaylorSeries.add!(tmp1890, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp1889, tmp1890, ord)
        TaylorSeries.add!(tmp1892, N_2_LMF, N_MfigM_figE_2, ord)
        TaylorSeries.add!(tmp1893, tmp1892, N_cmb_2, ord)
        TaylorSeries.add!(tmp1894, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp1893, tmp1894, ord)
        TaylorSeries.add!(tmp1896, N_3_LMF, N_MfigM_figE_3, ord)
        TaylorSeries.add!(tmp1897, tmp1896, N_cmb_3, ord)
        TaylorSeries.add!(tmp1898, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp1897, tmp1898, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp1903, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp1904, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp1903, tmp1904, ord)
        TaylorSeries.mul!(tmp1906, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp1907, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp1906, tmp1907, ord)
        TaylorSeries.mul!(tmp1909, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp1910, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp1909, tmp1910, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp1915, tmp1995, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1916, q[6N + 4], tmp1915, ord)
        TaylorSeries.sincos!(tmp1996, tmp1917, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1918, q[6N + 5], tmp1917, ord)
        TaylorSeries.add!(tmp1919, tmp1916, tmp1918, ord)
        TaylorSeries.sincos!(tmp1920, tmp1997, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp1919, tmp1920, ord)
        TaylorSeries.sincos!(tmp1998, tmp1922, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1923, q[6N + 4], tmp1922, ord)
        TaylorSeries.sincos!(tmp1924, tmp1999, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1925, q[6N + 5], tmp1924, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp1923, tmp1925, ord)
        TaylorSeries.sincos!(tmp2000, tmp1927, q[6N + 2], ord)
        TaylorSeries.mul!(tmp1928, dq[6N + 1], tmp1927, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp1928, ord)
        TaylorSeries.mul!(tmp1930, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1931, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1932, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1933, tmp1931, tmp1932, ord)
        TaylorSeries.add!(dq[6N + 4], tmp1930, tmp1933, ord)
        TaylorSeries.mul!(tmp1935, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1936, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1937, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1938, tmp1936, tmp1937, ord)
        TaylorSeries.add!(dq[6N + 5], tmp1935, tmp1938, ord)
        TaylorSeries.mul!(tmp1940, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1941, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1942, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1943, tmp1941, tmp1942, ord)
        TaylorSeries.add!(dq[6N + 6], tmp1940, tmp1943, ord)
        TaylorSeries.sincos!(tmp1945, tmp2001, q[6N + 8], ord)
        TaylorSeries.div!(tmp1946, ω_c_CE_2, tmp1945, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp1946, ord)
        TaylorSeries.sincos!(tmp2002, tmp1948, q[6N + 8], ord)
        TaylorSeries.mul!(tmp1949, dq[6N + 9], tmp1948, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp1949, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.identity!(dq[6N + 13], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end

# TaylorIntegration._allocate_jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S_threads!
function TaylorIntegration._allocate_jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp2911 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3645 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2912 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3646 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2913 = Taylor1(constant_term(tmp2911) * constant_term(tmp2912), order)
    tmp2914 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3647 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2915 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3648 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2916 = Taylor1(constant_term(tmp2914) * constant_term(tmp2915), order)
    tmp2917 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3649 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2918 = Taylor1(constant_term(tmp2916) * constant_term(tmp2917), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp2913) - constant_term(tmp2918), order)
    tmp2920 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3650 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2921 = Taylor1(-(constant_term(tmp2920)), order)
    tmp2922 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3651 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2923 = Taylor1(constant_term(tmp2921) * constant_term(tmp2922), order)
    tmp2924 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3652 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2925 = Taylor1(constant_term(tmp2923) * constant_term(tmp2924), order)
    tmp2926 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3653 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2927 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3654 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2928 = Taylor1(constant_term(tmp2926) * constant_term(tmp2927), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp2925) - constant_term(tmp2928), order)
    tmp2930 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3655 = Taylor1(cos(constant_term(θ_m)), order)
    tmp2931 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3656 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp2930) * constant_term(tmp2931), order)
    tmp2933 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3657 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2934 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3658 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2935 = Taylor1(constant_term(tmp2933) * constant_term(tmp2934), order)
    tmp2936 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3659 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2937 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3660 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2938 = Taylor1(constant_term(tmp2936) * constant_term(tmp2937), order)
    tmp2939 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3661 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2940 = Taylor1(constant_term(tmp2938) * constant_term(tmp2939), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp2935) + constant_term(tmp2940), order)
    tmp2942 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3662 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2943 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3663 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2944 = Taylor1(constant_term(tmp2942) * constant_term(tmp2943), order)
    tmp2945 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3664 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2946 = Taylor1(constant_term(tmp2944) * constant_term(tmp2945), order)
    tmp2947 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3665 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2948 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3666 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2949 = Taylor1(constant_term(tmp2947) * constant_term(tmp2948), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp2946) - constant_term(tmp2949), order)
    tmp2951 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3667 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2952 = Taylor1(-(constant_term(tmp2951)), order)
    tmp2953 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3668 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp2952) * constant_term(tmp2953), order)
    tmp2955 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3669 = Taylor1(cos(constant_term(θ_m)), order)
    tmp2956 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3670 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp2955) * constant_term(tmp2956), order)
    tmp2958 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3671 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2959 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3672 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp2958) * constant_term(tmp2959), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp3673 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp2962 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3674 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2963 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp2962), order)
    tmp2964 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3675 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2965 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp2964), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp2963) + constant_term(tmp2965), order)
    tmp2967 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp2968 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3676 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2969 = Taylor1(constant_term(tmp2967) * constant_term(tmp2968), order)
    tmp2970 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3677 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2971 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp2970), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp2969) + constant_term(tmp2971), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp2973 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3678 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2974 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp2973), order)
    tmp2975 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3679 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2976 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp2975), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp2974) + constant_term(tmp2976), order)
    tmp2978 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp2979 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3680 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2980 = Taylor1(constant_term(tmp2978) * constant_term(tmp2979), order)
    tmp2981 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3681 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2982 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp2981), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp2980) + constant_term(tmp2982), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp2984 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3682 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2985 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp2984), order)
    tmp2986 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3683 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2987 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp2986), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp2985) + constant_term(tmp2987), order)
    tmp2989 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp2990 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3684 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2991 = Taylor1(constant_term(tmp2989) * constant_term(tmp2990), order)
    tmp2992 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3685 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2993 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp2992), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp2991) + constant_term(tmp2993), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp2995 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp2996 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp2997 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp2998 = Taylor1(constant_term(tmp2996) + constant_term(tmp2997), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp2995) + constant_term(tmp2998), order)
    tmp3000 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp3001 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp3002 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp3003 = Taylor1(constant_term(tmp3001) + constant_term(tmp3002), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp3000) + constant_term(tmp3003), order)
    tmp3005 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp3006 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp3007 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp3008 = Taylor1(constant_term(tmp3006) + constant_term(tmp3007), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp3005) + constant_term(tmp3008), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:307 =# Threads.@threads for j = 1:N
            newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
            dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
            dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
        end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:319 =# Threads.@threads for j = 1:N_ext
            accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp3073 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3073 .= Taylor1(zero(_S), order)
    tmp3075 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3075 .= Taylor1(zero(_S), order)
    tmp3076 = Array{Taylor1{_S}}(undef, size(tmp3073))
    tmp3076 .= Taylor1(zero(_S), order)
    tmp3078 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3078 .= Taylor1(zero(_S), order)
    tmp3017 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3017 .= Taylor1(zero(_S), order)
    tmp3019 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3019 .= Taylor1(zero(_S), order)
    tmp3022 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3022 .= Taylor1(zero(_S), order)
    tmp3024 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3024 .= Taylor1(zero(_S), order)
    tmp3027 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3027 .= Taylor1(zero(_S), order)
    tmp3029 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3029 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp3037 = Array{Taylor1{_S}}(undef, size(UU))
    tmp3037 .= Taylor1(zero(_S), order)
    tmp3040 = Array{Taylor1{_S}}(undef, size(X))
    tmp3040 .= Taylor1(zero(_S), order)
    tmp3042 = Array{Taylor1{_S}}(undef, size(Y))
    tmp3042 .= Taylor1(zero(_S), order)
    tmp3043 = Array{Taylor1{_S}}(undef, size(tmp3040))
    tmp3043 .= Taylor1(zero(_S), order)
    tmp3045 = Array{Taylor1{_S}}(undef, size(Z))
    tmp3045 .= Taylor1(zero(_S), order)
    tmp3053 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp3053 .= Taylor1(zero(_S), order)
    tmp3054 = Array{Taylor1{_S}}(undef, size(tmp3053))
    tmp3054 .= Taylor1(zero(_S), order)
    tmp3065 = Array{Taylor1{_S}}(undef, size(X))
    tmp3065 .= Taylor1(zero(_S), order)
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp3065))
    temp_001 .= Taylor1(zero(_S), order)
    tmp3067 = Array{Taylor1{_S}}(undef, size(Y))
    tmp3067 .= Taylor1(zero(_S), order)
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp3067))
    temp_002 .= Taylor1(zero(_S), order)
    tmp3069 = Array{Taylor1{_S}}(undef, size(Z))
    tmp3069 .= Taylor1(zero(_S), order)
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp3069))
    temp_003 .= Taylor1(zero(_S), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:325 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                    Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                    Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                    U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                    V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                    W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                    tmp3017[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                    tmp3019[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                    _4U_m_3X[i, j] = Taylor1(constant_term(tmp3017[3j - 2]) - constant_term(tmp3019[3i - 2]), order)
                    tmp3022[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                    tmp3024[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                    _4V_m_3Y[i, j] = Taylor1(constant_term(tmp3022[3j - 1]) - constant_term(tmp3024[3i - 1]), order)
                    tmp3027[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                    tmp3029[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                    _4W_m_3Z[i, j] = Taylor1(constant_term(tmp3027[3j]) - constant_term(tmp3029[3i]), order)
                    pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                    pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                    pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                    UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                    VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                    WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                    tmp3037[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                    vi_dot_vj[i, j] = Taylor1(constant_term(tmp3037[i, j]) + constant_term(WW[i, j]), order)
                    tmp3040[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                    tmp3042[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                    tmp3043[i, j] = Taylor1(constant_term(tmp3040[i, j]) + constant_term(tmp3042[i, j]), order)
                    tmp3045[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                    r_p2[i, j] = Taylor1(constant_term(tmp3043[i, j]) + constant_term(tmp3045[i, j]), order)
                    r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                    r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                    r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                    newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                    tmp3053[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                    tmp3054[i, j] = Taylor1(constant_term(tmp3053[i, j]) + constant_term(pn2z[i, j]), order)
                    pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp3054[i, j]), order)
                    newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                    pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                    U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                    V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                    W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                    tmp3065[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp3065[i, j]), order)
                    newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                    tmp3067[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp3067[i, j]), order)
                    newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                    tmp3069[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp3069[i, j]), order)
                    newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                    temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                    newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
                end
            end
            tmp3073[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
            tmp3075[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
            tmp3076[3j - 2] = Taylor1(constant_term(tmp3073[3j - 2]) + constant_term(tmp3075[3j - 1]), order)
            tmp3078[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
            v2[j] = Taylor1(constant_term(tmp3076[3j - 2]) + constant_term(tmp3078[3j]), order)
        end
    tmp3080 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp3082 = Taylor1(constant_term(tmp3080) / constant_term(2), order)
    tmp3083 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp3082), order)
    J2M_t = Taylor1(constant_term(tmp3083) / constant_term(μ[mo]), order)
    tmp3085 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp3086 = Taylor1(constant_term(tmp3085) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp3086) / constant_term(4), order)
    tmp3089 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp3089) / constant_term(μ[mo]), order)
    tmp3091 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp3091) / constant_term(μ[mo]), order)
    tmp3093 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp3094 = Taylor1(constant_term(tmp3093) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp3094) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp3106 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    tmp3106 .= Taylor1(zero(_S), order)
    tmp3108 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    tmp3108 .= Taylor1(zero(_S), order)
    tmp3110 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    tmp3110 .= Taylor1(zero(_S), order)
    tmp3114 = Array{Taylor1{_S}}(undef, size(X_bf))
    tmp3114 .= Taylor1(zero(_S), order)
    tmp3116 = Array{Taylor1{_S}}(undef, size(Y_bf))
    tmp3116 .= Taylor1(zero(_S), order)
    tmp3117 = Array{Taylor1{_S}}(undef, size(tmp3114))
    tmp3117 .= Taylor1(zero(_S), order)
    tmp3132 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3132 .= Taylor1(zero(_S), order)
    tmp3133 = Array{Taylor1{_S}}(undef, size(tmp3132))
    tmp3133 .= Taylor1(zero(_S), order)
    tmp3135 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp3135 .= Taylor1(zero(_S), order)
    tmp3136 = Array{Taylor1{_S}}(undef, size(tmp3135))
    tmp3136 .= Taylor1(zero(_S), order)
    tmp3137 = Array{Taylor1{_S}}(undef, size(tmp3136))
    tmp3137 .= Taylor1(zero(_S), order)
    tmp3234 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp3234 .= Taylor1(zero(_S), order)
    tmp3237 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp3237 .= Taylor1(zero(_S), order)
    tmp3239 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3239 .= Taylor1(zero(_S), order)
    tmp3240 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3240 .= Taylor1(zero(_S), order)
    tmp3241 = Array{Taylor1{_S}}(undef, size(tmp3239))
    tmp3241 .= Taylor1(zero(_S), order)
    tmp3242 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3242 .= Taylor1(zero(_S), order)
    tmp3244 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3244 .= Taylor1(zero(_S), order)
    tmp3245 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3245 .= Taylor1(zero(_S), order)
    tmp3246 = Array{Taylor1{_S}}(undef, size(tmp3244))
    tmp3246 .= Taylor1(zero(_S), order)
    tmp3247 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3247 .= Taylor1(zero(_S), order)
    tmp3249 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3249 .= Taylor1(zero(_S), order)
    tmp3250 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3250 .= Taylor1(zero(_S), order)
    tmp3251 = Array{Taylor1{_S}}(undef, size(tmp3249))
    tmp3251 .= Taylor1(zero(_S), order)
    tmp3252 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3252 .= Taylor1(zero(_S), order)
    tmp3254 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3254 .= Taylor1(zero(_S), order)
    tmp3255 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3255 .= Taylor1(zero(_S), order)
    tmp3256 = Array{Taylor1{_S}}(undef, size(tmp3254))
    tmp3256 .= Taylor1(zero(_S), order)
    tmp3257 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3257 .= Taylor1(zero(_S), order)
    tmp3259 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3259 .= Taylor1(zero(_S), order)
    tmp3260 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3260 .= Taylor1(zero(_S), order)
    tmp3261 = Array{Taylor1{_S}}(undef, size(tmp3259))
    tmp3261 .= Taylor1(zero(_S), order)
    tmp3262 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3262 .= Taylor1(zero(_S), order)
    tmp3264 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3264 .= Taylor1(zero(_S), order)
    tmp3265 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3265 .= Taylor1(zero(_S), order)
    tmp3266 = Array{Taylor1{_S}}(undef, size(tmp3264))
    tmp3266 .= Taylor1(zero(_S), order)
    tmp3267 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3267 .= Taylor1(zero(_S), order)
    tmp3269 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3269 .= Taylor1(zero(_S), order)
    tmp3270 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3270 .= Taylor1(zero(_S), order)
    tmp3271 = Array{Taylor1{_S}}(undef, size(tmp3269))
    tmp3271 .= Taylor1(zero(_S), order)
    tmp3272 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3272 .= Taylor1(zero(_S), order)
    tmp3274 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3274 .= Taylor1(zero(_S), order)
    tmp3275 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3275 .= Taylor1(zero(_S), order)
    tmp3276 = Array{Taylor1{_S}}(undef, size(tmp3274))
    tmp3276 .= Taylor1(zero(_S), order)
    tmp3277 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3277 .= Taylor1(zero(_S), order)
    tmp3279 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3279 .= Taylor1(zero(_S), order)
    tmp3280 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3280 .= Taylor1(zero(_S), order)
    tmp3281 = Array{Taylor1{_S}}(undef, size(tmp3279))
    tmp3281 .= Taylor1(zero(_S), order)
    tmp3282 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3282 .= Taylor1(zero(_S), order)
    tmp3284 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3284 .= Taylor1(zero(_S), order)
    tmp3285 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3285 .= Taylor1(zero(_S), order)
    tmp3286 = Array{Taylor1{_S}}(undef, size(tmp3284))
    tmp3286 .= Taylor1(zero(_S), order)
    tmp3287 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3287 .= Taylor1(zero(_S), order)
    tmp3289 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3289 .= Taylor1(zero(_S), order)
    tmp3290 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3290 .= Taylor1(zero(_S), order)
    tmp3291 = Array{Taylor1{_S}}(undef, size(tmp3289))
    tmp3291 .= Taylor1(zero(_S), order)
    tmp3292 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3292 .= Taylor1(zero(_S), order)
    tmp3294 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3294 .= Taylor1(zero(_S), order)
    tmp3295 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3295 .= Taylor1(zero(_S), order)
    tmp3296 = Array{Taylor1{_S}}(undef, size(tmp3294))
    tmp3296 .= Taylor1(zero(_S), order)
    tmp3297 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3297 .= Taylor1(zero(_S), order)
    tmp3122 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3122 .= Taylor1(zero(_S), order)
    tmp3123 = Array{Taylor1{_S}}(undef, size(tmp3122))
    tmp3123 .= Taylor1(zero(_S), order)
    tmp3124 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3124 .= Taylor1(zero(_S), order)
    tmp3126 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp3126 .= Taylor1(zero(_S), order)
    tmp3127 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3127 .= Taylor1(zero(_S), order)
    tmp3139 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3139 .= Taylor1(zero(_S), order)
    tmp3140 = Array{Taylor1{_S}}(undef, size(tmp3139))
    tmp3140 .= Taylor1(zero(_S), order)
    tmp3141 = Array{Taylor1{_S}}(undef, size(tmp3140))
    tmp3141 .= Taylor1(zero(_S), order)
    tmp3143 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp3143 .= Taylor1(zero(_S), order)
    tmp3144 = Array{Taylor1{_S}}(undef, size(tmp3143))
    tmp3144 .= Taylor1(zero(_S), order)
    tmp3145 = Array{Taylor1{_S}}(undef, size(tmp3144))
    tmp3145 .= Taylor1(zero(_S), order)
    tmp3146 = Array{Taylor1{_S}}(undef, size(tmp3145))
    tmp3146 .= Taylor1(zero(_S), order)
    tmp3171 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp3171 .= Taylor1(zero(_S), order)
    tmp3172 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3172 .= Taylor1(zero(_S), order)
    tmp3173 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3173 .= Taylor1(zero(_S), order)
    tmp3174 = Array{Taylor1{_S}}(undef, size(tmp3172))
    tmp3174 .= Taylor1(zero(_S), order)
    tmp3175 = Array{Taylor1{_S}}(undef, size(tmp3171))
    tmp3175 .= Taylor1(zero(_S), order)
    tmp3176 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp3176 .= Taylor1(zero(_S), order)
    tmp3177 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3177 .= Taylor1(zero(_S), order)
    tmp3178 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3178 .= Taylor1(zero(_S), order)
    tmp3179 = Array{Taylor1{_S}}(undef, size(tmp3177))
    tmp3179 .= Taylor1(zero(_S), order)
    tmp3180 = Array{Taylor1{_S}}(undef, size(tmp3176))
    tmp3180 .= Taylor1(zero(_S), order)
    tmp3181 = Array{Taylor1{_S}}(undef, size(tmp3175))
    tmp3181 .= Taylor1(zero(_S), order)
    tmp3183 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3183 .= Taylor1(zero(_S), order)
    tmp3184 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3184 .= Taylor1(zero(_S), order)
    tmp3185 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3185 .= Taylor1(zero(_S), order)
    tmp3186 = Array{Taylor1{_S}}(undef, size(tmp3184))
    tmp3186 .= Taylor1(zero(_S), order)
    tmp3187 = Array{Taylor1{_S}}(undef, size(tmp3183))
    tmp3187 .= Taylor1(zero(_S), order)
    tmp3188 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3188 .= Taylor1(zero(_S), order)
    tmp3189 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3189 .= Taylor1(zero(_S), order)
    tmp3190 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3190 .= Taylor1(zero(_S), order)
    tmp3191 = Array{Taylor1{_S}}(undef, size(tmp3189))
    tmp3191 .= Taylor1(zero(_S), order)
    tmp3192 = Array{Taylor1{_S}}(undef, size(tmp3188))
    tmp3192 .= Taylor1(zero(_S), order)
    tmp3193 = Array{Taylor1{_S}}(undef, size(tmp3187))
    tmp3193 .= Taylor1(zero(_S), order)
    tmp3195 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3195 .= Taylor1(zero(_S), order)
    tmp3196 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3196 .= Taylor1(zero(_S), order)
    tmp3197 = Array{Taylor1{_S}}(undef, size(tmp3195))
    tmp3197 .= Taylor1(zero(_S), order)
    tmp3198 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp3198 .= Taylor1(zero(_S), order)
    tmp3199 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3199 .= Taylor1(zero(_S), order)
    tmp3200 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3200 .= Taylor1(zero(_S), order)
    tmp3201 = Array{Taylor1{_S}}(undef, size(tmp3199))
    tmp3201 .= Taylor1(zero(_S), order)
    tmp3202 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp3202 .= Taylor1(zero(_S), order)
    tmp3203 = Array{Taylor1{_S}}(undef, size(tmp3198))
    tmp3203 .= Taylor1(zero(_S), order)
    tmp3223 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    tmp3223 .= Taylor1(zero(_S), order)
    tmp3224 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    tmp3224 .= Taylor1(zero(_S), order)
    tmp3227 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    tmp3227 .= Taylor1(zero(_S), order)
    tmp3228 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    tmp3228 .= Taylor1(zero(_S), order)
    tmp3149 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3149 .= Taylor1(zero(_S), order)
    tmp3150 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3150 .= Taylor1(zero(_S), order)
    tmp3152 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3152 .= Taylor1(zero(_S), order)
    tmp3153 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3153 .= Taylor1(zero(_S), order)
    tmp3155 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3155 .= Taylor1(zero(_S), order)
    tmp3158 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3158 .= Taylor1(zero(_S), order)
    tmp3167 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3167 .= Taylor1(zero(_S), order)
    tmp3168 = Array{Taylor1{_S}}(undef, size(tmp3167))
    tmp3168 .= Taylor1(zero(_S), order)
    tmp3169 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3169 .= Taylor1(zero(_S), order)
    tmp3160 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3160 .= Taylor1(zero(_S), order)
    tmp3162 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3162 .= Taylor1(zero(_S), order)
    tmp3163 = Array{Taylor1{_S}}(undef, size(tmp3162))
    tmp3163 .= Taylor1(zero(_S), order)
    tmp3164 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3164 .= Taylor1(zero(_S), order)
    tmp3209 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp3209 .= Taylor1(zero(_S), order)
    tmp3210 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp3210 .= Taylor1(zero(_S), order)
    tmp3211 = Array{Taylor1{_S}}(undef, size(tmp3209))
    tmp3211 .= Taylor1(zero(_S), order)
    tmp3212 = Array{Taylor1{_S}}(undef, size(tmp3211))
    tmp3212 .= Taylor1(zero(_S), order)
    tmp3214 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3214 .= Taylor1(zero(_S), order)
    tmp3215 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    tmp3215 .= Taylor1(zero(_S), order)
    tmp3216 = Array{Taylor1{_S}}(undef, size(tmp3214))
    tmp3216 .= Taylor1(zero(_S), order)
    tmp3217 = Array{Taylor1{_S}}(undef, size(tmp3216))
    tmp3217 .= Taylor1(zero(_S), order)
    tmp3219 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp3219 .= Taylor1(zero(_S), order)
    tmp3220 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp3220 .= Taylor1(zero(_S), order)
    tmp3221 = Array{Taylor1{_S}}(undef, size(tmp3220))
    tmp3221 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:416 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                        X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                        X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                        Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                        Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                        Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                        Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                        Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                        Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                        tmp3106[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                        X_bf[i, j] = Taylor1(constant_term(tmp3106[i, j]) + constant_term(X_bf_3[i, j]), order)
                        tmp3108[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                        Y_bf[i, j] = Taylor1(constant_term(tmp3108[i, j]) + constant_term(Y_bf_3[i, j]), order)
                        tmp3110[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                        Z_bf[i, j] = Taylor1(constant_term(tmp3110[i, j]) + constant_term(Z_bf_3[i, j]), order)
                        sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                        tmp3114[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp3116[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp3117[i, j] = Taylor1(constant_term(tmp3114[i, j]) + constant_term(tmp3116[i, j]), order)
                        r_xy[i, j] = Taylor1(sqrt(constant_term(tmp3117[i, j])), order)
                        cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                        sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                        P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                        dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                        for n = 2:n1SEM[j]
                            tmp3122[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp3123[i, j, n] = Taylor1(constant_term(tmp3122[i, j, n]) * constant_term(fact1_jsem[n]), order)
                            tmp3124[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                            P_n[i, j, n + 1] = Taylor1(constant_term(tmp3123[i, j, n]) - constant_term(tmp3124[i, j, n - 1]), order)
                            tmp3126[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp3127[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                            dP_n[i, j, n + 1] = Taylor1(constant_term(tmp3126[i, j, n]) + constant_term(tmp3127[i, j, n]), order)
                            temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                        end
                        r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                        tmp3132[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                        tmp3133[i, j, 3] = Taylor1(constant_term(tmp3132[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ξ[i, j] = Taylor1(constant_term(tmp3133[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        tmp3135[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                        tmp3136[i, j, 3] = Taylor1(constant_term(tmp3135[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                        tmp3137[i, j, 3] = Taylor1(constant_term(tmp3136[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ζ[i, j] = Taylor1(constant_term(tmp3137[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n1SEM[j]
                            tmp3139[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                            tmp3140[i, j, n + 1] = Taylor1(constant_term(tmp3139[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp3141[i, j, n + 1] = Taylor1(constant_term(tmp3140[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjξ[i, j, n] = Taylor1(constant_term(tmp3141[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp3143[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                            tmp3144[i, j, n + 1] = Taylor1(constant_term(tmp3143[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                            tmp3145[i, j, n + 1] = Taylor1(constant_term(tmp3144[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp3146[i, j, n + 1] = Taylor1(constant_term(tmp3145[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjζ[i, j, n] = Taylor1(constant_term(tmp3146[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                            F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                            F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                    cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                    secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                    P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                    cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                                else
                                    tmp3149[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    tmp3150[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    sin_mλ[i, j, m] = Taylor1(constant_term(tmp3149[i, j, m - 1]) + constant_term(tmp3150[i, j, m - 1]), order)
                                    tmp3152[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    tmp3153[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    cos_mλ[i, j, m] = Taylor1(constant_term(tmp3152[i, j, m - 1]) - constant_term(tmp3153[i, j, m - 1]), order)
                                    tmp3155[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp3155[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                    P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp3158[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                    cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp3158[i, j, m, m]) * constant_term(lnm3[m]), order)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        tmp3160[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp3160[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    else
                                        tmp3162[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        tmp3163[i, j, n - 1, m] = Taylor1(constant_term(tmp3162[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                        tmp3164[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp3163[i, j, n - 1, m]) + constant_term(tmp3164[i, j, n - 2, m]), order)
                                    end
                                    P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp3167[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp3168[i, j, n, m] = Taylor1(constant_term(tmp3167[i, j, n, m]) * constant_term(lnm3[n]), order)
                                    tmp3169[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                    cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp3168[i, j, n, m]) + constant_term(tmp3169[i, j, n - 1, m]), order)
                                end
                            end
                            tmp3171[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                            tmp3172[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3173[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3174[i, j, 1] = Taylor1(constant_term(tmp3172[i, j, 1]) + constant_term(tmp3173[i, j, 1]), order)
                            tmp3175[i, j, 2, 1] = Taylor1(constant_term(tmp3171[i, j, 2, 1]) * constant_term(tmp3174[i, j, 1]), order)
                            tmp3176[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                            tmp3177[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3178[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3179[i, j, 2] = Taylor1(constant_term(tmp3177[i, j, 2]) + constant_term(tmp3178[i, j, 2]), order)
                            tmp3180[i, j, 2, 2] = Taylor1(constant_term(tmp3176[i, j, 2, 2]) * constant_term(tmp3179[i, j, 2]), order)
                            tmp3181[i, j, 2, 1] = Taylor1(constant_term(tmp3175[i, j, 2, 1]) + constant_term(tmp3180[i, j, 2, 2]), order)
                            F_CS_ξ[i, j] = Taylor1(constant_term(tmp3181[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp3183[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                            tmp3184[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3185[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3186[i, j, 1] = Taylor1(constant_term(tmp3184[i, j, 1]) - constant_term(tmp3185[i, j, 1]), order)
                            tmp3187[i, j, 2, 1] = Taylor1(constant_term(tmp3183[i, j, 2, 1]) * constant_term(tmp3186[i, j, 1]), order)
                            tmp3188[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                            tmp3189[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3190[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3191[i, j, 2] = Taylor1(constant_term(tmp3189[i, j, 2]) - constant_term(tmp3190[i, j, 2]), order)
                            tmp3192[i, j, 2, 2] = Taylor1(constant_term(tmp3188[i, j, 2, 2]) * constant_term(tmp3191[i, j, 2]), order)
                            tmp3193[i, j, 2, 1] = Taylor1(constant_term(tmp3187[i, j, 2, 1]) + constant_term(tmp3192[i, j, 2, 2]), order)
                            F_CS_η[i, j] = Taylor1(constant_term(tmp3193[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp3195[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3196[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3197[i, j, 1] = Taylor1(constant_term(tmp3195[i, j, 1]) + constant_term(tmp3196[i, j, 1]), order)
                            tmp3198[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp3197[i, j, 1]), order)
                            tmp3199[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3200[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3201[i, j, 2] = Taylor1(constant_term(tmp3199[i, j, 2]) + constant_term(tmp3200[i, j, 2]), order)
                            tmp3202[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp3201[i, j, 2]), order)
                            tmp3203[i, j, 2, 1] = Taylor1(constant_term(tmp3198[i, j, 2, 1]) + constant_term(tmp3202[i, j, 2, 2]), order)
                            F_CS_ζ[i, j] = Taylor1(constant_term(tmp3203[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            for n = 3:n2M
                                for m = 1:n
                                    Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    tmp3209[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                    tmp3210[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp3211[i, j, n, m] = Taylor1(constant_term(tmp3209[i, j, n, m]) * constant_term(tmp3210[i, j, n, m]), order)
                                    tmp3212[i, j, n, m] = Taylor1(constant_term(tmp3211[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp3212[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                    tmp3214[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                    tmp3215[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                    tmp3216[i, j, n, m] = Taylor1(constant_term(tmp3214[i, j, n, m]) * constant_term(tmp3215[i, j, n, m]), order)
                                    tmp3217[i, j, n, m] = Taylor1(constant_term(tmp3216[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp3217[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                    tmp3219[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp3220[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp3219[i, j, n, m]), order)
                                    tmp3221[i, j, n, m] = Taylor1(constant_term(tmp3220[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp3221[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                    F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                    F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                    F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                                end
                            end
                            tmp3223[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp3224[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                            F_JCS_ξ[i, j] = Taylor1(constant_term(tmp3223[i, j]) + constant_term(tmp3224[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                            tmp3227[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                            tmp3228[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(tmp3227[i, j]) + constant_term(tmp3228[i, j]), order)
                        else
                            F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        end
                        Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                        tmp3234[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp3234[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                        tmp3237[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp3237[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                        Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                        tmp3239[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3240[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3241[i, j, 1, 1] = Taylor1(constant_term(tmp3239[i, j, 1, 1]) + constant_term(tmp3240[i, j, 1, 2]), order)
                        tmp3242[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp3241[i, j, 1, 1]) + constant_term(tmp3242[i, j, 1, 3]), order)
                        tmp3244[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3245[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3246[i, j, 2, 1] = Taylor1(constant_term(tmp3244[i, j, 2, 1]) + constant_term(tmp3245[i, j, 2, 2]), order)
                        tmp3247[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp3246[i, j, 2, 1]) + constant_term(tmp3247[i, j, 2, 3]), order)
                        tmp3249[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3250[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3251[i, j, 3, 1] = Taylor1(constant_term(tmp3249[i, j, 3, 1]) + constant_term(tmp3250[i, j, 3, 2]), order)
                        tmp3252[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp3251[i, j, 3, 1]) + constant_term(tmp3252[i, j, 3, 3]), order)
                        tmp3254[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3255[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3256[i, j, 1, 1] = Taylor1(constant_term(tmp3254[i, j, 1, 1]) + constant_term(tmp3255[i, j, 1, 2]), order)
                        tmp3257[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp3256[i, j, 1, 1]) + constant_term(tmp3257[i, j, 1, 3]), order)
                        tmp3259[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3260[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3261[i, j, 2, 1] = Taylor1(constant_term(tmp3259[i, j, 2, 1]) + constant_term(tmp3260[i, j, 2, 2]), order)
                        tmp3262[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp3261[i, j, 2, 1]) + constant_term(tmp3262[i, j, 2, 3]), order)
                        tmp3264[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3265[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3266[i, j, 3, 1] = Taylor1(constant_term(tmp3264[i, j, 3, 1]) + constant_term(tmp3265[i, j, 3, 2]), order)
                        tmp3267[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp3266[i, j, 3, 1]) + constant_term(tmp3267[i, j, 3, 3]), order)
                        tmp3269[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3270[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3271[i, j, 1, 1] = Taylor1(constant_term(tmp3269[i, j, 1, 1]) + constant_term(tmp3270[i, j, 1, 2]), order)
                        tmp3272[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp3271[i, j, 1, 1]) + constant_term(tmp3272[i, j, 1, 3]), order)
                        tmp3274[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3275[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3276[i, j, 2, 1] = Taylor1(constant_term(tmp3274[i, j, 2, 1]) + constant_term(tmp3275[i, j, 2, 2]), order)
                        tmp3277[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp3276[i, j, 2, 1]) + constant_term(tmp3277[i, j, 2, 3]), order)
                        tmp3279[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3280[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3281[i, j, 3, 1] = Taylor1(constant_term(tmp3279[i, j, 3, 1]) + constant_term(tmp3280[i, j, 3, 2]), order)
                        tmp3282[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp3281[i, j, 3, 1]) + constant_term(tmp3282[i, j, 3, 3]), order)
                        tmp3284[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                        tmp3285[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                        tmp3286[i, j, 1, 1] = Taylor1(constant_term(tmp3284[i, j, 1, 1]) + constant_term(tmp3285[i, j, 2, 1]), order)
                        tmp3287[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                        F_JCS_x[i, j] = Taylor1(constant_term(tmp3286[i, j, 1, 1]) + constant_term(tmp3287[i, j, 3, 1]), order)
                        tmp3289[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                        tmp3290[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                        tmp3291[i, j, 1, 2] = Taylor1(constant_term(tmp3289[i, j, 1, 2]) + constant_term(tmp3290[i, j, 2, 2]), order)
                        tmp3292[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                        F_JCS_y[i, j] = Taylor1(constant_term(tmp3291[i, j, 1, 2]) + constant_term(tmp3292[i, j, 3, 2]), order)
                        tmp3294[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                        tmp3295[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                        tmp3296[i, j, 1, 3] = Taylor1(constant_term(tmp3294[i, j, 1, 3]) + constant_term(tmp3295[i, j, 2, 3]), order)
                        tmp3297[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                        F_JCS_z[i, j] = Taylor1(constant_term(tmp3296[i, j, 1, 3]) + constant_term(tmp3297[i, j, 3, 3]), order)
                    end
                end
            end
        end
    tmp3299 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp3299 .= Taylor1(zero(_S), order)
    tmp3301 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp3301 .= Taylor1(zero(_S), order)
    tmp3303 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp3303 .= Taylor1(zero(_S), order)
    tmp3305 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp3305 .= Taylor1(zero(_S), order)
    tmp3307 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp3307 .= Taylor1(zero(_S), order)
    tmp3309 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp3309 .= Taylor1(zero(_S), order)
    tmp3311 = Array{Taylor1{_S}}(undef, size(Y))
    tmp3311 .= Taylor1(zero(_S), order)
    tmp3312 = Array{Taylor1{_S}}(undef, size(Z))
    tmp3312 .= Taylor1(zero(_S), order)
    tmp3313 = Array{Taylor1{_S}}(undef, size(tmp3311))
    tmp3313 .= Taylor1(zero(_S), order)
    tmp3315 = Array{Taylor1{_S}}(undef, size(Z))
    tmp3315 .= Taylor1(zero(_S), order)
    tmp3316 = Array{Taylor1{_S}}(undef, size(X))
    tmp3316 .= Taylor1(zero(_S), order)
    tmp3317 = Array{Taylor1{_S}}(undef, size(tmp3315))
    tmp3317 .= Taylor1(zero(_S), order)
    tmp3319 = Array{Taylor1{_S}}(undef, size(X))
    tmp3319 .= Taylor1(zero(_S), order)
    tmp3320 = Array{Taylor1{_S}}(undef, size(Y))
    tmp3320 .= Taylor1(zero(_S), order)
    tmp3321 = Array{Taylor1{_S}}(undef, size(tmp3319))
    tmp3321 .= Taylor1(zero(_S), order)
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp3299[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp3299[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp3301[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp3301[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp3303[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp3303[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp3305[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp3305[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp3307[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp3307[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp3309[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp3309[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp3311[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp3312[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp3313[i, j] = Taylor1(constant_term(tmp3311[i, j]) - constant_term(tmp3312[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3313[i, j]), order)
                        tmp3315[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp3316[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp3317[i, j] = Taylor1(constant_term(tmp3315[i, j]) - constant_term(tmp3316[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3317[i, j]), order)
                        tmp3319[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp3320[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp3321[i, j] = Taylor1(constant_term(tmp3319[i, j]) - constant_term(tmp3320[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3321[i, j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp3333 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp3333 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp3339 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp3339 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp3339))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp3342 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp3342 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp3342))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp3345 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp3345 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:656 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                    ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                    _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                    sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                    tmp3333[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                    sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp3333[i, j]), order)
                    ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                    Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                    Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                    Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                    tmp3339[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                    Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp3339[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                    tmp3342[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                    pn1t7[i, j] = Taylor1(constant_term(tmp3342[i, j]) / constant_term(r_p2[i, j]), order)
                    tmp3345[i, j] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i, j]), order)
                    pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp3345[i, j]), order)
                    pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
                end
            end
            pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp3352 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp3352 .= Taylor1(zero(_S), order)
    tmp3353 = Array{Taylor1{_S}}(undef, size(tmp3352))
    tmp3353 .= Taylor1(zero(_S), order)
    tmp3354 = Array{Taylor1{_S}}(undef, size(tmp3353))
    tmp3354 .= Taylor1(zero(_S), order)
    tmp3362 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp3362 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp3365 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp3365 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp3368 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp3368 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:695 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                    pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                    pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                    tmp3352[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                    tmp3353[i, j] = Taylor1(constant_term(tmp3352[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                    tmp3354[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp3353[i, j]), order)
                    pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp3354[i, j]), order)
                    X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                    Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                    Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                    pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                    pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                    pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                    tmp3362[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                    termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp3362[i, j]), order)
                    sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                    pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                    tmp3365[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                    termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp3365[i, j]), order)
                    sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                    pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                    tmp3368[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                    termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp3368[i, j]), order)
                    sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                    pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
                end
            end
            postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
            postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
            postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
        end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:741 =# Threads.@threads for i = 1:N_ext
            dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
            dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
            dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
        end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:746 =# Threads.@threads for i = N_ext + 1:N
            dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
            dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
            dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
        end
    tmp3377 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp3378 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp3379 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp3380 = Taylor1(constant_term(tmp3378) + constant_term(tmp3379), order)
    Iω_x = Taylor1(constant_term(tmp3377) + constant_term(tmp3380), order)
    tmp3382 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp3383 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp3384 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp3385 = Taylor1(constant_term(tmp3383) + constant_term(tmp3384), order)
    Iω_y = Taylor1(constant_term(tmp3382) + constant_term(tmp3385), order)
    tmp3387 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp3388 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp3389 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp3390 = Taylor1(constant_term(tmp3388) + constant_term(tmp3389), order)
    Iω_z = Taylor1(constant_term(tmp3387) + constant_term(tmp3390), order)
    tmp3392 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp3393 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp3392) - constant_term(tmp3393), order)
    tmp3395 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp3396 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp3395) - constant_term(tmp3396), order)
    tmp3398 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp3399 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp3398) - constant_term(tmp3399), order)
    tmp3401 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp3402 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp3403 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp3404 = Taylor1(constant_term(tmp3402) + constant_term(tmp3403), order)
    dIω_x = Taylor1(constant_term(tmp3401) + constant_term(tmp3404), order)
    tmp3406 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp3407 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp3408 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp3409 = Taylor1(constant_term(tmp3407) + constant_term(tmp3408), order)
    dIω_y = Taylor1(constant_term(tmp3406) + constant_term(tmp3409), order)
    tmp3411 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp3412 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp3413 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp3414 = Taylor1(constant_term(tmp3412) + constant_term(tmp3413), order)
    dIω_z = Taylor1(constant_term(tmp3411) + constant_term(tmp3414), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp3419 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3420 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3421 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3422 = Taylor1(constant_term(tmp3420) + constant_term(tmp3421), order)
    er_EM_1 = Taylor1(constant_term(tmp3419) + constant_term(tmp3422), order)
    tmp3424 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3425 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3426 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3427 = Taylor1(constant_term(tmp3425) + constant_term(tmp3426), order)
    er_EM_2 = Taylor1(constant_term(tmp3424) + constant_term(tmp3427), order)
    tmp3429 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3430 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3431 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3432 = Taylor1(constant_term(tmp3430) + constant_term(tmp3431), order)
    er_EM_3 = Taylor1(constant_term(tmp3429) + constant_term(tmp3432), order)
    tmp3434 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3435 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3436 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3437 = Taylor1(constant_term(tmp3435) + constant_term(tmp3436), order)
    p_E_1 = Taylor1(constant_term(tmp3434) + constant_term(tmp3437), order)
    tmp3439 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3440 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3441 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3442 = Taylor1(constant_term(tmp3440) + constant_term(tmp3441), order)
    p_E_2 = Taylor1(constant_term(tmp3439) + constant_term(tmp3442), order)
    tmp3444 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3445 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3446 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3447 = Taylor1(constant_term(tmp3445) + constant_term(tmp3446), order)
    p_E_3 = Taylor1(constant_term(tmp3444) + constant_term(tmp3447), order)
    tmp3449 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp3450 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp3451 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp3452 = Taylor1(constant_term(tmp3450) + constant_term(tmp3451), order)
    I_er_EM_1 = Taylor1(constant_term(tmp3449) + constant_term(tmp3452), order)
    tmp3454 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp3455 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp3456 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp3457 = Taylor1(constant_term(tmp3455) + constant_term(tmp3456), order)
    I_er_EM_2 = Taylor1(constant_term(tmp3454) + constant_term(tmp3457), order)
    tmp3459 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp3460 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp3461 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp3462 = Taylor1(constant_term(tmp3460) + constant_term(tmp3461), order)
    I_er_EM_3 = Taylor1(constant_term(tmp3459) + constant_term(tmp3462), order)
    tmp3464 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp3465 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp3466 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp3467 = Taylor1(constant_term(tmp3465) + constant_term(tmp3466), order)
    I_p_E_1 = Taylor1(constant_term(tmp3464) + constant_term(tmp3467), order)
    tmp3469 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp3470 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp3471 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp3472 = Taylor1(constant_term(tmp3470) + constant_term(tmp3471), order)
    I_p_E_2 = Taylor1(constant_term(tmp3469) + constant_term(tmp3472), order)
    tmp3474 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp3475 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp3476 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp3477 = Taylor1(constant_term(tmp3475) + constant_term(tmp3476), order)
    I_p_E_3 = Taylor1(constant_term(tmp3474) + constant_term(tmp3477), order)
    tmp3479 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp3480 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp3479) - constant_term(tmp3480), order)
    tmp3482 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp3483 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp3482) - constant_term(tmp3483), order)
    tmp3485 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp3486 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp3485) - constant_term(tmp3486), order)
    tmp3488 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp3489 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp3488) - constant_term(tmp3489), order)
    tmp3491 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp3492 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp3491) - constant_term(tmp3492), order)
    tmp3494 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp3495 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp3494) - constant_term(tmp3495), order)
    tmp3497 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp3498 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp3497) - constant_term(tmp3498), order)
    tmp3500 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp3501 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp3500) - constant_term(tmp3501), order)
    tmp3503 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp3504 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp3503) - constant_term(tmp3504), order)
    tmp3506 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp3507 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp3506) - constant_term(tmp3507), order)
    tmp3509 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp3510 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp3509) - constant_term(tmp3510), order)
    tmp3512 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp3513 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp3512) - constant_term(tmp3513), order)
    tmp3517 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp3518 = Taylor1(constant_term(7) * constant_term(tmp3517), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp3518), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp3523 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp3523), order)
    tmp3525 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp3526 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp3527 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3526), order)
    tmp3528 = Taylor1(constant_term(tmp3525) + constant_term(tmp3527), order)
    tmp3530 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp3531 = Taylor1(constant_term(tmp3528) - constant_term(tmp3530), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3531), order)
    tmp3533 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp3534 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp3535 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3534), order)
    tmp3536 = Taylor1(constant_term(tmp3533) + constant_term(tmp3535), order)
    tmp3538 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp3539 = Taylor1(constant_term(tmp3536) - constant_term(tmp3538), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3539), order)
    tmp3541 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp3542 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp3543 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3542), order)
    tmp3544 = Taylor1(constant_term(tmp3541) + constant_term(tmp3543), order)
    tmp3546 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp3547 = Taylor1(constant_term(tmp3544) - constant_term(tmp3546), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3547), order)
    tmp3549 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3550 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3551 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3552 = Taylor1(constant_term(tmp3550) + constant_term(tmp3551), order)
    N_1_LMF = Taylor1(constant_term(tmp3549) + constant_term(tmp3552), order)
    tmp3554 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3555 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3556 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3557 = Taylor1(constant_term(tmp3555) + constant_term(tmp3556), order)
    N_2_LMF = Taylor1(constant_term(tmp3554) + constant_term(tmp3557), order)
    tmp3559 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3560 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3561 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3562 = Taylor1(constant_term(tmp3560) + constant_term(tmp3561), order)
    N_3_LMF = Taylor1(constant_term(tmp3559) + constant_term(tmp3562), order)
    tmp3564 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp3565 = Taylor1(constant_term(k_ν) * constant_term(tmp3564), order)
    tmp3566 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp3567 = Taylor1(constant_term(tmp3566) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp3565) - constant_term(tmp3567), order)
    tmp3569 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp3570 = Taylor1(constant_term(k_ν) * constant_term(tmp3569), order)
    tmp3571 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp3572 = Taylor1(constant_term(tmp3571) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp3570) + constant_term(tmp3572), order)
    tmp3574 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp3574), order)
    tmp3576 = Taylor1(constant_term(μ[mo]) * constant_term(N_1_LMF), order)
    tmp3577 = Taylor1(constant_term(N_MfigM_figE_1) + constant_term(tmp3576), order)
    tmp3578 = Taylor1(constant_term(tmp3577) + constant_term(N_cmb_1), order)
    tmp3579 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp3578) - constant_term(tmp3579), order)
    tmp3581 = Taylor1(constant_term(μ[mo]) * constant_term(N_2_LMF), order)
    tmp3582 = Taylor1(constant_term(N_MfigM_figE_2) + constant_term(tmp3581), order)
    tmp3583 = Taylor1(constant_term(tmp3582) + constant_term(N_cmb_2), order)
    tmp3584 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp3583) - constant_term(tmp3584), order)
    tmp3586 = Taylor1(constant_term(μ[mo]) * constant_term(N_3_LMF), order)
    tmp3587 = Taylor1(constant_term(N_MfigM_figE_3) + constant_term(tmp3586), order)
    tmp3588 = Taylor1(constant_term(tmp3587) + constant_term(N_cmb_3), order)
    tmp3589 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp3588) - constant_term(tmp3589), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp3594 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp3595 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp3594) - constant_term(tmp3595), order)
    tmp3597 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp3598 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp3597) - constant_term(tmp3598), order)
    tmp3600 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp3601 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp3600) - constant_term(tmp3601), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp3606 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3686 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3607 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp3606), order)
    tmp3608 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3687 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3609 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp3608), order)
    tmp3610 = Taylor1(constant_term(tmp3607) + constant_term(tmp3609), order)
    tmp3611 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp3688 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp3610) / constant_term(tmp3611), order)
    tmp3613 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3689 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3614 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp3613), order)
    tmp3615 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3690 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3616 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp3615), order)
    dq[6N + 2] = Taylor1(constant_term(tmp3614) - constant_term(tmp3616), order)
    tmp3618 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp3691 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp3619 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp3618), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp3619), order)
    tmp3621 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp3622 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp3623 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp3624 = Taylor1(constant_term(tmp3622) + constant_term(tmp3623), order)
    dq[6N + 4] = Taylor1(constant_term(tmp3621) + constant_term(tmp3624), order)
    tmp3626 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp3627 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp3628 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp3629 = Taylor1(constant_term(tmp3627) + constant_term(tmp3628), order)
    dq[6N + 5] = Taylor1(constant_term(tmp3626) + constant_term(tmp3629), order)
    tmp3631 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp3632 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp3633 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp3634 = Taylor1(constant_term(tmp3632) + constant_term(tmp3633), order)
    dq[6N + 6] = Taylor1(constant_term(tmp3631) + constant_term(tmp3634), order)
    tmp3636 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp3692 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp3637 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp3636), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp3637)), order)
    tmp3639 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp3693 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp3640 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp3639), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp3640), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    dq[6N + 13] = Taylor1(identity(constant_term(zero_q_1)), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp2911, tmp2912, tmp2913, tmp2914, tmp2915, tmp2916, tmp2917, tmp2918, tmp2920, tmp2921, tmp2922, tmp2923, tmp2924, tmp2925, tmp2926, tmp2927, tmp2928, tmp2930, tmp2931, tmp2933, tmp2934, tmp2935, tmp2936, tmp2937, tmp2938, tmp2939, tmp2940, tmp2942, tmp2943, tmp2944, tmp2945, tmp2946, tmp2947, tmp2948, tmp2949, tmp2951, tmp2952, tmp2953, tmp2955, tmp2956, tmp2958, tmp2959, tmp2962, tmp2963, tmp2964, tmp2965, tmp2967, tmp2968, tmp2969, tmp2970, tmp2971, tmp2973, tmp2974, tmp2975, tmp2976, tmp2978, tmp2979, tmp2980, tmp2981, tmp2982, tmp2984, tmp2985, tmp2986, tmp2987, tmp2989, tmp2990, tmp2991, tmp2992, tmp2993, tmp2995, tmp2996, tmp2997, tmp2998, tmp3000, tmp3001, tmp3002, tmp3003, tmp3005, tmp3006, tmp3007, tmp3008, tmp3080, tmp3082, tmp3083, tmp3085, tmp3086, tmp3089, tmp3091, tmp3093, tmp3094, tmp3377, tmp3378, tmp3379, tmp3380, tmp3382, tmp3383, tmp3384, tmp3385, tmp3387, tmp3388, tmp3389, tmp3390, tmp3392, tmp3393, tmp3395, tmp3396, tmp3398, tmp3399, tmp3401, tmp3402, tmp3403, tmp3404, tmp3406, tmp3407, tmp3408, tmp3409, tmp3411, tmp3412, tmp3413, tmp3414, tmp3419, tmp3420, tmp3421, tmp3422, tmp3424, tmp3425, tmp3426, tmp3427, tmp3429, tmp3430, tmp3431, tmp3432, tmp3434, tmp3435, tmp3436, tmp3437, tmp3439, tmp3440, tmp3441, tmp3442, tmp3444, tmp3445, tmp3446, tmp3447, tmp3449, tmp3450, tmp3451, tmp3452, tmp3454, tmp3455, tmp3456, tmp3457, tmp3459, tmp3460, tmp3461, tmp3462, tmp3464, tmp3465, tmp3466, tmp3467, tmp3469, tmp3470, tmp3471, tmp3472, tmp3474, tmp3475, tmp3476, tmp3477, tmp3479, tmp3480, tmp3482, tmp3483, tmp3485, tmp3486, tmp3488, tmp3489, tmp3491, tmp3492, tmp3494, tmp3495, tmp3497, tmp3498, tmp3500, tmp3501, tmp3503, tmp3504, tmp3506, tmp3507, tmp3509, tmp3510, tmp3512, tmp3513, tmp3517, tmp3518, tmp3523, tmp3525, tmp3526, tmp3527, tmp3528, tmp3530, tmp3531, tmp3533, tmp3534, tmp3535, tmp3536, tmp3538, tmp3539, tmp3541, tmp3542, tmp3543, tmp3544, tmp3546, tmp3547, tmp3549, tmp3550, tmp3551, tmp3552, tmp3554, tmp3555, tmp3556, tmp3557, tmp3559, tmp3560, tmp3561, tmp3562, tmp3564, tmp3565, tmp3566, tmp3567, tmp3569, tmp3570, tmp3571, tmp3572, tmp3574, tmp3576, tmp3577, tmp3578, tmp3579, tmp3581, tmp3582, tmp3583, tmp3584, tmp3586, tmp3587, tmp3588, tmp3589, tmp3594, tmp3595, tmp3597, tmp3598, tmp3600, tmp3601, tmp3606, tmp3607, tmp3608, tmp3609, tmp3610, tmp3611, tmp3613, tmp3614, tmp3615, tmp3616, tmp3618, tmp3619, tmp3621, tmp3622, tmp3623, tmp3624, tmp3626, tmp3627, tmp3628, tmp3629, tmp3631, tmp3632, tmp3633, tmp3634, tmp3636, tmp3637, tmp3639, tmp3640, ϕ_m, θ_m, ψ_m, tmp3645, tmp3646, tmp3647, tmp3648, tmp3649, tmp3650, tmp3651, tmp3652, tmp3653, tmp3654, tmp3655, tmp3656, tmp3657, tmp3658, tmp3659, tmp3660, tmp3661, tmp3662, tmp3663, tmp3664, tmp3665, tmp3666, tmp3667, tmp3668, tmp3669, tmp3670, tmp3671, tmp3672, tmp3673, ϕ_c, tmp3674, tmp3675, tmp3676, tmp3677, tmp3678, tmp3679, tmp3680, tmp3681, tmp3682, tmp3683, tmp3684, tmp3685, ω_c_CE_1, ω_c_CE_2, ω_c_CE_3, J2M_t, C22M_t, C21M_t, S21M_t, S22M_t, Iω_x, Iω_y, Iω_z, ωxIω_x, ωxIω_y, ωxIω_z, dIω_x, dIω_y, dIω_z, er_EM_I_1, er_EM_I_2, er_EM_I_3, p_E_I_1, p_E_I_2, p_E_I_3, er_EM_1, er_EM_2, er_EM_3, p_E_1, p_E_2, p_E_3, I_er_EM_1, I_er_EM_2, I_er_EM_3, I_p_E_1, I_p_E_2, I_p_E_3, er_EM_cross_I_er_EM_1, er_EM_cross_I_er_EM_2, er_EM_cross_I_er_EM_3, er_EM_cross_I_p_E_1, er_EM_cross_I_p_E_2, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_1, p_E_cross_I_er_EM_2, p_E_cross_I_er_EM_3, p_E_cross_I_p_E_1, p_E_cross_I_p_E_2, p_E_cross_I_p_E_3, one_minus_7sin2ϕEM, two_sinϕEM, N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_1, N_MfigM_figE_2, N_MfigM_figE_3, N_1_LMF, N_2_LMF, N_3_LMF, N_cmb_1, N_cmb_2, N_cmb_3, I_dω_1, I_dω_2, I_dω_3, Ic_ωc_1, Ic_ωc_2, Ic_ωc_3, m_ωm_x_Icωc_1, m_ωm_x_Icωc_2, m_ωm_x_Icωc_3, Ic_dωc_1, Ic_dωc_2, Ic_dωc_3, tmp3686, tmp3687, tmp3688, tmp3689, tmp3690, tmp3691, tmp3692, tmp3693], [newtonX, newtonY, newtonZ, newtonianNb_Potential, v2, pntempX, pntempY, pntempZ, postNewtonX, postNewtonY, postNewtonZ, accX, accY, accZ, N_MfigM_pmA_x, N_MfigM_pmA_y, N_MfigM_pmA_z, temp_N_M_x, temp_N_M_y, temp_N_M_z, N_MfigM, J2_t, tmp3017, tmp3019, tmp3022, tmp3024, tmp3027, tmp3029, tmp3073, tmp3075, tmp3076, tmp3078], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, _2v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, X_bf_1, Y_bf_1, Z_bf_1, X_bf_2, Y_bf_2, Z_bf_2, X_bf_3, Y_bf_3, Z_bf_3, X_bf, Y_bf, Z_bf, F_JCS_x, F_JCS_y, F_JCS_z, temp_accX_j, temp_accY_j, temp_accZ_j, temp_accX_i, temp_accY_i, temp_accZ_i, sin_ϕ, cos_ϕ, sin_λ, cos_λ, r_xy, r_p4, F_CS_ξ_36, F_CS_η_36, F_CS_ζ_36, F_J_ξ_36, F_J_ζ_36, F_J_ξ, F_J_ζ, F_CS_ξ, F_CS_η, F_CS_ζ, F_JCS_ξ, F_JCS_η, F_JCS_ζ, mantlef2coref, pn2x, pn2y, pn2z, tmp3037, tmp3040, tmp3042, tmp3043, tmp3045, tmp3053, tmp3054, tmp3065, temp_001, tmp3067, temp_002, tmp3069, temp_003, temp_004, tmp3106, tmp3108, tmp3110, tmp3114, tmp3116, tmp3117, tmp3223, tmp3224, tmp3227, tmp3228, tmp3234, tmp3237, tmp3299, tmp3301, tmp3303, tmp3305, tmp3307, tmp3309, tmp3311, tmp3312, tmp3313, tmp3315, tmp3316, tmp3317, tmp3319, tmp3320, tmp3321, tmp3333, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp3339, Rij_dot_Vi, tmp3342, pn1t7, tmp3345, pn1t2_7, tmp3352, tmp3353, tmp3354, tmp3362, termpnx, sumpnx, tmp3365, termpny, sumpny, tmp3368, termpnz, sumpnz], [P_n, dP_n, temp_fjξ, temp_fjζ, temp_rn, sin_mλ, cos_mλ, RotM, tmp3122, tmp3123, tmp3124, tmp3126, tmp3127, tmp3132, tmp3133, tmp3135, tmp3136, tmp3137, tmp3139, tmp3140, tmp3141, tmp3143, tmp3144, tmp3145, tmp3146, tmp3149, tmp3150, tmp3152, tmp3153, tmp3172, tmp3173, tmp3174, tmp3177, tmp3178, tmp3179, tmp3184, tmp3185, tmp3186, tmp3189, tmp3190, tmp3191, tmp3195, tmp3196, tmp3197, tmp3199, tmp3200, tmp3201], [temp_CS_ξ, temp_CS_η, temp_CS_ζ, Cnm_cosmλ, Cnm_sinmλ, Snm_cosmλ, Snm_sinmλ, secϕ_P_nm, P_nm, cosϕ_dP_nm, Rb2p, Gc2p, tmp3155, tmp3158, tmp3160, tmp3162, tmp3163, tmp3164, tmp3167, tmp3168, tmp3169, tmp3171, tmp3175, tmp3176, tmp3180, tmp3181, tmp3183, tmp3187, tmp3188, tmp3192, tmp3193, tmp3198, tmp3202, tmp3203, tmp3209, tmp3210, tmp3211, tmp3212, tmp3214, tmp3215, tmp3216, tmp3217, tmp3219, tmp3220, tmp3221, tmp3239, tmp3240, tmp3241, tmp3242, tmp3244, tmp3245, tmp3246, tmp3247, tmp3249, tmp3250, tmp3251, tmp3252, tmp3254, tmp3255, tmp3256, tmp3257, tmp3259, tmp3260, tmp3261, tmp3262, tmp3264, tmp3265, tmp3266, tmp3267, tmp3269, tmp3270, tmp3271, tmp3272, tmp3274, tmp3275, tmp3276, tmp3277, tmp3279, tmp3280, tmp3281, tmp3282, tmp3284, tmp3285, tmp3286, tmp3287, tmp3289, tmp3290, tmp3291, tmp3292, tmp3294, tmp3295, tmp3296, tmp3297])
end
# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S_threads!
function TaylorIntegration.jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp2911 = __ralloc.v0[1]::Taylor1{_S}
    tmp2912 = __ralloc.v0[2]::Taylor1{_S}
    tmp2913 = __ralloc.v0[3]::Taylor1{_S}
    tmp2914 = __ralloc.v0[4]::Taylor1{_S}
    tmp2915 = __ralloc.v0[5]::Taylor1{_S}
    tmp2916 = __ralloc.v0[6]::Taylor1{_S}
    tmp2917 = __ralloc.v0[7]::Taylor1{_S}
    tmp2918 = __ralloc.v0[8]::Taylor1{_S}
    tmp2920 = __ralloc.v0[9]::Taylor1{_S}
    tmp2921 = __ralloc.v0[10]::Taylor1{_S}
    tmp2922 = __ralloc.v0[11]::Taylor1{_S}
    tmp2923 = __ralloc.v0[12]::Taylor1{_S}
    tmp2924 = __ralloc.v0[13]::Taylor1{_S}
    tmp2925 = __ralloc.v0[14]::Taylor1{_S}
    tmp2926 = __ralloc.v0[15]::Taylor1{_S}
    tmp2927 = __ralloc.v0[16]::Taylor1{_S}
    tmp2928 = __ralloc.v0[17]::Taylor1{_S}
    tmp2930 = __ralloc.v0[18]::Taylor1{_S}
    tmp2931 = __ralloc.v0[19]::Taylor1{_S}
    tmp2933 = __ralloc.v0[20]::Taylor1{_S}
    tmp2934 = __ralloc.v0[21]::Taylor1{_S}
    tmp2935 = __ralloc.v0[22]::Taylor1{_S}
    tmp2936 = __ralloc.v0[23]::Taylor1{_S}
    tmp2937 = __ralloc.v0[24]::Taylor1{_S}
    tmp2938 = __ralloc.v0[25]::Taylor1{_S}
    tmp2939 = __ralloc.v0[26]::Taylor1{_S}
    tmp2940 = __ralloc.v0[27]::Taylor1{_S}
    tmp2942 = __ralloc.v0[28]::Taylor1{_S}
    tmp2943 = __ralloc.v0[29]::Taylor1{_S}
    tmp2944 = __ralloc.v0[30]::Taylor1{_S}
    tmp2945 = __ralloc.v0[31]::Taylor1{_S}
    tmp2946 = __ralloc.v0[32]::Taylor1{_S}
    tmp2947 = __ralloc.v0[33]::Taylor1{_S}
    tmp2948 = __ralloc.v0[34]::Taylor1{_S}
    tmp2949 = __ralloc.v0[35]::Taylor1{_S}
    tmp2951 = __ralloc.v0[36]::Taylor1{_S}
    tmp2952 = __ralloc.v0[37]::Taylor1{_S}
    tmp2953 = __ralloc.v0[38]::Taylor1{_S}
    tmp2955 = __ralloc.v0[39]::Taylor1{_S}
    tmp2956 = __ralloc.v0[40]::Taylor1{_S}
    tmp2958 = __ralloc.v0[41]::Taylor1{_S}
    tmp2959 = __ralloc.v0[42]::Taylor1{_S}
    tmp2962 = __ralloc.v0[43]::Taylor1{_S}
    tmp2963 = __ralloc.v0[44]::Taylor1{_S}
    tmp2964 = __ralloc.v0[45]::Taylor1{_S}
    tmp2965 = __ralloc.v0[46]::Taylor1{_S}
    tmp2967 = __ralloc.v0[47]::Taylor1{_S}
    tmp2968 = __ralloc.v0[48]::Taylor1{_S}
    tmp2969 = __ralloc.v0[49]::Taylor1{_S}
    tmp2970 = __ralloc.v0[50]::Taylor1{_S}
    tmp2971 = __ralloc.v0[51]::Taylor1{_S}
    tmp2973 = __ralloc.v0[52]::Taylor1{_S}
    tmp2974 = __ralloc.v0[53]::Taylor1{_S}
    tmp2975 = __ralloc.v0[54]::Taylor1{_S}
    tmp2976 = __ralloc.v0[55]::Taylor1{_S}
    tmp2978 = __ralloc.v0[56]::Taylor1{_S}
    tmp2979 = __ralloc.v0[57]::Taylor1{_S}
    tmp2980 = __ralloc.v0[58]::Taylor1{_S}
    tmp2981 = __ralloc.v0[59]::Taylor1{_S}
    tmp2982 = __ralloc.v0[60]::Taylor1{_S}
    tmp2984 = __ralloc.v0[61]::Taylor1{_S}
    tmp2985 = __ralloc.v0[62]::Taylor1{_S}
    tmp2986 = __ralloc.v0[63]::Taylor1{_S}
    tmp2987 = __ralloc.v0[64]::Taylor1{_S}
    tmp2989 = __ralloc.v0[65]::Taylor1{_S}
    tmp2990 = __ralloc.v0[66]::Taylor1{_S}
    tmp2991 = __ralloc.v0[67]::Taylor1{_S}
    tmp2992 = __ralloc.v0[68]::Taylor1{_S}
    tmp2993 = __ralloc.v0[69]::Taylor1{_S}
    tmp2995 = __ralloc.v0[70]::Taylor1{_S}
    tmp2996 = __ralloc.v0[71]::Taylor1{_S}
    tmp2997 = __ralloc.v0[72]::Taylor1{_S}
    tmp2998 = __ralloc.v0[73]::Taylor1{_S}
    tmp3000 = __ralloc.v0[74]::Taylor1{_S}
    tmp3001 = __ralloc.v0[75]::Taylor1{_S}
    tmp3002 = __ralloc.v0[76]::Taylor1{_S}
    tmp3003 = __ralloc.v0[77]::Taylor1{_S}
    tmp3005 = __ralloc.v0[78]::Taylor1{_S}
    tmp3006 = __ralloc.v0[79]::Taylor1{_S}
    tmp3007 = __ralloc.v0[80]::Taylor1{_S}
    tmp3008 = __ralloc.v0[81]::Taylor1{_S}
    tmp3080 = __ralloc.v0[82]::Taylor1{_S}
    tmp3082 = __ralloc.v0[83]::Taylor1{_S}
    tmp3083 = __ralloc.v0[84]::Taylor1{_S}
    tmp3085 = __ralloc.v0[85]::Taylor1{_S}
    tmp3086 = __ralloc.v0[86]::Taylor1{_S}
    tmp3089 = __ralloc.v0[87]::Taylor1{_S}
    tmp3091 = __ralloc.v0[88]::Taylor1{_S}
    tmp3093 = __ralloc.v0[89]::Taylor1{_S}
    tmp3094 = __ralloc.v0[90]::Taylor1{_S}
    tmp3377 = __ralloc.v0[91]::Taylor1{_S}
    tmp3378 = __ralloc.v0[92]::Taylor1{_S}
    tmp3379 = __ralloc.v0[93]::Taylor1{_S}
    tmp3380 = __ralloc.v0[94]::Taylor1{_S}
    tmp3382 = __ralloc.v0[95]::Taylor1{_S}
    tmp3383 = __ralloc.v0[96]::Taylor1{_S}
    tmp3384 = __ralloc.v0[97]::Taylor1{_S}
    tmp3385 = __ralloc.v0[98]::Taylor1{_S}
    tmp3387 = __ralloc.v0[99]::Taylor1{_S}
    tmp3388 = __ralloc.v0[100]::Taylor1{_S}
    tmp3389 = __ralloc.v0[101]::Taylor1{_S}
    tmp3390 = __ralloc.v0[102]::Taylor1{_S}
    tmp3392 = __ralloc.v0[103]::Taylor1{_S}
    tmp3393 = __ralloc.v0[104]::Taylor1{_S}
    tmp3395 = __ralloc.v0[105]::Taylor1{_S}
    tmp3396 = __ralloc.v0[106]::Taylor1{_S}
    tmp3398 = __ralloc.v0[107]::Taylor1{_S}
    tmp3399 = __ralloc.v0[108]::Taylor1{_S}
    tmp3401 = __ralloc.v0[109]::Taylor1{_S}
    tmp3402 = __ralloc.v0[110]::Taylor1{_S}
    tmp3403 = __ralloc.v0[111]::Taylor1{_S}
    tmp3404 = __ralloc.v0[112]::Taylor1{_S}
    tmp3406 = __ralloc.v0[113]::Taylor1{_S}
    tmp3407 = __ralloc.v0[114]::Taylor1{_S}
    tmp3408 = __ralloc.v0[115]::Taylor1{_S}
    tmp3409 = __ralloc.v0[116]::Taylor1{_S}
    tmp3411 = __ralloc.v0[117]::Taylor1{_S}
    tmp3412 = __ralloc.v0[118]::Taylor1{_S}
    tmp3413 = __ralloc.v0[119]::Taylor1{_S}
    tmp3414 = __ralloc.v0[120]::Taylor1{_S}
    tmp3419 = __ralloc.v0[121]::Taylor1{_S}
    tmp3420 = __ralloc.v0[122]::Taylor1{_S}
    tmp3421 = __ralloc.v0[123]::Taylor1{_S}
    tmp3422 = __ralloc.v0[124]::Taylor1{_S}
    tmp3424 = __ralloc.v0[125]::Taylor1{_S}
    tmp3425 = __ralloc.v0[126]::Taylor1{_S}
    tmp3426 = __ralloc.v0[127]::Taylor1{_S}
    tmp3427 = __ralloc.v0[128]::Taylor1{_S}
    tmp3429 = __ralloc.v0[129]::Taylor1{_S}
    tmp3430 = __ralloc.v0[130]::Taylor1{_S}
    tmp3431 = __ralloc.v0[131]::Taylor1{_S}
    tmp3432 = __ralloc.v0[132]::Taylor1{_S}
    tmp3434 = __ralloc.v0[133]::Taylor1{_S}
    tmp3435 = __ralloc.v0[134]::Taylor1{_S}
    tmp3436 = __ralloc.v0[135]::Taylor1{_S}
    tmp3437 = __ralloc.v0[136]::Taylor1{_S}
    tmp3439 = __ralloc.v0[137]::Taylor1{_S}
    tmp3440 = __ralloc.v0[138]::Taylor1{_S}
    tmp3441 = __ralloc.v0[139]::Taylor1{_S}
    tmp3442 = __ralloc.v0[140]::Taylor1{_S}
    tmp3444 = __ralloc.v0[141]::Taylor1{_S}
    tmp3445 = __ralloc.v0[142]::Taylor1{_S}
    tmp3446 = __ralloc.v0[143]::Taylor1{_S}
    tmp3447 = __ralloc.v0[144]::Taylor1{_S}
    tmp3449 = __ralloc.v0[145]::Taylor1{_S}
    tmp3450 = __ralloc.v0[146]::Taylor1{_S}
    tmp3451 = __ralloc.v0[147]::Taylor1{_S}
    tmp3452 = __ralloc.v0[148]::Taylor1{_S}
    tmp3454 = __ralloc.v0[149]::Taylor1{_S}
    tmp3455 = __ralloc.v0[150]::Taylor1{_S}
    tmp3456 = __ralloc.v0[151]::Taylor1{_S}
    tmp3457 = __ralloc.v0[152]::Taylor1{_S}
    tmp3459 = __ralloc.v0[153]::Taylor1{_S}
    tmp3460 = __ralloc.v0[154]::Taylor1{_S}
    tmp3461 = __ralloc.v0[155]::Taylor1{_S}
    tmp3462 = __ralloc.v0[156]::Taylor1{_S}
    tmp3464 = __ralloc.v0[157]::Taylor1{_S}
    tmp3465 = __ralloc.v0[158]::Taylor1{_S}
    tmp3466 = __ralloc.v0[159]::Taylor1{_S}
    tmp3467 = __ralloc.v0[160]::Taylor1{_S}
    tmp3469 = __ralloc.v0[161]::Taylor1{_S}
    tmp3470 = __ralloc.v0[162]::Taylor1{_S}
    tmp3471 = __ralloc.v0[163]::Taylor1{_S}
    tmp3472 = __ralloc.v0[164]::Taylor1{_S}
    tmp3474 = __ralloc.v0[165]::Taylor1{_S}
    tmp3475 = __ralloc.v0[166]::Taylor1{_S}
    tmp3476 = __ralloc.v0[167]::Taylor1{_S}
    tmp3477 = __ralloc.v0[168]::Taylor1{_S}
    tmp3479 = __ralloc.v0[169]::Taylor1{_S}
    tmp3480 = __ralloc.v0[170]::Taylor1{_S}
    tmp3482 = __ralloc.v0[171]::Taylor1{_S}
    tmp3483 = __ralloc.v0[172]::Taylor1{_S}
    tmp3485 = __ralloc.v0[173]::Taylor1{_S}
    tmp3486 = __ralloc.v0[174]::Taylor1{_S}
    tmp3488 = __ralloc.v0[175]::Taylor1{_S}
    tmp3489 = __ralloc.v0[176]::Taylor1{_S}
    tmp3491 = __ralloc.v0[177]::Taylor1{_S}
    tmp3492 = __ralloc.v0[178]::Taylor1{_S}
    tmp3494 = __ralloc.v0[179]::Taylor1{_S}
    tmp3495 = __ralloc.v0[180]::Taylor1{_S}
    tmp3497 = __ralloc.v0[181]::Taylor1{_S}
    tmp3498 = __ralloc.v0[182]::Taylor1{_S}
    tmp3500 = __ralloc.v0[183]::Taylor1{_S}
    tmp3501 = __ralloc.v0[184]::Taylor1{_S}
    tmp3503 = __ralloc.v0[185]::Taylor1{_S}
    tmp3504 = __ralloc.v0[186]::Taylor1{_S}
    tmp3506 = __ralloc.v0[187]::Taylor1{_S}
    tmp3507 = __ralloc.v0[188]::Taylor1{_S}
    tmp3509 = __ralloc.v0[189]::Taylor1{_S}
    tmp3510 = __ralloc.v0[190]::Taylor1{_S}
    tmp3512 = __ralloc.v0[191]::Taylor1{_S}
    tmp3513 = __ralloc.v0[192]::Taylor1{_S}
    tmp3517 = __ralloc.v0[193]::Taylor1{_S}
    tmp3518 = __ralloc.v0[194]::Taylor1{_S}
    tmp3523 = __ralloc.v0[195]::Taylor1{_S}
    tmp3525 = __ralloc.v0[196]::Taylor1{_S}
    tmp3526 = __ralloc.v0[197]::Taylor1{_S}
    tmp3527 = __ralloc.v0[198]::Taylor1{_S}
    tmp3528 = __ralloc.v0[199]::Taylor1{_S}
    tmp3530 = __ralloc.v0[200]::Taylor1{_S}
    tmp3531 = __ralloc.v0[201]::Taylor1{_S}
    tmp3533 = __ralloc.v0[202]::Taylor1{_S}
    tmp3534 = __ralloc.v0[203]::Taylor1{_S}
    tmp3535 = __ralloc.v0[204]::Taylor1{_S}
    tmp3536 = __ralloc.v0[205]::Taylor1{_S}
    tmp3538 = __ralloc.v0[206]::Taylor1{_S}
    tmp3539 = __ralloc.v0[207]::Taylor1{_S}
    tmp3541 = __ralloc.v0[208]::Taylor1{_S}
    tmp3542 = __ralloc.v0[209]::Taylor1{_S}
    tmp3543 = __ralloc.v0[210]::Taylor1{_S}
    tmp3544 = __ralloc.v0[211]::Taylor1{_S}
    tmp3546 = __ralloc.v0[212]::Taylor1{_S}
    tmp3547 = __ralloc.v0[213]::Taylor1{_S}
    tmp3549 = __ralloc.v0[214]::Taylor1{_S}
    tmp3550 = __ralloc.v0[215]::Taylor1{_S}
    tmp3551 = __ralloc.v0[216]::Taylor1{_S}
    tmp3552 = __ralloc.v0[217]::Taylor1{_S}
    tmp3554 = __ralloc.v0[218]::Taylor1{_S}
    tmp3555 = __ralloc.v0[219]::Taylor1{_S}
    tmp3556 = __ralloc.v0[220]::Taylor1{_S}
    tmp3557 = __ralloc.v0[221]::Taylor1{_S}
    tmp3559 = __ralloc.v0[222]::Taylor1{_S}
    tmp3560 = __ralloc.v0[223]::Taylor1{_S}
    tmp3561 = __ralloc.v0[224]::Taylor1{_S}
    tmp3562 = __ralloc.v0[225]::Taylor1{_S}
    tmp3564 = __ralloc.v0[226]::Taylor1{_S}
    tmp3565 = __ralloc.v0[227]::Taylor1{_S}
    tmp3566 = __ralloc.v0[228]::Taylor1{_S}
    tmp3567 = __ralloc.v0[229]::Taylor1{_S}
    tmp3569 = __ralloc.v0[230]::Taylor1{_S}
    tmp3570 = __ralloc.v0[231]::Taylor1{_S}
    tmp3571 = __ralloc.v0[232]::Taylor1{_S}
    tmp3572 = __ralloc.v0[233]::Taylor1{_S}
    tmp3574 = __ralloc.v0[234]::Taylor1{_S}
    tmp3576 = __ralloc.v0[235]::Taylor1{_S}
    tmp3577 = __ralloc.v0[236]::Taylor1{_S}
    tmp3578 = __ralloc.v0[237]::Taylor1{_S}
    tmp3579 = __ralloc.v0[238]::Taylor1{_S}
    tmp3581 = __ralloc.v0[239]::Taylor1{_S}
    tmp3582 = __ralloc.v0[240]::Taylor1{_S}
    tmp3583 = __ralloc.v0[241]::Taylor1{_S}
    tmp3584 = __ralloc.v0[242]::Taylor1{_S}
    tmp3586 = __ralloc.v0[243]::Taylor1{_S}
    tmp3587 = __ralloc.v0[244]::Taylor1{_S}
    tmp3588 = __ralloc.v0[245]::Taylor1{_S}
    tmp3589 = __ralloc.v0[246]::Taylor1{_S}
    tmp3594 = __ralloc.v0[247]::Taylor1{_S}
    tmp3595 = __ralloc.v0[248]::Taylor1{_S}
    tmp3597 = __ralloc.v0[249]::Taylor1{_S}
    tmp3598 = __ralloc.v0[250]::Taylor1{_S}
    tmp3600 = __ralloc.v0[251]::Taylor1{_S}
    tmp3601 = __ralloc.v0[252]::Taylor1{_S}
    tmp3606 = __ralloc.v0[253]::Taylor1{_S}
    tmp3607 = __ralloc.v0[254]::Taylor1{_S}
    tmp3608 = __ralloc.v0[255]::Taylor1{_S}
    tmp3609 = __ralloc.v0[256]::Taylor1{_S}
    tmp3610 = __ralloc.v0[257]::Taylor1{_S}
    tmp3611 = __ralloc.v0[258]::Taylor1{_S}
    tmp3613 = __ralloc.v0[259]::Taylor1{_S}
    tmp3614 = __ralloc.v0[260]::Taylor1{_S}
    tmp3615 = __ralloc.v0[261]::Taylor1{_S}
    tmp3616 = __ralloc.v0[262]::Taylor1{_S}
    tmp3618 = __ralloc.v0[263]::Taylor1{_S}
    tmp3619 = __ralloc.v0[264]::Taylor1{_S}
    tmp3621 = __ralloc.v0[265]::Taylor1{_S}
    tmp3622 = __ralloc.v0[266]::Taylor1{_S}
    tmp3623 = __ralloc.v0[267]::Taylor1{_S}
    tmp3624 = __ralloc.v0[268]::Taylor1{_S}
    tmp3626 = __ralloc.v0[269]::Taylor1{_S}
    tmp3627 = __ralloc.v0[270]::Taylor1{_S}
    tmp3628 = __ralloc.v0[271]::Taylor1{_S}
    tmp3629 = __ralloc.v0[272]::Taylor1{_S}
    tmp3631 = __ralloc.v0[273]::Taylor1{_S}
    tmp3632 = __ralloc.v0[274]::Taylor1{_S}
    tmp3633 = __ralloc.v0[275]::Taylor1{_S}
    tmp3634 = __ralloc.v0[276]::Taylor1{_S}
    tmp3636 = __ralloc.v0[277]::Taylor1{_S}
    tmp3637 = __ralloc.v0[278]::Taylor1{_S}
    tmp3639 = __ralloc.v0[279]::Taylor1{_S}
    tmp3640 = __ralloc.v0[280]::Taylor1{_S}
    ϕ_m = __ralloc.v0[281]::Taylor1{_S}
    θ_m = __ralloc.v0[282]::Taylor1{_S}
    ψ_m = __ralloc.v0[283]::Taylor1{_S}
    tmp3645 = __ralloc.v0[284]::Taylor1{_S}
    tmp3646 = __ralloc.v0[285]::Taylor1{_S}
    tmp3647 = __ralloc.v0[286]::Taylor1{_S}
    tmp3648 = __ralloc.v0[287]::Taylor1{_S}
    tmp3649 = __ralloc.v0[288]::Taylor1{_S}
    tmp3650 = __ralloc.v0[289]::Taylor1{_S}
    tmp3651 = __ralloc.v0[290]::Taylor1{_S}
    tmp3652 = __ralloc.v0[291]::Taylor1{_S}
    tmp3653 = __ralloc.v0[292]::Taylor1{_S}
    tmp3654 = __ralloc.v0[293]::Taylor1{_S}
    tmp3655 = __ralloc.v0[294]::Taylor1{_S}
    tmp3656 = __ralloc.v0[295]::Taylor1{_S}
    tmp3657 = __ralloc.v0[296]::Taylor1{_S}
    tmp3658 = __ralloc.v0[297]::Taylor1{_S}
    tmp3659 = __ralloc.v0[298]::Taylor1{_S}
    tmp3660 = __ralloc.v0[299]::Taylor1{_S}
    tmp3661 = __ralloc.v0[300]::Taylor1{_S}
    tmp3662 = __ralloc.v0[301]::Taylor1{_S}
    tmp3663 = __ralloc.v0[302]::Taylor1{_S}
    tmp3664 = __ralloc.v0[303]::Taylor1{_S}
    tmp3665 = __ralloc.v0[304]::Taylor1{_S}
    tmp3666 = __ralloc.v0[305]::Taylor1{_S}
    tmp3667 = __ralloc.v0[306]::Taylor1{_S}
    tmp3668 = __ralloc.v0[307]::Taylor1{_S}
    tmp3669 = __ralloc.v0[308]::Taylor1{_S}
    tmp3670 = __ralloc.v0[309]::Taylor1{_S}
    tmp3671 = __ralloc.v0[310]::Taylor1{_S}
    tmp3672 = __ralloc.v0[311]::Taylor1{_S}
    tmp3673 = __ralloc.v0[312]::Taylor1{_S}
    ϕ_c = __ralloc.v0[313]::Taylor1{_S}
    tmp3674 = __ralloc.v0[314]::Taylor1{_S}
    tmp3675 = __ralloc.v0[315]::Taylor1{_S}
    tmp3676 = __ralloc.v0[316]::Taylor1{_S}
    tmp3677 = __ralloc.v0[317]::Taylor1{_S}
    tmp3678 = __ralloc.v0[318]::Taylor1{_S}
    tmp3679 = __ralloc.v0[319]::Taylor1{_S}
    tmp3680 = __ralloc.v0[320]::Taylor1{_S}
    tmp3681 = __ralloc.v0[321]::Taylor1{_S}
    tmp3682 = __ralloc.v0[322]::Taylor1{_S}
    tmp3683 = __ralloc.v0[323]::Taylor1{_S}
    tmp3684 = __ralloc.v0[324]::Taylor1{_S}
    tmp3685 = __ralloc.v0[325]::Taylor1{_S}
    ω_c_CE_1 = __ralloc.v0[326]::Taylor1{_S}
    ω_c_CE_2 = __ralloc.v0[327]::Taylor1{_S}
    ω_c_CE_3 = __ralloc.v0[328]::Taylor1{_S}
    J2M_t = __ralloc.v0[329]::Taylor1{_S}
    C22M_t = __ralloc.v0[330]::Taylor1{_S}
    C21M_t = __ralloc.v0[331]::Taylor1{_S}
    S21M_t = __ralloc.v0[332]::Taylor1{_S}
    S22M_t = __ralloc.v0[333]::Taylor1{_S}
    Iω_x = __ralloc.v0[334]::Taylor1{_S}
    Iω_y = __ralloc.v0[335]::Taylor1{_S}
    Iω_z = __ralloc.v0[336]::Taylor1{_S}
    ωxIω_x = __ralloc.v0[337]::Taylor1{_S}
    ωxIω_y = __ralloc.v0[338]::Taylor1{_S}
    ωxIω_z = __ralloc.v0[339]::Taylor1{_S}
    dIω_x = __ralloc.v0[340]::Taylor1{_S}
    dIω_y = __ralloc.v0[341]::Taylor1{_S}
    dIω_z = __ralloc.v0[342]::Taylor1{_S}
    er_EM_I_1 = __ralloc.v0[343]::Taylor1{_S}
    er_EM_I_2 = __ralloc.v0[344]::Taylor1{_S}
    er_EM_I_3 = __ralloc.v0[345]::Taylor1{_S}
    p_E_I_1 = __ralloc.v0[346]::Taylor1{_S}
    p_E_I_2 = __ralloc.v0[347]::Taylor1{_S}
    p_E_I_3 = __ralloc.v0[348]::Taylor1{_S}
    er_EM_1 = __ralloc.v0[349]::Taylor1{_S}
    er_EM_2 = __ralloc.v0[350]::Taylor1{_S}
    er_EM_3 = __ralloc.v0[351]::Taylor1{_S}
    p_E_1 = __ralloc.v0[352]::Taylor1{_S}
    p_E_2 = __ralloc.v0[353]::Taylor1{_S}
    p_E_3 = __ralloc.v0[354]::Taylor1{_S}
    I_er_EM_1 = __ralloc.v0[355]::Taylor1{_S}
    I_er_EM_2 = __ralloc.v0[356]::Taylor1{_S}
    I_er_EM_3 = __ralloc.v0[357]::Taylor1{_S}
    I_p_E_1 = __ralloc.v0[358]::Taylor1{_S}
    I_p_E_2 = __ralloc.v0[359]::Taylor1{_S}
    I_p_E_3 = __ralloc.v0[360]::Taylor1{_S}
    er_EM_cross_I_er_EM_1 = __ralloc.v0[361]::Taylor1{_S}
    er_EM_cross_I_er_EM_2 = __ralloc.v0[362]::Taylor1{_S}
    er_EM_cross_I_er_EM_3 = __ralloc.v0[363]::Taylor1{_S}
    er_EM_cross_I_p_E_1 = __ralloc.v0[364]::Taylor1{_S}
    er_EM_cross_I_p_E_2 = __ralloc.v0[365]::Taylor1{_S}
    er_EM_cross_I_p_E_3 = __ralloc.v0[366]::Taylor1{_S}
    p_E_cross_I_er_EM_1 = __ralloc.v0[367]::Taylor1{_S}
    p_E_cross_I_er_EM_2 = __ralloc.v0[368]::Taylor1{_S}
    p_E_cross_I_er_EM_3 = __ralloc.v0[369]::Taylor1{_S}
    p_E_cross_I_p_E_1 = __ralloc.v0[370]::Taylor1{_S}
    p_E_cross_I_p_E_2 = __ralloc.v0[371]::Taylor1{_S}
    p_E_cross_I_p_E_3 = __ralloc.v0[372]::Taylor1{_S}
    one_minus_7sin2ϕEM = __ralloc.v0[373]::Taylor1{_S}
    two_sinϕEM = __ralloc.v0[374]::Taylor1{_S}
    N_MfigM_figE_factor_div_rEMp5 = __ralloc.v0[375]::Taylor1{_S}
    N_MfigM_figE_1 = __ralloc.v0[376]::Taylor1{_S}
    N_MfigM_figE_2 = __ralloc.v0[377]::Taylor1{_S}
    N_MfigM_figE_3 = __ralloc.v0[378]::Taylor1{_S}
    N_1_LMF = __ralloc.v0[379]::Taylor1{_S}
    N_2_LMF = __ralloc.v0[380]::Taylor1{_S}
    N_3_LMF = __ralloc.v0[381]::Taylor1{_S}
    N_cmb_1 = __ralloc.v0[382]::Taylor1{_S}
    N_cmb_2 = __ralloc.v0[383]::Taylor1{_S}
    N_cmb_3 = __ralloc.v0[384]::Taylor1{_S}
    I_dω_1 = __ralloc.v0[385]::Taylor1{_S}
    I_dω_2 = __ralloc.v0[386]::Taylor1{_S}
    I_dω_3 = __ralloc.v0[387]::Taylor1{_S}
    Ic_ωc_1 = __ralloc.v0[388]::Taylor1{_S}
    Ic_ωc_2 = __ralloc.v0[389]::Taylor1{_S}
    Ic_ωc_3 = __ralloc.v0[390]::Taylor1{_S}
    m_ωm_x_Icωc_1 = __ralloc.v0[391]::Taylor1{_S}
    m_ωm_x_Icωc_2 = __ralloc.v0[392]::Taylor1{_S}
    m_ωm_x_Icωc_3 = __ralloc.v0[393]::Taylor1{_S}
    Ic_dωc_1 = __ralloc.v0[394]::Taylor1{_S}
    Ic_dωc_2 = __ralloc.v0[395]::Taylor1{_S}
    Ic_dωc_3 = __ralloc.v0[396]::Taylor1{_S}
    tmp3686 = __ralloc.v0[397]::Taylor1{_S}
    tmp3687 = __ralloc.v0[398]::Taylor1{_S}
    tmp3688 = __ralloc.v0[399]::Taylor1{_S}
    tmp3689 = __ralloc.v0[400]::Taylor1{_S}
    tmp3690 = __ralloc.v0[401]::Taylor1{_S}
    tmp3691 = __ralloc.v0[402]::Taylor1{_S}
    tmp3692 = __ralloc.v0[403]::Taylor1{_S}
    tmp3693 = __ralloc.v0[404]::Taylor1{_S}
    newtonX = __ralloc.v1[1]::Vector{Taylor1{_S}}
    newtonY = __ralloc.v1[2]::Vector{Taylor1{_S}}
    newtonZ = __ralloc.v1[3]::Vector{Taylor1{_S}}
    newtonianNb_Potential = __ralloc.v1[4]::Vector{Taylor1{_S}}
    v2 = __ralloc.v1[5]::Vector{Taylor1{_S}}
    pntempX = __ralloc.v1[6]::Vector{Taylor1{_S}}
    pntempY = __ralloc.v1[7]::Vector{Taylor1{_S}}
    pntempZ = __ralloc.v1[8]::Vector{Taylor1{_S}}
    postNewtonX = __ralloc.v1[9]::Vector{Taylor1{_S}}
    postNewtonY = __ralloc.v1[10]::Vector{Taylor1{_S}}
    postNewtonZ = __ralloc.v1[11]::Vector{Taylor1{_S}}
    accX = __ralloc.v1[12]::Vector{Taylor1{_S}}
    accY = __ralloc.v1[13]::Vector{Taylor1{_S}}
    accZ = __ralloc.v1[14]::Vector{Taylor1{_S}}
    N_MfigM_pmA_x = __ralloc.v1[15]::Vector{Taylor1{_S}}
    N_MfigM_pmA_y = __ralloc.v1[16]::Vector{Taylor1{_S}}
    N_MfigM_pmA_z = __ralloc.v1[17]::Vector{Taylor1{_S}}
    temp_N_M_x = __ralloc.v1[18]::Vector{Taylor1{_S}}
    temp_N_M_y = __ralloc.v1[19]::Vector{Taylor1{_S}}
    temp_N_M_z = __ralloc.v1[20]::Vector{Taylor1{_S}}
    N_MfigM = __ralloc.v1[21]::Vector{Taylor1{_S}}
    J2_t = __ralloc.v1[22]::Vector{Taylor1{_S}}
    tmp3017 = __ralloc.v1[23]::Vector{Taylor1{_S}}
    tmp3019 = __ralloc.v1[24]::Vector{Taylor1{_S}}
    tmp3022 = __ralloc.v1[25]::Vector{Taylor1{_S}}
    tmp3024 = __ralloc.v1[26]::Vector{Taylor1{_S}}
    tmp3027 = __ralloc.v1[27]::Vector{Taylor1{_S}}
    tmp3029 = __ralloc.v1[28]::Vector{Taylor1{_S}}
    tmp3073 = __ralloc.v1[29]::Vector{Taylor1{_S}}
    tmp3075 = __ralloc.v1[30]::Vector{Taylor1{_S}}
    tmp3076 = __ralloc.v1[31]::Vector{Taylor1{_S}}
    tmp3078 = __ralloc.v1[32]::Vector{Taylor1{_S}}
    X = __ralloc.v2[1]::Array{Taylor1{_S}, 2}
    Y = __ralloc.v2[2]::Array{Taylor1{_S}, 2}
    Z = __ralloc.v2[3]::Array{Taylor1{_S}, 2}
    r_p2 = __ralloc.v2[4]::Array{Taylor1{_S}, 2}
    r_p1d2 = __ralloc.v2[5]::Array{Taylor1{_S}, 2}
    r_p3d2 = __ralloc.v2[6]::Array{Taylor1{_S}, 2}
    r_p7d2 = __ralloc.v2[7]::Array{Taylor1{_S}, 2}
    newtonianCoeff = __ralloc.v2[8]::Array{Taylor1{_S}, 2}
    U = __ralloc.v2[9]::Array{Taylor1{_S}, 2}
    V = __ralloc.v2[10]::Array{Taylor1{_S}, 2}
    W = __ralloc.v2[11]::Array{Taylor1{_S}, 2}
    _4U_m_3X = __ralloc.v2[12]::Array{Taylor1{_S}, 2}
    _4V_m_3Y = __ralloc.v2[13]::Array{Taylor1{_S}, 2}
    _4W_m_3Z = __ralloc.v2[14]::Array{Taylor1{_S}, 2}
    UU = __ralloc.v2[15]::Array{Taylor1{_S}, 2}
    VV = __ralloc.v2[16]::Array{Taylor1{_S}, 2}
    WW = __ralloc.v2[17]::Array{Taylor1{_S}, 2}
    newtonian1b_Potential = __ralloc.v2[18]::Array{Taylor1{_S}, 2}
    newton_acc_X = __ralloc.v2[19]::Array{Taylor1{_S}, 2}
    newton_acc_Y = __ralloc.v2[20]::Array{Taylor1{_S}, 2}
    newton_acc_Z = __ralloc.v2[21]::Array{Taylor1{_S}, 2}
    _2v2 = __ralloc.v2[22]::Array{Taylor1{_S}, 2}
    vi_dot_vj = __ralloc.v2[23]::Array{Taylor1{_S}, 2}
    pn2 = __ralloc.v2[24]::Array{Taylor1{_S}, 2}
    U_t_pn2 = __ralloc.v2[25]::Array{Taylor1{_S}, 2}
    V_t_pn2 = __ralloc.v2[26]::Array{Taylor1{_S}, 2}
    W_t_pn2 = __ralloc.v2[27]::Array{Taylor1{_S}, 2}
    pn3 = __ralloc.v2[28]::Array{Taylor1{_S}, 2}
    pNX_t_pn3 = __ralloc.v2[29]::Array{Taylor1{_S}, 2}
    pNY_t_pn3 = __ralloc.v2[30]::Array{Taylor1{_S}, 2}
    pNZ_t_pn3 = __ralloc.v2[31]::Array{Taylor1{_S}, 2}
    _4ϕj = __ralloc.v2[32]::Array{Taylor1{_S}, 2}
    ϕi_plus_4ϕj = __ralloc.v2[33]::Array{Taylor1{_S}, 2}
    sj2_plus_2si2 = __ralloc.v2[34]::Array{Taylor1{_S}, 2}
    sj2_plus_2si2_minus_4vivj = __ralloc.v2[35]::Array{Taylor1{_S}, 2}
    ϕs_and_vs = __ralloc.v2[36]::Array{Taylor1{_S}, 2}
    pn1t1_7 = __ralloc.v2[37]::Array{Taylor1{_S}, 2}
    pNX_t_X = __ralloc.v2[38]::Array{Taylor1{_S}, 2}
    pNY_t_Y = __ralloc.v2[39]::Array{Taylor1{_S}, 2}
    pNZ_t_Z = __ralloc.v2[40]::Array{Taylor1{_S}, 2}
    pn1 = __ralloc.v2[41]::Array{Taylor1{_S}, 2}
    X_t_pn1 = __ralloc.v2[42]::Array{Taylor1{_S}, 2}
    Y_t_pn1 = __ralloc.v2[43]::Array{Taylor1{_S}, 2}
    Z_t_pn1 = __ralloc.v2[44]::Array{Taylor1{_S}, 2}
    X_bf_1 = __ralloc.v2[45]::Array{Taylor1{_S}, 2}
    Y_bf_1 = __ralloc.v2[46]::Array{Taylor1{_S}, 2}
    Z_bf_1 = __ralloc.v2[47]::Array{Taylor1{_S}, 2}
    X_bf_2 = __ralloc.v2[48]::Array{Taylor1{_S}, 2}
    Y_bf_2 = __ralloc.v2[49]::Array{Taylor1{_S}, 2}
    Z_bf_2 = __ralloc.v2[50]::Array{Taylor1{_S}, 2}
    X_bf_3 = __ralloc.v2[51]::Array{Taylor1{_S}, 2}
    Y_bf_3 = __ralloc.v2[52]::Array{Taylor1{_S}, 2}
    Z_bf_3 = __ralloc.v2[53]::Array{Taylor1{_S}, 2}
    X_bf = __ralloc.v2[54]::Array{Taylor1{_S}, 2}
    Y_bf = __ralloc.v2[55]::Array{Taylor1{_S}, 2}
    Z_bf = __ralloc.v2[56]::Array{Taylor1{_S}, 2}
    F_JCS_x = __ralloc.v2[57]::Array{Taylor1{_S}, 2}
    F_JCS_y = __ralloc.v2[58]::Array{Taylor1{_S}, 2}
    F_JCS_z = __ralloc.v2[59]::Array{Taylor1{_S}, 2}
    temp_accX_j = __ralloc.v2[60]::Array{Taylor1{_S}, 2}
    temp_accY_j = __ralloc.v2[61]::Array{Taylor1{_S}, 2}
    temp_accZ_j = __ralloc.v2[62]::Array{Taylor1{_S}, 2}
    temp_accX_i = __ralloc.v2[63]::Array{Taylor1{_S}, 2}
    temp_accY_i = __ralloc.v2[64]::Array{Taylor1{_S}, 2}
    temp_accZ_i = __ralloc.v2[65]::Array{Taylor1{_S}, 2}
    sin_ϕ = __ralloc.v2[66]::Array{Taylor1{_S}, 2}
    cos_ϕ = __ralloc.v2[67]::Array{Taylor1{_S}, 2}
    sin_λ = __ralloc.v2[68]::Array{Taylor1{_S}, 2}
    cos_λ = __ralloc.v2[69]::Array{Taylor1{_S}, 2}
    r_xy = __ralloc.v2[70]::Array{Taylor1{_S}, 2}
    r_p4 = __ralloc.v2[71]::Array{Taylor1{_S}, 2}
    F_CS_ξ_36 = __ralloc.v2[72]::Array{Taylor1{_S}, 2}
    F_CS_η_36 = __ralloc.v2[73]::Array{Taylor1{_S}, 2}
    F_CS_ζ_36 = __ralloc.v2[74]::Array{Taylor1{_S}, 2}
    F_J_ξ_36 = __ralloc.v2[75]::Array{Taylor1{_S}, 2}
    F_J_ζ_36 = __ralloc.v2[76]::Array{Taylor1{_S}, 2}
    F_J_ξ = __ralloc.v2[77]::Array{Taylor1{_S}, 2}
    F_J_ζ = __ralloc.v2[78]::Array{Taylor1{_S}, 2}
    F_CS_ξ = __ralloc.v2[79]::Array{Taylor1{_S}, 2}
    F_CS_η = __ralloc.v2[80]::Array{Taylor1{_S}, 2}
    F_CS_ζ = __ralloc.v2[81]::Array{Taylor1{_S}, 2}
    F_JCS_ξ = __ralloc.v2[82]::Array{Taylor1{_S}, 2}
    F_JCS_η = __ralloc.v2[83]::Array{Taylor1{_S}, 2}
    F_JCS_ζ = __ralloc.v2[84]::Array{Taylor1{_S}, 2}
    mantlef2coref = __ralloc.v2[85]::Array{Taylor1{_S}, 2}
    pn2x = __ralloc.v2[86]::Array{Taylor1{_S}, 2}
    pn2y = __ralloc.v2[87]::Array{Taylor1{_S}, 2}
    pn2z = __ralloc.v2[88]::Array{Taylor1{_S}, 2}
    tmp3037 = __ralloc.v2[89]::Array{Taylor1{_S}, 2}
    tmp3040 = __ralloc.v2[90]::Array{Taylor1{_S}, 2}
    tmp3042 = __ralloc.v2[91]::Array{Taylor1{_S}, 2}
    tmp3043 = __ralloc.v2[92]::Array{Taylor1{_S}, 2}
    tmp3045 = __ralloc.v2[93]::Array{Taylor1{_S}, 2}
    tmp3053 = __ralloc.v2[94]::Array{Taylor1{_S}, 2}
    tmp3054 = __ralloc.v2[95]::Array{Taylor1{_S}, 2}
    tmp3065 = __ralloc.v2[96]::Array{Taylor1{_S}, 2}
    temp_001 = __ralloc.v2[97]::Array{Taylor1{_S}, 2}
    tmp3067 = __ralloc.v2[98]::Array{Taylor1{_S}, 2}
    temp_002 = __ralloc.v2[99]::Array{Taylor1{_S}, 2}
    tmp3069 = __ralloc.v2[100]::Array{Taylor1{_S}, 2}
    temp_003 = __ralloc.v2[101]::Array{Taylor1{_S}, 2}
    temp_004 = __ralloc.v2[102]::Array{Taylor1{_S}, 2}
    tmp3106 = __ralloc.v2[103]::Array{Taylor1{_S}, 2}
    tmp3108 = __ralloc.v2[104]::Array{Taylor1{_S}, 2}
    tmp3110 = __ralloc.v2[105]::Array{Taylor1{_S}, 2}
    tmp3114 = __ralloc.v2[106]::Array{Taylor1{_S}, 2}
    tmp3116 = __ralloc.v2[107]::Array{Taylor1{_S}, 2}
    tmp3117 = __ralloc.v2[108]::Array{Taylor1{_S}, 2}
    tmp3223 = __ralloc.v2[109]::Array{Taylor1{_S}, 2}
    tmp3224 = __ralloc.v2[110]::Array{Taylor1{_S}, 2}
    tmp3227 = __ralloc.v2[111]::Array{Taylor1{_S}, 2}
    tmp3228 = __ralloc.v2[112]::Array{Taylor1{_S}, 2}
    tmp3234 = __ralloc.v2[113]::Array{Taylor1{_S}, 2}
    tmp3237 = __ralloc.v2[114]::Array{Taylor1{_S}, 2}
    tmp3299 = __ralloc.v2[115]::Array{Taylor1{_S}, 2}
    tmp3301 = __ralloc.v2[116]::Array{Taylor1{_S}, 2}
    tmp3303 = __ralloc.v2[117]::Array{Taylor1{_S}, 2}
    tmp3305 = __ralloc.v2[118]::Array{Taylor1{_S}, 2}
    tmp3307 = __ralloc.v2[119]::Array{Taylor1{_S}, 2}
    tmp3309 = __ralloc.v2[120]::Array{Taylor1{_S}, 2}
    tmp3311 = __ralloc.v2[121]::Array{Taylor1{_S}, 2}
    tmp3312 = __ralloc.v2[122]::Array{Taylor1{_S}, 2}
    tmp3313 = __ralloc.v2[123]::Array{Taylor1{_S}, 2}
    tmp3315 = __ralloc.v2[124]::Array{Taylor1{_S}, 2}
    tmp3316 = __ralloc.v2[125]::Array{Taylor1{_S}, 2}
    tmp3317 = __ralloc.v2[126]::Array{Taylor1{_S}, 2}
    tmp3319 = __ralloc.v2[127]::Array{Taylor1{_S}, 2}
    tmp3320 = __ralloc.v2[128]::Array{Taylor1{_S}, 2}
    tmp3321 = __ralloc.v2[129]::Array{Taylor1{_S}, 2}
    tmp3333 = __ralloc.v2[130]::Array{Taylor1{_S}, 2}
    Xij_t_Ui = __ralloc.v2[131]::Array{Taylor1{_S}, 2}
    Yij_t_Vi = __ralloc.v2[132]::Array{Taylor1{_S}, 2}
    Zij_t_Wi = __ralloc.v2[133]::Array{Taylor1{_S}, 2}
    tmp3339 = __ralloc.v2[134]::Array{Taylor1{_S}, 2}
    Rij_dot_Vi = __ralloc.v2[135]::Array{Taylor1{_S}, 2}
    tmp3342 = __ralloc.v2[136]::Array{Taylor1{_S}, 2}
    pn1t7 = __ralloc.v2[137]::Array{Taylor1{_S}, 2}
    tmp3345 = __ralloc.v2[138]::Array{Taylor1{_S}, 2}
    pn1t2_7 = __ralloc.v2[139]::Array{Taylor1{_S}, 2}
    tmp3352 = __ralloc.v2[140]::Array{Taylor1{_S}, 2}
    tmp3353 = __ralloc.v2[141]::Array{Taylor1{_S}, 2}
    tmp3354 = __ralloc.v2[142]::Array{Taylor1{_S}, 2}
    tmp3362 = __ralloc.v2[143]::Array{Taylor1{_S}, 2}
    termpnx = __ralloc.v2[144]::Array{Taylor1{_S}, 2}
    sumpnx = __ralloc.v2[145]::Array{Taylor1{_S}, 2}
    tmp3365 = __ralloc.v2[146]::Array{Taylor1{_S}, 2}
    termpny = __ralloc.v2[147]::Array{Taylor1{_S}, 2}
    sumpny = __ralloc.v2[148]::Array{Taylor1{_S}, 2}
    tmp3368 = __ralloc.v2[149]::Array{Taylor1{_S}, 2}
    termpnz = __ralloc.v2[150]::Array{Taylor1{_S}, 2}
    sumpnz = __ralloc.v2[151]::Array{Taylor1{_S}, 2}
    P_n = __ralloc.v3[1]::Array{Taylor1{_S}, 3}
    dP_n = __ralloc.v3[2]::Array{Taylor1{_S}, 3}
    temp_fjξ = __ralloc.v3[3]::Array{Taylor1{_S}, 3}
    temp_fjζ = __ralloc.v3[4]::Array{Taylor1{_S}, 3}
    temp_rn = __ralloc.v3[5]::Array{Taylor1{_S}, 3}
    sin_mλ = __ralloc.v3[6]::Array{Taylor1{_S}, 3}
    cos_mλ = __ralloc.v3[7]::Array{Taylor1{_S}, 3}
    RotM = __ralloc.v3[8]::Array{Taylor1{_S}, 3}
    tmp3122 = __ralloc.v3[9]::Array{Taylor1{_S}, 3}
    tmp3123 = __ralloc.v3[10]::Array{Taylor1{_S}, 3}
    tmp3124 = __ralloc.v3[11]::Array{Taylor1{_S}, 3}
    tmp3126 = __ralloc.v3[12]::Array{Taylor1{_S}, 3}
    tmp3127 = __ralloc.v3[13]::Array{Taylor1{_S}, 3}
    tmp3132 = __ralloc.v3[14]::Array{Taylor1{_S}, 3}
    tmp3133 = __ralloc.v3[15]::Array{Taylor1{_S}, 3}
    tmp3135 = __ralloc.v3[16]::Array{Taylor1{_S}, 3}
    tmp3136 = __ralloc.v3[17]::Array{Taylor1{_S}, 3}
    tmp3137 = __ralloc.v3[18]::Array{Taylor1{_S}, 3}
    tmp3139 = __ralloc.v3[19]::Array{Taylor1{_S}, 3}
    tmp3140 = __ralloc.v3[20]::Array{Taylor1{_S}, 3}
    tmp3141 = __ralloc.v3[21]::Array{Taylor1{_S}, 3}
    tmp3143 = __ralloc.v3[22]::Array{Taylor1{_S}, 3}
    tmp3144 = __ralloc.v3[23]::Array{Taylor1{_S}, 3}
    tmp3145 = __ralloc.v3[24]::Array{Taylor1{_S}, 3}
    tmp3146 = __ralloc.v3[25]::Array{Taylor1{_S}, 3}
    tmp3149 = __ralloc.v3[26]::Array{Taylor1{_S}, 3}
    tmp3150 = __ralloc.v3[27]::Array{Taylor1{_S}, 3}
    tmp3152 = __ralloc.v3[28]::Array{Taylor1{_S}, 3}
    tmp3153 = __ralloc.v3[29]::Array{Taylor1{_S}, 3}
    tmp3172 = __ralloc.v3[30]::Array{Taylor1{_S}, 3}
    tmp3173 = __ralloc.v3[31]::Array{Taylor1{_S}, 3}
    tmp3174 = __ralloc.v3[32]::Array{Taylor1{_S}, 3}
    tmp3177 = __ralloc.v3[33]::Array{Taylor1{_S}, 3}
    tmp3178 = __ralloc.v3[34]::Array{Taylor1{_S}, 3}
    tmp3179 = __ralloc.v3[35]::Array{Taylor1{_S}, 3}
    tmp3184 = __ralloc.v3[36]::Array{Taylor1{_S}, 3}
    tmp3185 = __ralloc.v3[37]::Array{Taylor1{_S}, 3}
    tmp3186 = __ralloc.v3[38]::Array{Taylor1{_S}, 3}
    tmp3189 = __ralloc.v3[39]::Array{Taylor1{_S}, 3}
    tmp3190 = __ralloc.v3[40]::Array{Taylor1{_S}, 3}
    tmp3191 = __ralloc.v3[41]::Array{Taylor1{_S}, 3}
    tmp3195 = __ralloc.v3[42]::Array{Taylor1{_S}, 3}
    tmp3196 = __ralloc.v3[43]::Array{Taylor1{_S}, 3}
    tmp3197 = __ralloc.v3[44]::Array{Taylor1{_S}, 3}
    tmp3199 = __ralloc.v3[45]::Array{Taylor1{_S}, 3}
    tmp3200 = __ralloc.v3[46]::Array{Taylor1{_S}, 3}
    tmp3201 = __ralloc.v3[47]::Array{Taylor1{_S}, 3}
    temp_CS_ξ = __ralloc.v4[1]::Array{Taylor1{_S}, 4}
    temp_CS_η = __ralloc.v4[2]::Array{Taylor1{_S}, 4}
    temp_CS_ζ = __ralloc.v4[3]::Array{Taylor1{_S}, 4}
    Cnm_cosmλ = __ralloc.v4[4]::Array{Taylor1{_S}, 4}
    Cnm_sinmλ = __ralloc.v4[5]::Array{Taylor1{_S}, 4}
    Snm_cosmλ = __ralloc.v4[6]::Array{Taylor1{_S}, 4}
    Snm_sinmλ = __ralloc.v4[7]::Array{Taylor1{_S}, 4}
    secϕ_P_nm = __ralloc.v4[8]::Array{Taylor1{_S}, 4}
    P_nm = __ralloc.v4[9]::Array{Taylor1{_S}, 4}
    cosϕ_dP_nm = __ralloc.v4[10]::Array{Taylor1{_S}, 4}
    Rb2p = __ralloc.v4[11]::Array{Taylor1{_S}, 4}
    Gc2p = __ralloc.v4[12]::Array{Taylor1{_S}, 4}
    tmp3155 = __ralloc.v4[13]::Array{Taylor1{_S}, 4}
    tmp3158 = __ralloc.v4[14]::Array{Taylor1{_S}, 4}
    tmp3160 = __ralloc.v4[15]::Array{Taylor1{_S}, 4}
    tmp3162 = __ralloc.v4[16]::Array{Taylor1{_S}, 4}
    tmp3163 = __ralloc.v4[17]::Array{Taylor1{_S}, 4}
    tmp3164 = __ralloc.v4[18]::Array{Taylor1{_S}, 4}
    tmp3167 = __ralloc.v4[19]::Array{Taylor1{_S}, 4}
    tmp3168 = __ralloc.v4[20]::Array{Taylor1{_S}, 4}
    tmp3169 = __ralloc.v4[21]::Array{Taylor1{_S}, 4}
    tmp3171 = __ralloc.v4[22]::Array{Taylor1{_S}, 4}
    tmp3175 = __ralloc.v4[23]::Array{Taylor1{_S}, 4}
    tmp3176 = __ralloc.v4[24]::Array{Taylor1{_S}, 4}
    tmp3180 = __ralloc.v4[25]::Array{Taylor1{_S}, 4}
    tmp3181 = __ralloc.v4[26]::Array{Taylor1{_S}, 4}
    tmp3183 = __ralloc.v4[27]::Array{Taylor1{_S}, 4}
    tmp3187 = __ralloc.v4[28]::Array{Taylor1{_S}, 4}
    tmp3188 = __ralloc.v4[29]::Array{Taylor1{_S}, 4}
    tmp3192 = __ralloc.v4[30]::Array{Taylor1{_S}, 4}
    tmp3193 = __ralloc.v4[31]::Array{Taylor1{_S}, 4}
    tmp3198 = __ralloc.v4[32]::Array{Taylor1{_S}, 4}
    tmp3202 = __ralloc.v4[33]::Array{Taylor1{_S}, 4}
    tmp3203 = __ralloc.v4[34]::Array{Taylor1{_S}, 4}
    tmp3209 = __ralloc.v4[35]::Array{Taylor1{_S}, 4}
    tmp3210 = __ralloc.v4[36]::Array{Taylor1{_S}, 4}
    tmp3211 = __ralloc.v4[37]::Array{Taylor1{_S}, 4}
    tmp3212 = __ralloc.v4[38]::Array{Taylor1{_S}, 4}
    tmp3214 = __ralloc.v4[39]::Array{Taylor1{_S}, 4}
    tmp3215 = __ralloc.v4[40]::Array{Taylor1{_S}, 4}
    tmp3216 = __ralloc.v4[41]::Array{Taylor1{_S}, 4}
    tmp3217 = __ralloc.v4[42]::Array{Taylor1{_S}, 4}
    tmp3219 = __ralloc.v4[43]::Array{Taylor1{_S}, 4}
    tmp3220 = __ralloc.v4[44]::Array{Taylor1{_S}, 4}
    tmp3221 = __ralloc.v4[45]::Array{Taylor1{_S}, 4}
    tmp3239 = __ralloc.v4[46]::Array{Taylor1{_S}, 4}
    tmp3240 = __ralloc.v4[47]::Array{Taylor1{_S}, 4}
    tmp3241 = __ralloc.v4[48]::Array{Taylor1{_S}, 4}
    tmp3242 = __ralloc.v4[49]::Array{Taylor1{_S}, 4}
    tmp3244 = __ralloc.v4[50]::Array{Taylor1{_S}, 4}
    tmp3245 = __ralloc.v4[51]::Array{Taylor1{_S}, 4}
    tmp3246 = __ralloc.v4[52]::Array{Taylor1{_S}, 4}
    tmp3247 = __ralloc.v4[53]::Array{Taylor1{_S}, 4}
    tmp3249 = __ralloc.v4[54]::Array{Taylor1{_S}, 4}
    tmp3250 = __ralloc.v4[55]::Array{Taylor1{_S}, 4}
    tmp3251 = __ralloc.v4[56]::Array{Taylor1{_S}, 4}
    tmp3252 = __ralloc.v4[57]::Array{Taylor1{_S}, 4}
    tmp3254 = __ralloc.v4[58]::Array{Taylor1{_S}, 4}
    tmp3255 = __ralloc.v4[59]::Array{Taylor1{_S}, 4}
    tmp3256 = __ralloc.v4[60]::Array{Taylor1{_S}, 4}
    tmp3257 = __ralloc.v4[61]::Array{Taylor1{_S}, 4}
    tmp3259 = __ralloc.v4[62]::Array{Taylor1{_S}, 4}
    tmp3260 = __ralloc.v4[63]::Array{Taylor1{_S}, 4}
    tmp3261 = __ralloc.v4[64]::Array{Taylor1{_S}, 4}
    tmp3262 = __ralloc.v4[65]::Array{Taylor1{_S}, 4}
    tmp3264 = __ralloc.v4[66]::Array{Taylor1{_S}, 4}
    tmp3265 = __ralloc.v4[67]::Array{Taylor1{_S}, 4}
    tmp3266 = __ralloc.v4[68]::Array{Taylor1{_S}, 4}
    tmp3267 = __ralloc.v4[69]::Array{Taylor1{_S}, 4}
    tmp3269 = __ralloc.v4[70]::Array{Taylor1{_S}, 4}
    tmp3270 = __ralloc.v4[71]::Array{Taylor1{_S}, 4}
    tmp3271 = __ralloc.v4[72]::Array{Taylor1{_S}, 4}
    tmp3272 = __ralloc.v4[73]::Array{Taylor1{_S}, 4}
    tmp3274 = __ralloc.v4[74]::Array{Taylor1{_S}, 4}
    tmp3275 = __ralloc.v4[75]::Array{Taylor1{_S}, 4}
    tmp3276 = __ralloc.v4[76]::Array{Taylor1{_S}, 4}
    tmp3277 = __ralloc.v4[77]::Array{Taylor1{_S}, 4}
    tmp3279 = __ralloc.v4[78]::Array{Taylor1{_S}, 4}
    tmp3280 = __ralloc.v4[79]::Array{Taylor1{_S}, 4}
    tmp3281 = __ralloc.v4[80]::Array{Taylor1{_S}, 4}
    tmp3282 = __ralloc.v4[81]::Array{Taylor1{_S}, 4}
    tmp3284 = __ralloc.v4[82]::Array{Taylor1{_S}, 4}
    tmp3285 = __ralloc.v4[83]::Array{Taylor1{_S}, 4}
    tmp3286 = __ralloc.v4[84]::Array{Taylor1{_S}, 4}
    tmp3287 = __ralloc.v4[85]::Array{Taylor1{_S}, 4}
    tmp3289 = __ralloc.v4[86]::Array{Taylor1{_S}, 4}
    tmp3290 = __ralloc.v4[87]::Array{Taylor1{_S}, 4}
    tmp3291 = __ralloc.v4[88]::Array{Taylor1{_S}, 4}
    tmp3292 = __ralloc.v4[89]::Array{Taylor1{_S}, 4}
    tmp3294 = __ralloc.v4[90]::Array{Taylor1{_S}, 4}
    tmp3295 = __ralloc.v4[91]::Array{Taylor1{_S}, 4}
    tmp3296 = __ralloc.v4[92]::Array{Taylor1{_S}, 4}
    tmp3297 = __ralloc.v4[93]::Array{Taylor1{_S}, 4}
    local (N, jd0) = params
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    (N_MfigM[1]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[1]).coeffs[2:order + 1] .= zero((N_MfigM[1]).coeffs[1])
    (N_MfigM[2]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[2]).coeffs[2:order + 1] .= zero((N_MfigM[2]).coeffs[1])
    (N_MfigM[3]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[3]).coeffs[2:order + 1] .= zero((N_MfigM[3]).coeffs[1])
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m.coeffs[1] = identity(constant_term(q[6N + 1]))
    ϕ_m.coeffs[2:order + 1] .= zero(ϕ_m.coeffs[1])
    θ_m.coeffs[1] = identity(constant_term(q[6N + 2]))
    θ_m.coeffs[2:order + 1] .= zero(θ_m.coeffs[1])
    ψ_m.coeffs[1] = identity(constant_term(q[6N + 3]))
    ψ_m.coeffs[2:order + 1] .= zero(ψ_m.coeffs[1])
    tmp2911.coeffs[1] = cos(constant_term(ϕ_m))
    tmp2911.coeffs[2:order + 1] .= zero(tmp2911.coeffs[1])
    tmp3645.coeffs[1] = sin(constant_term(ϕ_m))
    tmp3645.coeffs[2:order + 1] .= zero(tmp3645.coeffs[1])
    tmp2912.coeffs[1] = cos(constant_term(ψ_m))
    tmp2912.coeffs[2:order + 1] .= zero(tmp2912.coeffs[1])
    tmp3646.coeffs[1] = sin(constant_term(ψ_m))
    tmp3646.coeffs[2:order + 1] .= zero(tmp3646.coeffs[1])
    tmp2913.coeffs[1] = constant_term(tmp2911) * constant_term(tmp2912)
    tmp2913.coeffs[2:order + 1] .= zero(tmp2913.coeffs[1])
    tmp2914.coeffs[1] = cos(constant_term(θ_m))
    tmp2914.coeffs[2:order + 1] .= zero(tmp2914.coeffs[1])
    tmp3647.coeffs[1] = sin(constant_term(θ_m))
    tmp3647.coeffs[2:order + 1] .= zero(tmp3647.coeffs[1])
    tmp2915.coeffs[1] = sin(constant_term(ϕ_m))
    tmp2915.coeffs[2:order + 1] .= zero(tmp2915.coeffs[1])
    tmp3648.coeffs[1] = cos(constant_term(ϕ_m))
    tmp3648.coeffs[2:order + 1] .= zero(tmp3648.coeffs[1])
    tmp2916.coeffs[1] = constant_term(tmp2914) * constant_term(tmp2915)
    tmp2916.coeffs[2:order + 1] .= zero(tmp2916.coeffs[1])
    tmp2917.coeffs[1] = sin(constant_term(ψ_m))
    tmp2917.coeffs[2:order + 1] .= zero(tmp2917.coeffs[1])
    tmp3649.coeffs[1] = cos(constant_term(ψ_m))
    tmp3649.coeffs[2:order + 1] .= zero(tmp3649.coeffs[1])
    tmp2918.coeffs[1] = constant_term(tmp2916) * constant_term(tmp2917)
    tmp2918.coeffs[2:order + 1] .= zero(tmp2918.coeffs[1])
    (RotM[1, 1, mo]).coeffs[1] = constant_term(tmp2913) - constant_term(tmp2918)
    (RotM[1, 1, mo]).coeffs[2:order + 1] .= zero((RotM[1, 1, mo]).coeffs[1])
    tmp2920.coeffs[1] = cos(constant_term(θ_m))
    tmp2920.coeffs[2:order + 1] .= zero(tmp2920.coeffs[1])
    tmp3650.coeffs[1] = sin(constant_term(θ_m))
    tmp3650.coeffs[2:order + 1] .= zero(tmp3650.coeffs[1])
    tmp2921.coeffs[1] = -(constant_term(tmp2920))
    tmp2921.coeffs[2:order + 1] .= zero(tmp2921.coeffs[1])
    tmp2922.coeffs[1] = cos(constant_term(ψ_m))
    tmp2922.coeffs[2:order + 1] .= zero(tmp2922.coeffs[1])
    tmp3651.coeffs[1] = sin(constant_term(ψ_m))
    tmp3651.coeffs[2:order + 1] .= zero(tmp3651.coeffs[1])
    tmp2923.coeffs[1] = constant_term(tmp2921) * constant_term(tmp2922)
    tmp2923.coeffs[2:order + 1] .= zero(tmp2923.coeffs[1])
    tmp2924.coeffs[1] = sin(constant_term(ϕ_m))
    tmp2924.coeffs[2:order + 1] .= zero(tmp2924.coeffs[1])
    tmp3652.coeffs[1] = cos(constant_term(ϕ_m))
    tmp3652.coeffs[2:order + 1] .= zero(tmp3652.coeffs[1])
    tmp2925.coeffs[1] = constant_term(tmp2923) * constant_term(tmp2924)
    tmp2925.coeffs[2:order + 1] .= zero(tmp2925.coeffs[1])
    tmp2926.coeffs[1] = cos(constant_term(ϕ_m))
    tmp2926.coeffs[2:order + 1] .= zero(tmp2926.coeffs[1])
    tmp3653.coeffs[1] = sin(constant_term(ϕ_m))
    tmp3653.coeffs[2:order + 1] .= zero(tmp3653.coeffs[1])
    tmp2927.coeffs[1] = sin(constant_term(ψ_m))
    tmp2927.coeffs[2:order + 1] .= zero(tmp2927.coeffs[1])
    tmp3654.coeffs[1] = cos(constant_term(ψ_m))
    tmp3654.coeffs[2:order + 1] .= zero(tmp3654.coeffs[1])
    tmp2928.coeffs[1] = constant_term(tmp2926) * constant_term(tmp2927)
    tmp2928.coeffs[2:order + 1] .= zero(tmp2928.coeffs[1])
    (RotM[2, 1, mo]).coeffs[1] = constant_term(tmp2925) - constant_term(tmp2928)
    (RotM[2, 1, mo]).coeffs[2:order + 1] .= zero((RotM[2, 1, mo]).coeffs[1])
    tmp2930.coeffs[1] = sin(constant_term(θ_m))
    tmp2930.coeffs[2:order + 1] .= zero(tmp2930.coeffs[1])
    tmp3655.coeffs[1] = cos(constant_term(θ_m))
    tmp3655.coeffs[2:order + 1] .= zero(tmp3655.coeffs[1])
    tmp2931.coeffs[1] = sin(constant_term(ϕ_m))
    tmp2931.coeffs[2:order + 1] .= zero(tmp2931.coeffs[1])
    tmp3656.coeffs[1] = cos(constant_term(ϕ_m))
    tmp3656.coeffs[2:order + 1] .= zero(tmp3656.coeffs[1])
    (RotM[3, 1, mo]).coeffs[1] = constant_term(tmp2930) * constant_term(tmp2931)
    (RotM[3, 1, mo]).coeffs[2:order + 1] .= zero((RotM[3, 1, mo]).coeffs[1])
    tmp2933.coeffs[1] = cos(constant_term(ψ_m))
    tmp2933.coeffs[2:order + 1] .= zero(tmp2933.coeffs[1])
    tmp3657.coeffs[1] = sin(constant_term(ψ_m))
    tmp3657.coeffs[2:order + 1] .= zero(tmp3657.coeffs[1])
    tmp2934.coeffs[1] = sin(constant_term(ϕ_m))
    tmp2934.coeffs[2:order + 1] .= zero(tmp2934.coeffs[1])
    tmp3658.coeffs[1] = cos(constant_term(ϕ_m))
    tmp3658.coeffs[2:order + 1] .= zero(tmp3658.coeffs[1])
    tmp2935.coeffs[1] = constant_term(tmp2933) * constant_term(tmp2934)
    tmp2935.coeffs[2:order + 1] .= zero(tmp2935.coeffs[1])
    tmp2936.coeffs[1] = cos(constant_term(θ_m))
    tmp2936.coeffs[2:order + 1] .= zero(tmp2936.coeffs[1])
    tmp3659.coeffs[1] = sin(constant_term(θ_m))
    tmp3659.coeffs[2:order + 1] .= zero(tmp3659.coeffs[1])
    tmp2937.coeffs[1] = cos(constant_term(ϕ_m))
    tmp2937.coeffs[2:order + 1] .= zero(tmp2937.coeffs[1])
    tmp3660.coeffs[1] = sin(constant_term(ϕ_m))
    tmp3660.coeffs[2:order + 1] .= zero(tmp3660.coeffs[1])
    tmp2938.coeffs[1] = constant_term(tmp2936) * constant_term(tmp2937)
    tmp2938.coeffs[2:order + 1] .= zero(tmp2938.coeffs[1])
    tmp2939.coeffs[1] = sin(constant_term(ψ_m))
    tmp2939.coeffs[2:order + 1] .= zero(tmp2939.coeffs[1])
    tmp3661.coeffs[1] = cos(constant_term(ψ_m))
    tmp3661.coeffs[2:order + 1] .= zero(tmp3661.coeffs[1])
    tmp2940.coeffs[1] = constant_term(tmp2938) * constant_term(tmp2939)
    tmp2940.coeffs[2:order + 1] .= zero(tmp2940.coeffs[1])
    (RotM[1, 2, mo]).coeffs[1] = constant_term(tmp2935) + constant_term(tmp2940)
    (RotM[1, 2, mo]).coeffs[2:order + 1] .= zero((RotM[1, 2, mo]).coeffs[1])
    tmp2942.coeffs[1] = cos(constant_term(θ_m))
    tmp2942.coeffs[2:order + 1] .= zero(tmp2942.coeffs[1])
    tmp3662.coeffs[1] = sin(constant_term(θ_m))
    tmp3662.coeffs[2:order + 1] .= zero(tmp3662.coeffs[1])
    tmp2943.coeffs[1] = cos(constant_term(ϕ_m))
    tmp2943.coeffs[2:order + 1] .= zero(tmp2943.coeffs[1])
    tmp3663.coeffs[1] = sin(constant_term(ϕ_m))
    tmp3663.coeffs[2:order + 1] .= zero(tmp3663.coeffs[1])
    tmp2944.coeffs[1] = constant_term(tmp2942) * constant_term(tmp2943)
    tmp2944.coeffs[2:order + 1] .= zero(tmp2944.coeffs[1])
    tmp2945.coeffs[1] = cos(constant_term(ψ_m))
    tmp2945.coeffs[2:order + 1] .= zero(tmp2945.coeffs[1])
    tmp3664.coeffs[1] = sin(constant_term(ψ_m))
    tmp3664.coeffs[2:order + 1] .= zero(tmp3664.coeffs[1])
    tmp2946.coeffs[1] = constant_term(tmp2944) * constant_term(tmp2945)
    tmp2946.coeffs[2:order + 1] .= zero(tmp2946.coeffs[1])
    tmp2947.coeffs[1] = sin(constant_term(ϕ_m))
    tmp2947.coeffs[2:order + 1] .= zero(tmp2947.coeffs[1])
    tmp3665.coeffs[1] = cos(constant_term(ϕ_m))
    tmp3665.coeffs[2:order + 1] .= zero(tmp3665.coeffs[1])
    tmp2948.coeffs[1] = sin(constant_term(ψ_m))
    tmp2948.coeffs[2:order + 1] .= zero(tmp2948.coeffs[1])
    tmp3666.coeffs[1] = cos(constant_term(ψ_m))
    tmp3666.coeffs[2:order + 1] .= zero(tmp3666.coeffs[1])
    tmp2949.coeffs[1] = constant_term(tmp2947) * constant_term(tmp2948)
    tmp2949.coeffs[2:order + 1] .= zero(tmp2949.coeffs[1])
    (RotM[2, 2, mo]).coeffs[1] = constant_term(tmp2946) - constant_term(tmp2949)
    (RotM[2, 2, mo]).coeffs[2:order + 1] .= zero((RotM[2, 2, mo]).coeffs[1])
    tmp2951.coeffs[1] = cos(constant_term(ϕ_m))
    tmp2951.coeffs[2:order + 1] .= zero(tmp2951.coeffs[1])
    tmp3667.coeffs[1] = sin(constant_term(ϕ_m))
    tmp3667.coeffs[2:order + 1] .= zero(tmp3667.coeffs[1])
    tmp2952.coeffs[1] = -(constant_term(tmp2951))
    tmp2952.coeffs[2:order + 1] .= zero(tmp2952.coeffs[1])
    tmp2953.coeffs[1] = sin(constant_term(θ_m))
    tmp2953.coeffs[2:order + 1] .= zero(tmp2953.coeffs[1])
    tmp3668.coeffs[1] = cos(constant_term(θ_m))
    tmp3668.coeffs[2:order + 1] .= zero(tmp3668.coeffs[1])
    (RotM[3, 2, mo]).coeffs[1] = constant_term(tmp2952) * constant_term(tmp2953)
    (RotM[3, 2, mo]).coeffs[2:order + 1] .= zero((RotM[3, 2, mo]).coeffs[1])
    tmp2955.coeffs[1] = sin(constant_term(θ_m))
    tmp2955.coeffs[2:order + 1] .= zero(tmp2955.coeffs[1])
    tmp3669.coeffs[1] = cos(constant_term(θ_m))
    tmp3669.coeffs[2:order + 1] .= zero(tmp3669.coeffs[1])
    tmp2956.coeffs[1] = sin(constant_term(ψ_m))
    tmp2956.coeffs[2:order + 1] .= zero(tmp2956.coeffs[1])
    tmp3670.coeffs[1] = cos(constant_term(ψ_m))
    tmp3670.coeffs[2:order + 1] .= zero(tmp3670.coeffs[1])
    (RotM[1, 3, mo]).coeffs[1] = constant_term(tmp2955) * constant_term(tmp2956)
    (RotM[1, 3, mo]).coeffs[2:order + 1] .= zero((RotM[1, 3, mo]).coeffs[1])
    tmp2958.coeffs[1] = cos(constant_term(ψ_m))
    tmp2958.coeffs[2:order + 1] .= zero(tmp2958.coeffs[1])
    tmp3671.coeffs[1] = sin(constant_term(ψ_m))
    tmp3671.coeffs[2:order + 1] .= zero(tmp3671.coeffs[1])
    tmp2959.coeffs[1] = sin(constant_term(θ_m))
    tmp2959.coeffs[2:order + 1] .= zero(tmp2959.coeffs[1])
    tmp3672.coeffs[1] = cos(constant_term(θ_m))
    tmp3672.coeffs[2:order + 1] .= zero(tmp3672.coeffs[1])
    (RotM[2, 3, mo]).coeffs[1] = constant_term(tmp2958) * constant_term(tmp2959)
    (RotM[2, 3, mo]).coeffs[2:order + 1] .= zero((RotM[2, 3, mo]).coeffs[1])
    (RotM[3, 3, mo]).coeffs[1] = cos(constant_term(θ_m))
    (RotM[3, 3, mo]).coeffs[2:order + 1] .= zero((RotM[3, 3, mo]).coeffs[1])
    tmp3673.coeffs[1] = sin(constant_term(θ_m))
    tmp3673.coeffs[2:order + 1] .= zero(tmp3673.coeffs[1])
    ϕ_c.coeffs[1] = identity(constant_term(q[6N + 7]))
    ϕ_c.coeffs[2:order + 1] .= zero(ϕ_c.coeffs[1])
    tmp2962.coeffs[1] = cos(constant_term(ϕ_c))
    tmp2962.coeffs[2:order + 1] .= zero(tmp2962.coeffs[1])
    tmp3674.coeffs[1] = sin(constant_term(ϕ_c))
    tmp3674.coeffs[2:order + 1] .= zero(tmp3674.coeffs[1])
    tmp2963.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(tmp2962)
    tmp2963.coeffs[2:order + 1] .= zero(tmp2963.coeffs[1])
    tmp2964.coeffs[1] = sin(constant_term(ϕ_c))
    tmp2964.coeffs[2:order + 1] .= zero(tmp2964.coeffs[1])
    tmp3675.coeffs[1] = cos(constant_term(ϕ_c))
    tmp3675.coeffs[2:order + 1] .= zero(tmp3675.coeffs[1])
    tmp2965.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp2964)
    tmp2965.coeffs[2:order + 1] .= zero(tmp2965.coeffs[1])
    (mantlef2coref[1, 1]).coeffs[1] = constant_term(tmp2963) + constant_term(tmp2965)
    (mantlef2coref[1, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 1]).coeffs[1])
    tmp2967.coeffs[1] = -(constant_term(RotM[1, 1, mo]))
    tmp2967.coeffs[2:order + 1] .= zero(tmp2967.coeffs[1])
    tmp2968.coeffs[1] = sin(constant_term(ϕ_c))
    tmp2968.coeffs[2:order + 1] .= zero(tmp2968.coeffs[1])
    tmp3676.coeffs[1] = cos(constant_term(ϕ_c))
    tmp3676.coeffs[2:order + 1] .= zero(tmp3676.coeffs[1])
    tmp2969.coeffs[1] = constant_term(tmp2967) * constant_term(tmp2968)
    tmp2969.coeffs[2:order + 1] .= zero(tmp2969.coeffs[1])
    tmp2970.coeffs[1] = cos(constant_term(ϕ_c))
    tmp2970.coeffs[2:order + 1] .= zero(tmp2970.coeffs[1])
    tmp3677.coeffs[1] = sin(constant_term(ϕ_c))
    tmp3677.coeffs[2:order + 1] .= zero(tmp3677.coeffs[1])
    tmp2971.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp2970)
    tmp2971.coeffs[2:order + 1] .= zero(tmp2971.coeffs[1])
    (mantlef2coref[2, 1]).coeffs[1] = constant_term(tmp2969) + constant_term(tmp2971)
    (mantlef2coref[2, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 1]).coeffs[1])
    (mantlef2coref[3, 1]).coeffs[1] = identity(constant_term(RotM[1, 3, mo]))
    (mantlef2coref[3, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 1]).coeffs[1])
    tmp2973.coeffs[1] = cos(constant_term(ϕ_c))
    tmp2973.coeffs[2:order + 1] .= zero(tmp2973.coeffs[1])
    tmp3678.coeffs[1] = sin(constant_term(ϕ_c))
    tmp3678.coeffs[2:order + 1] .= zero(tmp3678.coeffs[1])
    tmp2974.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(tmp2973)
    tmp2974.coeffs[2:order + 1] .= zero(tmp2974.coeffs[1])
    tmp2975.coeffs[1] = sin(constant_term(ϕ_c))
    tmp2975.coeffs[2:order + 1] .= zero(tmp2975.coeffs[1])
    tmp3679.coeffs[1] = cos(constant_term(ϕ_c))
    tmp3679.coeffs[2:order + 1] .= zero(tmp3679.coeffs[1])
    tmp2976.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp2975)
    tmp2976.coeffs[2:order + 1] .= zero(tmp2976.coeffs[1])
    (mantlef2coref[1, 2]).coeffs[1] = constant_term(tmp2974) + constant_term(tmp2976)
    (mantlef2coref[1, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 2]).coeffs[1])
    tmp2978.coeffs[1] = -(constant_term(RotM[2, 1, mo]))
    tmp2978.coeffs[2:order + 1] .= zero(tmp2978.coeffs[1])
    tmp2979.coeffs[1] = sin(constant_term(ϕ_c))
    tmp2979.coeffs[2:order + 1] .= zero(tmp2979.coeffs[1])
    tmp3680.coeffs[1] = cos(constant_term(ϕ_c))
    tmp3680.coeffs[2:order + 1] .= zero(tmp3680.coeffs[1])
    tmp2980.coeffs[1] = constant_term(tmp2978) * constant_term(tmp2979)
    tmp2980.coeffs[2:order + 1] .= zero(tmp2980.coeffs[1])
    tmp2981.coeffs[1] = cos(constant_term(ϕ_c))
    tmp2981.coeffs[2:order + 1] .= zero(tmp2981.coeffs[1])
    tmp3681.coeffs[1] = sin(constant_term(ϕ_c))
    tmp3681.coeffs[2:order + 1] .= zero(tmp3681.coeffs[1])
    tmp2982.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp2981)
    tmp2982.coeffs[2:order + 1] .= zero(tmp2982.coeffs[1])
    (mantlef2coref[2, 2]).coeffs[1] = constant_term(tmp2980) + constant_term(tmp2982)
    (mantlef2coref[2, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 2]).coeffs[1])
    (mantlef2coref[3, 2]).coeffs[1] = identity(constant_term(RotM[2, 3, mo]))
    (mantlef2coref[3, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 2]).coeffs[1])
    tmp2984.coeffs[1] = cos(constant_term(ϕ_c))
    tmp2984.coeffs[2:order + 1] .= zero(tmp2984.coeffs[1])
    tmp3682.coeffs[1] = sin(constant_term(ϕ_c))
    tmp3682.coeffs[2:order + 1] .= zero(tmp3682.coeffs[1])
    tmp2985.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(tmp2984)
    tmp2985.coeffs[2:order + 1] .= zero(tmp2985.coeffs[1])
    tmp2986.coeffs[1] = sin(constant_term(ϕ_c))
    tmp2986.coeffs[2:order + 1] .= zero(tmp2986.coeffs[1])
    tmp3683.coeffs[1] = cos(constant_term(ϕ_c))
    tmp3683.coeffs[2:order + 1] .= zero(tmp3683.coeffs[1])
    tmp2987.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp2986)
    tmp2987.coeffs[2:order + 1] .= zero(tmp2987.coeffs[1])
    (mantlef2coref[1, 3]).coeffs[1] = constant_term(tmp2985) + constant_term(tmp2987)
    (mantlef2coref[1, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 3]).coeffs[1])
    tmp2989.coeffs[1] = -(constant_term(RotM[3, 1, mo]))
    tmp2989.coeffs[2:order + 1] .= zero(tmp2989.coeffs[1])
    tmp2990.coeffs[1] = sin(constant_term(ϕ_c))
    tmp2990.coeffs[2:order + 1] .= zero(tmp2990.coeffs[1])
    tmp3684.coeffs[1] = cos(constant_term(ϕ_c))
    tmp3684.coeffs[2:order + 1] .= zero(tmp3684.coeffs[1])
    tmp2991.coeffs[1] = constant_term(tmp2989) * constant_term(tmp2990)
    tmp2991.coeffs[2:order + 1] .= zero(tmp2991.coeffs[1])
    tmp2992.coeffs[1] = cos(constant_term(ϕ_c))
    tmp2992.coeffs[2:order + 1] .= zero(tmp2992.coeffs[1])
    tmp3685.coeffs[1] = sin(constant_term(ϕ_c))
    tmp3685.coeffs[2:order + 1] .= zero(tmp3685.coeffs[1])
    tmp2993.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp2992)
    tmp2993.coeffs[2:order + 1] .= zero(tmp2993.coeffs[1])
    (mantlef2coref[2, 3]).coeffs[1] = constant_term(tmp2991) + constant_term(tmp2993)
    (mantlef2coref[2, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 3]).coeffs[1])
    (mantlef2coref[3, 3]).coeffs[1] = identity(constant_term(RotM[3, 3, mo]))
    (mantlef2coref[3, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 3]).coeffs[1])
    tmp2995.coeffs[1] = constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10])
    tmp2995.coeffs[2:order + 1] .= zero(tmp2995.coeffs[1])
    tmp2996.coeffs[1] = constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11])
    tmp2996.coeffs[2:order + 1] .= zero(tmp2996.coeffs[1])
    tmp2997.coeffs[1] = constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12])
    tmp2997.coeffs[2:order + 1] .= zero(tmp2997.coeffs[1])
    tmp2998.coeffs[1] = constant_term(tmp2996) + constant_term(tmp2997)
    tmp2998.coeffs[2:order + 1] .= zero(tmp2998.coeffs[1])
    ω_c_CE_1.coeffs[1] = constant_term(tmp2995) + constant_term(tmp2998)
    ω_c_CE_1.coeffs[2:order + 1] .= zero(ω_c_CE_1.coeffs[1])
    tmp3000.coeffs[1] = constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10])
    tmp3000.coeffs[2:order + 1] .= zero(tmp3000.coeffs[1])
    tmp3001.coeffs[1] = constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11])
    tmp3001.coeffs[2:order + 1] .= zero(tmp3001.coeffs[1])
    tmp3002.coeffs[1] = constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12])
    tmp3002.coeffs[2:order + 1] .= zero(tmp3002.coeffs[1])
    tmp3003.coeffs[1] = constant_term(tmp3001) + constant_term(tmp3002)
    tmp3003.coeffs[2:order + 1] .= zero(tmp3003.coeffs[1])
    ω_c_CE_2.coeffs[1] = constant_term(tmp3000) + constant_term(tmp3003)
    ω_c_CE_2.coeffs[2:order + 1] .= zero(ω_c_CE_2.coeffs[1])
    tmp3005.coeffs[1] = constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10])
    tmp3005.coeffs[2:order + 1] .= zero(tmp3005.coeffs[1])
    tmp3006.coeffs[1] = constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11])
    tmp3006.coeffs[2:order + 1] .= zero(tmp3006.coeffs[1])
    tmp3007.coeffs[1] = constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12])
    tmp3007.coeffs[2:order + 1] .= zero(tmp3007.coeffs[1])
    tmp3008.coeffs[1] = constant_term(tmp3006) + constant_term(tmp3007)
    tmp3008.coeffs[2:order + 1] .= zero(tmp3008.coeffs[1])
    ω_c_CE_3.coeffs[1] = constant_term(tmp3005) + constant_term(tmp3008)
    ω_c_CE_3.coeffs[2:order + 1] .= zero(ω_c_CE_3.coeffs[1])
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    (J2_t[su]).coeffs[1] = identity(constant_term(J2S_t))
    (J2_t[su]).coeffs[2:order + 1] .= zero((J2_t[su]).coeffs[1])
    (J2_t[ea]).coeffs[1] = identity(constant_term(J2E_t))
    (J2_t[ea]).coeffs[2:order + 1] .= zero((J2_t[ea]).coeffs[1])
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:307 =# Threads.@threads for j = 1:N
            (newtonX[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (newtonX[j]).coeffs[2:order + 1] .= zero((newtonX[j]).coeffs[1])
            (newtonY[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (newtonY[j]).coeffs[2:order + 1] .= zero((newtonY[j]).coeffs[1])
            (newtonZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (newtonZ[j]).coeffs[2:order + 1] .= zero((newtonZ[j]).coeffs[1])
            (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (newtonianNb_Potential[j]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[j]).coeffs[1])
            (dq[3j - 2]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 2]))
            (dq[3j - 2]).coeffs[2:order + 1] .= zero((dq[3j - 2]).coeffs[1])
            (dq[3j - 1]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 1]))
            (dq[3j - 1]).coeffs[2:order + 1] .= zero((dq[3j - 1]).coeffs[1])
            (dq[3j]).coeffs[1] = identity(constant_term(q[3 * (N + j)]))
            (dq[3j]).coeffs[2:order + 1] .= zero((dq[3j]).coeffs[1])
        end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:319 =# Threads.@threads for j = 1:N_ext
            (accX[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (accX[j]).coeffs[2:order + 1] .= zero((accX[j]).coeffs[1])
            (accY[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (accY[j]).coeffs[2:order + 1] .= zero((accY[j]).coeffs[1])
            (accZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (accZ[j]).coeffs[2:order + 1] .= zero((accZ[j]).coeffs[1])
        end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:325 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    (X[i, j]).coeffs[1] = constant_term(q[3i - 2]) - constant_term(q[3j - 2])
                    (X[i, j]).coeffs[2:order + 1] .= zero((X[i, j]).coeffs[1])
                    (Y[i, j]).coeffs[1] = constant_term(q[3i - 1]) - constant_term(q[3j - 1])
                    (Y[i, j]).coeffs[2:order + 1] .= zero((Y[i, j]).coeffs[1])
                    (Z[i, j]).coeffs[1] = constant_term(q[3i]) - constant_term(q[3j])
                    (Z[i, j]).coeffs[2:order + 1] .= zero((Z[i, j]).coeffs[1])
                    (U[i, j]).coeffs[1] = constant_term(dq[3i - 2]) - constant_term(dq[3j - 2])
                    (U[i, j]).coeffs[2:order + 1] .= zero((U[i, j]).coeffs[1])
                    (V[i, j]).coeffs[1] = constant_term(dq[3i - 1]) - constant_term(dq[3j - 1])
                    (V[i, j]).coeffs[2:order + 1] .= zero((V[i, j]).coeffs[1])
                    (W[i, j]).coeffs[1] = constant_term(dq[3i]) - constant_term(dq[3j])
                    (W[i, j]).coeffs[2:order + 1] .= zero((W[i, j]).coeffs[1])
                    (tmp3017[3j - 2]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 2])
                    (tmp3017[3j - 2]).coeffs[2:order + 1] .= zero((tmp3017[3j - 2]).coeffs[1])
                    (tmp3019[3i - 2]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 2])
                    (tmp3019[3i - 2]).coeffs[2:order + 1] .= zero((tmp3019[3i - 2]).coeffs[1])
                    (_4U_m_3X[i, j]).coeffs[1] = constant_term(tmp3017[3j - 2]) - constant_term(tmp3019[3i - 2])
                    (_4U_m_3X[i, j]).coeffs[2:order + 1] .= zero((_4U_m_3X[i, j]).coeffs[1])
                    (tmp3022[3j - 1]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 1])
                    (tmp3022[3j - 1]).coeffs[2:order + 1] .= zero((tmp3022[3j - 1]).coeffs[1])
                    (tmp3024[3i - 1]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 1])
                    (tmp3024[3i - 1]).coeffs[2:order + 1] .= zero((tmp3024[3i - 1]).coeffs[1])
                    (_4V_m_3Y[i, j]).coeffs[1] = constant_term(tmp3022[3j - 1]) - constant_term(tmp3024[3i - 1])
                    (_4V_m_3Y[i, j]).coeffs[2:order + 1] .= zero((_4V_m_3Y[i, j]).coeffs[1])
                    (tmp3027[3j]).coeffs[1] = constant_term(4) * constant_term(dq[3j])
                    (tmp3027[3j]).coeffs[2:order + 1] .= zero((tmp3027[3j]).coeffs[1])
                    (tmp3029[3i]).coeffs[1] = constant_term(3) * constant_term(dq[3i])
                    (tmp3029[3i]).coeffs[2:order + 1] .= zero((tmp3029[3i]).coeffs[1])
                    (_4W_m_3Z[i, j]).coeffs[1] = constant_term(tmp3027[3j]) - constant_term(tmp3029[3i])
                    (_4W_m_3Z[i, j]).coeffs[2:order + 1] .= zero((_4W_m_3Z[i, j]).coeffs[1])
                    (pn2x[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j])
                    (pn2x[i, j]).coeffs[2:order + 1] .= zero((pn2x[i, j]).coeffs[1])
                    (pn2y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j])
                    (pn2y[i, j]).coeffs[2:order + 1] .= zero((pn2y[i, j]).coeffs[1])
                    (pn2z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j])
                    (pn2z[i, j]).coeffs[2:order + 1] .= zero((pn2z[i, j]).coeffs[1])
                    (UU[i, j]).coeffs[1] = constant_term(dq[3i - 2]) * constant_term(dq[3j - 2])
                    (UU[i, j]).coeffs[2:order + 1] .= zero((UU[i, j]).coeffs[1])
                    (VV[i, j]).coeffs[1] = constant_term(dq[3i - 1]) * constant_term(dq[3j - 1])
                    (VV[i, j]).coeffs[2:order + 1] .= zero((VV[i, j]).coeffs[1])
                    (WW[i, j]).coeffs[1] = constant_term(dq[3i]) * constant_term(dq[3j])
                    (WW[i, j]).coeffs[2:order + 1] .= zero((WW[i, j]).coeffs[1])
                    (tmp3037[i, j]).coeffs[1] = constant_term(UU[i, j]) + constant_term(VV[i, j])
                    (tmp3037[i, j]).coeffs[2:order + 1] .= zero((tmp3037[i, j]).coeffs[1])
                    (vi_dot_vj[i, j]).coeffs[1] = constant_term(tmp3037[i, j]) + constant_term(WW[i, j])
                    (vi_dot_vj[i, j]).coeffs[2:order + 1] .= zero((vi_dot_vj[i, j]).coeffs[1])
                    (tmp3040[i, j]).coeffs[1] = constant_term(X[i, j]) ^ float(constant_term(2))
                    (tmp3040[i, j]).coeffs[2:order + 1] .= zero((tmp3040[i, j]).coeffs[1])
                    (tmp3042[i, j]).coeffs[1] = constant_term(Y[i, j]) ^ float(constant_term(2))
                    (tmp3042[i, j]).coeffs[2:order + 1] .= zero((tmp3042[i, j]).coeffs[1])
                    (tmp3043[i, j]).coeffs[1] = constant_term(tmp3040[i, j]) + constant_term(tmp3042[i, j])
                    (tmp3043[i, j]).coeffs[2:order + 1] .= zero((tmp3043[i, j]).coeffs[1])
                    (tmp3045[i, j]).coeffs[1] = constant_term(Z[i, j]) ^ float(constant_term(2))
                    (tmp3045[i, j]).coeffs[2:order + 1] .= zero((tmp3045[i, j]).coeffs[1])
                    (r_p2[i, j]).coeffs[1] = constant_term(tmp3043[i, j]) + constant_term(tmp3045[i, j])
                    (r_p2[i, j]).coeffs[2:order + 1] .= zero((r_p2[i, j]).coeffs[1])
                    (r_p1d2[i, j]).coeffs[1] = sqrt(constant_term(r_p2[i, j]))
                    (r_p1d2[i, j]).coeffs[2:order + 1] .= zero((r_p1d2[i, j]).coeffs[1])
                    (r_p3d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(1.5))
                    (r_p3d2[i, j]).coeffs[2:order + 1] .= zero((r_p3d2[i, j]).coeffs[1])
                    (r_p7d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(3.5))
                    (r_p7d2[i, j]).coeffs[2:order + 1] .= zero((r_p7d2[i, j]).coeffs[1])
                    (newtonianCoeff[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i, j])
                    (newtonianCoeff[i, j]).coeffs[2:order + 1] .= zero((newtonianCoeff[i, j]).coeffs[1])
                    (tmp3053[i, j]).coeffs[1] = constant_term(pn2x[i, j]) + constant_term(pn2y[i, j])
                    (tmp3053[i, j]).coeffs[2:order + 1] .= zero((tmp3053[i, j]).coeffs[1])
                    (tmp3054[i, j]).coeffs[1] = constant_term(tmp3053[i, j]) + constant_term(pn2z[i, j])
                    (tmp3054[i, j]).coeffs[2:order + 1] .= zero((tmp3054[i, j]).coeffs[1])
                    (pn2[i, j]).coeffs[1] = constant_term(newtonianCoeff[i, j]) * constant_term(tmp3054[i, j])
                    (pn2[i, j]).coeffs[2:order + 1] .= zero((pn2[i, j]).coeffs[1])
                    (newton_acc_X[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                    (newton_acc_X[i, j]).coeffs[2:order + 1] .= zero((newton_acc_X[i, j]).coeffs[1])
                    (newton_acc_Y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                    (newton_acc_Y[i, j]).coeffs[2:order + 1] .= zero((newton_acc_Y[i, j]).coeffs[1])
                    (newton_acc_Z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                    (newton_acc_Z[i, j]).coeffs[2:order + 1] .= zero((newton_acc_Z[i, j]).coeffs[1])
                    (newtonian1b_Potential[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i, j])
                    (newtonian1b_Potential[i, j]).coeffs[2:order + 1] .= zero((newtonian1b_Potential[i, j]).coeffs[1])
                    (pn3[i, j]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i, j])
                    (pn3[i, j]).coeffs[2:order + 1] .= zero((pn3[i, j]).coeffs[1])
                    (U_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(U[i, j])
                    (U_t_pn2[i, j]).coeffs[2:order + 1] .= zero((U_t_pn2[i, j]).coeffs[1])
                    (V_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(V[i, j])
                    (V_t_pn2[i, j]).coeffs[2:order + 1] .= zero((V_t_pn2[i, j]).coeffs[1])
                    (W_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(W[i, j])
                    (W_t_pn2[i, j]).coeffs[2:order + 1] .= zero((W_t_pn2[i, j]).coeffs[1])
                    (tmp3065[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                    (tmp3065[i, j]).coeffs[2:order + 1] .= zero((tmp3065[i, j]).coeffs[1])
                    (temp_001[i, j]).coeffs[1] = constant_term(newtonX[j]) + constant_term(tmp3065[i, j])
                    (temp_001[i, j]).coeffs[2:order + 1] .= zero((temp_001[i, j]).coeffs[1])
                    (newtonX[j]).coeffs[1] = identity(constant_term(temp_001[i, j]))
                    (newtonX[j]).coeffs[2:order + 1] .= zero((newtonX[j]).coeffs[1])
                    (tmp3067[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                    (tmp3067[i, j]).coeffs[2:order + 1] .= zero((tmp3067[i, j]).coeffs[1])
                    (temp_002[i, j]).coeffs[1] = constant_term(newtonY[j]) + constant_term(tmp3067[i, j])
                    (temp_002[i, j]).coeffs[2:order + 1] .= zero((temp_002[i, j]).coeffs[1])
                    (newtonY[j]).coeffs[1] = identity(constant_term(temp_002[i, j]))
                    (newtonY[j]).coeffs[2:order + 1] .= zero((newtonY[j]).coeffs[1])
                    (tmp3069[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                    (tmp3069[i, j]).coeffs[2:order + 1] .= zero((tmp3069[i, j]).coeffs[1])
                    (temp_003[i, j]).coeffs[1] = constant_term(newtonZ[j]) + constant_term(tmp3069[i, j])
                    (temp_003[i, j]).coeffs[2:order + 1] .= zero((temp_003[i, j]).coeffs[1])
                    (newtonZ[j]).coeffs[1] = identity(constant_term(temp_003[i, j]))
                    (newtonZ[j]).coeffs[2:order + 1] .= zero((newtonZ[j]).coeffs[1])
                    (temp_004[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j])
                    (temp_004[i, j]).coeffs[2:order + 1] .= zero((temp_004[i, j]).coeffs[1])
                    (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(temp_004[i, j]))
                    (newtonianNb_Potential[j]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[j]).coeffs[1])
                end
            end
            (tmp3073[3j - 2]).coeffs[1] = constant_term(dq[3j - 2]) ^ float(constant_term(2))
            (tmp3073[3j - 2]).coeffs[2:order + 1] .= zero((tmp3073[3j - 2]).coeffs[1])
            (tmp3075[3j - 1]).coeffs[1] = constant_term(dq[3j - 1]) ^ float(constant_term(2))
            (tmp3075[3j - 1]).coeffs[2:order + 1] .= zero((tmp3075[3j - 1]).coeffs[1])
            (tmp3076[3j - 2]).coeffs[1] = constant_term(tmp3073[3j - 2]) + constant_term(tmp3075[3j - 1])
            (tmp3076[3j - 2]).coeffs[2:order + 1] .= zero((tmp3076[3j - 2]).coeffs[1])
            (tmp3078[3j]).coeffs[1] = constant_term(dq[3j]) ^ float(constant_term(2))
            (tmp3078[3j]).coeffs[2:order + 1] .= zero((tmp3078[3j]).coeffs[1])
            (v2[j]).coeffs[1] = constant_term(tmp3076[3j - 2]) + constant_term(tmp3078[3j])
            (v2[j]).coeffs[2:order + 1] .= zero((v2[j]).coeffs[1])
        end
    tmp3080.coeffs[1] = constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2])
    tmp3080.coeffs[2:order + 1] .= zero(tmp3080.coeffs[1])
    tmp3082.coeffs[1] = constant_term(tmp3080) / constant_term(2)
    tmp3082.coeffs[2:order + 1] .= zero(tmp3082.coeffs[1])
    tmp3083.coeffs[1] = constant_term(I_M_t[3, 3]) - constant_term(tmp3082)
    tmp3083.coeffs[2:order + 1] .= zero(tmp3083.coeffs[1])
    J2M_t.coeffs[1] = constant_term(tmp3083) / constant_term(μ[mo])
    J2M_t.coeffs[2:order + 1] .= zero(J2M_t.coeffs[1])
    tmp3085.coeffs[1] = constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1])
    tmp3085.coeffs[2:order + 1] .= zero(tmp3085.coeffs[1])
    tmp3086.coeffs[1] = constant_term(tmp3085) / constant_term(μ[mo])
    tmp3086.coeffs[2:order + 1] .= zero(tmp3086.coeffs[1])
    C22M_t.coeffs[1] = constant_term(tmp3086) / constant_term(4)
    C22M_t.coeffs[2:order + 1] .= zero(C22M_t.coeffs[1])
    tmp3089.coeffs[1] = -(constant_term(I_M_t[1, 3]))
    tmp3089.coeffs[2:order + 1] .= zero(tmp3089.coeffs[1])
    C21M_t.coeffs[1] = constant_term(tmp3089) / constant_term(μ[mo])
    C21M_t.coeffs[2:order + 1] .= zero(C21M_t.coeffs[1])
    tmp3091.coeffs[1] = -(constant_term(I_M_t[3, 2]))
    tmp3091.coeffs[2:order + 1] .= zero(tmp3091.coeffs[1])
    S21M_t.coeffs[1] = constant_term(tmp3091) / constant_term(μ[mo])
    S21M_t.coeffs[2:order + 1] .= zero(S21M_t.coeffs[1])
    tmp3093.coeffs[1] = -(constant_term(I_M_t[2, 1]))
    tmp3093.coeffs[2:order + 1] .= zero(tmp3093.coeffs[1])
    tmp3094.coeffs[1] = constant_term(tmp3093) / constant_term(μ[mo])
    tmp3094.coeffs[2:order + 1] .= zero(tmp3094.coeffs[1])
    S22M_t.coeffs[1] = constant_term(tmp3094) / constant_term(2)
    S22M_t.coeffs[2:order + 1] .= zero(S22M_t.coeffs[1])
    (J2_t[mo]).coeffs[1] = identity(constant_term(J2M_t))
    (J2_t[mo]).coeffs[2:order + 1] .= zero((J2_t[mo]).coeffs[1])
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:416 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        (X_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[1, 1, j])
                        (X_bf_1[i, j]).coeffs[2:order + 1] .= zero((X_bf_1[i, j]).coeffs[1])
                        (X_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[1, 2, j])
                        (X_bf_2[i, j]).coeffs[2:order + 1] .= zero((X_bf_2[i, j]).coeffs[1])
                        (X_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[1, 3, j])
                        (X_bf_3[i, j]).coeffs[2:order + 1] .= zero((X_bf_3[i, j]).coeffs[1])
                        (Y_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[2, 1, j])
                        (Y_bf_1[i, j]).coeffs[2:order + 1] .= zero((Y_bf_1[i, j]).coeffs[1])
                        (Y_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[2, 2, j])
                        (Y_bf_2[i, j]).coeffs[2:order + 1] .= zero((Y_bf_2[i, j]).coeffs[1])
                        (Y_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[2, 3, j])
                        (Y_bf_3[i, j]).coeffs[2:order + 1] .= zero((Y_bf_3[i, j]).coeffs[1])
                        (Z_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[3, 1, j])
                        (Z_bf_1[i, j]).coeffs[2:order + 1] .= zero((Z_bf_1[i, j]).coeffs[1])
                        (Z_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[3, 2, j])
                        (Z_bf_2[i, j]).coeffs[2:order + 1] .= zero((Z_bf_2[i, j]).coeffs[1])
                        (Z_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[3, 3, j])
                        (Z_bf_3[i, j]).coeffs[2:order + 1] .= zero((Z_bf_3[i, j]).coeffs[1])
                        (tmp3106[i, j]).coeffs[1] = constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j])
                        (tmp3106[i, j]).coeffs[2:order + 1] .= zero((tmp3106[i, j]).coeffs[1])
                        (X_bf[i, j]).coeffs[1] = constant_term(tmp3106[i, j]) + constant_term(X_bf_3[i, j])
                        (X_bf[i, j]).coeffs[2:order + 1] .= zero((X_bf[i, j]).coeffs[1])
                        (tmp3108[i, j]).coeffs[1] = constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j])
                        (tmp3108[i, j]).coeffs[2:order + 1] .= zero((tmp3108[i, j]).coeffs[1])
                        (Y_bf[i, j]).coeffs[1] = constant_term(tmp3108[i, j]) + constant_term(Y_bf_3[i, j])
                        (Y_bf[i, j]).coeffs[2:order + 1] .= zero((Y_bf[i, j]).coeffs[1])
                        (tmp3110[i, j]).coeffs[1] = constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j])
                        (tmp3110[i, j]).coeffs[2:order + 1] .= zero((tmp3110[i, j]).coeffs[1])
                        (Z_bf[i, j]).coeffs[1] = constant_term(tmp3110[i, j]) + constant_term(Z_bf_3[i, j])
                        (Z_bf[i, j]).coeffs[2:order + 1] .= zero((Z_bf[i, j]).coeffs[1])
                        (sin_ϕ[i, j]).coeffs[1] = constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j])
                        (sin_ϕ[i, j]).coeffs[2:order + 1] .= zero((sin_ϕ[i, j]).coeffs[1])
                        (tmp3114[i, j]).coeffs[1] = constant_term(X_bf[i, j]) ^ float(constant_term(2))
                        (tmp3114[i, j]).coeffs[2:order + 1] .= zero((tmp3114[i, j]).coeffs[1])
                        (tmp3116[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) ^ float(constant_term(2))
                        (tmp3116[i, j]).coeffs[2:order + 1] .= zero((tmp3116[i, j]).coeffs[1])
                        (tmp3117[i, j]).coeffs[1] = constant_term(tmp3114[i, j]) + constant_term(tmp3116[i, j])
                        (tmp3117[i, j]).coeffs[2:order + 1] .= zero((tmp3117[i, j]).coeffs[1])
                        (r_xy[i, j]).coeffs[1] = sqrt(constant_term(tmp3117[i, j]))
                        (r_xy[i, j]).coeffs[2:order + 1] .= zero((r_xy[i, j]).coeffs[1])
                        (cos_ϕ[i, j]).coeffs[1] = constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j])
                        (cos_ϕ[i, j]).coeffs[2:order + 1] .= zero((cos_ϕ[i, j]).coeffs[1])
                        (sin_λ[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j])
                        (sin_λ[i, j]).coeffs[2:order + 1] .= zero((sin_λ[i, j]).coeffs[1])
                        (cos_λ[i, j]).coeffs[1] = constant_term(X_bf[i, j]) / constant_term(r_xy[i, j])
                        (cos_λ[i, j]).coeffs[2:order + 1] .= zero((cos_λ[i, j]).coeffs[1])
                        (P_n[i, j, 1]).coeffs[1] = identity(constant_term(one_t))
                        (P_n[i, j, 1]).coeffs[2:order + 1] .= zero((P_n[i, j, 1]).coeffs[1])
                        (P_n[i, j, 2]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                        (P_n[i, j, 2]).coeffs[2:order + 1] .= zero((P_n[i, j, 2]).coeffs[1])
                        (dP_n[i, j, 1]).coeffs[1] = identity(constant_term(zero_q_1))
                        (dP_n[i, j, 1]).coeffs[2:order + 1] .= zero((dP_n[i, j, 1]).coeffs[1])
                        (dP_n[i, j, 2]).coeffs[1] = identity(constant_term(one_t))
                        (dP_n[i, j, 2]).coeffs[2:order + 1] .= zero((dP_n[i, j, 2]).coeffs[1])
                        for n = 2:n1SEM[j]
                            (tmp3122[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                            (tmp3122[i, j, n]).coeffs[2:order + 1] .= zero((tmp3122[i, j, n]).coeffs[1])
                            (tmp3123[i, j, n]).coeffs[1] = constant_term(tmp3122[i, j, n]) * constant_term(fact1_jsem[n])
                            (tmp3123[i, j, n]).coeffs[2:order + 1] .= zero((tmp3123[i, j, n]).coeffs[1])
                            (tmp3124[i, j, n - 1]).coeffs[1] = constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n])
                            (tmp3124[i, j, n - 1]).coeffs[2:order + 1] .= zero((tmp3124[i, j, n - 1]).coeffs[1])
                            (P_n[i, j, n + 1]).coeffs[1] = constant_term(tmp3123[i, j, n]) - constant_term(tmp3124[i, j, n - 1])
                            (P_n[i, j, n + 1]).coeffs[2:order + 1] .= zero((P_n[i, j, n + 1]).coeffs[1])
                            (tmp3126[i, j, n]).coeffs[1] = constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                            (tmp3126[i, j, n]).coeffs[2:order + 1] .= zero((tmp3126[i, j, n]).coeffs[1])
                            (tmp3127[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n])
                            (tmp3127[i, j, n]).coeffs[2:order + 1] .= zero((tmp3127[i, j, n]).coeffs[1])
                            (dP_n[i, j, n + 1]).coeffs[1] = constant_term(tmp3126[i, j, n]) + constant_term(tmp3127[i, j, n])
                            (dP_n[i, j, n + 1]).coeffs[2:order + 1] .= zero((dP_n[i, j, n + 1]).coeffs[1])
                            (temp_rn[i, j, n]).coeffs[1] = constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n]))
                            (temp_rn[i, j, n]).coeffs[2:order + 1] .= zero((temp_rn[i, j, n]).coeffs[1])
                        end
                        (r_p4[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(2))
                        (r_p4[i, j]).coeffs[2:order + 1] .= zero((r_p4[i, j]).coeffs[1])
                        (tmp3132[i, j, 3]).coeffs[1] = constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2])
                        (tmp3132[i, j, 3]).coeffs[2:order + 1] .= zero((tmp3132[i, j, 3]).coeffs[1])
                        (tmp3133[i, j, 3]).coeffs[1] = constant_term(tmp3132[i, j, 3]) * constant_term(J2_t[j])
                        (tmp3133[i, j, 3]).coeffs[2:order + 1] .= zero((tmp3133[i, j, 3]).coeffs[1])
                        (F_J_ξ[i, j]).coeffs[1] = constant_term(tmp3133[i, j, 3]) / constant_term(r_p4[i, j])
                        (F_J_ξ[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ[i, j]).coeffs[1])
                        (tmp3135[i, j, 3]).coeffs[1] = -(constant_term(dP_n[i, j, 3]))
                        (tmp3135[i, j, 3]).coeffs[2:order + 1] .= zero((tmp3135[i, j, 3]).coeffs[1])
                        (tmp3136[i, j, 3]).coeffs[1] = constant_term(tmp3135[i, j, 3]) * constant_term(cos_ϕ[i, j])
                        (tmp3136[i, j, 3]).coeffs[2:order + 1] .= zero((tmp3136[i, j, 3]).coeffs[1])
                        (tmp3137[i, j, 3]).coeffs[1] = constant_term(tmp3136[i, j, 3]) * constant_term(J2_t[j])
                        (tmp3137[i, j, 3]).coeffs[2:order + 1] .= zero((tmp3137[i, j, 3]).coeffs[1])
                        (F_J_ζ[i, j]).coeffs[1] = constant_term(tmp3137[i, j, 3]) / constant_term(r_p4[i, j])
                        (F_J_ζ[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ[i, j]).coeffs[1])
                        (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        (F_J_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ_36[i, j]).coeffs[1])
                        (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        (F_J_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ_36[i, j]).coeffs[1])
                        for n = 3:n1SEM[j]
                            (tmp3139[i, j, n + 1]).coeffs[1] = constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n])
                            (tmp3139[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp3139[i, j, n + 1]).coeffs[1])
                            (tmp3140[i, j, n + 1]).coeffs[1] = constant_term(tmp3139[i, j, n + 1]) * constant_term(JSEM[j, n])
                            (tmp3140[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp3140[i, j, n + 1]).coeffs[1])
                            (tmp3141[i, j, n + 1]).coeffs[1] = constant_term(tmp3140[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                            (tmp3141[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp3141[i, j, n + 1]).coeffs[1])
                            (temp_fjξ[i, j, n]).coeffs[1] = constant_term(tmp3141[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j])
                            (temp_fjξ[i, j, n]).coeffs[2:order + 1] .= zero((temp_fjξ[i, j, n]).coeffs[1])
                            (tmp3143[i, j, n + 1]).coeffs[1] = -(constant_term(dP_n[i, j, n + 1]))
                            (tmp3143[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp3143[i, j, n + 1]).coeffs[1])
                            (tmp3144[i, j, n + 1]).coeffs[1] = constant_term(tmp3143[i, j, n + 1]) * constant_term(cos_ϕ[i, j])
                            (tmp3144[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp3144[i, j, n + 1]).coeffs[1])
                            (tmp3145[i, j, n + 1]).coeffs[1] = constant_term(tmp3144[i, j, n + 1]) * constant_term(JSEM[j, n])
                            (tmp3145[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp3145[i, j, n + 1]).coeffs[1])
                            (tmp3146[i, j, n + 1]).coeffs[1] = constant_term(tmp3145[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                            (tmp3146[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp3146[i, j, n + 1]).coeffs[1])
                            (temp_fjζ[i, j, n]).coeffs[1] = constant_term(tmp3146[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j])
                            (temp_fjζ[i, j, n]).coeffs[2:order + 1] .= zero((temp_fjζ[i, j, n]).coeffs[1])
                            (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjξ[i, j, n]))
                            (F_J_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ_36[i, j]).coeffs[1])
                            (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjζ[i, j, n]))
                            (F_J_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ_36[i, j]).coeffs[1])
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    (sin_mλ[i, j, 1]).coeffs[1] = identity(constant_term(sin_λ[i, j]))
                                    (sin_mλ[i, j, 1]).coeffs[2:order + 1] .= zero((sin_mλ[i, j, 1]).coeffs[1])
                                    (cos_mλ[i, j, 1]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                                    (cos_mλ[i, j, 1]).coeffs[2:order + 1] .= zero((cos_mλ[i, j, 1]).coeffs[1])
                                    (secϕ_P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(one_t))
                                    (secϕ_P_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, 1, 1]).coeffs[1])
                                    (P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                                    (P_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((P_nm[i, j, 1, 1]).coeffs[1])
                                    (cosϕ_dP_nm[i, j, 1, 1]).coeffs[1] = constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1])
                                    (cosϕ_dP_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, 1, 1]).coeffs[1])
                                else
                                    (tmp3149[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                    (tmp3149[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp3149[i, j, m - 1]).coeffs[1])
                                    (tmp3150[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                    (tmp3150[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp3150[i, j, m - 1]).coeffs[1])
                                    (sin_mλ[i, j, m]).coeffs[1] = constant_term(tmp3149[i, j, m - 1]) + constant_term(tmp3150[i, j, m - 1])
                                    (sin_mλ[i, j, m]).coeffs[2:order + 1] .= zero((sin_mλ[i, j, m]).coeffs[1])
                                    (tmp3152[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                    (tmp3152[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp3152[i, j, m - 1]).coeffs[1])
                                    (tmp3153[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                    (tmp3153[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp3153[i, j, m - 1]).coeffs[1])
                                    (cos_mλ[i, j, m]).coeffs[1] = constant_term(tmp3152[i, j, m - 1]) - constant_term(tmp3153[i, j, m - 1])
                                    (cos_mλ[i, j, m]).coeffs[2:order + 1] .= zero((cos_mλ[i, j, m]).coeffs[1])
                                    (tmp3155[i, j, m - 1, m - 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j])
                                    (tmp3155[i, j, m - 1, m - 1]).coeffs[2:order + 1] .= zero((tmp3155[i, j, m - 1, m - 1]).coeffs[1])
                                    (secϕ_P_nm[i, j, m, m]).coeffs[1] = constant_term(tmp3155[i, j, m - 1, m - 1]) * constant_term(lnm5[m])
                                    (secϕ_P_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, m, m]).coeffs[1])
                                    (P_nm[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j])
                                    (P_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((P_nm[i, j, m, m]).coeffs[1])
                                    (tmp3158[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j])
                                    (tmp3158[i, j, m, m]).coeffs[2:order + 1] .= zero((tmp3158[i, j, m, m]).coeffs[1])
                                    (cosϕ_dP_nm[i, j, m, m]).coeffs[1] = constant_term(tmp3158[i, j, m, m]) * constant_term(lnm3[m])
                                    (cosϕ_dP_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, m, m]).coeffs[1])
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        (tmp3160[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                        (tmp3160[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp3160[i, j, n - 1, m]).coeffs[1])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp3160[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, n, m]).coeffs[1])
                                    else
                                        (tmp3162[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                        (tmp3162[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp3162[i, j, n - 1, m]).coeffs[1])
                                        (tmp3163[i, j, n - 1, m]).coeffs[1] = constant_term(tmp3162[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                        (tmp3163[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp3163[i, j, n - 1, m]).coeffs[1])
                                        (tmp3164[i, j, n - 2, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m])
                                        (tmp3164[i, j, n - 2, m]).coeffs[2:order + 1] .= zero((tmp3164[i, j, n - 2, m]).coeffs[1])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp3163[i, j, n - 1, m]) + constant_term(tmp3164[i, j, n - 2, m])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, n, m]).coeffs[1])
                                    end
                                    (P_nm[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j])
                                    (P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((P_nm[i, j, n, m]).coeffs[1])
                                    (tmp3167[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j])
                                    (tmp3167[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3167[i, j, n, m]).coeffs[1])
                                    (tmp3168[i, j, n, m]).coeffs[1] = constant_term(tmp3167[i, j, n, m]) * constant_term(lnm3[n])
                                    (tmp3168[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3168[i, j, n, m]).coeffs[1])
                                    (tmp3169[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m])
                                    (tmp3169[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp3169[i, j, n - 1, m]).coeffs[1])
                                    (cosϕ_dP_nm[i, j, n, m]).coeffs[1] = constant_term(tmp3168[i, j, n, m]) + constant_term(tmp3169[i, j, n - 1, m])
                                    (cosϕ_dP_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, n, m]).coeffs[1])
                                end
                            end
                            (tmp3171[i, j, 2, 1]).coeffs[1] = constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2])
                            (tmp3171[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3171[i, j, 2, 1]).coeffs[1])
                            (tmp3172[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                            (tmp3172[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3172[i, j, 1]).coeffs[1])
                            (tmp3173[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                            (tmp3173[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3173[i, j, 1]).coeffs[1])
                            (tmp3174[i, j, 1]).coeffs[1] = constant_term(tmp3172[i, j, 1]) + constant_term(tmp3173[i, j, 1])
                            (tmp3174[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3174[i, j, 1]).coeffs[1])
                            (tmp3175[i, j, 2, 1]).coeffs[1] = constant_term(tmp3171[i, j, 2, 1]) * constant_term(tmp3174[i, j, 1])
                            (tmp3175[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3175[i, j, 2, 1]).coeffs[1])
                            (tmp3176[i, j, 2, 2]).coeffs[1] = constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2])
                            (tmp3176[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3176[i, j, 2, 2]).coeffs[1])
                            (tmp3177[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                            (tmp3177[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3177[i, j, 2]).coeffs[1])
                            (tmp3178[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                            (tmp3178[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3178[i, j, 2]).coeffs[1])
                            (tmp3179[i, j, 2]).coeffs[1] = constant_term(tmp3177[i, j, 2]) + constant_term(tmp3178[i, j, 2])
                            (tmp3179[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3179[i, j, 2]).coeffs[1])
                            (tmp3180[i, j, 2, 2]).coeffs[1] = constant_term(tmp3176[i, j, 2, 2]) * constant_term(tmp3179[i, j, 2])
                            (tmp3180[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3180[i, j, 2, 2]).coeffs[1])
                            (tmp3181[i, j, 2, 1]).coeffs[1] = constant_term(tmp3175[i, j, 2, 1]) + constant_term(tmp3180[i, j, 2, 2])
                            (tmp3181[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3181[i, j, 2, 1]).coeffs[1])
                            (F_CS_ξ[i, j]).coeffs[1] = constant_term(tmp3181[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            (F_CS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ[i, j]).coeffs[1])
                            (tmp3183[i, j, 2, 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1])
                            (tmp3183[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3183[i, j, 2, 1]).coeffs[1])
                            (tmp3184[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1])
                            (tmp3184[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3184[i, j, 1]).coeffs[1])
                            (tmp3185[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1])
                            (tmp3185[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3185[i, j, 1]).coeffs[1])
                            (tmp3186[i, j, 1]).coeffs[1] = constant_term(tmp3184[i, j, 1]) - constant_term(tmp3185[i, j, 1])
                            (tmp3186[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3186[i, j, 1]).coeffs[1])
                            (tmp3187[i, j, 2, 1]).coeffs[1] = constant_term(tmp3183[i, j, 2, 1]) * constant_term(tmp3186[i, j, 1])
                            (tmp3187[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3187[i, j, 2, 1]).coeffs[1])
                            (tmp3188[i, j, 2, 2]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2])
                            (tmp3188[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3188[i, j, 2, 2]).coeffs[1])
                            (tmp3189[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2])
                            (tmp3189[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3189[i, j, 2]).coeffs[1])
                            (tmp3190[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2])
                            (tmp3190[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3190[i, j, 2]).coeffs[1])
                            (tmp3191[i, j, 2]).coeffs[1] = constant_term(tmp3189[i, j, 2]) - constant_term(tmp3190[i, j, 2])
                            (tmp3191[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3191[i, j, 2]).coeffs[1])
                            (tmp3192[i, j, 2, 2]).coeffs[1] = constant_term(tmp3188[i, j, 2, 2]) * constant_term(tmp3191[i, j, 2])
                            (tmp3192[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3192[i, j, 2, 2]).coeffs[1])
                            (tmp3193[i, j, 2, 1]).coeffs[1] = constant_term(tmp3187[i, j, 2, 1]) + constant_term(tmp3192[i, j, 2, 2])
                            (tmp3193[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3193[i, j, 2, 1]).coeffs[1])
                            (F_CS_η[i, j]).coeffs[1] = constant_term(tmp3193[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            (F_CS_η[i, j]).coeffs[2:order + 1] .= zero((F_CS_η[i, j]).coeffs[1])
                            (tmp3195[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                            (tmp3195[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3195[i, j, 1]).coeffs[1])
                            (tmp3196[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                            (tmp3196[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3196[i, j, 1]).coeffs[1])
                            (tmp3197[i, j, 1]).coeffs[1] = constant_term(tmp3195[i, j, 1]) + constant_term(tmp3196[i, j, 1])
                            (tmp3197[i, j, 1]).coeffs[2:order + 1] .= zero((tmp3197[i, j, 1]).coeffs[1])
                            (tmp3198[i, j, 2, 1]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp3197[i, j, 1])
                            (tmp3198[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3198[i, j, 2, 1]).coeffs[1])
                            (tmp3199[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                            (tmp3199[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3199[i, j, 2]).coeffs[1])
                            (tmp3200[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                            (tmp3200[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3200[i, j, 2]).coeffs[1])
                            (tmp3201[i, j, 2]).coeffs[1] = constant_term(tmp3199[i, j, 2]) + constant_term(tmp3200[i, j, 2])
                            (tmp3201[i, j, 2]).coeffs[2:order + 1] .= zero((tmp3201[i, j, 2]).coeffs[1])
                            (tmp3202[i, j, 2, 2]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp3201[i, j, 2])
                            (tmp3202[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3202[i, j, 2, 2]).coeffs[1])
                            (tmp3203[i, j, 2, 1]).coeffs[1] = constant_term(tmp3198[i, j, 2, 1]) + constant_term(tmp3202[i, j, 2, 2])
                            (tmp3203[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3203[i, j, 2, 1]).coeffs[1])
                            (F_CS_ζ[i, j]).coeffs[1] = constant_term(tmp3203[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            (F_CS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ[i, j]).coeffs[1])
                            (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            (F_CS_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ_36[i, j]).coeffs[1])
                            (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            (F_CS_η_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_η_36[i, j]).coeffs[1])
                            (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            (F_CS_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ_36[i, j]).coeffs[1])
                            for n = 3:n2M
                                for m = 1:n
                                    (Cnm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m])
                                    (Cnm_cosmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Cnm_cosmλ[i, j, n, m]).coeffs[1])
                                    (Cnm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m])
                                    (Cnm_sinmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Cnm_sinmλ[i, j, n, m]).coeffs[1])
                                    (Snm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m])
                                    (Snm_cosmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Snm_cosmλ[i, j, n, m]).coeffs[1])
                                    (Snm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m])
                                    (Snm_sinmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Snm_sinmλ[i, j, n, m]).coeffs[1])
                                    (tmp3209[i, j, n, m]).coeffs[1] = constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n])
                                    (tmp3209[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3209[i, j, n, m]).coeffs[1])
                                    (tmp3210[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                    (tmp3210[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3210[i, j, n, m]).coeffs[1])
                                    (tmp3211[i, j, n, m]).coeffs[1] = constant_term(tmp3209[i, j, n, m]) * constant_term(tmp3210[i, j, n, m])
                                    (tmp3211[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3211[i, j, n, m]).coeffs[1])
                                    (tmp3212[i, j, n, m]).coeffs[1] = constant_term(tmp3211[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    (tmp3212[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3212[i, j, n, m]).coeffs[1])
                                    (temp_CS_ξ[i, j, n, m]).coeffs[1] = constant_term(tmp3212[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j])
                                    (temp_CS_ξ[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_ξ[i, j, n, m]).coeffs[1])
                                    (tmp3214[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m])
                                    (tmp3214[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3214[i, j, n, m]).coeffs[1])
                                    (tmp3215[i, j, n, m]).coeffs[1] = constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m])
                                    (tmp3215[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3215[i, j, n, m]).coeffs[1])
                                    (tmp3216[i, j, n, m]).coeffs[1] = constant_term(tmp3214[i, j, n, m]) * constant_term(tmp3215[i, j, n, m])
                                    (tmp3216[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3216[i, j, n, m]).coeffs[1])
                                    (tmp3217[i, j, n, m]).coeffs[1] = constant_term(tmp3216[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    (tmp3217[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3217[i, j, n, m]).coeffs[1])
                                    (temp_CS_η[i, j, n, m]).coeffs[1] = constant_term(tmp3217[i, j, n, m]) + constant_term(F_CS_η_36[i, j])
                                    (temp_CS_η[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_η[i, j, n, m]).coeffs[1])
                                    (tmp3219[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                    (tmp3219[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3219[i, j, n, m]).coeffs[1])
                                    (tmp3220[i, j, n, m]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp3219[i, j, n, m])
                                    (tmp3220[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3220[i, j, n, m]).coeffs[1])
                                    (tmp3221[i, j, n, m]).coeffs[1] = constant_term(tmp3220[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    (tmp3221[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp3221[i, j, n, m]).coeffs[1])
                                    (temp_CS_ζ[i, j, n, m]).coeffs[1] = constant_term(tmp3221[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j])
                                    (temp_CS_ζ[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_ζ[i, j, n, m]).coeffs[1])
                                    (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ξ[i, j, n, m]))
                                    (F_CS_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ_36[i, j]).coeffs[1])
                                    (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_η[i, j, n, m]))
                                    (F_CS_η_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_η_36[i, j]).coeffs[1])
                                    (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ζ[i, j, n, m]))
                                    (F_CS_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ_36[i, j]).coeffs[1])
                                end
                            end
                            (tmp3223[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                            (tmp3223[i, j]).coeffs[2:order + 1] .= zero((tmp3223[i, j]).coeffs[1])
                            (tmp3224[i, j]).coeffs[1] = constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j])
                            (tmp3224[i, j]).coeffs[2:order + 1] .= zero((tmp3224[i, j]).coeffs[1])
                            (F_JCS_ξ[i, j]).coeffs[1] = constant_term(tmp3223[i, j]) + constant_term(tmp3224[i, j])
                            (F_JCS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ξ[i, j]).coeffs[1])
                            (F_JCS_η[i, j]).coeffs[1] = constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j])
                            (F_JCS_η[i, j]).coeffs[2:order + 1] .= zero((F_JCS_η[i, j]).coeffs[1])
                            (tmp3227[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                            (tmp3227[i, j]).coeffs[2:order + 1] .= zero((tmp3227[i, j]).coeffs[1])
                            (tmp3228[i, j]).coeffs[1] = constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j])
                            (tmp3228[i, j]).coeffs[2:order + 1] .= zero((tmp3228[i, j]).coeffs[1])
                            (F_JCS_ζ[i, j]).coeffs[1] = constant_term(tmp3227[i, j]) + constant_term(tmp3228[i, j])
                            (F_JCS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ζ[i, j]).coeffs[1])
                        else
                            (F_JCS_ξ[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                            (F_JCS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ξ[i, j]).coeffs[1])
                            (F_JCS_η[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            (F_JCS_η[i, j]).coeffs[2:order + 1] .= zero((F_JCS_η[i, j]).coeffs[1])
                            (F_JCS_ζ[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                            (F_JCS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ζ[i, j]).coeffs[1])
                        end
                        (Rb2p[i, j, 1, 1]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j])
                        (Rb2p[i, j, 1, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 1]).coeffs[1])
                        (Rb2p[i, j, 2, 1]).coeffs[1] = -(constant_term(sin_λ[i, j]))
                        (Rb2p[i, j, 2, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 1]).coeffs[1])
                        (tmp3234[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                        (tmp3234[i, j]).coeffs[2:order + 1] .= zero((tmp3234[i, j]).coeffs[1])
                        (Rb2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp3234[i, j]) * constant_term(cos_λ[i, j])
                        (Rb2p[i, j, 3, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 1]).coeffs[1])
                        (Rb2p[i, j, 1, 2]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j])
                        (Rb2p[i, j, 1, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 2]).coeffs[1])
                        (Rb2p[i, j, 2, 2]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                        (Rb2p[i, j, 2, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 2]).coeffs[1])
                        (tmp3237[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                        (tmp3237[i, j]).coeffs[2:order + 1] .= zero((tmp3237[i, j]).coeffs[1])
                        (Rb2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp3237[i, j]) * constant_term(sin_λ[i, j])
                        (Rb2p[i, j, 3, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 2]).coeffs[1])
                        (Rb2p[i, j, 1, 3]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                        (Rb2p[i, j, 1, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 3]).coeffs[1])
                        (Rb2p[i, j, 2, 3]).coeffs[1] = identity(constant_term(zero_q_1))
                        (Rb2p[i, j, 2, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 3]).coeffs[1])
                        (Rb2p[i, j, 3, 3]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                        (Rb2p[i, j, 3, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 3]).coeffs[1])
                        (tmp3239[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j])
                        (tmp3239[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp3239[i, j, 1, 1]).coeffs[1])
                        (tmp3240[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j])
                        (tmp3240[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp3240[i, j, 1, 2]).coeffs[1])
                        (tmp3241[i, j, 1, 1]).coeffs[1] = constant_term(tmp3239[i, j, 1, 1]) + constant_term(tmp3240[i, j, 1, 2])
                        (tmp3241[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp3241[i, j, 1, 1]).coeffs[1])
                        (tmp3242[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j])
                        (tmp3242[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp3242[i, j, 1, 3]).coeffs[1])
                        (Gc2p[i, j, 1, 1]).coeffs[1] = constant_term(tmp3241[i, j, 1, 1]) + constant_term(tmp3242[i, j, 1, 3])
                        (Gc2p[i, j, 1, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 1]).coeffs[1])
                        (tmp3244[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j])
                        (tmp3244[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3244[i, j, 2, 1]).coeffs[1])
                        (tmp3245[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j])
                        (tmp3245[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3245[i, j, 2, 2]).coeffs[1])
                        (tmp3246[i, j, 2, 1]).coeffs[1] = constant_term(tmp3244[i, j, 2, 1]) + constant_term(tmp3245[i, j, 2, 2])
                        (tmp3246[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3246[i, j, 2, 1]).coeffs[1])
                        (tmp3247[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j])
                        (tmp3247[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp3247[i, j, 2, 3]).coeffs[1])
                        (Gc2p[i, j, 2, 1]).coeffs[1] = constant_term(tmp3246[i, j, 2, 1]) + constant_term(tmp3247[i, j, 2, 3])
                        (Gc2p[i, j, 2, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 1]).coeffs[1])
                        (tmp3249[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j])
                        (tmp3249[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp3249[i, j, 3, 1]).coeffs[1])
                        (tmp3250[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j])
                        (tmp3250[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp3250[i, j, 3, 2]).coeffs[1])
                        (tmp3251[i, j, 3, 1]).coeffs[1] = constant_term(tmp3249[i, j, 3, 1]) + constant_term(tmp3250[i, j, 3, 2])
                        (tmp3251[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp3251[i, j, 3, 1]).coeffs[1])
                        (tmp3252[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j])
                        (tmp3252[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp3252[i, j, 3, 3]).coeffs[1])
                        (Gc2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp3251[i, j, 3, 1]) + constant_term(tmp3252[i, j, 3, 3])
                        (Gc2p[i, j, 3, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 1]).coeffs[1])
                        (tmp3254[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j])
                        (tmp3254[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp3254[i, j, 1, 1]).coeffs[1])
                        (tmp3255[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j])
                        (tmp3255[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp3255[i, j, 1, 2]).coeffs[1])
                        (tmp3256[i, j, 1, 1]).coeffs[1] = constant_term(tmp3254[i, j, 1, 1]) + constant_term(tmp3255[i, j, 1, 2])
                        (tmp3256[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp3256[i, j, 1, 1]).coeffs[1])
                        (tmp3257[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j])
                        (tmp3257[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp3257[i, j, 1, 3]).coeffs[1])
                        (Gc2p[i, j, 1, 2]).coeffs[1] = constant_term(tmp3256[i, j, 1, 1]) + constant_term(tmp3257[i, j, 1, 3])
                        (Gc2p[i, j, 1, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 2]).coeffs[1])
                        (tmp3259[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j])
                        (tmp3259[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3259[i, j, 2, 1]).coeffs[1])
                        (tmp3260[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j])
                        (tmp3260[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3260[i, j, 2, 2]).coeffs[1])
                        (tmp3261[i, j, 2, 1]).coeffs[1] = constant_term(tmp3259[i, j, 2, 1]) + constant_term(tmp3260[i, j, 2, 2])
                        (tmp3261[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3261[i, j, 2, 1]).coeffs[1])
                        (tmp3262[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j])
                        (tmp3262[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp3262[i, j, 2, 3]).coeffs[1])
                        (Gc2p[i, j, 2, 2]).coeffs[1] = constant_term(tmp3261[i, j, 2, 1]) + constant_term(tmp3262[i, j, 2, 3])
                        (Gc2p[i, j, 2, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 2]).coeffs[1])
                        (tmp3264[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j])
                        (tmp3264[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp3264[i, j, 3, 1]).coeffs[1])
                        (tmp3265[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j])
                        (tmp3265[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp3265[i, j, 3, 2]).coeffs[1])
                        (tmp3266[i, j, 3, 1]).coeffs[1] = constant_term(tmp3264[i, j, 3, 1]) + constant_term(tmp3265[i, j, 3, 2])
                        (tmp3266[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp3266[i, j, 3, 1]).coeffs[1])
                        (tmp3267[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j])
                        (tmp3267[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp3267[i, j, 3, 3]).coeffs[1])
                        (Gc2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp3266[i, j, 3, 1]) + constant_term(tmp3267[i, j, 3, 3])
                        (Gc2p[i, j, 3, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 2]).coeffs[1])
                        (tmp3269[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j])
                        (tmp3269[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp3269[i, j, 1, 1]).coeffs[1])
                        (tmp3270[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j])
                        (tmp3270[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp3270[i, j, 1, 2]).coeffs[1])
                        (tmp3271[i, j, 1, 1]).coeffs[1] = constant_term(tmp3269[i, j, 1, 1]) + constant_term(tmp3270[i, j, 1, 2])
                        (tmp3271[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp3271[i, j, 1, 1]).coeffs[1])
                        (tmp3272[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j])
                        (tmp3272[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp3272[i, j, 1, 3]).coeffs[1])
                        (Gc2p[i, j, 1, 3]).coeffs[1] = constant_term(tmp3271[i, j, 1, 1]) + constant_term(tmp3272[i, j, 1, 3])
                        (Gc2p[i, j, 1, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 3]).coeffs[1])
                        (tmp3274[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j])
                        (tmp3274[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3274[i, j, 2, 1]).coeffs[1])
                        (tmp3275[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j])
                        (tmp3275[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3275[i, j, 2, 2]).coeffs[1])
                        (tmp3276[i, j, 2, 1]).coeffs[1] = constant_term(tmp3274[i, j, 2, 1]) + constant_term(tmp3275[i, j, 2, 2])
                        (tmp3276[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3276[i, j, 2, 1]).coeffs[1])
                        (tmp3277[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j])
                        (tmp3277[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp3277[i, j, 2, 3]).coeffs[1])
                        (Gc2p[i, j, 2, 3]).coeffs[1] = constant_term(tmp3276[i, j, 2, 1]) + constant_term(tmp3277[i, j, 2, 3])
                        (Gc2p[i, j, 2, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 3]).coeffs[1])
                        (tmp3279[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j])
                        (tmp3279[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp3279[i, j, 3, 1]).coeffs[1])
                        (tmp3280[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j])
                        (tmp3280[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp3280[i, j, 3, 2]).coeffs[1])
                        (tmp3281[i, j, 3, 1]).coeffs[1] = constant_term(tmp3279[i, j, 3, 1]) + constant_term(tmp3280[i, j, 3, 2])
                        (tmp3281[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp3281[i, j, 3, 1]).coeffs[1])
                        (tmp3282[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j])
                        (tmp3282[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp3282[i, j, 3, 3]).coeffs[1])
                        (Gc2p[i, j, 3, 3]).coeffs[1] = constant_term(tmp3281[i, j, 3, 1]) + constant_term(tmp3282[i, j, 3, 3])
                        (Gc2p[i, j, 3, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 3]).coeffs[1])
                        (tmp3284[i, j, 1, 1]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1])
                        (tmp3284[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp3284[i, j, 1, 1]).coeffs[1])
                        (tmp3285[i, j, 2, 1]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1])
                        (tmp3285[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp3285[i, j, 2, 1]).coeffs[1])
                        (tmp3286[i, j, 1, 1]).coeffs[1] = constant_term(tmp3284[i, j, 1, 1]) + constant_term(tmp3285[i, j, 2, 1])
                        (tmp3286[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp3286[i, j, 1, 1]).coeffs[1])
                        (tmp3287[i, j, 3, 1]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1])
                        (tmp3287[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp3287[i, j, 3, 1]).coeffs[1])
                        (F_JCS_x[i, j]).coeffs[1] = constant_term(tmp3286[i, j, 1, 1]) + constant_term(tmp3287[i, j, 3, 1])
                        (F_JCS_x[i, j]).coeffs[2:order + 1] .= zero((F_JCS_x[i, j]).coeffs[1])
                        (tmp3289[i, j, 1, 2]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2])
                        (tmp3289[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp3289[i, j, 1, 2]).coeffs[1])
                        (tmp3290[i, j, 2, 2]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2])
                        (tmp3290[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp3290[i, j, 2, 2]).coeffs[1])
                        (tmp3291[i, j, 1, 2]).coeffs[1] = constant_term(tmp3289[i, j, 1, 2]) + constant_term(tmp3290[i, j, 2, 2])
                        (tmp3291[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp3291[i, j, 1, 2]).coeffs[1])
                        (tmp3292[i, j, 3, 2]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2])
                        (tmp3292[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp3292[i, j, 3, 2]).coeffs[1])
                        (F_JCS_y[i, j]).coeffs[1] = constant_term(tmp3291[i, j, 1, 2]) + constant_term(tmp3292[i, j, 3, 2])
                        (F_JCS_y[i, j]).coeffs[2:order + 1] .= zero((F_JCS_y[i, j]).coeffs[1])
                        (tmp3294[i, j, 1, 3]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3])
                        (tmp3294[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp3294[i, j, 1, 3]).coeffs[1])
                        (tmp3295[i, j, 2, 3]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3])
                        (tmp3295[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp3295[i, j, 2, 3]).coeffs[1])
                        (tmp3296[i, j, 1, 3]).coeffs[1] = constant_term(tmp3294[i, j, 1, 3]) + constant_term(tmp3295[i, j, 2, 3])
                        (tmp3296[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp3296[i, j, 1, 3]).coeffs[1])
                        (tmp3297[i, j, 3, 3]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3])
                        (tmp3297[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp3297[i, j, 3, 3]).coeffs[1])
                        (F_JCS_z[i, j]).coeffs[1] = constant_term(tmp3296[i, j, 1, 3]) + constant_term(tmp3297[i, j, 3, 3])
                        (F_JCS_z[i, j]).coeffs[2:order + 1] .= zero((F_JCS_z[i, j]).coeffs[1])
                    end
                end
            end
        end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    (tmp3299[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_x[i, j])
                    (tmp3299[i, j]).coeffs[2:order + 1] .= zero((tmp3299[i, j]).coeffs[1])
                    (temp_accX_j[i, j]).coeffs[1] = constant_term(accX[j]) - constant_term(tmp3299[i, j])
                    (temp_accX_j[i, j]).coeffs[2:order + 1] .= zero((temp_accX_j[i, j]).coeffs[1])
                    (accX[j]).coeffs[1] = identity(constant_term(temp_accX_j[i, j]))
                    (accX[j]).coeffs[2:order + 1] .= zero((accX[j]).coeffs[1])
                    (tmp3301[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_y[i, j])
                    (tmp3301[i, j]).coeffs[2:order + 1] .= zero((tmp3301[i, j]).coeffs[1])
                    (temp_accY_j[i, j]).coeffs[1] = constant_term(accY[j]) - constant_term(tmp3301[i, j])
                    (temp_accY_j[i, j]).coeffs[2:order + 1] .= zero((temp_accY_j[i, j]).coeffs[1])
                    (accY[j]).coeffs[1] = identity(constant_term(temp_accY_j[i, j]))
                    (accY[j]).coeffs[2:order + 1] .= zero((accY[j]).coeffs[1])
                    (tmp3303[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_z[i, j])
                    (tmp3303[i, j]).coeffs[2:order + 1] .= zero((tmp3303[i, j]).coeffs[1])
                    (temp_accZ_j[i, j]).coeffs[1] = constant_term(accZ[j]) - constant_term(tmp3303[i, j])
                    (temp_accZ_j[i, j]).coeffs[2:order + 1] .= zero((temp_accZ_j[i, j]).coeffs[1])
                    (accZ[j]).coeffs[1] = identity(constant_term(temp_accZ_j[i, j]))
                    (accZ[j]).coeffs[2:order + 1] .= zero((accZ[j]).coeffs[1])
                    (tmp3305[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_x[i, j])
                    (tmp3305[i, j]).coeffs[2:order + 1] .= zero((tmp3305[i, j]).coeffs[1])
                    (temp_accX_i[i, j]).coeffs[1] = constant_term(accX[i]) + constant_term(tmp3305[i, j])
                    (temp_accX_i[i, j]).coeffs[2:order + 1] .= zero((temp_accX_i[i, j]).coeffs[1])
                    (accX[i]).coeffs[1] = identity(constant_term(temp_accX_i[i, j]))
                    (accX[i]).coeffs[2:order + 1] .= zero((accX[i]).coeffs[1])
                    (tmp3307[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_y[i, j])
                    (tmp3307[i, j]).coeffs[2:order + 1] .= zero((tmp3307[i, j]).coeffs[1])
                    (temp_accY_i[i, j]).coeffs[1] = constant_term(accY[i]) + constant_term(tmp3307[i, j])
                    (temp_accY_i[i, j]).coeffs[2:order + 1] .= zero((temp_accY_i[i, j]).coeffs[1])
                    (accY[i]).coeffs[1] = identity(constant_term(temp_accY_i[i, j]))
                    (accY[i]).coeffs[2:order + 1] .= zero((accY[i]).coeffs[1])
                    (tmp3309[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_z[i, j])
                    (tmp3309[i, j]).coeffs[2:order + 1] .= zero((tmp3309[i, j]).coeffs[1])
                    (temp_accZ_i[i, j]).coeffs[1] = constant_term(accZ[i]) + constant_term(tmp3309[i, j])
                    (temp_accZ_i[i, j]).coeffs[2:order + 1] .= zero((temp_accZ_i[i, j]).coeffs[1])
                    (accZ[i]).coeffs[1] = identity(constant_term(temp_accZ_i[i, j]))
                    (accZ[i]).coeffs[2:order + 1] .= zero((accZ[i]).coeffs[1])
                    if j == mo
                        (tmp3311[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j])
                        (tmp3311[i, j]).coeffs[2:order + 1] .= zero((tmp3311[i, j]).coeffs[1])
                        (tmp3312[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j])
                        (tmp3312[i, j]).coeffs[2:order + 1] .= zero((tmp3312[i, j]).coeffs[1])
                        (tmp3313[i, j]).coeffs[1] = constant_term(tmp3311[i, j]) - constant_term(tmp3312[i, j])
                        (tmp3313[i, j]).coeffs[2:order + 1] .= zero((tmp3313[i, j]).coeffs[1])
                        (N_MfigM_pmA_x[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp3313[i, j])
                        (N_MfigM_pmA_x[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_x[i]).coeffs[1])
                        (tmp3315[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j])
                        (tmp3315[i, j]).coeffs[2:order + 1] .= zero((tmp3315[i, j]).coeffs[1])
                        (tmp3316[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_z[i, j])
                        (tmp3316[i, j]).coeffs[2:order + 1] .= zero((tmp3316[i, j]).coeffs[1])
                        (tmp3317[i, j]).coeffs[1] = constant_term(tmp3315[i, j]) - constant_term(tmp3316[i, j])
                        (tmp3317[i, j]).coeffs[2:order + 1] .= zero((tmp3317[i, j]).coeffs[1])
                        (N_MfigM_pmA_y[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp3317[i, j])
                        (N_MfigM_pmA_y[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_y[i]).coeffs[1])
                        (tmp3319[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_y[i, j])
                        (tmp3319[i, j]).coeffs[2:order + 1] .= zero((tmp3319[i, j]).coeffs[1])
                        (tmp3320[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j])
                        (tmp3320[i, j]).coeffs[2:order + 1] .= zero((tmp3320[i, j]).coeffs[1])
                        (tmp3321[i, j]).coeffs[1] = constant_term(tmp3319[i, j]) - constant_term(tmp3320[i, j])
                        (tmp3321[i, j]).coeffs[2:order + 1] .= zero((tmp3321[i, j]).coeffs[1])
                        (N_MfigM_pmA_z[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp3321[i, j])
                        (N_MfigM_pmA_z[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_z[i]).coeffs[1])
                        (temp_N_M_x[i]).coeffs[1] = constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i])
                        (temp_N_M_x[i]).coeffs[2:order + 1] .= zero((temp_N_M_x[i]).coeffs[1])
                        (N_MfigM[1]).coeffs[1] = identity(constant_term(temp_N_M_x[i]))
                        (N_MfigM[1]).coeffs[2:order + 1] .= zero((N_MfigM[1]).coeffs[1])
                        (temp_N_M_y[i]).coeffs[1] = constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i])
                        (temp_N_M_y[i]).coeffs[2:order + 1] .= zero((temp_N_M_y[i]).coeffs[1])
                        (N_MfigM[2]).coeffs[1] = identity(constant_term(temp_N_M_y[i]))
                        (N_MfigM[2]).coeffs[2:order + 1] .= zero((N_MfigM[2]).coeffs[1])
                        (temp_N_M_z[i]).coeffs[1] = constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i])
                        (temp_N_M_z[i]).coeffs[2:order + 1] .= zero((temp_N_M_z[i]).coeffs[1])
                        (N_MfigM[3]).coeffs[1] = identity(constant_term(temp_N_M_z[i]))
                        (N_MfigM[3]).coeffs[2:order + 1] .= zero((N_MfigM[3]).coeffs[1])
                    end
                end
            end
        end
    end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:656 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    (_4ϕj[i, j]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[j])
                    (_4ϕj[i, j]).coeffs[2:order + 1] .= zero((_4ϕj[i, j]).coeffs[1])
                    (ϕi_plus_4ϕj[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j])
                    (ϕi_plus_4ϕj[i, j]).coeffs[2:order + 1] .= zero((ϕi_plus_4ϕj[i, j]).coeffs[1])
                    (_2v2[i, j]).coeffs[1] = constant_term(2) * constant_term(v2[i])
                    (_2v2[i, j]).coeffs[2:order + 1] .= zero((_2v2[i, j]).coeffs[1])
                    (sj2_plus_2si2[i, j]).coeffs[1] = constant_term(v2[j]) + constant_term(_2v2[i, j])
                    (sj2_plus_2si2[i, j]).coeffs[2:order + 1] .= zero((sj2_plus_2si2[i, j]).coeffs[1])
                    (tmp3333[i, j]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i, j])
                    (tmp3333[i, j]).coeffs[2:order + 1] .= zero((tmp3333[i, j]).coeffs[1])
                    (sj2_plus_2si2_minus_4vivj[i, j]).coeffs[1] = constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp3333[i, j])
                    (sj2_plus_2si2_minus_4vivj[i, j]).coeffs[2:order + 1] .= zero((sj2_plus_2si2_minus_4vivj[i, j]).coeffs[1])
                    (ϕs_and_vs[i, j]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j])
                    (ϕs_and_vs[i, j]).coeffs[2:order + 1] .= zero((ϕs_and_vs[i, j]).coeffs[1])
                    (Xij_t_Ui[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(dq[3i - 2])
                    (Xij_t_Ui[i, j]).coeffs[2:order + 1] .= zero((Xij_t_Ui[i, j]).coeffs[1])
                    (Yij_t_Vi[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(dq[3i - 1])
                    (Yij_t_Vi[i, j]).coeffs[2:order + 1] .= zero((Yij_t_Vi[i, j]).coeffs[1])
                    (Zij_t_Wi[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(dq[3i])
                    (Zij_t_Wi[i, j]).coeffs[2:order + 1] .= zero((Zij_t_Wi[i, j]).coeffs[1])
                    (tmp3339[i, j]).coeffs[1] = constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j])
                    (tmp3339[i, j]).coeffs[2:order + 1] .= zero((tmp3339[i, j]).coeffs[1])
                    (Rij_dot_Vi[i, j]).coeffs[1] = constant_term(tmp3339[i, j]) + constant_term(Zij_t_Wi[i, j])
                    (Rij_dot_Vi[i, j]).coeffs[2:order + 1] .= zero((Rij_dot_Vi[i, j]).coeffs[1])
                    (tmp3342[i, j]).coeffs[1] = constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2))
                    (tmp3342[i, j]).coeffs[2:order + 1] .= zero((tmp3342[i, j]).coeffs[1])
                    (pn1t7[i, j]).coeffs[1] = constant_term(tmp3342[i, j]) / constant_term(r_p2[i, j])
                    (pn1t7[i, j]).coeffs[2:order + 1] .= zero((pn1t7[i, j]).coeffs[1])
                    (tmp3345[i, j]).coeffs[1] = constant_term(1.5) * constant_term(pn1t7[i, j])
                    (tmp3345[i, j]).coeffs[2:order + 1] .= zero((tmp3345[i, j]).coeffs[1])
                    (pn1t2_7[i, j]).coeffs[1] = constant_term(ϕs_and_vs[i, j]) - constant_term(tmp3345[i, j])
                    (pn1t2_7[i, j]).coeffs[2:order + 1] .= zero((pn1t2_7[i, j]).coeffs[1])
                    (pn1t1_7[i, j]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i, j])
                    (pn1t1_7[i, j]).coeffs[2:order + 1] .= zero((pn1t1_7[i, j]).coeffs[1])
                end
            end
            (pntempX[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (pntempX[j]).coeffs[2:order + 1] .= zero((pntempX[j]).coeffs[1])
            (pntempY[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (pntempY[j]).coeffs[2:order + 1] .= zero((pntempY[j]).coeffs[1])
            (pntempZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (pntempZ[j]).coeffs[2:order + 1] .= zero((pntempZ[j]).coeffs[1])
        end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:695 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    (pNX_t_X[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(X[i, j])
                    (pNX_t_X[i, j]).coeffs[2:order + 1] .= zero((pNX_t_X[i, j]).coeffs[1])
                    (pNY_t_Y[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(Y[i, j])
                    (pNY_t_Y[i, j]).coeffs[2:order + 1] .= zero((pNY_t_Y[i, j]).coeffs[1])
                    (pNZ_t_Z[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(Z[i, j])
                    (pNZ_t_Z[i, j]).coeffs[2:order + 1] .= zero((pNZ_t_Z[i, j]).coeffs[1])
                    (tmp3352[i, j]).coeffs[1] = constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j])
                    (tmp3352[i, j]).coeffs[2:order + 1] .= zero((tmp3352[i, j]).coeffs[1])
                    (tmp3353[i, j]).coeffs[1] = constant_term(tmp3352[i, j]) + constant_term(pNZ_t_Z[i, j])
                    (tmp3353[i, j]).coeffs[2:order + 1] .= zero((tmp3353[i, j]).coeffs[1])
                    (tmp3354[i, j]).coeffs[1] = constant_term(0.5) * constant_term(tmp3353[i, j])
                    (tmp3354[i, j]).coeffs[2:order + 1] .= zero((tmp3354[i, j]).coeffs[1])
                    (pn1[i, j]).coeffs[1] = constant_term(pn1t1_7[i, j]) + constant_term(tmp3354[i, j])
                    (pn1[i, j]).coeffs[2:order + 1] .= zero((pn1[i, j]).coeffs[1])
                    (X_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j])
                    (X_t_pn1[i, j]).coeffs[2:order + 1] .= zero((X_t_pn1[i, j]).coeffs[1])
                    (Y_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j])
                    (Y_t_pn1[i, j]).coeffs[2:order + 1] .= zero((Y_t_pn1[i, j]).coeffs[1])
                    (Z_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j])
                    (Z_t_pn1[i, j]).coeffs[2:order + 1] .= zero((Z_t_pn1[i, j]).coeffs[1])
                    (pNX_t_pn3[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(pn3[i, j])
                    (pNX_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNX_t_pn3[i, j]).coeffs[1])
                    (pNY_t_pn3[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(pn3[i, j])
                    (pNY_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNY_t_pn3[i, j]).coeffs[1])
                    (pNZ_t_pn3[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(pn3[i, j])
                    (pNZ_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNZ_t_pn3[i, j]).coeffs[1])
                    (tmp3362[i, j]).coeffs[1] = constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j])
                    (tmp3362[i, j]).coeffs[2:order + 1] .= zero((tmp3362[i, j]).coeffs[1])
                    (termpnx[i, j]).coeffs[1] = constant_term(X_t_pn1[i, j]) + constant_term(tmp3362[i, j])
                    (termpnx[i, j]).coeffs[2:order + 1] .= zero((termpnx[i, j]).coeffs[1])
                    (sumpnx[i, j]).coeffs[1] = constant_term(pntempX[j]) + constant_term(termpnx[i, j])
                    (sumpnx[i, j]).coeffs[2:order + 1] .= zero((sumpnx[i, j]).coeffs[1])
                    (pntempX[j]).coeffs[1] = identity(constant_term(sumpnx[i, j]))
                    (pntempX[j]).coeffs[2:order + 1] .= zero((pntempX[j]).coeffs[1])
                    (tmp3365[i, j]).coeffs[1] = constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j])
                    (tmp3365[i, j]).coeffs[2:order + 1] .= zero((tmp3365[i, j]).coeffs[1])
                    (termpny[i, j]).coeffs[1] = constant_term(Y_t_pn1[i, j]) + constant_term(tmp3365[i, j])
                    (termpny[i, j]).coeffs[2:order + 1] .= zero((termpny[i, j]).coeffs[1])
                    (sumpny[i, j]).coeffs[1] = constant_term(pntempY[j]) + constant_term(termpny[i, j])
                    (sumpny[i, j]).coeffs[2:order + 1] .= zero((sumpny[i, j]).coeffs[1])
                    (pntempY[j]).coeffs[1] = identity(constant_term(sumpny[i, j]))
                    (pntempY[j]).coeffs[2:order + 1] .= zero((pntempY[j]).coeffs[1])
                    (tmp3368[i, j]).coeffs[1] = constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j])
                    (tmp3368[i, j]).coeffs[2:order + 1] .= zero((tmp3368[i, j]).coeffs[1])
                    (termpnz[i, j]).coeffs[1] = constant_term(Z_t_pn1[i, j]) + constant_term(tmp3368[i, j])
                    (termpnz[i, j]).coeffs[2:order + 1] .= zero((termpnz[i, j]).coeffs[1])
                    (sumpnz[i, j]).coeffs[1] = constant_term(pntempZ[j]) + constant_term(termpnz[i, j])
                    (sumpnz[i, j]).coeffs[2:order + 1] .= zero((sumpnz[i, j]).coeffs[1])
                    (pntempZ[j]).coeffs[1] = identity(constant_term(sumpnz[i, j]))
                    (pntempZ[j]).coeffs[2:order + 1] .= zero((pntempZ[j]).coeffs[1])
                end
            end
            (postNewtonX[j]).coeffs[1] = constant_term(pntempX[j]) * constant_term(c_m2)
            (postNewtonX[j]).coeffs[2:order + 1] .= zero((postNewtonX[j]).coeffs[1])
            (postNewtonY[j]).coeffs[1] = constant_term(pntempY[j]) * constant_term(c_m2)
            (postNewtonY[j]).coeffs[2:order + 1] .= zero((postNewtonY[j]).coeffs[1])
            (postNewtonZ[j]).coeffs[1] = constant_term(pntempZ[j]) * constant_term(c_m2)
            (postNewtonZ[j]).coeffs[2:order + 1] .= zero((postNewtonZ[j]).coeffs[1])
        end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:741 =# Threads.@threads for i = 1:N_ext
            (dq[3 * (N + i) - 2]).coeffs[1] = constant_term(postNewtonX[i]) + constant_term(accX[i])
            (dq[3 * (N + i) - 2]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 2]).coeffs[1])
            (dq[3 * (N + i) - 1]).coeffs[1] = constant_term(postNewtonY[i]) + constant_term(accY[i])
            (dq[3 * (N + i) - 1]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 1]).coeffs[1])
            (dq[3 * (N + i)]).coeffs[1] = constant_term(postNewtonZ[i]) + constant_term(accZ[i])
            (dq[3 * (N + i)]).coeffs[2:order + 1] .= zero((dq[3 * (N + i)]).coeffs[1])
        end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:746 =# Threads.@threads for i = N_ext + 1:N
            (dq[3 * (N + i) - 2]).coeffs[1] = identity(constant_term(postNewtonX[i]))
            (dq[3 * (N + i) - 2]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 2]).coeffs[1])
            (dq[3 * (N + i) - 1]).coeffs[1] = identity(constant_term(postNewtonY[i]))
            (dq[3 * (N + i) - 1]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 1]).coeffs[1])
            (dq[3 * (N + i)]).coeffs[1] = identity(constant_term(postNewtonZ[i]))
            (dq[3 * (N + i)]).coeffs[2:order + 1] .= zero((dq[3 * (N + i)]).coeffs[1])
        end
    tmp3377.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4])
    tmp3377.coeffs[2:order + 1] .= zero(tmp3377.coeffs[1])
    tmp3378.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5])
    tmp3378.coeffs[2:order + 1] .= zero(tmp3378.coeffs[1])
    tmp3379.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6])
    tmp3379.coeffs[2:order + 1] .= zero(tmp3379.coeffs[1])
    tmp3380.coeffs[1] = constant_term(tmp3378) + constant_term(tmp3379)
    tmp3380.coeffs[2:order + 1] .= zero(tmp3380.coeffs[1])
    Iω_x.coeffs[1] = constant_term(tmp3377) + constant_term(tmp3380)
    Iω_x.coeffs[2:order + 1] .= zero(Iω_x.coeffs[1])
    tmp3382.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4])
    tmp3382.coeffs[2:order + 1] .= zero(tmp3382.coeffs[1])
    tmp3383.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5])
    tmp3383.coeffs[2:order + 1] .= zero(tmp3383.coeffs[1])
    tmp3384.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6])
    tmp3384.coeffs[2:order + 1] .= zero(tmp3384.coeffs[1])
    tmp3385.coeffs[1] = constant_term(tmp3383) + constant_term(tmp3384)
    tmp3385.coeffs[2:order + 1] .= zero(tmp3385.coeffs[1])
    Iω_y.coeffs[1] = constant_term(tmp3382) + constant_term(tmp3385)
    Iω_y.coeffs[2:order + 1] .= zero(Iω_y.coeffs[1])
    tmp3387.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4])
    tmp3387.coeffs[2:order + 1] .= zero(tmp3387.coeffs[1])
    tmp3388.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5])
    tmp3388.coeffs[2:order + 1] .= zero(tmp3388.coeffs[1])
    tmp3389.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6])
    tmp3389.coeffs[2:order + 1] .= zero(tmp3389.coeffs[1])
    tmp3390.coeffs[1] = constant_term(tmp3388) + constant_term(tmp3389)
    tmp3390.coeffs[2:order + 1] .= zero(tmp3390.coeffs[1])
    Iω_z.coeffs[1] = constant_term(tmp3387) + constant_term(tmp3390)
    Iω_z.coeffs[2:order + 1] .= zero(Iω_z.coeffs[1])
    tmp3392.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_z)
    tmp3392.coeffs[2:order + 1] .= zero(tmp3392.coeffs[1])
    tmp3393.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_y)
    tmp3393.coeffs[2:order + 1] .= zero(tmp3393.coeffs[1])
    ωxIω_x.coeffs[1] = constant_term(tmp3392) - constant_term(tmp3393)
    ωxIω_x.coeffs[2:order + 1] .= zero(ωxIω_x.coeffs[1])
    tmp3395.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_x)
    tmp3395.coeffs[2:order + 1] .= zero(tmp3395.coeffs[1])
    tmp3396.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_z)
    tmp3396.coeffs[2:order + 1] .= zero(tmp3396.coeffs[1])
    ωxIω_y.coeffs[1] = constant_term(tmp3395) - constant_term(tmp3396)
    ωxIω_y.coeffs[2:order + 1] .= zero(ωxIω_y.coeffs[1])
    tmp3398.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_y)
    tmp3398.coeffs[2:order + 1] .= zero(tmp3398.coeffs[1])
    tmp3399.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_x)
    tmp3399.coeffs[2:order + 1] .= zero(tmp3399.coeffs[1])
    ωxIω_z.coeffs[1] = constant_term(tmp3398) - constant_term(tmp3399)
    ωxIω_z.coeffs[2:order + 1] .= zero(ωxIω_z.coeffs[1])
    tmp3401.coeffs[1] = constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4])
    tmp3401.coeffs[2:order + 1] .= zero(tmp3401.coeffs[1])
    tmp3402.coeffs[1] = constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5])
    tmp3402.coeffs[2:order + 1] .= zero(tmp3402.coeffs[1])
    tmp3403.coeffs[1] = constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6])
    tmp3403.coeffs[2:order + 1] .= zero(tmp3403.coeffs[1])
    tmp3404.coeffs[1] = constant_term(tmp3402) + constant_term(tmp3403)
    tmp3404.coeffs[2:order + 1] .= zero(tmp3404.coeffs[1])
    dIω_x.coeffs[1] = constant_term(tmp3401) + constant_term(tmp3404)
    dIω_x.coeffs[2:order + 1] .= zero(dIω_x.coeffs[1])
    tmp3406.coeffs[1] = constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4])
    tmp3406.coeffs[2:order + 1] .= zero(tmp3406.coeffs[1])
    tmp3407.coeffs[1] = constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5])
    tmp3407.coeffs[2:order + 1] .= zero(tmp3407.coeffs[1])
    tmp3408.coeffs[1] = constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6])
    tmp3408.coeffs[2:order + 1] .= zero(tmp3408.coeffs[1])
    tmp3409.coeffs[1] = constant_term(tmp3407) + constant_term(tmp3408)
    tmp3409.coeffs[2:order + 1] .= zero(tmp3409.coeffs[1])
    dIω_y.coeffs[1] = constant_term(tmp3406) + constant_term(tmp3409)
    dIω_y.coeffs[2:order + 1] .= zero(dIω_y.coeffs[1])
    tmp3411.coeffs[1] = constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4])
    tmp3411.coeffs[2:order + 1] .= zero(tmp3411.coeffs[1])
    tmp3412.coeffs[1] = constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5])
    tmp3412.coeffs[2:order + 1] .= zero(tmp3412.coeffs[1])
    tmp3413.coeffs[1] = constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6])
    tmp3413.coeffs[2:order + 1] .= zero(tmp3413.coeffs[1])
    tmp3414.coeffs[1] = constant_term(tmp3412) + constant_term(tmp3413)
    tmp3414.coeffs[2:order + 1] .= zero(tmp3414.coeffs[1])
    dIω_z.coeffs[1] = constant_term(tmp3411) + constant_term(tmp3414)
    dIω_z.coeffs[2:order + 1] .= zero(dIω_z.coeffs[1])
    er_EM_I_1.coeffs[1] = constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_1.coeffs[2:order + 1] .= zero(er_EM_I_1.coeffs[1])
    er_EM_I_2.coeffs[1] = constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_2.coeffs[2:order + 1] .= zero(er_EM_I_2.coeffs[1])
    er_EM_I_3.coeffs[1] = constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_3.coeffs[2:order + 1] .= zero(er_EM_I_3.coeffs[1])
    p_E_I_1.coeffs[1] = identity(constant_term(RotM[3, 1, ea]))
    p_E_I_1.coeffs[2:order + 1] .= zero(p_E_I_1.coeffs[1])
    p_E_I_2.coeffs[1] = identity(constant_term(RotM[3, 2, ea]))
    p_E_I_2.coeffs[2:order + 1] .= zero(p_E_I_2.coeffs[1])
    p_E_I_3.coeffs[1] = identity(constant_term(RotM[3, 3, ea]))
    p_E_I_3.coeffs[2:order + 1] .= zero(p_E_I_3.coeffs[1])
    tmp3419.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1)
    tmp3419.coeffs[2:order + 1] .= zero(tmp3419.coeffs[1])
    tmp3420.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2)
    tmp3420.coeffs[2:order + 1] .= zero(tmp3420.coeffs[1])
    tmp3421.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3)
    tmp3421.coeffs[2:order + 1] .= zero(tmp3421.coeffs[1])
    tmp3422.coeffs[1] = constant_term(tmp3420) + constant_term(tmp3421)
    tmp3422.coeffs[2:order + 1] .= zero(tmp3422.coeffs[1])
    er_EM_1.coeffs[1] = constant_term(tmp3419) + constant_term(tmp3422)
    er_EM_1.coeffs[2:order + 1] .= zero(er_EM_1.coeffs[1])
    tmp3424.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1)
    tmp3424.coeffs[2:order + 1] .= zero(tmp3424.coeffs[1])
    tmp3425.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2)
    tmp3425.coeffs[2:order + 1] .= zero(tmp3425.coeffs[1])
    tmp3426.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3)
    tmp3426.coeffs[2:order + 1] .= zero(tmp3426.coeffs[1])
    tmp3427.coeffs[1] = constant_term(tmp3425) + constant_term(tmp3426)
    tmp3427.coeffs[2:order + 1] .= zero(tmp3427.coeffs[1])
    er_EM_2.coeffs[1] = constant_term(tmp3424) + constant_term(tmp3427)
    er_EM_2.coeffs[2:order + 1] .= zero(er_EM_2.coeffs[1])
    tmp3429.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1)
    tmp3429.coeffs[2:order + 1] .= zero(tmp3429.coeffs[1])
    tmp3430.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2)
    tmp3430.coeffs[2:order + 1] .= zero(tmp3430.coeffs[1])
    tmp3431.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3)
    tmp3431.coeffs[2:order + 1] .= zero(tmp3431.coeffs[1])
    tmp3432.coeffs[1] = constant_term(tmp3430) + constant_term(tmp3431)
    tmp3432.coeffs[2:order + 1] .= zero(tmp3432.coeffs[1])
    er_EM_3.coeffs[1] = constant_term(tmp3429) + constant_term(tmp3432)
    er_EM_3.coeffs[2:order + 1] .= zero(er_EM_3.coeffs[1])
    tmp3434.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1)
    tmp3434.coeffs[2:order + 1] .= zero(tmp3434.coeffs[1])
    tmp3435.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2)
    tmp3435.coeffs[2:order + 1] .= zero(tmp3435.coeffs[1])
    tmp3436.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3)
    tmp3436.coeffs[2:order + 1] .= zero(tmp3436.coeffs[1])
    tmp3437.coeffs[1] = constant_term(tmp3435) + constant_term(tmp3436)
    tmp3437.coeffs[2:order + 1] .= zero(tmp3437.coeffs[1])
    p_E_1.coeffs[1] = constant_term(tmp3434) + constant_term(tmp3437)
    p_E_1.coeffs[2:order + 1] .= zero(p_E_1.coeffs[1])
    tmp3439.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1)
    tmp3439.coeffs[2:order + 1] .= zero(tmp3439.coeffs[1])
    tmp3440.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2)
    tmp3440.coeffs[2:order + 1] .= zero(tmp3440.coeffs[1])
    tmp3441.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3)
    tmp3441.coeffs[2:order + 1] .= zero(tmp3441.coeffs[1])
    tmp3442.coeffs[1] = constant_term(tmp3440) + constant_term(tmp3441)
    tmp3442.coeffs[2:order + 1] .= zero(tmp3442.coeffs[1])
    p_E_2.coeffs[1] = constant_term(tmp3439) + constant_term(tmp3442)
    p_E_2.coeffs[2:order + 1] .= zero(p_E_2.coeffs[1])
    tmp3444.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1)
    tmp3444.coeffs[2:order + 1] .= zero(tmp3444.coeffs[1])
    tmp3445.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2)
    tmp3445.coeffs[2:order + 1] .= zero(tmp3445.coeffs[1])
    tmp3446.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3)
    tmp3446.coeffs[2:order + 1] .= zero(tmp3446.coeffs[1])
    tmp3447.coeffs[1] = constant_term(tmp3445) + constant_term(tmp3446)
    tmp3447.coeffs[2:order + 1] .= zero(tmp3447.coeffs[1])
    p_E_3.coeffs[1] = constant_term(tmp3444) + constant_term(tmp3447)
    p_E_3.coeffs[2:order + 1] .= zero(p_E_3.coeffs[1])
    tmp3449.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(er_EM_1)
    tmp3449.coeffs[2:order + 1] .= zero(tmp3449.coeffs[1])
    tmp3450.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(er_EM_2)
    tmp3450.coeffs[2:order + 1] .= zero(tmp3450.coeffs[1])
    tmp3451.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(er_EM_3)
    tmp3451.coeffs[2:order + 1] .= zero(tmp3451.coeffs[1])
    tmp3452.coeffs[1] = constant_term(tmp3450) + constant_term(tmp3451)
    tmp3452.coeffs[2:order + 1] .= zero(tmp3452.coeffs[1])
    I_er_EM_1.coeffs[1] = constant_term(tmp3449) + constant_term(tmp3452)
    I_er_EM_1.coeffs[2:order + 1] .= zero(I_er_EM_1.coeffs[1])
    tmp3454.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(er_EM_1)
    tmp3454.coeffs[2:order + 1] .= zero(tmp3454.coeffs[1])
    tmp3455.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(er_EM_2)
    tmp3455.coeffs[2:order + 1] .= zero(tmp3455.coeffs[1])
    tmp3456.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(er_EM_3)
    tmp3456.coeffs[2:order + 1] .= zero(tmp3456.coeffs[1])
    tmp3457.coeffs[1] = constant_term(tmp3455) + constant_term(tmp3456)
    tmp3457.coeffs[2:order + 1] .= zero(tmp3457.coeffs[1])
    I_er_EM_2.coeffs[1] = constant_term(tmp3454) + constant_term(tmp3457)
    I_er_EM_2.coeffs[2:order + 1] .= zero(I_er_EM_2.coeffs[1])
    tmp3459.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(er_EM_1)
    tmp3459.coeffs[2:order + 1] .= zero(tmp3459.coeffs[1])
    tmp3460.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(er_EM_2)
    tmp3460.coeffs[2:order + 1] .= zero(tmp3460.coeffs[1])
    tmp3461.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(er_EM_3)
    tmp3461.coeffs[2:order + 1] .= zero(tmp3461.coeffs[1])
    tmp3462.coeffs[1] = constant_term(tmp3460) + constant_term(tmp3461)
    tmp3462.coeffs[2:order + 1] .= zero(tmp3462.coeffs[1])
    I_er_EM_3.coeffs[1] = constant_term(tmp3459) + constant_term(tmp3462)
    I_er_EM_3.coeffs[2:order + 1] .= zero(I_er_EM_3.coeffs[1])
    tmp3464.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(p_E_1)
    tmp3464.coeffs[2:order + 1] .= zero(tmp3464.coeffs[1])
    tmp3465.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(p_E_2)
    tmp3465.coeffs[2:order + 1] .= zero(tmp3465.coeffs[1])
    tmp3466.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(p_E_3)
    tmp3466.coeffs[2:order + 1] .= zero(tmp3466.coeffs[1])
    tmp3467.coeffs[1] = constant_term(tmp3465) + constant_term(tmp3466)
    tmp3467.coeffs[2:order + 1] .= zero(tmp3467.coeffs[1])
    I_p_E_1.coeffs[1] = constant_term(tmp3464) + constant_term(tmp3467)
    I_p_E_1.coeffs[2:order + 1] .= zero(I_p_E_1.coeffs[1])
    tmp3469.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(p_E_1)
    tmp3469.coeffs[2:order + 1] .= zero(tmp3469.coeffs[1])
    tmp3470.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(p_E_2)
    tmp3470.coeffs[2:order + 1] .= zero(tmp3470.coeffs[1])
    tmp3471.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(p_E_3)
    tmp3471.coeffs[2:order + 1] .= zero(tmp3471.coeffs[1])
    tmp3472.coeffs[1] = constant_term(tmp3470) + constant_term(tmp3471)
    tmp3472.coeffs[2:order + 1] .= zero(tmp3472.coeffs[1])
    I_p_E_2.coeffs[1] = constant_term(tmp3469) + constant_term(tmp3472)
    I_p_E_2.coeffs[2:order + 1] .= zero(I_p_E_2.coeffs[1])
    tmp3474.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(p_E_1)
    tmp3474.coeffs[2:order + 1] .= zero(tmp3474.coeffs[1])
    tmp3475.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(p_E_2)
    tmp3475.coeffs[2:order + 1] .= zero(tmp3475.coeffs[1])
    tmp3476.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(p_E_3)
    tmp3476.coeffs[2:order + 1] .= zero(tmp3476.coeffs[1])
    tmp3477.coeffs[1] = constant_term(tmp3475) + constant_term(tmp3476)
    tmp3477.coeffs[2:order + 1] .= zero(tmp3477.coeffs[1])
    I_p_E_3.coeffs[1] = constant_term(tmp3474) + constant_term(tmp3477)
    I_p_E_3.coeffs[2:order + 1] .= zero(I_p_E_3.coeffs[1])
    tmp3479.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_3)
    tmp3479.coeffs[2:order + 1] .= zero(tmp3479.coeffs[1])
    tmp3480.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_2)
    tmp3480.coeffs[2:order + 1] .= zero(tmp3480.coeffs[1])
    er_EM_cross_I_er_EM_1.coeffs[1] = constant_term(tmp3479) - constant_term(tmp3480)
    er_EM_cross_I_er_EM_1.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_1.coeffs[1])
    tmp3482.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_1)
    tmp3482.coeffs[2:order + 1] .= zero(tmp3482.coeffs[1])
    tmp3483.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_3)
    tmp3483.coeffs[2:order + 1] .= zero(tmp3483.coeffs[1])
    er_EM_cross_I_er_EM_2.coeffs[1] = constant_term(tmp3482) - constant_term(tmp3483)
    er_EM_cross_I_er_EM_2.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_2.coeffs[1])
    tmp3485.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_2)
    tmp3485.coeffs[2:order + 1] .= zero(tmp3485.coeffs[1])
    tmp3486.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_1)
    tmp3486.coeffs[2:order + 1] .= zero(tmp3486.coeffs[1])
    er_EM_cross_I_er_EM_3.coeffs[1] = constant_term(tmp3485) - constant_term(tmp3486)
    er_EM_cross_I_er_EM_3.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_3.coeffs[1])
    tmp3488.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_3)
    tmp3488.coeffs[2:order + 1] .= zero(tmp3488.coeffs[1])
    tmp3489.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_2)
    tmp3489.coeffs[2:order + 1] .= zero(tmp3489.coeffs[1])
    er_EM_cross_I_p_E_1.coeffs[1] = constant_term(tmp3488) - constant_term(tmp3489)
    er_EM_cross_I_p_E_1.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_1.coeffs[1])
    tmp3491.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_1)
    tmp3491.coeffs[2:order + 1] .= zero(tmp3491.coeffs[1])
    tmp3492.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_3)
    tmp3492.coeffs[2:order + 1] .= zero(tmp3492.coeffs[1])
    er_EM_cross_I_p_E_2.coeffs[1] = constant_term(tmp3491) - constant_term(tmp3492)
    er_EM_cross_I_p_E_2.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_2.coeffs[1])
    tmp3494.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_2)
    tmp3494.coeffs[2:order + 1] .= zero(tmp3494.coeffs[1])
    tmp3495.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_1)
    tmp3495.coeffs[2:order + 1] .= zero(tmp3495.coeffs[1])
    er_EM_cross_I_p_E_3.coeffs[1] = constant_term(tmp3494) - constant_term(tmp3495)
    er_EM_cross_I_p_E_3.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_3.coeffs[1])
    tmp3497.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_3)
    tmp3497.coeffs[2:order + 1] .= zero(tmp3497.coeffs[1])
    tmp3498.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_2)
    tmp3498.coeffs[2:order + 1] .= zero(tmp3498.coeffs[1])
    p_E_cross_I_er_EM_1.coeffs[1] = constant_term(tmp3497) - constant_term(tmp3498)
    p_E_cross_I_er_EM_1.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_1.coeffs[1])
    tmp3500.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_1)
    tmp3500.coeffs[2:order + 1] .= zero(tmp3500.coeffs[1])
    tmp3501.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_3)
    tmp3501.coeffs[2:order + 1] .= zero(tmp3501.coeffs[1])
    p_E_cross_I_er_EM_2.coeffs[1] = constant_term(tmp3500) - constant_term(tmp3501)
    p_E_cross_I_er_EM_2.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_2.coeffs[1])
    tmp3503.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_2)
    tmp3503.coeffs[2:order + 1] .= zero(tmp3503.coeffs[1])
    tmp3504.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_1)
    tmp3504.coeffs[2:order + 1] .= zero(tmp3504.coeffs[1])
    p_E_cross_I_er_EM_3.coeffs[1] = constant_term(tmp3503) - constant_term(tmp3504)
    p_E_cross_I_er_EM_3.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_3.coeffs[1])
    tmp3506.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_3)
    tmp3506.coeffs[2:order + 1] .= zero(tmp3506.coeffs[1])
    tmp3507.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_2)
    tmp3507.coeffs[2:order + 1] .= zero(tmp3507.coeffs[1])
    p_E_cross_I_p_E_1.coeffs[1] = constant_term(tmp3506) - constant_term(tmp3507)
    p_E_cross_I_p_E_1.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_1.coeffs[1])
    tmp3509.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_1)
    tmp3509.coeffs[2:order + 1] .= zero(tmp3509.coeffs[1])
    tmp3510.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_3)
    tmp3510.coeffs[2:order + 1] .= zero(tmp3510.coeffs[1])
    p_E_cross_I_p_E_2.coeffs[1] = constant_term(tmp3509) - constant_term(tmp3510)
    p_E_cross_I_p_E_2.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_2.coeffs[1])
    tmp3512.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_2)
    tmp3512.coeffs[2:order + 1] .= zero(tmp3512.coeffs[1])
    tmp3513.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_1)
    tmp3513.coeffs[2:order + 1] .= zero(tmp3513.coeffs[1])
    p_E_cross_I_p_E_3.coeffs[1] = constant_term(tmp3512) - constant_term(tmp3513)
    p_E_cross_I_p_E_3.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_3.coeffs[1])
    tmp3517.coeffs[1] = constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2))
    tmp3517.coeffs[2:order + 1] .= zero(tmp3517.coeffs[1])
    tmp3518.coeffs[1] = constant_term(7) * constant_term(tmp3517)
    tmp3518.coeffs[2:order + 1] .= zero(tmp3518.coeffs[1])
    one_minus_7sin2ϕEM.coeffs[1] = constant_term(one_t) - constant_term(tmp3518)
    one_minus_7sin2ϕEM.coeffs[2:order + 1] .= zero(one_minus_7sin2ϕEM.coeffs[1])
    two_sinϕEM.coeffs[1] = constant_term(2) * constant_term(sin_ϕ[ea, mo])
    two_sinϕEM.coeffs[2:order + 1] .= zero(two_sinϕEM.coeffs[1])
    tmp3523.coeffs[1] = constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5))
    tmp3523.coeffs[2:order + 1] .= zero(tmp3523.coeffs[1])
    N_MfigM_figE_factor_div_rEMp5.coeffs[1] = constant_term(N_MfigM_figE_factor) / constant_term(tmp3523)
    N_MfigM_figE_factor_div_rEMp5.coeffs[2:order + 1] .= zero(N_MfigM_figE_factor_div_rEMp5.coeffs[1])
    tmp3525.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1)
    tmp3525.coeffs[2:order + 1] .= zero(tmp3525.coeffs[1])
    tmp3526.coeffs[1] = constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1)
    tmp3526.coeffs[2:order + 1] .= zero(tmp3526.coeffs[1])
    tmp3527.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp3526)
    tmp3527.coeffs[2:order + 1] .= zero(tmp3527.coeffs[1])
    tmp3528.coeffs[1] = constant_term(tmp3525) + constant_term(tmp3527)
    tmp3528.coeffs[2:order + 1] .= zero(tmp3528.coeffs[1])
    tmp3530.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_1)
    tmp3530.coeffs[2:order + 1] .= zero(tmp3530.coeffs[1])
    tmp3531.coeffs[1] = constant_term(tmp3528) - constant_term(tmp3530)
    tmp3531.coeffs[2:order + 1] .= zero(tmp3531.coeffs[1])
    N_MfigM_figE_1.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3531)
    N_MfigM_figE_1.coeffs[2:order + 1] .= zero(N_MfigM_figE_1.coeffs[1])
    tmp3533.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2)
    tmp3533.coeffs[2:order + 1] .= zero(tmp3533.coeffs[1])
    tmp3534.coeffs[1] = constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2)
    tmp3534.coeffs[2:order + 1] .= zero(tmp3534.coeffs[1])
    tmp3535.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp3534)
    tmp3535.coeffs[2:order + 1] .= zero(tmp3535.coeffs[1])
    tmp3536.coeffs[1] = constant_term(tmp3533) + constant_term(tmp3535)
    tmp3536.coeffs[2:order + 1] .= zero(tmp3536.coeffs[1])
    tmp3538.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_2)
    tmp3538.coeffs[2:order + 1] .= zero(tmp3538.coeffs[1])
    tmp3539.coeffs[1] = constant_term(tmp3536) - constant_term(tmp3538)
    tmp3539.coeffs[2:order + 1] .= zero(tmp3539.coeffs[1])
    N_MfigM_figE_2.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3539)
    N_MfigM_figE_2.coeffs[2:order + 1] .= zero(N_MfigM_figE_2.coeffs[1])
    tmp3541.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3)
    tmp3541.coeffs[2:order + 1] .= zero(tmp3541.coeffs[1])
    tmp3542.coeffs[1] = constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3)
    tmp3542.coeffs[2:order + 1] .= zero(tmp3542.coeffs[1])
    tmp3543.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp3542)
    tmp3543.coeffs[2:order + 1] .= zero(tmp3543.coeffs[1])
    tmp3544.coeffs[1] = constant_term(tmp3541) + constant_term(tmp3543)
    tmp3544.coeffs[2:order + 1] .= zero(tmp3544.coeffs[1])
    tmp3546.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_3)
    tmp3546.coeffs[2:order + 1] .= zero(tmp3546.coeffs[1])
    tmp3547.coeffs[1] = constant_term(tmp3544) - constant_term(tmp3546)
    tmp3547.coeffs[2:order + 1] .= zero(tmp3547.coeffs[1])
    N_MfigM_figE_3.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3547)
    N_MfigM_figE_3.coeffs[2:order + 1] .= zero(N_MfigM_figE_3.coeffs[1])
    tmp3549.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1])
    tmp3549.coeffs[2:order + 1] .= zero(tmp3549.coeffs[1])
    tmp3550.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2])
    tmp3550.coeffs[2:order + 1] .= zero(tmp3550.coeffs[1])
    tmp3551.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3])
    tmp3551.coeffs[2:order + 1] .= zero(tmp3551.coeffs[1])
    tmp3552.coeffs[1] = constant_term(tmp3550) + constant_term(tmp3551)
    tmp3552.coeffs[2:order + 1] .= zero(tmp3552.coeffs[1])
    N_1_LMF.coeffs[1] = constant_term(tmp3549) + constant_term(tmp3552)
    N_1_LMF.coeffs[2:order + 1] .= zero(N_1_LMF.coeffs[1])
    tmp3554.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1])
    tmp3554.coeffs[2:order + 1] .= zero(tmp3554.coeffs[1])
    tmp3555.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2])
    tmp3555.coeffs[2:order + 1] .= zero(tmp3555.coeffs[1])
    tmp3556.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3])
    tmp3556.coeffs[2:order + 1] .= zero(tmp3556.coeffs[1])
    tmp3557.coeffs[1] = constant_term(tmp3555) + constant_term(tmp3556)
    tmp3557.coeffs[2:order + 1] .= zero(tmp3557.coeffs[1])
    N_2_LMF.coeffs[1] = constant_term(tmp3554) + constant_term(tmp3557)
    N_2_LMF.coeffs[2:order + 1] .= zero(N_2_LMF.coeffs[1])
    tmp3559.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1])
    tmp3559.coeffs[2:order + 1] .= zero(tmp3559.coeffs[1])
    tmp3560.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2])
    tmp3560.coeffs[2:order + 1] .= zero(tmp3560.coeffs[1])
    tmp3561.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3])
    tmp3561.coeffs[2:order + 1] .= zero(tmp3561.coeffs[1])
    tmp3562.coeffs[1] = constant_term(tmp3560) + constant_term(tmp3561)
    tmp3562.coeffs[2:order + 1] .= zero(tmp3562.coeffs[1])
    N_3_LMF.coeffs[1] = constant_term(tmp3559) + constant_term(tmp3562)
    N_3_LMF.coeffs[2:order + 1] .= zero(N_3_LMF.coeffs[1])
    tmp3564.coeffs[1] = constant_term(q[6N + 10]) - constant_term(q[6N + 4])
    tmp3564.coeffs[2:order + 1] .= zero(tmp3564.coeffs[1])
    tmp3565.coeffs[1] = constant_term(k_ν) * constant_term(tmp3564)
    tmp3565.coeffs[2:order + 1] .= zero(tmp3565.coeffs[1])
    tmp3566.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    tmp3566.coeffs[2:order + 1] .= zero(tmp3566.coeffs[1])
    tmp3567.coeffs[1] = constant_term(tmp3566) * constant_term(q[6N + 11])
    tmp3567.coeffs[2:order + 1] .= zero(tmp3567.coeffs[1])
    N_cmb_1.coeffs[1] = constant_term(tmp3565) - constant_term(tmp3567)
    N_cmb_1.coeffs[2:order + 1] .= zero(N_cmb_1.coeffs[1])
    tmp3569.coeffs[1] = constant_term(q[6N + 11]) - constant_term(q[6N + 5])
    tmp3569.coeffs[2:order + 1] .= zero(tmp3569.coeffs[1])
    tmp3570.coeffs[1] = constant_term(k_ν) * constant_term(tmp3569)
    tmp3570.coeffs[2:order + 1] .= zero(tmp3570.coeffs[1])
    tmp3571.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    tmp3571.coeffs[2:order + 1] .= zero(tmp3571.coeffs[1])
    tmp3572.coeffs[1] = constant_term(tmp3571) * constant_term(q[6N + 10])
    tmp3572.coeffs[2:order + 1] .= zero(tmp3572.coeffs[1])
    N_cmb_2.coeffs[1] = constant_term(tmp3570) + constant_term(tmp3572)
    N_cmb_2.coeffs[2:order + 1] .= zero(N_cmb_2.coeffs[1])
    tmp3574.coeffs[1] = constant_term(q[6N + 12]) - constant_term(q[6N + 6])
    tmp3574.coeffs[2:order + 1] .= zero(tmp3574.coeffs[1])
    N_cmb_3.coeffs[1] = constant_term(k_ν) * constant_term(tmp3574)
    N_cmb_3.coeffs[2:order + 1] .= zero(N_cmb_3.coeffs[1])
    tmp3576.coeffs[1] = constant_term(μ[mo]) * constant_term(N_1_LMF)
    tmp3576.coeffs[2:order + 1] .= zero(tmp3576.coeffs[1])
    tmp3577.coeffs[1] = constant_term(N_MfigM_figE_1) + constant_term(tmp3576)
    tmp3577.coeffs[2:order + 1] .= zero(tmp3577.coeffs[1])
    tmp3578.coeffs[1] = constant_term(tmp3577) + constant_term(N_cmb_1)
    tmp3578.coeffs[2:order + 1] .= zero(tmp3578.coeffs[1])
    tmp3579.coeffs[1] = constant_term(dIω_x) + constant_term(ωxIω_x)
    tmp3579.coeffs[2:order + 1] .= zero(tmp3579.coeffs[1])
    I_dω_1.coeffs[1] = constant_term(tmp3578) - constant_term(tmp3579)
    I_dω_1.coeffs[2:order + 1] .= zero(I_dω_1.coeffs[1])
    tmp3581.coeffs[1] = constant_term(μ[mo]) * constant_term(N_2_LMF)
    tmp3581.coeffs[2:order + 1] .= zero(tmp3581.coeffs[1])
    tmp3582.coeffs[1] = constant_term(N_MfigM_figE_2) + constant_term(tmp3581)
    tmp3582.coeffs[2:order + 1] .= zero(tmp3582.coeffs[1])
    tmp3583.coeffs[1] = constant_term(tmp3582) + constant_term(N_cmb_2)
    tmp3583.coeffs[2:order + 1] .= zero(tmp3583.coeffs[1])
    tmp3584.coeffs[1] = constant_term(dIω_y) + constant_term(ωxIω_y)
    tmp3584.coeffs[2:order + 1] .= zero(tmp3584.coeffs[1])
    I_dω_2.coeffs[1] = constant_term(tmp3583) - constant_term(tmp3584)
    I_dω_2.coeffs[2:order + 1] .= zero(I_dω_2.coeffs[1])
    tmp3586.coeffs[1] = constant_term(μ[mo]) * constant_term(N_3_LMF)
    tmp3586.coeffs[2:order + 1] .= zero(tmp3586.coeffs[1])
    tmp3587.coeffs[1] = constant_term(N_MfigM_figE_3) + constant_term(tmp3586)
    tmp3587.coeffs[2:order + 1] .= zero(tmp3587.coeffs[1])
    tmp3588.coeffs[1] = constant_term(tmp3587) + constant_term(N_cmb_3)
    tmp3588.coeffs[2:order + 1] .= zero(tmp3588.coeffs[1])
    tmp3589.coeffs[1] = constant_term(dIω_z) + constant_term(ωxIω_z)
    tmp3589.coeffs[2:order + 1] .= zero(tmp3589.coeffs[1])
    I_dω_3.coeffs[1] = constant_term(tmp3588) - constant_term(tmp3589)
    I_dω_3.coeffs[2:order + 1] .= zero(I_dω_3.coeffs[1])
    Ic_ωc_1.coeffs[1] = constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10])
    Ic_ωc_1.coeffs[2:order + 1] .= zero(Ic_ωc_1.coeffs[1])
    Ic_ωc_2.coeffs[1] = constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11])
    Ic_ωc_2.coeffs[2:order + 1] .= zero(Ic_ωc_2.coeffs[1])
    Ic_ωc_3.coeffs[1] = constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12])
    Ic_ωc_3.coeffs[2:order + 1] .= zero(Ic_ωc_3.coeffs[1])
    tmp3594.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_2)
    tmp3594.coeffs[2:order + 1] .= zero(tmp3594.coeffs[1])
    tmp3595.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_3)
    tmp3595.coeffs[2:order + 1] .= zero(tmp3595.coeffs[1])
    m_ωm_x_Icωc_1.coeffs[1] = constant_term(tmp3594) - constant_term(tmp3595)
    m_ωm_x_Icωc_1.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_1.coeffs[1])
    tmp3597.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_3)
    tmp3597.coeffs[2:order + 1] .= zero(tmp3597.coeffs[1])
    tmp3598.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_1)
    tmp3598.coeffs[2:order + 1] .= zero(tmp3598.coeffs[1])
    m_ωm_x_Icωc_2.coeffs[1] = constant_term(tmp3597) - constant_term(tmp3598)
    m_ωm_x_Icωc_2.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_2.coeffs[1])
    tmp3600.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_1)
    tmp3600.coeffs[2:order + 1] .= zero(tmp3600.coeffs[1])
    tmp3601.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_2)
    tmp3601.coeffs[2:order + 1] .= zero(tmp3601.coeffs[1])
    m_ωm_x_Icωc_3.coeffs[1] = constant_term(tmp3600) - constant_term(tmp3601)
    m_ωm_x_Icωc_3.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_3.coeffs[1])
    Ic_dωc_1.coeffs[1] = constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1)
    Ic_dωc_1.coeffs[2:order + 1] .= zero(Ic_dωc_1.coeffs[1])
    Ic_dωc_2.coeffs[1] = constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2)
    Ic_dωc_2.coeffs[2:order + 1] .= zero(Ic_dωc_2.coeffs[1])
    Ic_dωc_3.coeffs[1] = constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3)
    Ic_dωc_3.coeffs[2:order + 1] .= zero(Ic_dωc_3.coeffs[1])
    tmp3606.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp3606.coeffs[2:order + 1] .= zero(tmp3606.coeffs[1])
    tmp3686.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp3686.coeffs[2:order + 1] .= zero(tmp3686.coeffs[1])
    tmp3607.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp3606)
    tmp3607.coeffs[2:order + 1] .= zero(tmp3607.coeffs[1])
    tmp3608.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp3608.coeffs[2:order + 1] .= zero(tmp3608.coeffs[1])
    tmp3687.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp3687.coeffs[2:order + 1] .= zero(tmp3687.coeffs[1])
    tmp3609.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp3608)
    tmp3609.coeffs[2:order + 1] .= zero(tmp3609.coeffs[1])
    tmp3610.coeffs[1] = constant_term(tmp3607) + constant_term(tmp3609)
    tmp3610.coeffs[2:order + 1] .= zero(tmp3610.coeffs[1])
    tmp3611.coeffs[1] = sin(constant_term(q[6N + 2]))
    tmp3611.coeffs[2:order + 1] .= zero(tmp3611.coeffs[1])
    tmp3688.coeffs[1] = cos(constant_term(q[6N + 2]))
    tmp3688.coeffs[2:order + 1] .= zero(tmp3688.coeffs[1])
    (dq[6N + 1]).coeffs[1] = constant_term(tmp3610) / constant_term(tmp3611)
    (dq[6N + 1]).coeffs[2:order + 1] .= zero((dq[6N + 1]).coeffs[1])
    tmp3613.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp3613.coeffs[2:order + 1] .= zero(tmp3613.coeffs[1])
    tmp3689.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp3689.coeffs[2:order + 1] .= zero(tmp3689.coeffs[1])
    tmp3614.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp3613)
    tmp3614.coeffs[2:order + 1] .= zero(tmp3614.coeffs[1])
    tmp3615.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp3615.coeffs[2:order + 1] .= zero(tmp3615.coeffs[1])
    tmp3690.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp3690.coeffs[2:order + 1] .= zero(tmp3690.coeffs[1])
    tmp3616.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp3615)
    tmp3616.coeffs[2:order + 1] .= zero(tmp3616.coeffs[1])
    (dq[6N + 2]).coeffs[1] = constant_term(tmp3614) - constant_term(tmp3616)
    (dq[6N + 2]).coeffs[2:order + 1] .= zero((dq[6N + 2]).coeffs[1])
    tmp3618.coeffs[1] = cos(constant_term(q[6N + 2]))
    tmp3618.coeffs[2:order + 1] .= zero(tmp3618.coeffs[1])
    tmp3691.coeffs[1] = sin(constant_term(q[6N + 2]))
    tmp3691.coeffs[2:order + 1] .= zero(tmp3691.coeffs[1])
    tmp3619.coeffs[1] = constant_term(dq[6N + 1]) * constant_term(tmp3618)
    tmp3619.coeffs[2:order + 1] .= zero(tmp3619.coeffs[1])
    (dq[6N + 3]).coeffs[1] = constant_term(q[6N + 6]) - constant_term(tmp3619)
    (dq[6N + 3]).coeffs[2:order + 1] .= zero((dq[6N + 3]).coeffs[1])
    tmp3621.coeffs[1] = constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1)
    tmp3621.coeffs[2:order + 1] .= zero(tmp3621.coeffs[1])
    tmp3622.coeffs[1] = constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2)
    tmp3622.coeffs[2:order + 1] .= zero(tmp3622.coeffs[1])
    tmp3623.coeffs[1] = constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3)
    tmp3623.coeffs[2:order + 1] .= zero(tmp3623.coeffs[1])
    tmp3624.coeffs[1] = constant_term(tmp3622) + constant_term(tmp3623)
    tmp3624.coeffs[2:order + 1] .= zero(tmp3624.coeffs[1])
    (dq[6N + 4]).coeffs[1] = constant_term(tmp3621) + constant_term(tmp3624)
    (dq[6N + 4]).coeffs[2:order + 1] .= zero((dq[6N + 4]).coeffs[1])
    tmp3626.coeffs[1] = constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1)
    tmp3626.coeffs[2:order + 1] .= zero(tmp3626.coeffs[1])
    tmp3627.coeffs[1] = constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2)
    tmp3627.coeffs[2:order + 1] .= zero(tmp3627.coeffs[1])
    tmp3628.coeffs[1] = constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3)
    tmp3628.coeffs[2:order + 1] .= zero(tmp3628.coeffs[1])
    tmp3629.coeffs[1] = constant_term(tmp3627) + constant_term(tmp3628)
    tmp3629.coeffs[2:order + 1] .= zero(tmp3629.coeffs[1])
    (dq[6N + 5]).coeffs[1] = constant_term(tmp3626) + constant_term(tmp3629)
    (dq[6N + 5]).coeffs[2:order + 1] .= zero((dq[6N + 5]).coeffs[1])
    tmp3631.coeffs[1] = constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1)
    tmp3631.coeffs[2:order + 1] .= zero(tmp3631.coeffs[1])
    tmp3632.coeffs[1] = constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2)
    tmp3632.coeffs[2:order + 1] .= zero(tmp3632.coeffs[1])
    tmp3633.coeffs[1] = constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3)
    tmp3633.coeffs[2:order + 1] .= zero(tmp3633.coeffs[1])
    tmp3634.coeffs[1] = constant_term(tmp3632) + constant_term(tmp3633)
    tmp3634.coeffs[2:order + 1] .= zero(tmp3634.coeffs[1])
    (dq[6N + 6]).coeffs[1] = constant_term(tmp3631) + constant_term(tmp3634)
    (dq[6N + 6]).coeffs[2:order + 1] .= zero((dq[6N + 6]).coeffs[1])
    tmp3636.coeffs[1] = sin(constant_term(q[6N + 8]))
    tmp3636.coeffs[2:order + 1] .= zero(tmp3636.coeffs[1])
    tmp3692.coeffs[1] = cos(constant_term(q[6N + 8]))
    tmp3692.coeffs[2:order + 1] .= zero(tmp3692.coeffs[1])
    tmp3637.coeffs[1] = constant_term(ω_c_CE_2) / constant_term(tmp3636)
    tmp3637.coeffs[2:order + 1] .= zero(tmp3637.coeffs[1])
    (dq[6N + 9]).coeffs[1] = -(constant_term(tmp3637))
    (dq[6N + 9]).coeffs[2:order + 1] .= zero((dq[6N + 9]).coeffs[1])
    tmp3639.coeffs[1] = cos(constant_term(q[6N + 8]))
    tmp3639.coeffs[2:order + 1] .= zero(tmp3639.coeffs[1])
    tmp3693.coeffs[1] = sin(constant_term(q[6N + 8]))
    tmp3693.coeffs[2:order + 1] .= zero(tmp3693.coeffs[1])
    tmp3640.coeffs[1] = constant_term(dq[6N + 9]) * constant_term(tmp3639)
    tmp3640.coeffs[2:order + 1] .= zero(tmp3640.coeffs[1])
    (dq[6N + 7]).coeffs[1] = constant_term(ω_c_CE_3) - constant_term(tmp3640)
    (dq[6N + 7]).coeffs[2:order + 1] .= zero((dq[6N + 7]).coeffs[1])
    (dq[6N + 8]).coeffs[1] = identity(constant_term(ω_c_CE_1))
    (dq[6N + 8]).coeffs[2:order + 1] .= zero((dq[6N + 8]).coeffs[1])
    (dq[6N + 10]).coeffs[1] = constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1)
    (dq[6N + 10]).coeffs[2:order + 1] .= zero((dq[6N + 10]).coeffs[1])
    (dq[6N + 11]).coeffs[1] = constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2)
    (dq[6N + 11]).coeffs[2:order + 1] .= zero((dq[6N + 11]).coeffs[1])
    (dq[6N + 12]).coeffs[1] = constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3)
    (dq[6N + 12]).coeffs[2:order + 1] .= zero((dq[6N + 12]).coeffs[1])
    (dq[6N + 13]).coeffs[1] = identity(constant_term(zero_q_1))
    (dq[6N + 13]).coeffs[2:order + 1] .= zero((dq[6N + 13]).coeffs[1])
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp3645, tmp2911, ϕ_m, ord)
        TaylorSeries.sincos!(tmp3646, tmp2912, ψ_m, ord)
        TaylorSeries.mul!(tmp2913, tmp2911, tmp2912, ord)
        TaylorSeries.sincos!(tmp3647, tmp2914, θ_m, ord)
        TaylorSeries.sincos!(tmp2915, tmp3648, ϕ_m, ord)
        TaylorSeries.mul!(tmp2916, tmp2914, tmp2915, ord)
        TaylorSeries.sincos!(tmp2917, tmp3649, ψ_m, ord)
        TaylorSeries.mul!(tmp2918, tmp2916, tmp2917, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp2913, tmp2918, ord)
        TaylorSeries.sincos!(tmp3650, tmp2920, θ_m, ord)
        TaylorSeries.subst!(tmp2921, tmp2920, ord)
        TaylorSeries.sincos!(tmp3651, tmp2922, ψ_m, ord)
        TaylorSeries.mul!(tmp2923, tmp2921, tmp2922, ord)
        TaylorSeries.sincos!(tmp2924, tmp3652, ϕ_m, ord)
        TaylorSeries.mul!(tmp2925, tmp2923, tmp2924, ord)
        TaylorSeries.sincos!(tmp3653, tmp2926, ϕ_m, ord)
        TaylorSeries.sincos!(tmp2927, tmp3654, ψ_m, ord)
        TaylorSeries.mul!(tmp2928, tmp2926, tmp2927, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp2925, tmp2928, ord)
        TaylorSeries.sincos!(tmp2930, tmp3655, θ_m, ord)
        TaylorSeries.sincos!(tmp2931, tmp3656, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp2930, tmp2931, ord)
        TaylorSeries.sincos!(tmp3657, tmp2933, ψ_m, ord)
        TaylorSeries.sincos!(tmp2934, tmp3658, ϕ_m, ord)
        TaylorSeries.mul!(tmp2935, tmp2933, tmp2934, ord)
        TaylorSeries.sincos!(tmp3659, tmp2936, θ_m, ord)
        TaylorSeries.sincos!(tmp3660, tmp2937, ϕ_m, ord)
        TaylorSeries.mul!(tmp2938, tmp2936, tmp2937, ord)
        TaylorSeries.sincos!(tmp2939, tmp3661, ψ_m, ord)
        TaylorSeries.mul!(tmp2940, tmp2938, tmp2939, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp2935, tmp2940, ord)
        TaylorSeries.sincos!(tmp3662, tmp2942, θ_m, ord)
        TaylorSeries.sincos!(tmp3663, tmp2943, ϕ_m, ord)
        TaylorSeries.mul!(tmp2944, tmp2942, tmp2943, ord)
        TaylorSeries.sincos!(tmp3664, tmp2945, ψ_m, ord)
        TaylorSeries.mul!(tmp2946, tmp2944, tmp2945, ord)
        TaylorSeries.sincos!(tmp2947, tmp3665, ϕ_m, ord)
        TaylorSeries.sincos!(tmp2948, tmp3666, ψ_m, ord)
        TaylorSeries.mul!(tmp2949, tmp2947, tmp2948, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp2946, tmp2949, ord)
        TaylorSeries.sincos!(tmp3667, tmp2951, ϕ_m, ord)
        TaylorSeries.subst!(tmp2952, tmp2951, ord)
        TaylorSeries.sincos!(tmp2953, tmp3668, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp2952, tmp2953, ord)
        TaylorSeries.sincos!(tmp2955, tmp3669, θ_m, ord)
        TaylorSeries.sincos!(tmp2956, tmp3670, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp2955, tmp2956, ord)
        TaylorSeries.sincos!(tmp3671, tmp2958, ψ_m, ord)
        TaylorSeries.sincos!(tmp2959, tmp3672, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp2958, tmp2959, ord)
        TaylorSeries.sincos!(tmp3673, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp3674, tmp2962, ϕ_c, ord)
        TaylorSeries.mul!(tmp2963, RotM[1, 1, mo], tmp2962, ord)
        TaylorSeries.sincos!(tmp2964, tmp3675, ϕ_c, ord)
        TaylorSeries.mul!(tmp2965, RotM[1, 2, mo], tmp2964, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp2963, tmp2965, ord)
        TaylorSeries.subst!(tmp2967, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp2968, tmp3676, ϕ_c, ord)
        TaylorSeries.mul!(tmp2969, tmp2967, tmp2968, ord)
        TaylorSeries.sincos!(tmp3677, tmp2970, ϕ_c, ord)
        TaylorSeries.mul!(tmp2971, RotM[1, 2, mo], tmp2970, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp2969, tmp2971, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp3678, tmp2973, ϕ_c, ord)
        TaylorSeries.mul!(tmp2974, RotM[2, 1, mo], tmp2973, ord)
        TaylorSeries.sincos!(tmp2975, tmp3679, ϕ_c, ord)
        TaylorSeries.mul!(tmp2976, RotM[2, 2, mo], tmp2975, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp2974, tmp2976, ord)
        TaylorSeries.subst!(tmp2978, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp2979, tmp3680, ϕ_c, ord)
        TaylorSeries.mul!(tmp2980, tmp2978, tmp2979, ord)
        TaylorSeries.sincos!(tmp3681, tmp2981, ϕ_c, ord)
        TaylorSeries.mul!(tmp2982, RotM[2, 2, mo], tmp2981, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp2980, tmp2982, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp3682, tmp2984, ϕ_c, ord)
        TaylorSeries.mul!(tmp2985, RotM[3, 1, mo], tmp2984, ord)
        TaylorSeries.sincos!(tmp2986, tmp3683, ϕ_c, ord)
        TaylorSeries.mul!(tmp2987, RotM[3, 2, mo], tmp2986, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp2985, tmp2987, ord)
        TaylorSeries.subst!(tmp2989, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp2990, tmp3684, ϕ_c, ord)
        TaylorSeries.mul!(tmp2991, tmp2989, tmp2990, ord)
        TaylorSeries.sincos!(tmp3685, tmp2992, ϕ_c, ord)
        TaylorSeries.mul!(tmp2993, RotM[3, 2, mo], tmp2992, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp2991, tmp2993, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp2995, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp2996, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp2997, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp2998, tmp2996, tmp2997, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp2995, tmp2998, ord)
        TaylorSeries.mul!(tmp3000, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp3001, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp3002, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp3003, tmp3001, tmp3002, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp3000, tmp3003, ord)
        TaylorSeries.mul!(tmp3005, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp3006, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp3007, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp3008, tmp3006, tmp3007, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp3005, tmp3008, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:307 =# Threads.@threads for j = 1:N
                TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
                TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
                TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
                TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
            end
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:319 =# Threads.@threads for j = 1:N_ext
                TaylorSeries.identity!(accX[j], zero_q_1, ord)
                TaylorSeries.identity!(accY[j], zero_q_1, ord)
                TaylorSeries.identity!(accZ[j], zero_q_1, ord)
            end
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:325 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                        TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                        TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                        TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.mul!(tmp3017[3j - 2], 4, dq[3j - 2], ord)
                        TaylorSeries.mul!(tmp3019[3i - 2], 3, dq[3i - 2], ord)
                        TaylorSeries.subst!(_4U_m_3X[i, j], tmp3017[3j - 2], tmp3019[3i - 2], ord)
                        TaylorSeries.mul!(tmp3022[3j - 1], 4, dq[3j - 1], ord)
                        TaylorSeries.mul!(tmp3024[3i - 1], 3, dq[3i - 1], ord)
                        TaylorSeries.subst!(_4V_m_3Y[i, j], tmp3022[3j - 1], tmp3024[3i - 1], ord)
                        TaylorSeries.mul!(tmp3027[3j], 4, dq[3j], ord)
                        TaylorSeries.mul!(tmp3029[3i], 3, dq[3i], ord)
                        TaylorSeries.subst!(_4W_m_3Z[i, j], tmp3027[3j], tmp3029[3i], ord)
                        TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                        TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                        TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                        TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.add!(tmp3037[i, j], UU[i, j], VV[i, j], ord)
                        TaylorSeries.add!(vi_dot_vj[i, j], tmp3037[i, j], WW[i, j], ord)
                        TaylorSeries.pow!(tmp3040[i, j], X[i, j], 2, ord)
                        TaylorSeries.pow!(tmp3042[i, j], Y[i, j], 2, ord)
                        TaylorSeries.add!(tmp3043[i, j], tmp3040[i, j], tmp3042[i, j], ord)
                        TaylorSeries.pow!(tmp3045[i, j], Z[i, j], 2, ord)
                        TaylorSeries.add!(r_p2[i, j], tmp3043[i, j], tmp3045[i, j], ord)
                        TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                        TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], 1.5, ord)
                        TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], 3.5, ord)
                        TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                        TaylorSeries.add!(tmp3053[i, j], pn2x[i, j], pn2y[i, j], ord)
                        TaylorSeries.add!(tmp3054[i, j], tmp3053[i, j], pn2z[i, j], ord)
                        TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp3054[i, j], ord)
                        TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                        TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                        TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                        TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                        TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                        TaylorSeries.mul!(tmp3065[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp3065[i, j], ord)
                        TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                        TaylorSeries.mul!(tmp3067[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp3067[i, j], ord)
                        TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                        TaylorSeries.mul!(tmp3069[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp3069[i, j], ord)
                        TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                        TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                        TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                    end
                end
                TaylorSeries.pow!(tmp3073[3j - 2], dq[3j - 2], 2, ord)
                TaylorSeries.pow!(tmp3075[3j - 1], dq[3j - 1], 2, ord)
                TaylorSeries.add!(tmp3076[3j - 2], tmp3073[3j - 2], tmp3075[3j - 1], ord)
                TaylorSeries.pow!(tmp3078[3j], dq[3j], 2, ord)
                TaylorSeries.add!(v2[j], tmp3076[3j - 2], tmp3078[3j], ord)
            end
        TaylorSeries.add!(tmp3080, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp3082, tmp3080, 2, ord)
        TaylorSeries.subst!(tmp3083, I_M_t[3, 3], tmp3082, ord)
        TaylorSeries.div!(J2M_t, tmp3083, μ[mo], ord)
        TaylorSeries.subst!(tmp3085, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp3086, tmp3085, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp3086, 4, ord)
        TaylorSeries.subst!(tmp3089, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp3089, μ[mo], ord)
        TaylorSeries.subst!(tmp3091, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp3091, μ[mo], ord)
        TaylorSeries.subst!(tmp3093, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp3094, tmp3093, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp3094, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:416 =# Threads.@threads for j = 1:N_ext
                for i = 1:N_ext
                    if i == j
                        continue
                    else
                        if UJ_interaction[i, j]
                            TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                            TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                            TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                            TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                            TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                            TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                            TaylorSeries.add!(tmp3106[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                            TaylorSeries.add!(X_bf[i, j], tmp3106[i, j], X_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp3108[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                            TaylorSeries.add!(Y_bf[i, j], tmp3108[i, j], Y_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp3110[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                            TaylorSeries.add!(Z_bf[i, j], tmp3110[i, j], Z_bf_3[i, j], ord)
                            TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.pow!(tmp3114[i, j], X_bf[i, j], 2, ord)
                            TaylorSeries.pow!(tmp3116[i, j], Y_bf[i, j], 2, ord)
                            TaylorSeries.add!(tmp3117[i, j], tmp3114[i, j], tmp3116[i, j], ord)
                            TaylorSeries.sqrt!(r_xy[i, j], tmp3117[i, j], ord)
                            TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                            TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                            TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                            for n = 2:n1SEM[j]
                                TaylorSeries.mul!(tmp3122[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3123[i, j, n], tmp3122[i, j, n], fact1_jsem[n], ord)
                                TaylorSeries.mul!(tmp3124[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                                TaylorSeries.subst!(P_n[i, j, n + 1], tmp3123[i, j, n], tmp3124[i, j, n - 1], ord)
                                TaylorSeries.mul!(tmp3126[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3127[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                                TaylorSeries.add!(dP_n[i, j, n + 1], tmp3126[i, j, n], tmp3127[i, j, n], ord)
                                TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], fact5_jsem[n], ord)
                            end
                            TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], 2, ord)
                            TaylorSeries.mul!(tmp3132[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                            TaylorSeries.mul!(tmp3133[i, j, 3], tmp3132[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ξ[i, j], tmp3133[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.subst!(tmp3135[i, j, 3], dP_n[i, j, 3], ord)
                            TaylorSeries.mul!(tmp3136[i, j, 3], tmp3135[i, j, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp3137[i, j, 3], tmp3136[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ζ[i, j], tmp3137[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n1SEM[j]
                                TaylorSeries.mul!(tmp3139[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                                TaylorSeries.mul!(tmp3140[i, j, n + 1], tmp3139[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp3141[i, j, n + 1], tmp3140[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjξ[i, j, n], tmp3141[i, j, n + 1], F_J_ξ_36[i, j], ord)
                                TaylorSeries.subst!(tmp3143[i, j, n + 1], dP_n[i, j, n + 1], ord)
                                TaylorSeries.mul!(tmp3144[i, j, n + 1], tmp3143[i, j, n + 1], cos_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3145[i, j, n + 1], tmp3144[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp3146[i, j, n + 1], tmp3145[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjζ[i, j, n], tmp3146[i, j, n + 1], F_J_ζ_36[i, j], ord)
                                TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                                TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                            end
                            if j == mo
                                for m = 1:n1SEM[mo]
                                    if m == 1
                                        TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                        TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                        TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                        TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                    else
                                        TaylorSeries.mul!(tmp3149[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp3150[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.add!(sin_mλ[i, j, m], tmp3149[i, j, m - 1], tmp3150[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp3152[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp3153[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.subst!(cos_mλ[i, j, m], tmp3152[i, j, m - 1], tmp3153[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp3155[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp3155[i, j, m - 1, m - 1], lnm5[m], ord)
                                        TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3158[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp3158[i, j, m, m], lnm3[m], ord)
                                    end
                                    for n = m + 1:n1SEM[mo]
                                        if n == m + 1
                                            TaylorSeries.mul!(tmp3160[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp3160[i, j, n - 1, m], lnm1[n, m], ord)
                                        else
                                            TaylorSeries.mul!(tmp3162[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(tmp3163[i, j, n - 1, m], tmp3162[i, j, n - 1, m], lnm1[n, m], ord)
                                            TaylorSeries.mul!(tmp3164[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                            TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp3163[i, j, n - 1, m], tmp3164[i, j, n - 2, m], ord)
                                        end
                                        TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3167[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3168[i, j, n, m], tmp3167[i, j, n, m], lnm3[n], ord)
                                        TaylorSeries.mul!(tmp3169[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                        TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp3168[i, j, n, m], tmp3169[i, j, n - 1, m], ord)
                                    end
                                end
                                TaylorSeries.mul!(tmp3171[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                                TaylorSeries.mul!(tmp3172[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3173[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp3174[i, j, 1], tmp3172[i, j, 1], tmp3173[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3175[i, j, 2, 1], tmp3171[i, j, 2, 1], tmp3174[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3176[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                                TaylorSeries.mul!(tmp3177[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3178[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp3179[i, j, 2], tmp3177[i, j, 2], tmp3178[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3180[i, j, 2, 2], tmp3176[i, j, 2, 2], tmp3179[i, j, 2], ord)
                                TaylorSeries.add!(tmp3181[i, j, 2, 1], tmp3175[i, j, 2, 1], tmp3180[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ξ[i, j], tmp3181[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp3183[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                                TaylorSeries.mul!(tmp3184[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3185[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.subst!(tmp3186[i, j, 1], tmp3184[i, j, 1], tmp3185[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3187[i, j, 2, 1], tmp3183[i, j, 2, 1], tmp3186[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3188[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                                TaylorSeries.mul!(tmp3189[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3190[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.subst!(tmp3191[i, j, 2], tmp3189[i, j, 2], tmp3190[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3192[i, j, 2, 2], tmp3188[i, j, 2, 2], tmp3191[i, j, 2], ord)
                                TaylorSeries.add!(tmp3193[i, j, 2, 1], tmp3187[i, j, 2, 1], tmp3192[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_η[i, j], tmp3193[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp3195[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3196[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp3197[i, j, 1], tmp3195[i, j, 1], tmp3196[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3198[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp3197[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3199[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3200[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp3201[i, j, 2], tmp3199[i, j, 2], tmp3200[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3202[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp3201[i, j, 2], ord)
                                TaylorSeries.add!(tmp3203[i, j, 2, 1], tmp3198[i, j, 2, 1], tmp3202[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ζ[i, j], tmp3203[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                                for n = 3:n2M
                                    for m = 1:n
                                        TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(tmp3209[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                        TaylorSeries.add!(tmp3210[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3211[i, j, n, m], tmp3209[i, j, n, m], tmp3210[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3212[i, j, n, m], tmp3211[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp3212[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                        TaylorSeries.mul!(tmp3214[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                        TaylorSeries.subst!(tmp3215[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3216[i, j, n, m], tmp3214[i, j, n, m], tmp3215[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3217[i, j, n, m], tmp3216[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp3217[i, j, n, m], F_CS_η_36[i, j], ord)
                                        TaylorSeries.add!(tmp3219[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3220[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp3219[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3221[i, j, n, m], tmp3220[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp3221[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                        TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                    end
                                end
                                TaylorSeries.add!(tmp3223[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.add!(tmp3224[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ξ[i, j], tmp3223[i, j], tmp3224[i, j], ord)
                                TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                                TaylorSeries.add!(tmp3227[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                                TaylorSeries.add!(tmp3228[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], tmp3227[i, j], tmp3228[i, j], ord)
                            else
                                TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            end
                            TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                            TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                            TaylorSeries.subst!(tmp3234[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp3234[i, j], cos_λ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                            TaylorSeries.subst!(tmp3237[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp3237[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                            TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp3239[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3240[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3241[i, j, 1, 1], tmp3239[i, j, 1, 1], tmp3240[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3242[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp3241[i, j, 1, 1], tmp3242[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3244[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3245[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3246[i, j, 2, 1], tmp3244[i, j, 2, 1], tmp3245[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3247[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp3246[i, j, 2, 1], tmp3247[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3249[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3250[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3251[i, j, 3, 1], tmp3249[i, j, 3, 1], tmp3250[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3252[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp3251[i, j, 3, 1], tmp3252[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3254[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3255[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3256[i, j, 1, 1], tmp3254[i, j, 1, 1], tmp3255[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3257[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp3256[i, j, 1, 1], tmp3257[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3259[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3260[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3261[i, j, 2, 1], tmp3259[i, j, 2, 1], tmp3260[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3262[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp3261[i, j, 2, 1], tmp3262[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3264[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3265[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3266[i, j, 3, 1], tmp3264[i, j, 3, 1], tmp3265[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3267[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp3266[i, j, 3, 1], tmp3267[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3269[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3270[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3271[i, j, 1, 1], tmp3269[i, j, 1, 1], tmp3270[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3272[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp3271[i, j, 1, 1], tmp3272[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3274[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3275[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3276[i, j, 2, 1], tmp3274[i, j, 2, 1], tmp3275[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3277[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp3276[i, j, 2, 1], tmp3277[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3279[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3280[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3281[i, j, 3, 1], tmp3279[i, j, 3, 1], tmp3280[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3282[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp3281[i, j, 3, 1], tmp3282[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3284[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                            TaylorSeries.mul!(tmp3285[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                            TaylorSeries.add!(tmp3286[i, j, 1, 1], tmp3284[i, j, 1, 1], tmp3285[i, j, 2, 1], ord)
                            TaylorSeries.mul!(tmp3287[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                            TaylorSeries.add!(F_JCS_x[i, j], tmp3286[i, j, 1, 1], tmp3287[i, j, 3, 1], ord)
                            TaylorSeries.mul!(tmp3289[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3290[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                            TaylorSeries.add!(tmp3291[i, j, 1, 2], tmp3289[i, j, 1, 2], tmp3290[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3292[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                            TaylorSeries.add!(F_JCS_y[i, j], tmp3291[i, j, 1, 2], tmp3292[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3294[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3295[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                            TaylorSeries.add!(tmp3296[i, j, 1, 3], tmp3294[i, j, 1, 3], tmp3295[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3297[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                            TaylorSeries.add!(F_JCS_z[i, j], tmp3296[i, j, 1, 3], tmp3297[i, j, 3, 3], ord)
                        end
                    end
                end
            end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp3299[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp3299[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp3301[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp3301[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp3303[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp3303[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp3305[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp3305[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp3307[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp3307[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp3309[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp3309[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp3311[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp3312[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp3313[i, j], tmp3311[i, j], tmp3312[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp3313[i, j], ord)
                            TaylorSeries.mul!(tmp3315[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp3316[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp3317[i, j], tmp3315[i, j], tmp3316[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp3317[i, j], ord)
                            TaylorSeries.mul!(tmp3319[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp3320[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp3321[i, j], tmp3319[i, j], tmp3320[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp3321[i, j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], N_MfigM_pmA_x[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], N_MfigM_pmA_y[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], N_MfigM_pmA_z[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:656 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                        TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                        TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                        TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                        TaylorSeries.mul!(tmp3333[i, j], 4, vi_dot_vj[i, j], ord)
                        TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp3333[i, j], ord)
                        TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                        TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                        TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                        TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                        TaylorSeries.add!(tmp3339[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                        TaylorSeries.add!(Rij_dot_Vi[i, j], tmp3339[i, j], Zij_t_Wi[i, j], ord)
                        TaylorSeries.pow!(tmp3342[i, j], Rij_dot_Vi[i, j], 2, ord)
                        TaylorSeries.div!(pn1t7[i, j], tmp3342[i, j], r_p2[i, j], ord)
                        TaylorSeries.mul!(tmp3345[i, j], 1.5, pn1t7[i, j], ord)
                        TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp3345[i, j], ord)
                        TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                    end
                end
                TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
            end
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:695 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                        TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                        TaylorSeries.add!(tmp3352[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                        TaylorSeries.add!(tmp3353[i, j], tmp3352[i, j], pNZ_t_Z[i, j], ord)
                        TaylorSeries.mul!(tmp3354[i, j], 0.5, tmp3353[i, j], ord)
                        TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp3354[i, j], ord)
                        TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                        TaylorSeries.add!(tmp3362[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp3362[i, j], ord)
                        TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                        TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                        TaylorSeries.add!(tmp3365[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp3365[i, j], ord)
                        TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                        TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                        TaylorSeries.add!(tmp3368[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp3368[i, j], ord)
                        TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                        TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                    end
                end
                TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
            end
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:741 =# Threads.@threads for i = 1:N_ext
                TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
                TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
                TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
            end
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\PlanetaryEphemeris.jl\src\ex.jl:746 =# Threads.@threads for i = N_ext + 1:N
                TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
            end
        TaylorSeries.mul!(tmp3377, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3378, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3379, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3380, tmp3378, tmp3379, ord)
        TaylorSeries.add!(Iω_x, tmp3377, tmp3380, ord)
        TaylorSeries.mul!(tmp3382, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3383, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3384, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3385, tmp3383, tmp3384, ord)
        TaylorSeries.add!(Iω_y, tmp3382, tmp3385, ord)
        TaylorSeries.mul!(tmp3387, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3388, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3389, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3390, tmp3388, tmp3389, ord)
        TaylorSeries.add!(Iω_z, tmp3387, tmp3390, ord)
        TaylorSeries.mul!(tmp3392, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp3393, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp3392, tmp3393, ord)
        TaylorSeries.mul!(tmp3395, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp3396, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp3395, tmp3396, ord)
        TaylorSeries.mul!(tmp3398, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp3399, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp3398, tmp3399, ord)
        TaylorSeries.mul!(tmp3401, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3402, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3403, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3404, tmp3402, tmp3403, ord)
        TaylorSeries.add!(dIω_x, tmp3401, tmp3404, ord)
        TaylorSeries.mul!(tmp3406, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3407, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3408, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3409, tmp3407, tmp3408, ord)
        TaylorSeries.add!(dIω_y, tmp3406, tmp3409, ord)
        TaylorSeries.mul!(tmp3411, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3412, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3413, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3414, tmp3412, tmp3413, ord)
        TaylorSeries.add!(dIω_z, tmp3411, tmp3414, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp3419, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3420, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3421, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3422, tmp3420, tmp3421, ord)
        TaylorSeries.add!(er_EM_1, tmp3419, tmp3422, ord)
        TaylorSeries.mul!(tmp3424, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3425, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3426, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3427, tmp3425, tmp3426, ord)
        TaylorSeries.add!(er_EM_2, tmp3424, tmp3427, ord)
        TaylorSeries.mul!(tmp3429, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3430, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3431, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3432, tmp3430, tmp3431, ord)
        TaylorSeries.add!(er_EM_3, tmp3429, tmp3432, ord)
        TaylorSeries.mul!(tmp3434, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3435, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3436, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3437, tmp3435, tmp3436, ord)
        TaylorSeries.add!(p_E_1, tmp3434, tmp3437, ord)
        TaylorSeries.mul!(tmp3439, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3440, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3441, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3442, tmp3440, tmp3441, ord)
        TaylorSeries.add!(p_E_2, tmp3439, tmp3442, ord)
        TaylorSeries.mul!(tmp3444, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3445, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3446, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3447, tmp3445, tmp3446, ord)
        TaylorSeries.add!(p_E_3, tmp3444, tmp3447, ord)
        TaylorSeries.mul!(tmp3449, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3450, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3451, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3452, tmp3450, tmp3451, ord)
        TaylorSeries.add!(I_er_EM_1, tmp3449, tmp3452, ord)
        TaylorSeries.mul!(tmp3454, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3455, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3456, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3457, tmp3455, tmp3456, ord)
        TaylorSeries.add!(I_er_EM_2, tmp3454, tmp3457, ord)
        TaylorSeries.mul!(tmp3459, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3460, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3461, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3462, tmp3460, tmp3461, ord)
        TaylorSeries.add!(I_er_EM_3, tmp3459, tmp3462, ord)
        TaylorSeries.mul!(tmp3464, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3465, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3466, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3467, tmp3465, tmp3466, ord)
        TaylorSeries.add!(I_p_E_1, tmp3464, tmp3467, ord)
        TaylorSeries.mul!(tmp3469, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3470, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3471, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3472, tmp3470, tmp3471, ord)
        TaylorSeries.add!(I_p_E_2, tmp3469, tmp3472, ord)
        TaylorSeries.mul!(tmp3474, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3475, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3476, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3477, tmp3475, tmp3476, ord)
        TaylorSeries.add!(I_p_E_3, tmp3474, tmp3477, ord)
        TaylorSeries.mul!(tmp3479, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3480, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp3479, tmp3480, ord)
        TaylorSeries.mul!(tmp3482, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3483, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp3482, tmp3483, ord)
        TaylorSeries.mul!(tmp3485, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3486, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp3485, tmp3486, ord)
        TaylorSeries.mul!(tmp3488, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp3489, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp3488, tmp3489, ord)
        TaylorSeries.mul!(tmp3491, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp3492, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp3491, tmp3492, ord)
        TaylorSeries.mul!(tmp3494, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp3495, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp3494, tmp3495, ord)
        TaylorSeries.mul!(tmp3497, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3498, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp3497, tmp3498, ord)
        TaylorSeries.mul!(tmp3500, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3501, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp3500, tmp3501, ord)
        TaylorSeries.mul!(tmp3503, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3504, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp3503, tmp3504, ord)
        TaylorSeries.mul!(tmp3506, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp3507, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp3506, tmp3507, ord)
        TaylorSeries.mul!(tmp3509, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp3510, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp3509, tmp3510, ord)
        TaylorSeries.mul!(tmp3512, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp3513, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp3512, tmp3513, ord)
        TaylorSeries.pow!(tmp3517, sin_ϕ[ea, mo], 2, ord)
        TaylorSeries.mul!(tmp3518, 7, tmp3517, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp3518, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp3523, r_p1d2[mo, ea], 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp3523, ord)
        TaylorSeries.mul!(tmp3525, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp3526, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3527, two_sinϕEM, tmp3526, ord)
        TaylorSeries.add!(tmp3528, tmp3525, tmp3527, ord)
        TaylorSeries.mul!(tmp3530, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp3531, tmp3528, tmp3530, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp3531, ord)
        TaylorSeries.mul!(tmp3533, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp3534, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3535, two_sinϕEM, tmp3534, ord)
        TaylorSeries.add!(tmp3536, tmp3533, tmp3535, ord)
        TaylorSeries.mul!(tmp3538, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp3539, tmp3536, tmp3538, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp3539, ord)
        TaylorSeries.mul!(tmp3541, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp3542, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3543, two_sinϕEM, tmp3542, ord)
        TaylorSeries.add!(tmp3544, tmp3541, tmp3543, ord)
        TaylorSeries.mul!(tmp3546, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp3547, tmp3544, tmp3546, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp3547, ord)
        TaylorSeries.mul!(tmp3549, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3550, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3551, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3552, tmp3550, tmp3551, ord)
        TaylorSeries.add!(N_1_LMF, tmp3549, tmp3552, ord)
        TaylorSeries.mul!(tmp3554, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3555, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3556, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3557, tmp3555, tmp3556, ord)
        TaylorSeries.add!(N_2_LMF, tmp3554, tmp3557, ord)
        TaylorSeries.mul!(tmp3559, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3560, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3561, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3562, tmp3560, tmp3561, ord)
        TaylorSeries.add!(N_3_LMF, tmp3559, tmp3562, ord)
        TaylorSeries.subst!(tmp3564, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3565, k_ν, tmp3564, ord)
        TaylorSeries.mul!(tmp3566, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp3567, tmp3566, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp3565, tmp3567, ord)
        TaylorSeries.subst!(tmp3569, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3570, k_ν, tmp3569, ord)
        TaylorSeries.mul!(tmp3571, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp3572, tmp3571, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp3570, tmp3572, ord)
        TaylorSeries.subst!(tmp3574, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp3574, ord)
        TaylorSeries.mul!(tmp3576, μ[mo], N_1_LMF, ord)
        TaylorSeries.add!(tmp3577, N_MfigM_figE_1, tmp3576, ord)
        TaylorSeries.add!(tmp3578, tmp3577, N_cmb_1, ord)
        TaylorSeries.add!(tmp3579, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp3578, tmp3579, ord)
        TaylorSeries.mul!(tmp3581, μ[mo], N_2_LMF, ord)
        TaylorSeries.add!(tmp3582, N_MfigM_figE_2, tmp3581, ord)
        TaylorSeries.add!(tmp3583, tmp3582, N_cmb_2, ord)
        TaylorSeries.add!(tmp3584, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp3583, tmp3584, ord)
        TaylorSeries.mul!(tmp3586, μ[mo], N_3_LMF, ord)
        TaylorSeries.add!(tmp3587, N_MfigM_figE_3, tmp3586, ord)
        TaylorSeries.add!(tmp3588, tmp3587, N_cmb_3, ord)
        TaylorSeries.add!(tmp3589, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp3588, tmp3589, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp3594, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp3595, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp3594, tmp3595, ord)
        TaylorSeries.mul!(tmp3597, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp3598, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp3597, tmp3598, ord)
        TaylorSeries.mul!(tmp3600, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp3601, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp3600, tmp3601, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp3606, tmp3686, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3607, q[6N + 4], tmp3606, ord)
        TaylorSeries.sincos!(tmp3687, tmp3608, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3609, q[6N + 5], tmp3608, ord)
        TaylorSeries.add!(tmp3610, tmp3607, tmp3609, ord)
        TaylorSeries.sincos!(tmp3611, tmp3688, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp3610, tmp3611, ord)
        TaylorSeries.sincos!(tmp3689, tmp3613, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3614, q[6N + 4], tmp3613, ord)
        TaylorSeries.sincos!(tmp3615, tmp3690, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3616, q[6N + 5], tmp3615, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp3614, tmp3616, ord)
        TaylorSeries.sincos!(tmp3691, tmp3618, q[6N + 2], ord)
        TaylorSeries.mul!(tmp3619, dq[6N + 1], tmp3618, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp3619, ord)
        TaylorSeries.mul!(tmp3621, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3622, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3623, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3624, tmp3622, tmp3623, ord)
        TaylorSeries.add!(dq[6N + 4], tmp3621, tmp3624, ord)
        TaylorSeries.mul!(tmp3626, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3627, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3628, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3629, tmp3627, tmp3628, ord)
        TaylorSeries.add!(dq[6N + 5], tmp3626, tmp3629, ord)
        TaylorSeries.mul!(tmp3631, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3632, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3633, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3634, tmp3632, tmp3633, ord)
        TaylorSeries.add!(dq[6N + 6], tmp3631, tmp3634, ord)
        TaylorSeries.sincos!(tmp3636, tmp3692, q[6N + 8], ord)
        TaylorSeries.div!(tmp3637, ω_c_CE_2, tmp3636, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp3637, ord)
        TaylorSeries.sincos!(tmp3693, tmp3639, q[6N + 8], ord)
        TaylorSeries.mul!(tmp3640, dq[6N + 9], tmp3639, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp3640, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.identity!(dq[6N + 13], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end

# TaylorIntegration._allocate_jetcoeffs! method for src/dynamical_model.jl: DE430!
function TaylorIntegration._allocate_jetcoeffs!(::Val{DE430_dev!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local __t = Taylor1(numtype(t), t.order)
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local params_bwd = (N_bwd, jd0)
    local qq_bwd = Taylor1.(constant_term.(q[union(nbodyind(N, 1:N_bwd), 6N + 1:6N + 13)]), t.order)::Vector{S}
    local dqq_bwd = similar(qq_bwd)
    local xaux_bwd = similar(qq_bwd)
    local jc = TaylorIntegration.jetcoeffs!(NBP_pN_A_J23E_J23M_J2S_threads!, t, qq_bwd, dqq_bwd, xaux_bwd, params_bwd)
    local q_del_τ_M = special_eval(qq_bwd, __t - τ_M)
    local q_del_τ_0 = special_eval(qq_bwd, __t - τ_0p)
    local q_del_τ_1 = special_eval(qq_bwd, __t - τ_1p)
    local q_del_τ_2 = special_eval(qq_bwd, __t - τ_2p)
    local eulang_del_τ_M = q_del_τ_M[6N_bwd + 1:6N_bwd + 3]::Vector{S}
    local ω_m_del_τ_M = q_del_τ_M[6N_bwd + 4:6N_bwd + 6]::Vector{S}
    local I_m_t = ITM(q_del_τ_M, eulang_del_τ_M, ω_m_del_τ_M)::Matrix{S}
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    rij_dot_vi_div_rij_sq = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp5665 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp6735 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5666 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp6736 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5667 = Taylor1(constant_term(tmp5665) * constant_term(tmp5666), order)
    tmp5668 = Taylor1(cos(constant_term(θ_m)), order)
    tmp6737 = Taylor1(sin(constant_term(θ_m)), order)
    tmp5669 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp6738 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5670 = Taylor1(constant_term(tmp5668) * constant_term(tmp5669), order)
    tmp5671 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp6739 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5672 = Taylor1(constant_term(tmp5670) * constant_term(tmp5671), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp5667) - constant_term(tmp5672), order)
    tmp5674 = Taylor1(cos(constant_term(θ_m)), order)
    tmp6740 = Taylor1(sin(constant_term(θ_m)), order)
    tmp5675 = Taylor1(-(constant_term(tmp5674)), order)
    tmp5676 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp6741 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5677 = Taylor1(constant_term(tmp5675) * constant_term(tmp5676), order)
    tmp5678 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp6742 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5679 = Taylor1(constant_term(tmp5677) * constant_term(tmp5678), order)
    tmp5680 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp6743 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5681 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp6744 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5682 = Taylor1(constant_term(tmp5680) * constant_term(tmp5681), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp5679) - constant_term(tmp5682), order)
    tmp5684 = Taylor1(sin(constant_term(θ_m)), order)
    tmp6745 = Taylor1(cos(constant_term(θ_m)), order)
    tmp5685 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp6746 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp5684) * constant_term(tmp5685), order)
    tmp5687 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp6747 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5688 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp6748 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5689 = Taylor1(constant_term(tmp5687) * constant_term(tmp5688), order)
    tmp5690 = Taylor1(cos(constant_term(θ_m)), order)
    tmp6749 = Taylor1(sin(constant_term(θ_m)), order)
    tmp5691 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp6750 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5692 = Taylor1(constant_term(tmp5690) * constant_term(tmp5691), order)
    tmp5693 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp6751 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5694 = Taylor1(constant_term(tmp5692) * constant_term(tmp5693), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp5689) + constant_term(tmp5694), order)
    tmp5696 = Taylor1(cos(constant_term(θ_m)), order)
    tmp6752 = Taylor1(sin(constant_term(θ_m)), order)
    tmp5697 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp6753 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5698 = Taylor1(constant_term(tmp5696) * constant_term(tmp5697), order)
    tmp5699 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp6754 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5700 = Taylor1(constant_term(tmp5698) * constant_term(tmp5699), order)
    tmp5701 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp6755 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5702 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp6756 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5703 = Taylor1(constant_term(tmp5701) * constant_term(tmp5702), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp5700) - constant_term(tmp5703), order)
    tmp5705 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp6757 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5706 = Taylor1(-(constant_term(tmp5705)), order)
    tmp5707 = Taylor1(sin(constant_term(θ_m)), order)
    tmp6758 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp5706) * constant_term(tmp5707), order)
    tmp5709 = Taylor1(sin(constant_term(θ_m)), order)
    tmp6759 = Taylor1(cos(constant_term(θ_m)), order)
    tmp5710 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp6760 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp5709) * constant_term(tmp5710), order)
    tmp5712 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp6761 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5713 = Taylor1(sin(constant_term(θ_m)), order)
    tmp6762 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp5712) * constant_term(tmp5713), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp6763 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp5716 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp6764 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5717 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp5716), order)
    tmp5718 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp6765 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5719 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp5718), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp5717) + constant_term(tmp5719), order)
    tmp5721 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp5722 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp6766 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5723 = Taylor1(constant_term(tmp5721) * constant_term(tmp5722), order)
    tmp5724 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp6767 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5725 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp5724), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp5723) + constant_term(tmp5725), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp5727 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp6768 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5728 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp5727), order)
    tmp5729 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp6769 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5730 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp5729), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp5728) + constant_term(tmp5730), order)
    tmp5732 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp5733 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp6770 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5734 = Taylor1(constant_term(tmp5732) * constant_term(tmp5733), order)
    tmp5735 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp6771 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5736 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp5735), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp5734) + constant_term(tmp5736), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp5738 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp6772 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5739 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp5738), order)
    tmp5740 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp6773 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5741 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp5740), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp5739) + constant_term(tmp5741), order)
    tmp5743 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp5744 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp6774 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5745 = Taylor1(constant_term(tmp5743) * constant_term(tmp5744), order)
    tmp5746 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp6775 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5747 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp5746), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp5745) + constant_term(tmp5747), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp5749 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp5750 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp5751 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp5752 = Taylor1(constant_term(tmp5750) + constant_term(tmp5751), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp5749) + constant_term(tmp5752), order)
    tmp5754 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp5755 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp5756 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp5757 = Taylor1(constant_term(tmp5755) + constant_term(tmp5756), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp5754) + constant_term(tmp5757), order)
    tmp5759 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp5760 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp5761 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp5762 = Taylor1(constant_term(tmp5760) + constant_term(tmp5761), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp5759) + constant_term(tmp5762), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    local q_ME_τ_0 = q_del_τ_0[3mo - 2:3mo] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_ME_τ_1 = q_del_τ_1[3mo - 2:3mo] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_ME_τ_2 = q_del_τ_2[3mo - 2:3mo] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local q_SE_τ_0 = q_del_τ_0[3su - 2:3su] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_SE_τ_1 = q_del_τ_1[3su - 2:3su] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_SE_τ_2 = q_del_τ_2[3su - 2:3su] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local R30 = RotM[:, :, ea]
    local R31 = Rz(-ω_E * τ_1) * RotM[:, :, ea]
    local R32 = Rz(-ω_E * τ_2) * RotM[:, :, ea]
    local r_star_M_0 = R30 * q_ME_τ_0
    local r_star_M_1 = R31 * q_ME_τ_1
    local r_star_M_2 = R32 * q_ME_τ_2
    local r_star_S_0 = R30 * q_SE_τ_0
    local r_star_S_1 = R31 * q_SE_τ_1
    local r_star_S_2 = R32 * q_SE_τ_2
    for j = 1:N
        newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
        dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
        dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
    end
    for j = 1:N_ext
        accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
    end
    tmp5827 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5827 .= Taylor1(zero(_S), order)
    tmp5829 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5829 .= Taylor1(zero(_S), order)
    tmp5830 = Array{Taylor1{_S}}(undef, size(tmp5827))
    tmp5830 .= Taylor1(zero(_S), order)
    tmp5832 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5832 .= Taylor1(zero(_S), order)
    tmp5771 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5771 .= Taylor1(zero(_S), order)
    tmp5773 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5773 .= Taylor1(zero(_S), order)
    tmp5776 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5776 .= Taylor1(zero(_S), order)
    tmp5778 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5778 .= Taylor1(zero(_S), order)
    tmp5781 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5781 .= Taylor1(zero(_S), order)
    tmp5783 = Array{Taylor1{_S}}(undef, size(dq))
    tmp5783 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp5791 = Array{Taylor1{_S}}(undef, size(UU))
    tmp5791 .= Taylor1(zero(_S), order)
    tmp5794 = Array{Taylor1{_S}}(undef, size(X))
    tmp5794 .= Taylor1(zero(_S), order)
    tmp5796 = Array{Taylor1{_S}}(undef, size(Y))
    tmp5796 .= Taylor1(zero(_S), order)
    tmp5797 = Array{Taylor1{_S}}(undef, size(tmp5794))
    tmp5797 .= Taylor1(zero(_S), order)
    tmp5799 = Array{Taylor1{_S}}(undef, size(Z))
    tmp5799 .= Taylor1(zero(_S), order)
    tmp5807 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp5807 .= Taylor1(zero(_S), order)
    tmp5808 = Array{Taylor1{_S}}(undef, size(tmp5807))
    tmp5808 .= Taylor1(zero(_S), order)
    tmp5819 = Array{Taylor1{_S}}(undef, size(X))
    tmp5819 .= Taylor1(zero(_S), order)
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp5819))
    temp_001 .= Taylor1(zero(_S), order)
    tmp5821 = Array{Taylor1{_S}}(undef, size(Y))
    tmp5821 .= Taylor1(zero(_S), order)
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp5821))
    temp_002 .= Taylor1(zero(_S), order)
    tmp5823 = Array{Taylor1{_S}}(undef, size(Z))
    tmp5823 .= Taylor1(zero(_S), order)
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp5823))
    temp_003 .= Taylor1(zero(_S), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    #= In[33]:380 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                    Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                    Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                    U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                    V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                    W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                    tmp5771[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                    tmp5773[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                    _4U_m_3X[i, j] = Taylor1(constant_term(tmp5771[3j - 2]) - constant_term(tmp5773[3i - 2]), order)
                    tmp5776[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                    tmp5778[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                    _4V_m_3Y[i, j] = Taylor1(constant_term(tmp5776[3j - 1]) - constant_term(tmp5778[3i - 1]), order)
                    tmp5781[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                    tmp5783[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                    _4W_m_3Z[i, j] = Taylor1(constant_term(tmp5781[3j]) - constant_term(tmp5783[3i]), order)
                    pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                    pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                    pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                    UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                    VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                    WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                    tmp5791[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                    vi_dot_vj[i, j] = Taylor1(constant_term(tmp5791[i, j]) + constant_term(WW[i, j]), order)
                    tmp5794[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                    tmp5796[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                    tmp5797[i, j] = Taylor1(constant_term(tmp5794[i, j]) + constant_term(tmp5796[i, j]), order)
                    tmp5799[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                    r_p2[i, j] = Taylor1(constant_term(tmp5797[i, j]) + constant_term(tmp5799[i, j]), order)
                    r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                    r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                    r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                    newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                    tmp5807[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                    tmp5808[i, j] = Taylor1(constant_term(tmp5807[i, j]) + constant_term(pn2z[i, j]), order)
                    pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp5808[i, j]), order)
                    newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                    pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                    U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                    V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                    W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                    tmp5819[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp5819[i, j]), order)
                    newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                    tmp5821[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp5821[i, j]), order)
                    newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                    tmp5823[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp5823[i, j]), order)
                    newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                    temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                    newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
                end
            end
            tmp5827[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
            tmp5829[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
            tmp5830[3j - 2] = Taylor1(constant_term(tmp5827[3j - 2]) + constant_term(tmp5829[3j - 1]), order)
            tmp5832[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
            v2[j] = Taylor1(constant_term(tmp5830[3j - 2]) + constant_term(tmp5832[3j]), order)
        end
    tmp5834 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp5836 = Taylor1(constant_term(tmp5834) / constant_term(2), order)
    tmp5837 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp5836), order)
    J2M_t = Taylor1(constant_term(tmp5837) / constant_term(μ[mo]), order)
    tmp5839 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp5840 = Taylor1(constant_term(tmp5839) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp5840) / constant_term(4), order)
    tmp5843 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp5843) / constant_term(μ[mo]), order)
    tmp5845 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp5845) / constant_term(μ[mo]), order)
    tmp5847 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp5848 = Taylor1(constant_term(tmp5847) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp5848) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp5860 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    tmp5860 .= Taylor1(zero(_S), order)
    tmp5862 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    tmp5862 .= Taylor1(zero(_S), order)
    tmp5864 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    tmp5864 .= Taylor1(zero(_S), order)
    tmp5868 = Array{Taylor1{_S}}(undef, size(X_bf))
    tmp5868 .= Taylor1(zero(_S), order)
    tmp5870 = Array{Taylor1{_S}}(undef, size(Y_bf))
    tmp5870 .= Taylor1(zero(_S), order)
    tmp5871 = Array{Taylor1{_S}}(undef, size(tmp5868))
    tmp5871 .= Taylor1(zero(_S), order)
    tmp5886 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp5886 .= Taylor1(zero(_S), order)
    tmp5887 = Array{Taylor1{_S}}(undef, size(tmp5886))
    tmp5887 .= Taylor1(zero(_S), order)
    tmp5889 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp5889 .= Taylor1(zero(_S), order)
    tmp5890 = Array{Taylor1{_S}}(undef, size(tmp5889))
    tmp5890 .= Taylor1(zero(_S), order)
    tmp5891 = Array{Taylor1{_S}}(undef, size(tmp5890))
    tmp5891 .= Taylor1(zero(_S), order)
    tmp5988 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp5988 .= Taylor1(zero(_S), order)
    tmp5991 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp5991 .= Taylor1(zero(_S), order)
    tmp5993 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5993 .= Taylor1(zero(_S), order)
    tmp5994 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5994 .= Taylor1(zero(_S), order)
    tmp5995 = Array{Taylor1{_S}}(undef, size(tmp5993))
    tmp5995 .= Taylor1(zero(_S), order)
    tmp5996 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5996 .= Taylor1(zero(_S), order)
    tmp5998 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5998 .= Taylor1(zero(_S), order)
    tmp5999 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5999 .= Taylor1(zero(_S), order)
    tmp6000 = Array{Taylor1{_S}}(undef, size(tmp5998))
    tmp6000 .= Taylor1(zero(_S), order)
    tmp6001 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6001 .= Taylor1(zero(_S), order)
    tmp6003 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6003 .= Taylor1(zero(_S), order)
    tmp6004 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6004 .= Taylor1(zero(_S), order)
    tmp6005 = Array{Taylor1{_S}}(undef, size(tmp6003))
    tmp6005 .= Taylor1(zero(_S), order)
    tmp6006 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6006 .= Taylor1(zero(_S), order)
    tmp6008 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6008 .= Taylor1(zero(_S), order)
    tmp6009 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6009 .= Taylor1(zero(_S), order)
    tmp6010 = Array{Taylor1{_S}}(undef, size(tmp6008))
    tmp6010 .= Taylor1(zero(_S), order)
    tmp6011 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6011 .= Taylor1(zero(_S), order)
    tmp6013 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6013 .= Taylor1(zero(_S), order)
    tmp6014 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6014 .= Taylor1(zero(_S), order)
    tmp6015 = Array{Taylor1{_S}}(undef, size(tmp6013))
    tmp6015 .= Taylor1(zero(_S), order)
    tmp6016 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6016 .= Taylor1(zero(_S), order)
    tmp6018 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6018 .= Taylor1(zero(_S), order)
    tmp6019 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6019 .= Taylor1(zero(_S), order)
    tmp6020 = Array{Taylor1{_S}}(undef, size(tmp6018))
    tmp6020 .= Taylor1(zero(_S), order)
    tmp6021 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6021 .= Taylor1(zero(_S), order)
    tmp6023 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6023 .= Taylor1(zero(_S), order)
    tmp6024 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6024 .= Taylor1(zero(_S), order)
    tmp6025 = Array{Taylor1{_S}}(undef, size(tmp6023))
    tmp6025 .= Taylor1(zero(_S), order)
    tmp6026 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6026 .= Taylor1(zero(_S), order)
    tmp6028 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6028 .= Taylor1(zero(_S), order)
    tmp6029 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6029 .= Taylor1(zero(_S), order)
    tmp6030 = Array{Taylor1{_S}}(undef, size(tmp6028))
    tmp6030 .= Taylor1(zero(_S), order)
    tmp6031 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6031 .= Taylor1(zero(_S), order)
    tmp6033 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6033 .= Taylor1(zero(_S), order)
    tmp6034 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6034 .= Taylor1(zero(_S), order)
    tmp6035 = Array{Taylor1{_S}}(undef, size(tmp6033))
    tmp6035 .= Taylor1(zero(_S), order)
    tmp6036 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp6036 .= Taylor1(zero(_S), order)
    tmp6038 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6038 .= Taylor1(zero(_S), order)
    tmp6039 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6039 .= Taylor1(zero(_S), order)
    tmp6040 = Array{Taylor1{_S}}(undef, size(tmp6038))
    tmp6040 .= Taylor1(zero(_S), order)
    tmp6041 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6041 .= Taylor1(zero(_S), order)
    tmp6043 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6043 .= Taylor1(zero(_S), order)
    tmp6044 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6044 .= Taylor1(zero(_S), order)
    tmp6045 = Array{Taylor1{_S}}(undef, size(tmp6043))
    tmp6045 .= Taylor1(zero(_S), order)
    tmp6046 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6046 .= Taylor1(zero(_S), order)
    tmp6048 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6048 .= Taylor1(zero(_S), order)
    tmp6049 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6049 .= Taylor1(zero(_S), order)
    tmp6050 = Array{Taylor1{_S}}(undef, size(tmp6048))
    tmp6050 .= Taylor1(zero(_S), order)
    tmp6051 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp6051 .= Taylor1(zero(_S), order)
    tmp5876 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp5876 .= Taylor1(zero(_S), order)
    tmp5877 = Array{Taylor1{_S}}(undef, size(tmp5876))
    tmp5877 .= Taylor1(zero(_S), order)
    tmp5878 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp5878 .= Taylor1(zero(_S), order)
    tmp5880 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp5880 .= Taylor1(zero(_S), order)
    tmp5881 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp5881 .= Taylor1(zero(_S), order)
    tmp5893 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp5893 .= Taylor1(zero(_S), order)
    tmp5894 = Array{Taylor1{_S}}(undef, size(tmp5893))
    tmp5894 .= Taylor1(zero(_S), order)
    tmp5895 = Array{Taylor1{_S}}(undef, size(tmp5894))
    tmp5895 .= Taylor1(zero(_S), order)
    tmp5897 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp5897 .= Taylor1(zero(_S), order)
    tmp5898 = Array{Taylor1{_S}}(undef, size(tmp5897))
    tmp5898 .= Taylor1(zero(_S), order)
    tmp5899 = Array{Taylor1{_S}}(undef, size(tmp5898))
    tmp5899 .= Taylor1(zero(_S), order)
    tmp5900 = Array{Taylor1{_S}}(undef, size(tmp5899))
    tmp5900 .= Taylor1(zero(_S), order)
    tmp5925 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp5925 .= Taylor1(zero(_S), order)
    tmp5926 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp5926 .= Taylor1(zero(_S), order)
    tmp5927 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp5927 .= Taylor1(zero(_S), order)
    tmp5928 = Array{Taylor1{_S}}(undef, size(tmp5926))
    tmp5928 .= Taylor1(zero(_S), order)
    tmp5929 = Array{Taylor1{_S}}(undef, size(tmp5925))
    tmp5929 .= Taylor1(zero(_S), order)
    tmp5930 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp5930 .= Taylor1(zero(_S), order)
    tmp5931 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp5931 .= Taylor1(zero(_S), order)
    tmp5932 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp5932 .= Taylor1(zero(_S), order)
    tmp5933 = Array{Taylor1{_S}}(undef, size(tmp5931))
    tmp5933 .= Taylor1(zero(_S), order)
    tmp5934 = Array{Taylor1{_S}}(undef, size(tmp5930))
    tmp5934 .= Taylor1(zero(_S), order)
    tmp5935 = Array{Taylor1{_S}}(undef, size(tmp5929))
    tmp5935 .= Taylor1(zero(_S), order)
    tmp5937 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5937 .= Taylor1(zero(_S), order)
    tmp5938 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp5938 .= Taylor1(zero(_S), order)
    tmp5939 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp5939 .= Taylor1(zero(_S), order)
    tmp5940 = Array{Taylor1{_S}}(undef, size(tmp5938))
    tmp5940 .= Taylor1(zero(_S), order)
    tmp5941 = Array{Taylor1{_S}}(undef, size(tmp5937))
    tmp5941 .= Taylor1(zero(_S), order)
    tmp5942 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5942 .= Taylor1(zero(_S), order)
    tmp5943 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp5943 .= Taylor1(zero(_S), order)
    tmp5944 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp5944 .= Taylor1(zero(_S), order)
    tmp5945 = Array{Taylor1{_S}}(undef, size(tmp5943))
    tmp5945 .= Taylor1(zero(_S), order)
    tmp5946 = Array{Taylor1{_S}}(undef, size(tmp5942))
    tmp5946 .= Taylor1(zero(_S), order)
    tmp5947 = Array{Taylor1{_S}}(undef, size(tmp5941))
    tmp5947 .= Taylor1(zero(_S), order)
    tmp5949 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp5949 .= Taylor1(zero(_S), order)
    tmp5950 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp5950 .= Taylor1(zero(_S), order)
    tmp5951 = Array{Taylor1{_S}}(undef, size(tmp5949))
    tmp5951 .= Taylor1(zero(_S), order)
    tmp5952 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp5952 .= Taylor1(zero(_S), order)
    tmp5953 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp5953 .= Taylor1(zero(_S), order)
    tmp5954 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp5954 .= Taylor1(zero(_S), order)
    tmp5955 = Array{Taylor1{_S}}(undef, size(tmp5953))
    tmp5955 .= Taylor1(zero(_S), order)
    tmp5956 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp5956 .= Taylor1(zero(_S), order)
    tmp5957 = Array{Taylor1{_S}}(undef, size(tmp5952))
    tmp5957 .= Taylor1(zero(_S), order)
    tmp5977 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    tmp5977 .= Taylor1(zero(_S), order)
    tmp5978 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    tmp5978 .= Taylor1(zero(_S), order)
    tmp5981 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    tmp5981 .= Taylor1(zero(_S), order)
    tmp5982 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    tmp5982 .= Taylor1(zero(_S), order)
    tmp5903 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp5903 .= Taylor1(zero(_S), order)
    tmp5904 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp5904 .= Taylor1(zero(_S), order)
    tmp5906 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp5906 .= Taylor1(zero(_S), order)
    tmp5907 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp5907 .= Taylor1(zero(_S), order)
    tmp5909 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5909 .= Taylor1(zero(_S), order)
    tmp5912 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5912 .= Taylor1(zero(_S), order)
    tmp5921 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5921 .= Taylor1(zero(_S), order)
    tmp5922 = Array{Taylor1{_S}}(undef, size(tmp5921))
    tmp5922 .= Taylor1(zero(_S), order)
    tmp5923 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5923 .= Taylor1(zero(_S), order)
    tmp5914 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5914 .= Taylor1(zero(_S), order)
    tmp5916 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5916 .= Taylor1(zero(_S), order)
    tmp5917 = Array{Taylor1{_S}}(undef, size(tmp5916))
    tmp5917 .= Taylor1(zero(_S), order)
    tmp5918 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5918 .= Taylor1(zero(_S), order)
    tmp5963 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp5963 .= Taylor1(zero(_S), order)
    tmp5964 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp5964 .= Taylor1(zero(_S), order)
    tmp5965 = Array{Taylor1{_S}}(undef, size(tmp5963))
    tmp5965 .= Taylor1(zero(_S), order)
    tmp5966 = Array{Taylor1{_S}}(undef, size(tmp5965))
    tmp5966 .= Taylor1(zero(_S), order)
    tmp5968 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp5968 .= Taylor1(zero(_S), order)
    tmp5969 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    tmp5969 .= Taylor1(zero(_S), order)
    tmp5970 = Array{Taylor1{_S}}(undef, size(tmp5968))
    tmp5970 .= Taylor1(zero(_S), order)
    tmp5971 = Array{Taylor1{_S}}(undef, size(tmp5970))
    tmp5971 .= Taylor1(zero(_S), order)
    tmp5973 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp5973 .= Taylor1(zero(_S), order)
    tmp5974 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp5974 .= Taylor1(zero(_S), order)
    tmp5975 = Array{Taylor1{_S}}(undef, size(tmp5974))
    tmp5975 .= Taylor1(zero(_S), order)
    #= In[33]:474 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                        X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                        X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                        Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                        Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                        Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                        Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                        Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                        Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                        tmp5860[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                        X_bf[i, j] = Taylor1(constant_term(tmp5860[i, j]) + constant_term(X_bf_3[i, j]), order)
                        tmp5862[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                        Y_bf[i, j] = Taylor1(constant_term(tmp5862[i, j]) + constant_term(Y_bf_3[i, j]), order)
                        tmp5864[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                        Z_bf[i, j] = Taylor1(constant_term(tmp5864[i, j]) + constant_term(Z_bf_3[i, j]), order)
                        sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                        tmp5868[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp5870[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp5871[i, j] = Taylor1(constant_term(tmp5868[i, j]) + constant_term(tmp5870[i, j]), order)
                        r_xy[i, j] = Taylor1(sqrt(constant_term(tmp5871[i, j])), order)
                        cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                        sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                        P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                        dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                        for n = 2:n1SEM[j]
                            tmp5876[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp5877[i, j, n] = Taylor1(constant_term(tmp5876[i, j, n]) * constant_term(fact1_jsem[n]), order)
                            tmp5878[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                            P_n[i, j, n + 1] = Taylor1(constant_term(tmp5877[i, j, n]) - constant_term(tmp5878[i, j, n - 1]), order)
                            tmp5880[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp5881[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                            dP_n[i, j, n + 1] = Taylor1(constant_term(tmp5880[i, j, n]) + constant_term(tmp5881[i, j, n]), order)
                            temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                        end
                        r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                        tmp5886[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                        tmp5887[i, j, 3] = Taylor1(constant_term(tmp5886[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ξ[i, j] = Taylor1(constant_term(tmp5887[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        tmp5889[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                        tmp5890[i, j, 3] = Taylor1(constant_term(tmp5889[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                        tmp5891[i, j, 3] = Taylor1(constant_term(tmp5890[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ζ[i, j] = Taylor1(constant_term(tmp5891[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n1SEM[j]
                            tmp5893[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                            tmp5894[i, j, n + 1] = Taylor1(constant_term(tmp5893[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp5895[i, j, n + 1] = Taylor1(constant_term(tmp5894[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjξ[i, j, n] = Taylor1(constant_term(tmp5895[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp5897[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                            tmp5898[i, j, n + 1] = Taylor1(constant_term(tmp5897[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                            tmp5899[i, j, n + 1] = Taylor1(constant_term(tmp5898[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp5900[i, j, n + 1] = Taylor1(constant_term(tmp5899[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjζ[i, j, n] = Taylor1(constant_term(tmp5900[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                            F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                            F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                    cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                    secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                    P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                    cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                                else
                                    tmp5903[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    tmp5904[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    sin_mλ[i, j, m] = Taylor1(constant_term(tmp5903[i, j, m - 1]) + constant_term(tmp5904[i, j, m - 1]), order)
                                    tmp5906[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    tmp5907[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    cos_mλ[i, j, m] = Taylor1(constant_term(tmp5906[i, j, m - 1]) - constant_term(tmp5907[i, j, m - 1]), order)
                                    tmp5909[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp5909[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                    P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp5912[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                    cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp5912[i, j, m, m]) * constant_term(lnm3[m]), order)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        tmp5914[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp5914[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    else
                                        tmp5916[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        tmp5917[i, j, n - 1, m] = Taylor1(constant_term(tmp5916[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                        tmp5918[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp5917[i, j, n - 1, m]) + constant_term(tmp5918[i, j, n - 2, m]), order)
                                    end
                                    P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp5921[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp5922[i, j, n, m] = Taylor1(constant_term(tmp5921[i, j, n, m]) * constant_term(lnm3[n]), order)
                                    tmp5923[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                    cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp5922[i, j, n, m]) + constant_term(tmp5923[i, j, n - 1, m]), order)
                                end
                            end
                            tmp5925[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                            tmp5926[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp5927[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp5928[i, j, 1] = Taylor1(constant_term(tmp5926[i, j, 1]) + constant_term(tmp5927[i, j, 1]), order)
                            tmp5929[i, j, 2, 1] = Taylor1(constant_term(tmp5925[i, j, 2, 1]) * constant_term(tmp5928[i, j, 1]), order)
                            tmp5930[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                            tmp5931[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp5932[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp5933[i, j, 2] = Taylor1(constant_term(tmp5931[i, j, 2]) + constant_term(tmp5932[i, j, 2]), order)
                            tmp5934[i, j, 2, 2] = Taylor1(constant_term(tmp5930[i, j, 2, 2]) * constant_term(tmp5933[i, j, 2]), order)
                            tmp5935[i, j, 2, 1] = Taylor1(constant_term(tmp5929[i, j, 2, 1]) + constant_term(tmp5934[i, j, 2, 2]), order)
                            F_CS_ξ[i, j] = Taylor1(constant_term(tmp5935[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp5937[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                            tmp5938[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp5939[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp5940[i, j, 1] = Taylor1(constant_term(tmp5938[i, j, 1]) - constant_term(tmp5939[i, j, 1]), order)
                            tmp5941[i, j, 2, 1] = Taylor1(constant_term(tmp5937[i, j, 2, 1]) * constant_term(tmp5940[i, j, 1]), order)
                            tmp5942[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                            tmp5943[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp5944[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp5945[i, j, 2] = Taylor1(constant_term(tmp5943[i, j, 2]) - constant_term(tmp5944[i, j, 2]), order)
                            tmp5946[i, j, 2, 2] = Taylor1(constant_term(tmp5942[i, j, 2, 2]) * constant_term(tmp5945[i, j, 2]), order)
                            tmp5947[i, j, 2, 1] = Taylor1(constant_term(tmp5941[i, j, 2, 1]) + constant_term(tmp5946[i, j, 2, 2]), order)
                            F_CS_η[i, j] = Taylor1(constant_term(tmp5947[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp5949[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp5950[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp5951[i, j, 1] = Taylor1(constant_term(tmp5949[i, j, 1]) + constant_term(tmp5950[i, j, 1]), order)
                            tmp5952[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp5951[i, j, 1]), order)
                            tmp5953[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp5954[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp5955[i, j, 2] = Taylor1(constant_term(tmp5953[i, j, 2]) + constant_term(tmp5954[i, j, 2]), order)
                            tmp5956[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp5955[i, j, 2]), order)
                            tmp5957[i, j, 2, 1] = Taylor1(constant_term(tmp5952[i, j, 2, 1]) + constant_term(tmp5956[i, j, 2, 2]), order)
                            F_CS_ζ[i, j] = Taylor1(constant_term(tmp5957[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            for n = 3:n2M
                                for m = 1:n
                                    Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    tmp5963[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                    tmp5964[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp5965[i, j, n, m] = Taylor1(constant_term(tmp5963[i, j, n, m]) * constant_term(tmp5964[i, j, n, m]), order)
                                    tmp5966[i, j, n, m] = Taylor1(constant_term(tmp5965[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp5966[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                    tmp5968[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                    tmp5969[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                    tmp5970[i, j, n, m] = Taylor1(constant_term(tmp5968[i, j, n, m]) * constant_term(tmp5969[i, j, n, m]), order)
                                    tmp5971[i, j, n, m] = Taylor1(constant_term(tmp5970[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp5971[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                    tmp5973[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp5974[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp5973[i, j, n, m]), order)
                                    tmp5975[i, j, n, m] = Taylor1(constant_term(tmp5974[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp5975[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                    F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                    F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                    F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                                end
                            end
                            tmp5977[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp5978[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                            F_JCS_ξ[i, j] = Taylor1(constant_term(tmp5977[i, j]) + constant_term(tmp5978[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                            tmp5981[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                            tmp5982[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(tmp5981[i, j]) + constant_term(tmp5982[i, j]), order)
                        else
                            F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        end
                        Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                        tmp5988[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp5988[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                        tmp5991[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp5991[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                        Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                        tmp5993[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp5994[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp5995[i, j, 1, 1] = Taylor1(constant_term(tmp5993[i, j, 1, 1]) + constant_term(tmp5994[i, j, 1, 2]), order)
                        tmp5996[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp5995[i, j, 1, 1]) + constant_term(tmp5996[i, j, 1, 3]), order)
                        tmp5998[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp5999[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp6000[i, j, 2, 1] = Taylor1(constant_term(tmp5998[i, j, 2, 1]) + constant_term(tmp5999[i, j, 2, 2]), order)
                        tmp6001[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp6000[i, j, 2, 1]) + constant_term(tmp6001[i, j, 2, 3]), order)
                        tmp6003[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp6004[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp6005[i, j, 3, 1] = Taylor1(constant_term(tmp6003[i, j, 3, 1]) + constant_term(tmp6004[i, j, 3, 2]), order)
                        tmp6006[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp6005[i, j, 3, 1]) + constant_term(tmp6006[i, j, 3, 3]), order)
                        tmp6008[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp6009[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp6010[i, j, 1, 1] = Taylor1(constant_term(tmp6008[i, j, 1, 1]) + constant_term(tmp6009[i, j, 1, 2]), order)
                        tmp6011[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp6010[i, j, 1, 1]) + constant_term(tmp6011[i, j, 1, 3]), order)
                        tmp6013[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp6014[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp6015[i, j, 2, 1] = Taylor1(constant_term(tmp6013[i, j, 2, 1]) + constant_term(tmp6014[i, j, 2, 2]), order)
                        tmp6016[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp6015[i, j, 2, 1]) + constant_term(tmp6016[i, j, 2, 3]), order)
                        tmp6018[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp6019[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp6020[i, j, 3, 1] = Taylor1(constant_term(tmp6018[i, j, 3, 1]) + constant_term(tmp6019[i, j, 3, 2]), order)
                        tmp6021[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp6020[i, j, 3, 1]) + constant_term(tmp6021[i, j, 3, 3]), order)
                        tmp6023[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp6024[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp6025[i, j, 1, 1] = Taylor1(constant_term(tmp6023[i, j, 1, 1]) + constant_term(tmp6024[i, j, 1, 2]), order)
                        tmp6026[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp6025[i, j, 1, 1]) + constant_term(tmp6026[i, j, 1, 3]), order)
                        tmp6028[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp6029[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp6030[i, j, 2, 1] = Taylor1(constant_term(tmp6028[i, j, 2, 1]) + constant_term(tmp6029[i, j, 2, 2]), order)
                        tmp6031[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp6030[i, j, 2, 1]) + constant_term(tmp6031[i, j, 2, 3]), order)
                        tmp6033[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp6034[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp6035[i, j, 3, 1] = Taylor1(constant_term(tmp6033[i, j, 3, 1]) + constant_term(tmp6034[i, j, 3, 2]), order)
                        tmp6036[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp6035[i, j, 3, 1]) + constant_term(tmp6036[i, j, 3, 3]), order)
                        tmp6038[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                        tmp6039[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                        tmp6040[i, j, 1, 1] = Taylor1(constant_term(tmp6038[i, j, 1, 1]) + constant_term(tmp6039[i, j, 2, 1]), order)
                        tmp6041[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                        F_JCS_x[i, j] = Taylor1(constant_term(tmp6040[i, j, 1, 1]) + constant_term(tmp6041[i, j, 3, 1]), order)
                        tmp6043[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                        tmp6044[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                        tmp6045[i, j, 1, 2] = Taylor1(constant_term(tmp6043[i, j, 1, 2]) + constant_term(tmp6044[i, j, 2, 2]), order)
                        tmp6046[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                        F_JCS_y[i, j] = Taylor1(constant_term(tmp6045[i, j, 1, 2]) + constant_term(tmp6046[i, j, 3, 2]), order)
                        tmp6048[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                        tmp6049[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                        tmp6050[i, j, 1, 3] = Taylor1(constant_term(tmp6048[i, j, 1, 3]) + constant_term(tmp6049[i, j, 2, 3]), order)
                        tmp6051[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                        F_JCS_z[i, j] = Taylor1(constant_term(tmp6050[i, j, 1, 3]) + constant_term(tmp6051[i, j, 3, 3]), order)
                    end
                end
            end
        end
    tmp6053 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp6053 .= Taylor1(zero(_S), order)
    tmp6055 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp6055 .= Taylor1(zero(_S), order)
    tmp6057 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp6057 .= Taylor1(zero(_S), order)
    tmp6059 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp6059 .= Taylor1(zero(_S), order)
    tmp6061 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp6061 .= Taylor1(zero(_S), order)
    tmp6063 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp6063 .= Taylor1(zero(_S), order)
    tmp6065 = Array{Taylor1{_S}}(undef, size(Y))
    tmp6065 .= Taylor1(zero(_S), order)
    tmp6066 = Array{Taylor1{_S}}(undef, size(Z))
    tmp6066 .= Taylor1(zero(_S), order)
    tmp6067 = Array{Taylor1{_S}}(undef, size(tmp6065))
    tmp6067 .= Taylor1(zero(_S), order)
    tmp6069 = Array{Taylor1{_S}}(undef, size(Z))
    tmp6069 .= Taylor1(zero(_S), order)
    tmp6070 = Array{Taylor1{_S}}(undef, size(X))
    tmp6070 .= Taylor1(zero(_S), order)
    tmp6071 = Array{Taylor1{_S}}(undef, size(tmp6069))
    tmp6071 .= Taylor1(zero(_S), order)
    tmp6073 = Array{Taylor1{_S}}(undef, size(X))
    tmp6073 .= Taylor1(zero(_S), order)
    tmp6074 = Array{Taylor1{_S}}(undef, size(Y))
    tmp6074 .= Taylor1(zero(_S), order)
    tmp6075 = Array{Taylor1{_S}}(undef, size(tmp6073))
    tmp6075 .= Taylor1(zero(_S), order)
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp6053[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp6053[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp6055[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp6055[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp6057[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp6057[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp6059[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp6059[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp6061[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp6061[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp6063[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp6063[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp6065[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp6066[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp6067[i, j] = Taylor1(constant_term(tmp6065[i, j]) - constant_term(tmp6066[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp6067[i, j]), order)
                        tmp6069[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp6070[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp6071[i, j] = Taylor1(constant_term(tmp6069[i, j]) - constant_term(tmp6070[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp6071[i, j]), order)
                        tmp6073[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp6074[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp6075[i, j] = Taylor1(constant_term(tmp6073[i, j]) - constant_term(tmp6074[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp6075[i, j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp6087 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp6087 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp6093 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp6093 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp6093))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp6096 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp6096 .= Taylor1(zero(_S), order)
    tmp6099 = Array{Taylor1{_S}}(undef, size(rij_dot_vi_div_rij_sq))
    tmp6099 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    #= In[33]:713 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                    ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                    _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                    sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                    tmp6087[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                    sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp6087[i, j]), order)
                    ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                    Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                    Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                    Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                    tmp6093[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                    Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp6093[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                    tmp6096[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                    rij_dot_vi_div_rij_sq[i, j] = Taylor1(constant_term(tmp6096[i, j]) / constant_term(r_p2[i, j]), order)
                    tmp6099[i, j] = Taylor1(constant_term(1.5) * constant_term(rij_dot_vi_div_rij_sq[i, j]), order)
                    pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp6099[i, j]), order)
                    pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
                end
            end
            pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp6106 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp6106 .= Taylor1(zero(_S), order)
    tmp6107 = Array{Taylor1{_S}}(undef, size(tmp6106))
    tmp6107 .= Taylor1(zero(_S), order)
    tmp6108 = Array{Taylor1{_S}}(undef, size(tmp6107))
    tmp6108 .= Taylor1(zero(_S), order)
    tmp6116 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp6116 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp6119 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp6119 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp6122 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp6122 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    #= In[33]:752 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                    pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                    pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                    tmp6106[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                    tmp6107[i, j] = Taylor1(constant_term(tmp6106[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                    tmp6108[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp6107[i, j]), order)
                    pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp6108[i, j]), order)
                    X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                    Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                    Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                    pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                    pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                    pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                    tmp6116[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                    termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp6116[i, j]), order)
                    sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                    pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                    tmp6119[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                    termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp6119[i, j]), order)
                    sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                    pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                    tmp6122[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                    termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp6122[i, j]), order)
                    sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                    pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
                end
            end
            postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
            postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
            postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
        end
    x0s_M = Taylor1(identity(constant_term(r_star_M_0[1])), order)
    y0s_M = Taylor1(identity(constant_term(r_star_M_0[2])), order)
    z0s_M = Taylor1(identity(constant_term(r_star_M_0[3])), order)
    tmp6129 = Taylor1(constant_term(x0s_M) ^ float(constant_term(2)), order)
    tmp6131 = Taylor1(constant_term(y0s_M) ^ float(constant_term(2)), order)
    ρ0s2_M = Taylor1(constant_term(tmp6129) + constant_term(tmp6131), order)
    ρ0s_M = Taylor1(sqrt(constant_term(ρ0s2_M)), order)
    z0s2_M = Taylor1(constant_term(z0s_M) ^ float(constant_term(2)), order)
    r0s2_M = Taylor1(constant_term(ρ0s2_M) + constant_term(z0s2_M), order)
    r0s_M = Taylor1(sqrt(constant_term(r0s2_M)), order)
    r0s5_M = Taylor1(constant_term(r0s_M) ^ float(constant_term(5)), order)
    x0s_S = Taylor1(identity(constant_term(r_star_S_0[1])), order)
    y0s_S = Taylor1(identity(constant_term(r_star_S_0[2])), order)
    z0s_S = Taylor1(identity(constant_term(r_star_S_0[3])), order)
    tmp6141 = Taylor1(constant_term(x0s_S) ^ float(constant_term(2)), order)
    tmp6143 = Taylor1(constant_term(y0s_S) ^ float(constant_term(2)), order)
    ρ0s2_S = Taylor1(constant_term(tmp6141) + constant_term(tmp6143), order)
    ρ0s_S = Taylor1(sqrt(constant_term(ρ0s2_S)), order)
    z0s2_S = Taylor1(constant_term(z0s_S) ^ float(constant_term(2)), order)
    r0s2_S = Taylor1(constant_term(ρ0s2_S) + constant_term(z0s2_S), order)
    r0s_S = Taylor1(sqrt(constant_term(r0s2_S)), order)
    r0s5_S = Taylor1(constant_term(r0s_S) ^ float(constant_term(5)), order)
    tmp6153 = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_0[3]), order)
    tmp6155 = Taylor1(constant_term(tmp6153) ^ float(constant_term(2)), order)
    tmp6157 = Taylor1(constant_term(r_xy[mo, ea]) * constant_term(ρ0s_M), order)
    tmp6159 = Taylor1(constant_term(tmp6157) ^ float(constant_term(2)), order)
    tmp6160 = Taylor1(constant_term(0.5) * constant_term(tmp6159), order)
    tmp6161 = Taylor1(constant_term(tmp6155) + constant_term(tmp6160), order)
    tmp6162 = Taylor1(constant_term(tmp6161) / constant_term(r_p2[mo, ea]), order)
    tmp6163 = Taylor1(constant_term(5) * constant_term(tmp6162), order)
    coeff0_M = Taylor1(constant_term(r0s2_M) - constant_term(tmp6163), order)
    tmp6166 = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_0[3]), order)
    tmp6168 = Taylor1(constant_term(tmp6166) ^ float(constant_term(2)), order)
    tmp6170 = Taylor1(constant_term(r_xy[mo, ea]) * constant_term(ρ0s_S), order)
    tmp6172 = Taylor1(constant_term(tmp6170) ^ float(constant_term(2)), order)
    tmp6173 = Taylor1(constant_term(0.5) * constant_term(tmp6172), order)
    tmp6174 = Taylor1(constant_term(tmp6168) + constant_term(tmp6173), order)
    tmp6175 = Taylor1(constant_term(tmp6174) / constant_term(r_p2[mo, ea]), order)
    tmp6176 = Taylor1(constant_term(5) * constant_term(tmp6175), order)
    coeff0_S = Taylor1(constant_term(r0s2_S) - constant_term(tmp6176), order)
    k_20E_div_r0s5_M = Taylor1(constant_term(k_20E) / constant_term(r0s5_M), order)
    k_20E_div_r0s5_S = Taylor1(constant_term(k_20E) / constant_term(r0s5_S), order)
    tmp6180 = Taylor1(constant_term(ρ0s2_M) + constant_term(coeff0_M), order)
    tmp6181 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp6180), order)
    a_tid_0_M_x = Taylor1(constant_term(tmp6181) * constant_term(X_bf[mo, ea]), order)
    tmp6183 = Taylor1(constant_term(ρ0s2_M) + constant_term(coeff0_M), order)
    tmp6184 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp6183), order)
    a_tid_0_M_y = Taylor1(constant_term(tmp6184) * constant_term(Y_bf[mo, ea]), order)
    tmp6187 = Taylor1(constant_term(2) * constant_term(z0s2_M), order)
    tmp6188 = Taylor1(constant_term(tmp6187) + constant_term(coeff0_M), order)
    tmp6189 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp6188), order)
    a_tid_0_M_z = Taylor1(constant_term(tmp6189) * constant_term(Z_bf[mo, ea]), order)
    tmp6191 = Taylor1(constant_term(ρ0s2_S) + constant_term(coeff0_S), order)
    tmp6192 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp6191), order)
    a_tid_0_S_x = Taylor1(constant_term(tmp6192) * constant_term(X_bf[mo, ea]), order)
    tmp6194 = Taylor1(constant_term(ρ0s2_S) + constant_term(coeff0_S), order)
    tmp6195 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp6194), order)
    a_tid_0_S_y = Taylor1(constant_term(tmp6195) * constant_term(Y_bf[mo, ea]), order)
    tmp6198 = Taylor1(constant_term(2) * constant_term(z0s2_S), order)
    tmp6199 = Taylor1(constant_term(tmp6198) + constant_term(coeff0_S), order)
    tmp6200 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp6199), order)
    a_tid_0_S_z = Taylor1(constant_term(tmp6200) * constant_term(Z_bf[mo, ea]), order)
    x1s_M = Taylor1(identity(constant_term(r_star_M_1[1])), order)
    y1s_M = Taylor1(identity(constant_term(r_star_M_1[2])), order)
    z1s_M = Taylor1(identity(constant_term(r_star_M_1[3])), order)
    tmp6203 = Taylor1(constant_term(x1s_M) ^ float(constant_term(2)), order)
    tmp6205 = Taylor1(constant_term(y1s_M) ^ float(constant_term(2)), order)
    ρ1s2_M = Taylor1(constant_term(tmp6203) + constant_term(tmp6205), order)
    ρ1s_M = Taylor1(sqrt(constant_term(ρ1s2_M)), order)
    z1s2_M = Taylor1(constant_term(z1s_M) ^ float(constant_term(2)), order)
    r1s2_M = Taylor1(constant_term(ρ1s2_M) + constant_term(z1s2_M), order)
    r1s_M = Taylor1(sqrt(constant_term(r1s2_M)), order)
    r1s5_M = Taylor1(constant_term(r1s_M) ^ float(constant_term(5)), order)
    x1s_S = Taylor1(identity(constant_term(r_star_S_1[1])), order)
    y1s_S = Taylor1(identity(constant_term(r_star_S_1[2])), order)
    z1s_S = Taylor1(identity(constant_term(r_star_S_1[3])), order)
    tmp6215 = Taylor1(constant_term(x1s_S) ^ float(constant_term(2)), order)
    tmp6217 = Taylor1(constant_term(y1s_S) ^ float(constant_term(2)), order)
    ρ1s2_S = Taylor1(constant_term(tmp6215) + constant_term(tmp6217), order)
    ρ1s_S = Taylor1(sqrt(constant_term(ρ1s2_S)), order)
    z1s2_S = Taylor1(constant_term(z1s_S) ^ float(constant_term(2)), order)
    r1s2_S = Taylor1(constant_term(ρ1s2_S) + constant_term(z1s2_S), order)
    r1s_S = Taylor1(sqrt(constant_term(r1s2_S)), order)
    r1s5_S = Taylor1(constant_term(r1s_S) ^ float(constant_term(5)), order)
    tmp6226 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_M_1[1]), order)
    tmp6227 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_1[2]), order)
    coeff1_1_M = Taylor1(constant_term(tmp6226) + constant_term(tmp6227), order)
    tmp6229 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_S_1[1]), order)
    tmp6230 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_1[2]), order)
    coeff1_1_S = Taylor1(constant_term(tmp6229) + constant_term(tmp6230), order)
    coeff2_1_M = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_1[3]), order)
    coeff2_1_S = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_1[3]), order)
    tmp6235 = Taylor1(constant_term(10) * constant_term(coeff1_1_M), order)
    tmp6236 = Taylor1(constant_term(tmp6235) * constant_term(coeff2_1_M), order)
    coeff3_1_M = Taylor1(constant_term(tmp6236) / constant_term(r_p2[mo, ea]), order)
    tmp6239 = Taylor1(constant_term(10) * constant_term(coeff1_1_S), order)
    tmp6240 = Taylor1(constant_term(tmp6239) * constant_term(coeff2_1_S), order)
    coeff3_1_S = Taylor1(constant_term(tmp6240) / constant_term(r_p2[mo, ea]), order)
    k_21E_div_r1s5_M = Taylor1(constant_term(k_21E) / constant_term(r1s5_M), order)
    k_21E_div_r1s5_S = Taylor1(constant_term(k_21E) / constant_term(r1s5_S), order)
    tmp6245 = Taylor1(constant_term(2) * constant_term(coeff2_1_M), order)
    tmp6246 = Taylor1(constant_term(tmp6245) * constant_term(r_star_M_1[1]), order)
    tmp6247 = Taylor1(constant_term(coeff3_1_M) * constant_term(X_bf[mo, ea]), order)
    tmp6248 = Taylor1(constant_term(tmp6246) - constant_term(tmp6247), order)
    a_tid_1_M_x = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp6248), order)
    tmp6251 = Taylor1(constant_term(2) * constant_term(coeff2_1_M), order)
    tmp6252 = Taylor1(constant_term(tmp6251) * constant_term(r_star_M_1[2]), order)
    tmp6253 = Taylor1(constant_term(coeff3_1_M) * constant_term(Y_bf[mo, ea]), order)
    tmp6254 = Taylor1(constant_term(tmp6252) - constant_term(tmp6253), order)
    a_tid_1_M_y = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp6254), order)
    tmp6257 = Taylor1(constant_term(2) * constant_term(coeff1_1_M), order)
    tmp6258 = Taylor1(constant_term(tmp6257) * constant_term(r_star_M_1[3]), order)
    tmp6259 = Taylor1(constant_term(coeff3_1_M) * constant_term(Z_bf[mo, ea]), order)
    tmp6260 = Taylor1(constant_term(tmp6258) - constant_term(tmp6259), order)
    a_tid_1_M_z = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp6260), order)
    tmp6263 = Taylor1(constant_term(2) * constant_term(coeff2_1_S), order)
    tmp6264 = Taylor1(constant_term(tmp6263) * constant_term(r_star_S_1[1]), order)
    tmp6265 = Taylor1(constant_term(coeff3_1_S) * constant_term(X_bf[mo, ea]), order)
    tmp6266 = Taylor1(constant_term(tmp6264) - constant_term(tmp6265), order)
    a_tid_1_S_x = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp6266), order)
    tmp6269 = Taylor1(constant_term(2) * constant_term(coeff2_1_S), order)
    tmp6270 = Taylor1(constant_term(tmp6269) * constant_term(r_star_S_1[2]), order)
    tmp6271 = Taylor1(constant_term(coeff3_1_S) * constant_term(Y_bf[mo, ea]), order)
    tmp6272 = Taylor1(constant_term(tmp6270) - constant_term(tmp6271), order)
    a_tid_1_S_y = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp6272), order)
    tmp6275 = Taylor1(constant_term(2) * constant_term(coeff1_1_S), order)
    tmp6276 = Taylor1(constant_term(tmp6275) * constant_term(r_star_S_1[3]), order)
    tmp6277 = Taylor1(constant_term(coeff3_1_S) * constant_term(Z_bf[mo, ea]), order)
    tmp6278 = Taylor1(constant_term(tmp6276) - constant_term(tmp6277), order)
    a_tid_1_S_z = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp6278), order)
    x2s_M = Taylor1(identity(constant_term(r_star_M_2[1])), order)
    y2s_M = Taylor1(identity(constant_term(r_star_M_2[2])), order)
    z2s_M = Taylor1(identity(constant_term(r_star_M_2[3])), order)
    tmp6281 = Taylor1(constant_term(x2s_M) ^ float(constant_term(2)), order)
    tmp6283 = Taylor1(constant_term(y2s_M) ^ float(constant_term(2)), order)
    ρ2s2_M = Taylor1(constant_term(tmp6281) + constant_term(tmp6283), order)
    ρ2s_M = Taylor1(sqrt(constant_term(ρ2s2_M)), order)
    z2s2_M = Taylor1(constant_term(z2s_M) ^ float(constant_term(2)), order)
    r2s2_M = Taylor1(constant_term(ρ2s2_M) + constant_term(z2s2_M), order)
    r2s_M = Taylor1(sqrt(constant_term(r2s2_M)), order)
    r2s5_M = Taylor1(constant_term(r2s_M) ^ float(constant_term(5)), order)
    x2s_S = Taylor1(identity(constant_term(r_star_S_2[1])), order)
    y2s_S = Taylor1(identity(constant_term(r_star_S_2[2])), order)
    z2s_S = Taylor1(identity(constant_term(r_star_S_2[3])), order)
    tmp6293 = Taylor1(constant_term(x2s_S) ^ float(constant_term(2)), order)
    tmp6295 = Taylor1(constant_term(y2s_S) ^ float(constant_term(2)), order)
    ρ2s2_S = Taylor1(constant_term(tmp6293) + constant_term(tmp6295), order)
    ρ2s_S = Taylor1(sqrt(constant_term(ρ2s2_S)), order)
    z2s2_S = Taylor1(constant_term(z2s_S) ^ float(constant_term(2)), order)
    r2s2_S = Taylor1(constant_term(ρ2s2_S) + constant_term(z2s2_S), order)
    r2s_S = Taylor1(sqrt(constant_term(r2s2_S)), order)
    r2s5_S = Taylor1(constant_term(r2s_S) ^ float(constant_term(5)), order)
    tmp6304 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_M_2[1]), order)
    tmp6305 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_2[2]), order)
    coeff1_2_M = Taylor1(constant_term(tmp6304) + constant_term(tmp6305), order)
    tmp6307 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_S_2[1]), order)
    tmp6308 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_2[2]), order)
    coeff1_2_S = Taylor1(constant_term(tmp6307) + constant_term(tmp6308), order)
    tmp6312 = Taylor1(constant_term(coeff1_2_M) ^ float(constant_term(2)), order)
    tmp6315 = Taylor1(constant_term(r_xy[mo, ea]) ^ float(constant_term(2)), order)
    tmp6316 = Taylor1(constant_term(0.5) * constant_term(tmp6315), order)
    tmp6317 = Taylor1(constant_term(tmp6316) * constant_term(ρ2s2_M), order)
    tmp6318 = Taylor1(constant_term(tmp6312) - constant_term(tmp6317), order)
    tmp6319 = Taylor1(constant_term(5) * constant_term(tmp6318), order)
    coeff3_2_M = Taylor1(constant_term(tmp6319) / constant_term(r_p2[mo, ea]), order)
    tmp6323 = Taylor1(constant_term(coeff1_2_S) ^ float(constant_term(2)), order)
    tmp6326 = Taylor1(constant_term(r_xy[mo, ea]) ^ float(constant_term(2)), order)
    tmp6327 = Taylor1(constant_term(0.5) * constant_term(tmp6326), order)
    tmp6328 = Taylor1(constant_term(tmp6327) * constant_term(ρ2s2_S), order)
    tmp6329 = Taylor1(constant_term(tmp6323) - constant_term(tmp6328), order)
    tmp6330 = Taylor1(constant_term(5) * constant_term(tmp6329), order)
    coeff3_2_S = Taylor1(constant_term(tmp6330) / constant_term(r_p2[mo, ea]), order)
    k_22E_div_r2s5_M = Taylor1(constant_term(k_22E) / constant_term(r2s5_M), order)
    k_22E_div_r2s5_S = Taylor1(constant_term(k_22E) / constant_term(r2s5_S), order)
    tmp6335 = Taylor1(constant_term(2) * constant_term(coeff1_2_M), order)
    tmp6336 = Taylor1(constant_term(tmp6335) * constant_term(r_star_M_2[1]), order)
    tmp6337 = Taylor1(constant_term(ρ2s2_M) + constant_term(coeff3_2_M), order)
    tmp6338 = Taylor1(constant_term(tmp6337) * constant_term(X_bf[mo, ea]), order)
    tmp6339 = Taylor1(constant_term(tmp6336) - constant_term(tmp6338), order)
    a_tid_2_M_x = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp6339), order)
    tmp6342 = Taylor1(constant_term(2) * constant_term(coeff1_2_M), order)
    tmp6343 = Taylor1(constant_term(tmp6342) * constant_term(r_star_M_2[2]), order)
    tmp6344 = Taylor1(constant_term(ρ2s2_M) + constant_term(coeff3_2_M), order)
    tmp6345 = Taylor1(constant_term(tmp6344) * constant_term(Y_bf[mo, ea]), order)
    tmp6346 = Taylor1(constant_term(tmp6343) - constant_term(tmp6345), order)
    a_tid_2_M_y = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp6346), order)
    tmp6348 = Taylor1(-(constant_term(coeff3_2_M)), order)
    tmp6349 = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp6348), order)
    a_tid_2_M_z = Taylor1(constant_term(tmp6349) * constant_term(Z_bf[mo, ea]), order)
    tmp6352 = Taylor1(constant_term(2) * constant_term(coeff1_2_S), order)
    tmp6353 = Taylor1(constant_term(tmp6352) * constant_term(r_star_S_2[1]), order)
    tmp6354 = Taylor1(constant_term(ρ2s2_S) + constant_term(coeff3_2_S), order)
    tmp6355 = Taylor1(constant_term(tmp6354) * constant_term(X_bf[mo, ea]), order)
    tmp6356 = Taylor1(constant_term(tmp6353) - constant_term(tmp6355), order)
    a_tid_2_S_x = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp6356), order)
    tmp6359 = Taylor1(constant_term(2) * constant_term(coeff1_2_S), order)
    tmp6360 = Taylor1(constant_term(tmp6359) * constant_term(r_star_S_2[2]), order)
    tmp6361 = Taylor1(constant_term(ρ2s2_S) + constant_term(coeff3_2_S), order)
    tmp6362 = Taylor1(constant_term(tmp6361) * constant_term(Y_bf[mo, ea]), order)
    tmp6363 = Taylor1(constant_term(tmp6360) - constant_term(tmp6362), order)
    a_tid_2_S_y = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp6363), order)
    tmp6365 = Taylor1(-(constant_term(coeff3_2_S)), order)
    tmp6366 = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp6365), order)
    a_tid_2_S_z = Taylor1(constant_term(tmp6366) * constant_term(Z_bf[mo, ea]), order)
    tmp6368 = Taylor1(constant_term(RE_au) / constant_term(r_p1d2[mo, ea]), order)
    RE_div_r_p5 = Taylor1(constant_term(tmp6368) ^ float(constant_term(5)), order)
    aux_tidacc = Taylor1(constant_term(tid_num_coeff) * constant_term(RE_div_r_p5), order)
    a_tidal_coeff_M = Taylor1(constant_term(μ[mo]) * constant_term(aux_tidacc), order)
    a_tidal_coeff_S = Taylor1(constant_term(μ[su]) * constant_term(aux_tidacc), order)
    tmp6374 = Taylor1(constant_term(a_tid_0_M_x) + constant_term(a_tid_1_M_x), order)
    tmp6375 = Taylor1(constant_term(tmp6374) + constant_term(a_tid_2_M_x), order)
    tmp6376 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp6375), order)
    tmp6377 = Taylor1(constant_term(a_tid_0_S_x) + constant_term(a_tid_1_S_x), order)
    tmp6378 = Taylor1(constant_term(tmp6377) + constant_term(a_tid_2_S_x), order)
    tmp6379 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp6378), order)
    a_tidal_tod_x = Taylor1(constant_term(tmp6376) + constant_term(tmp6379), order)
    tmp6381 = Taylor1(constant_term(a_tid_0_M_y) + constant_term(a_tid_1_M_y), order)
    tmp6382 = Taylor1(constant_term(tmp6381) + constant_term(a_tid_2_M_y), order)
    tmp6383 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp6382), order)
    tmp6384 = Taylor1(constant_term(a_tid_0_S_y) + constant_term(a_tid_1_S_y), order)
    tmp6385 = Taylor1(constant_term(tmp6384) + constant_term(a_tid_2_S_y), order)
    tmp6386 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp6385), order)
    a_tidal_tod_y = Taylor1(constant_term(tmp6383) + constant_term(tmp6386), order)
    tmp6388 = Taylor1(constant_term(a_tid_0_M_z) + constant_term(a_tid_1_M_z), order)
    tmp6389 = Taylor1(constant_term(tmp6388) + constant_term(a_tid_2_M_z), order)
    tmp6390 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp6389), order)
    tmp6391 = Taylor1(constant_term(a_tid_0_S_z) + constant_term(a_tid_1_S_z), order)
    tmp6392 = Taylor1(constant_term(tmp6391) + constant_term(a_tid_2_S_z), order)
    tmp6393 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp6392), order)
    a_tidal_tod_z = Taylor1(constant_term(tmp6390) + constant_term(tmp6393), order)
    tmp6395 = Taylor1(constant_term(RotM[1, 1, ea]) * constant_term(a_tidal_tod_x), order)
    tmp6396 = Taylor1(constant_term(RotM[2, 1, ea]) * constant_term(a_tidal_tod_y), order)
    tmp6397 = Taylor1(constant_term(tmp6395) + constant_term(tmp6396), order)
    tmp6398 = Taylor1(constant_term(RotM[3, 1, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_x = Taylor1(constant_term(tmp6397) + constant_term(tmp6398), order)
    tmp6400 = Taylor1(constant_term(RotM[1, 2, ea]) * constant_term(a_tidal_tod_x), order)
    tmp6401 = Taylor1(constant_term(RotM[2, 2, ea]) * constant_term(a_tidal_tod_y), order)
    tmp6402 = Taylor1(constant_term(tmp6400) + constant_term(tmp6401), order)
    tmp6403 = Taylor1(constant_term(RotM[3, 2, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_y = Taylor1(constant_term(tmp6402) + constant_term(tmp6403), order)
    tmp6405 = Taylor1(constant_term(RotM[1, 3, ea]) * constant_term(a_tidal_tod_x), order)
    tmp6406 = Taylor1(constant_term(RotM[2, 3, ea]) * constant_term(a_tidal_tod_y), order)
    tmp6407 = Taylor1(constant_term(tmp6405) + constant_term(tmp6406), order)
    tmp6408 = Taylor1(constant_term(RotM[3, 3, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_z = Taylor1(constant_term(tmp6407) + constant_term(tmp6408), order)
    accX_mo_tides = Taylor1(constant_term(accX[mo]) + constant_term(a_tidal_x), order)
    accY_mo_tides = Taylor1(constant_term(accY[mo]) + constant_term(a_tidal_y), order)
    accZ_mo_tides = Taylor1(constant_term(accZ[mo]) + constant_term(a_tidal_z), order)
    accX[mo] = Taylor1(identity(constant_term(accX_mo_tides)), order)
    accY[mo] = Taylor1(identity(constant_term(accY_mo_tides)), order)
    accZ[mo] = Taylor1(identity(constant_term(accZ_mo_tides)), order)
    #= In[33]:990 =# Threads.@threads for i = 1:N_ext
            dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
            dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
            dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
        end
    #= In[33]:995 =# Threads.@threads for i = N_ext + 1:N
            dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
            dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
            dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
        end
    tmp6416 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp6417 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp6418 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp6419 = Taylor1(constant_term(tmp6417) + constant_term(tmp6418), order)
    Iω_x = Taylor1(constant_term(tmp6416) + constant_term(tmp6419), order)
    tmp6421 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp6422 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp6423 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp6424 = Taylor1(constant_term(tmp6422) + constant_term(tmp6423), order)
    Iω_y = Taylor1(constant_term(tmp6421) + constant_term(tmp6424), order)
    tmp6426 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp6427 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp6428 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp6429 = Taylor1(constant_term(tmp6427) + constant_term(tmp6428), order)
    Iω_z = Taylor1(constant_term(tmp6426) + constant_term(tmp6429), order)
    tmp6431 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp6432 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp6431) - constant_term(tmp6432), order)
    tmp6434 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp6435 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp6434) - constant_term(tmp6435), order)
    tmp6437 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp6438 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp6437) - constant_term(tmp6438), order)
    tmp6440 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp6441 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp6442 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp6443 = Taylor1(constant_term(tmp6441) + constant_term(tmp6442), order)
    dIω_x = Taylor1(constant_term(tmp6440) + constant_term(tmp6443), order)
    tmp6445 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp6446 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp6447 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp6448 = Taylor1(constant_term(tmp6446) + constant_term(tmp6447), order)
    dIω_y = Taylor1(constant_term(tmp6445) + constant_term(tmp6448), order)
    tmp6450 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp6451 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp6452 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp6453 = Taylor1(constant_term(tmp6451) + constant_term(tmp6452), order)
    dIω_z = Taylor1(constant_term(tmp6450) + constant_term(tmp6453), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp6458 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp6459 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp6460 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp6461 = Taylor1(constant_term(tmp6459) + constant_term(tmp6460), order)
    er_EM_1 = Taylor1(constant_term(tmp6458) + constant_term(tmp6461), order)
    tmp6463 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp6464 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp6465 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp6466 = Taylor1(constant_term(tmp6464) + constant_term(tmp6465), order)
    er_EM_2 = Taylor1(constant_term(tmp6463) + constant_term(tmp6466), order)
    tmp6468 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp6469 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp6470 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp6471 = Taylor1(constant_term(tmp6469) + constant_term(tmp6470), order)
    er_EM_3 = Taylor1(constant_term(tmp6468) + constant_term(tmp6471), order)
    tmp6473 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp6474 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp6475 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp6476 = Taylor1(constant_term(tmp6474) + constant_term(tmp6475), order)
    p_E_1 = Taylor1(constant_term(tmp6473) + constant_term(tmp6476), order)
    tmp6478 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp6479 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp6480 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp6481 = Taylor1(constant_term(tmp6479) + constant_term(tmp6480), order)
    p_E_2 = Taylor1(constant_term(tmp6478) + constant_term(tmp6481), order)
    tmp6483 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp6484 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp6485 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp6486 = Taylor1(constant_term(tmp6484) + constant_term(tmp6485), order)
    p_E_3 = Taylor1(constant_term(tmp6483) + constant_term(tmp6486), order)
    tmp6488 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp6489 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp6490 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp6491 = Taylor1(constant_term(tmp6489) + constant_term(tmp6490), order)
    I_er_EM_1 = Taylor1(constant_term(tmp6488) + constant_term(tmp6491), order)
    tmp6493 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp6494 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp6495 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp6496 = Taylor1(constant_term(tmp6494) + constant_term(tmp6495), order)
    I_er_EM_2 = Taylor1(constant_term(tmp6493) + constant_term(tmp6496), order)
    tmp6498 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp6499 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp6500 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp6501 = Taylor1(constant_term(tmp6499) + constant_term(tmp6500), order)
    I_er_EM_3 = Taylor1(constant_term(tmp6498) + constant_term(tmp6501), order)
    tmp6503 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp6504 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp6505 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp6506 = Taylor1(constant_term(tmp6504) + constant_term(tmp6505), order)
    I_p_E_1 = Taylor1(constant_term(tmp6503) + constant_term(tmp6506), order)
    tmp6508 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp6509 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp6510 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp6511 = Taylor1(constant_term(tmp6509) + constant_term(tmp6510), order)
    I_p_E_2 = Taylor1(constant_term(tmp6508) + constant_term(tmp6511), order)
    tmp6513 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp6514 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp6515 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp6516 = Taylor1(constant_term(tmp6514) + constant_term(tmp6515), order)
    I_p_E_3 = Taylor1(constant_term(tmp6513) + constant_term(tmp6516), order)
    tmp6518 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp6519 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp6518) - constant_term(tmp6519), order)
    tmp6521 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp6522 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp6521) - constant_term(tmp6522), order)
    tmp6524 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp6525 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp6524) - constant_term(tmp6525), order)
    tmp6527 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp6528 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp6527) - constant_term(tmp6528), order)
    tmp6530 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp6531 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp6530) - constant_term(tmp6531), order)
    tmp6533 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp6534 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp6533) - constant_term(tmp6534), order)
    tmp6536 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp6537 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp6536) - constant_term(tmp6537), order)
    tmp6539 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp6540 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp6539) - constant_term(tmp6540), order)
    tmp6542 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp6543 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp6542) - constant_term(tmp6543), order)
    tmp6545 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp6546 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp6545) - constant_term(tmp6546), order)
    tmp6548 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp6549 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp6548) - constant_term(tmp6549), order)
    tmp6551 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp6552 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp6551) - constant_term(tmp6552), order)
    tmp6556 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp6557 = Taylor1(constant_term(7) * constant_term(tmp6556), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp6557), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp6562 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp6562), order)
    tmp6564 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp6565 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp6566 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp6565), order)
    tmp6567 = Taylor1(constant_term(tmp6564) + constant_term(tmp6566), order)
    tmp6569 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp6570 = Taylor1(constant_term(tmp6567) - constant_term(tmp6569), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp6570), order)
    tmp6572 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp6573 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp6574 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp6573), order)
    tmp6575 = Taylor1(constant_term(tmp6572) + constant_term(tmp6574), order)
    tmp6577 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp6578 = Taylor1(constant_term(tmp6575) - constant_term(tmp6577), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp6578), order)
    tmp6580 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp6581 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp6582 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp6581), order)
    tmp6583 = Taylor1(constant_term(tmp6580) + constant_term(tmp6582), order)
    tmp6585 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp6586 = Taylor1(constant_term(tmp6583) - constant_term(tmp6585), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp6586), order)
    tmp6588 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp6589 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp6590 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp6591 = Taylor1(constant_term(tmp6589) + constant_term(tmp6590), order)
    N_1_LMF = Taylor1(constant_term(tmp6588) + constant_term(tmp6591), order)
    tmp6593 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp6594 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp6595 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp6596 = Taylor1(constant_term(tmp6594) + constant_term(tmp6595), order)
    N_2_LMF = Taylor1(constant_term(tmp6593) + constant_term(tmp6596), order)
    tmp6598 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp6599 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp6600 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp6601 = Taylor1(constant_term(tmp6599) + constant_term(tmp6600), order)
    N_3_LMF = Taylor1(constant_term(tmp6598) + constant_term(tmp6601), order)
    tmp6603 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp6604 = Taylor1(constant_term(k_ν) * constant_term(tmp6603), order)
    tmp6605 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp6606 = Taylor1(constant_term(tmp6605) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp6604) - constant_term(tmp6606), order)
    tmp6608 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp6609 = Taylor1(constant_term(k_ν) * constant_term(tmp6608), order)
    tmp6610 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp6611 = Taylor1(constant_term(tmp6610) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp6609) + constant_term(tmp6611), order)
    tmp6613 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp6613), order)
    tmp6615 = Taylor1(constant_term(μ[mo]) * constant_term(N_1_LMF), order)
    tmp6616 = Taylor1(constant_term(N_MfigM_figE_1) + constant_term(tmp6615), order)
    tmp6617 = Taylor1(constant_term(tmp6616) + constant_term(N_cmb_1), order)
    tmp6618 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp6617) - constant_term(tmp6618), order)
    tmp6620 = Taylor1(constant_term(μ[mo]) * constant_term(N_2_LMF), order)
    tmp6621 = Taylor1(constant_term(N_MfigM_figE_2) + constant_term(tmp6620), order)
    tmp6622 = Taylor1(constant_term(tmp6621) + constant_term(N_cmb_2), order)
    tmp6623 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp6622) - constant_term(tmp6623), order)
    tmp6625 = Taylor1(constant_term(μ[mo]) * constant_term(N_3_LMF), order)
    tmp6626 = Taylor1(constant_term(N_MfigM_figE_3) + constant_term(tmp6625), order)
    tmp6627 = Taylor1(constant_term(tmp6626) + constant_term(N_cmb_3), order)
    tmp6628 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp6627) - constant_term(tmp6628), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp6633 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp6634 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp6633) - constant_term(tmp6634), order)
    tmp6636 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp6637 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp6636) - constant_term(tmp6637), order)
    tmp6639 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp6640 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp6639) - constant_term(tmp6640), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp6645 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp6776 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp6646 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp6645), order)
    tmp6647 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp6777 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp6648 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp6647), order)
    tmp6649 = Taylor1(constant_term(tmp6646) + constant_term(tmp6648), order)
    tmp6650 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp6778 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp6649) / constant_term(tmp6650), order)
    tmp6652 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp6779 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp6653 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp6652), order)
    tmp6654 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp6780 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp6655 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp6654), order)
    dq[6N + 2] = Taylor1(constant_term(tmp6653) - constant_term(tmp6655), order)
    tmp6657 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp6781 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp6658 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp6657), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp6658), order)
    tmp6660 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp6661 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp6662 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp6663 = Taylor1(constant_term(tmp6661) + constant_term(tmp6662), order)
    dq[6N + 4] = Taylor1(constant_term(tmp6660) + constant_term(tmp6663), order)
    tmp6665 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp6666 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp6667 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp6668 = Taylor1(constant_term(tmp6666) + constant_term(tmp6667), order)
    dq[6N + 5] = Taylor1(constant_term(tmp6665) + constant_term(tmp6668), order)
    tmp6670 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp6671 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp6672 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp6673 = Taylor1(constant_term(tmp6671) + constant_term(tmp6672), order)
    dq[6N + 6] = Taylor1(constant_term(tmp6670) + constant_term(tmp6673), order)
    tmp6675 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp6782 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp6676 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp6675), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp6676)), order)
    tmp6678 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp6783 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp6679 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp6678), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp6679), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    tmp6684 = Taylor1(constant_term(newtonianCoeff[su, ea]) * constant_term(J2_t[su]), order)
    tmp6687 = Taylor1(constant_term(sin_ϕ[su, ea]) ^ float(constant_term(2)), order)
    tmp6688 = Taylor1(constant_term(3) * constant_term(tmp6687), order)
    tmp6689 = Taylor1(constant_term(one_t) - constant_term(tmp6688), order)
    tmp6691 = Taylor1(constant_term(tmp6689) / constant_term(2), order)
    w_LE = Taylor1(constant_term(tmp6684) * constant_term(tmp6691), order)
    tmp6694 = Taylor1(constant_term(0.5) * constant_term(v2[ea]), order)
    tmp6695 = Taylor1(constant_term(tmp6694) + constant_term(newtonianNb_Potential[ea]), order)
    α_TTmTDB = Taylor1(constant_term(tmp6695) + constant_term(w_LE), order)
    v4E = Taylor1(constant_term(v2[ea]) ^ float(constant_term(2)), order)
    ϕ_Earth_Newtonian_sq = Taylor1(constant_term(newtonianNb_Potential[ea]) ^ float(constant_term(2)), order)
    tmp6702 = Taylor1(constant_term(ϕ_Earth_Newtonian_sq) / constant_term(2), order)
    tmp6704 = Taylor1(constant_term(v4E) / constant_term(8), order)
    β_TTmTDB = Taylor1(constant_term(tmp6702) - constant_term(tmp6704), order)
    β_TTmTDB_i_1 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    β_TTmTDB_i_1 .= Taylor1(zero(_S), order)
    tmp6709 = Array{Taylor1{_S}}(undef, size(v2))
    tmp6709 .= Taylor1(zero(_S), order)
    tmp6711 = Array{Taylor1{_S}}(undef, size(v2))
    tmp6711 .= Taylor1(zero(_S), order)
    tmp6712 = Array{Taylor1{_S}}(undef, size(tmp6709))
    tmp6712 .= Taylor1(zero(_S), order)
    β_TTmTDB_i_2 = Array{Taylor1{_S}}(undef, size(newtonianNb_Potential))
    β_TTmTDB_i_2 .= Taylor1(zero(_S), order)
    tmp6714 = Array{Taylor1{_S}}(undef, size(X))
    tmp6714 .= Taylor1(zero(_S), order)
    tmp6715 = Array{Taylor1{_S}}(undef, size(Y))
    tmp6715 .= Taylor1(zero(_S), order)
    tmp6716 = Array{Taylor1{_S}}(undef, size(tmp6714))
    tmp6716 .= Taylor1(zero(_S), order)
    tmp6717 = Array{Taylor1{_S}}(undef, size(Z))
    tmp6717 .= Taylor1(zero(_S), order)
    tmp6718 = Array{Taylor1{_S}}(undef, size(tmp6716))
    tmp6718 .= Taylor1(zero(_S), order)
    β_TTmTDB_i_3 = Array{Taylor1{_S}}(undef, size(tmp6718))
    β_TTmTDB_i_3 .= Taylor1(zero(_S), order)
    β_TTmTDB_i_4 = Array{Taylor1{_S}}(undef, size(rij_dot_vi_div_rij_sq))
    β_TTmTDB_i_4 .= Taylor1(zero(_S), order)
    tmp6723 = Array{Taylor1{_S}}(undef, size(β_TTmTDB_i_1))
    tmp6723 .= Taylor1(zero(_S), order)
    tmp6724 = Array{Taylor1{_S}}(undef, size(β_TTmTDB_i_3))
    tmp6724 .= Taylor1(zero(_S), order)
    β_TTmTDB_i = Array{Taylor1{_S}}(undef, size(tmp6723))
    β_TTmTDB_i .= Taylor1(zero(_S), order)
    tmp6726 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    tmp6726 .= Taylor1(zero(_S), order)
    temp_β_TTmTDB = Array{Taylor1{_S}}(undef, size(tmp6726))
    temp_β_TTmTDB .= Taylor1(zero(_S), order)
    #= In[33]:1161 =# Threads.@threads for i = 1:N
            if i == ea
                continue
            else
                β_TTmTDB_i_1[i, ea] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, ea]), order)
                tmp6709[ea] = Taylor1(constant_term(1.5) * constant_term(v2[ea]), order)
                tmp6711[i] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                tmp6712[ea] = Taylor1(constant_term(tmp6709[ea]) + constant_term(tmp6711[i]), order)
                β_TTmTDB_i_2[i] = Taylor1(constant_term(newtonianNb_Potential[i]) - constant_term(tmp6712[ea]), order)
                tmp6714[i, ea] = Taylor1(constant_term(dq[3 * (N + i) - 2]) * constant_term(X[i, ea]), order)
                tmp6715[i, ea] = Taylor1(constant_term(dq[3 * (N + i) - 1]) * constant_term(Y[i, ea]), order)
                tmp6716[i, ea] = Taylor1(constant_term(tmp6714[i, ea]) + constant_term(tmp6715[i, ea]), order)
                tmp6717[i, ea] = Taylor1(constant_term(dq[3 * (N + i)]) * constant_term(Z[i, ea]), order)
                tmp6718[i, ea] = Taylor1(constant_term(tmp6716[i, ea]) + constant_term(tmp6717[i, ea]), order)
                β_TTmTDB_i_3[i, ea] = Taylor1(constant_term(tmp6718[i, ea]) / constant_term(2), order)
                β_TTmTDB_i_4[i, ea] = Taylor1(constant_term(rij_dot_vi_div_rij_sq[i, ea]) / constant_term(2), order)
                tmp6723[i, ea] = Taylor1(constant_term(β_TTmTDB_i_1[i, ea]) + constant_term(β_TTmTDB_i_2[i]), order)
                tmp6724[i, ea] = Taylor1(constant_term(β_TTmTDB_i_3[i, ea]) + constant_term(β_TTmTDB_i_4[i, ea]), order)
                β_TTmTDB_i[i, ea] = Taylor1(constant_term(tmp6723[i, ea]) + constant_term(tmp6724[i, ea]), order)
                tmp6726[i, ea] = Taylor1(constant_term(newtonian1b_Potential[i, ea]) * constant_term(β_TTmTDB_i[i, ea]), order)
                temp_β_TTmTDB[i, ea] = Taylor1(constant_term(β_TTmTDB) + constant_term(tmp6726[i, ea]), order)
                β_TTmTDB = Taylor1(identity(constant_term(temp_β_TTmTDB[i, ea])), order)
            end
        end
    tmp6728 = Taylor1(constant_term(c_m2) * constant_term(α_TTmTDB), order)
    tmp6729 = Taylor1(constant_term(L_B) - constant_term(tmp6728), order)
    tmp6730 = Taylor1(constant_term(tmp6729) * constant_term(one_plus_L_B_minus_L_G), order)
    tmp6731 = Taylor1(constant_term(c_m4) * constant_term(β_TTmTDB), order)
    tmp6732 = Taylor1(constant_term(tmp6731) - constant_term(L_G), order)
    tmp6733 = Taylor1(constant_term(tmp6730) + constant_term(tmp6732), order)
    dq[6N + 13] = Taylor1(constant_term(daysec) * constant_term(tmp6733), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp5665, tmp5666, tmp5667, tmp5668, tmp5669, tmp5670, tmp5671, tmp5672, tmp5674, tmp5675, tmp5676, tmp5677, tmp5678, tmp5679, tmp5680, tmp5681, tmp5682, tmp5684, tmp5685, tmp5687, tmp5688, tmp5689, tmp5690, tmp5691, tmp5692, tmp5693, tmp5694, tmp5696, tmp5697, tmp5698, tmp5699, tmp5700, tmp5701, tmp5702, tmp5703, tmp5705, tmp5706, tmp5707, tmp5709, tmp5710, tmp5712, tmp5713, tmp5716, tmp5717, tmp5718, tmp5719, tmp5721, tmp5722, tmp5723, tmp5724, tmp5725, tmp5727, tmp5728, tmp5729, tmp5730, tmp5732, tmp5733, tmp5734, tmp5735, tmp5736, tmp5738, tmp5739, tmp5740, tmp5741, tmp5743, tmp5744, tmp5745, tmp5746, tmp5747, tmp5749, tmp5750, tmp5751, tmp5752, tmp5754, tmp5755, tmp5756, tmp5757, tmp5759, tmp5760, tmp5761, tmp5762, tmp5834, tmp5836, tmp5837, tmp5839, tmp5840, tmp5843, tmp5845, tmp5847, tmp5848, tmp6129, tmp6131, tmp6141, tmp6143, tmp6153, tmp6155, tmp6157, tmp6159, tmp6160, tmp6161, tmp6162, tmp6163, tmp6166, tmp6168, tmp6170, tmp6172, tmp6173, tmp6174, tmp6175, tmp6176, tmp6180, tmp6181, tmp6183, tmp6184, tmp6187, tmp6188, tmp6189, tmp6191, tmp6192, tmp6194, tmp6195, tmp6198, tmp6199, tmp6200, tmp6203, tmp6205, tmp6215, tmp6217, tmp6226, tmp6227, tmp6229, tmp6230, tmp6235, tmp6236, tmp6239, tmp6240, tmp6245, tmp6246, tmp6247, tmp6248, tmp6251, tmp6252, tmp6253, tmp6254, tmp6257, tmp6258, tmp6259, tmp6260, tmp6263, tmp6264, tmp6265, tmp6266, tmp6269, tmp6270, tmp6271, tmp6272, tmp6275, tmp6276, tmp6277, tmp6278, tmp6281, tmp6283, tmp6293, tmp6295, tmp6304, tmp6305, tmp6307, tmp6308, tmp6312, tmp6315, tmp6316, tmp6317, tmp6318, tmp6319, tmp6323, tmp6326, tmp6327, tmp6328, tmp6329, tmp6330, tmp6335, tmp6336, tmp6337, tmp6338, tmp6339, tmp6342, tmp6343, tmp6344, tmp6345, tmp6346, tmp6348, tmp6349, tmp6352, tmp6353, tmp6354, tmp6355, tmp6356, tmp6359, tmp6360, tmp6361, tmp6362, tmp6363, tmp6365, tmp6366, tmp6368, tmp6374, tmp6375, tmp6376, tmp6377, tmp6378, tmp6379, tmp6381, tmp6382, tmp6383, tmp6384, tmp6385, tmp6386, tmp6388, tmp6389, tmp6390, tmp6391, tmp6392, tmp6393, tmp6395, tmp6396, tmp6397, tmp6398, tmp6400, tmp6401, tmp6402, tmp6403, tmp6405, tmp6406, tmp6407, tmp6408, tmp6416, tmp6417, tmp6418, tmp6419, tmp6421, tmp6422, tmp6423, tmp6424, tmp6426, tmp6427, tmp6428, tmp6429, tmp6431, tmp6432, tmp6434, tmp6435, tmp6437, tmp6438, tmp6440, tmp6441, tmp6442, tmp6443, tmp6445, tmp6446, tmp6447, tmp6448, tmp6450, tmp6451, tmp6452, tmp6453, tmp6458, tmp6459, tmp6460, tmp6461, tmp6463, tmp6464, tmp6465, tmp6466, tmp6468, tmp6469, tmp6470, tmp6471, tmp6473, tmp6474, tmp6475, tmp6476, tmp6478, tmp6479, tmp6480, tmp6481, tmp6483, tmp6484, tmp6485, tmp6486, tmp6488, tmp6489, tmp6490, tmp6491, tmp6493, tmp6494, tmp6495, tmp6496, tmp6498, tmp6499, tmp6500, tmp6501, tmp6503, tmp6504, tmp6505, tmp6506, tmp6508, tmp6509, tmp6510, tmp6511, tmp6513, tmp6514, tmp6515, tmp6516, tmp6518, tmp6519, tmp6521, tmp6522, tmp6524, tmp6525, tmp6527, tmp6528, tmp6530, tmp6531, tmp6533, tmp6534, tmp6536, tmp6537, tmp6539, tmp6540, tmp6542, tmp6543, tmp6545, tmp6546, tmp6548, tmp6549, tmp6551, tmp6552, tmp6556, tmp6557, tmp6562, tmp6564, tmp6565, tmp6566, tmp6567, tmp6569, tmp6570, tmp6572, tmp6573, tmp6574, tmp6575, tmp6577, tmp6578, tmp6580, tmp6581, tmp6582, tmp6583, tmp6585, tmp6586, tmp6588, tmp6589, tmp6590, tmp6591, tmp6593, tmp6594, tmp6595, tmp6596, tmp6598, tmp6599, tmp6600, tmp6601, tmp6603, tmp6604, tmp6605, tmp6606, tmp6608, tmp6609, tmp6610, tmp6611, tmp6613, tmp6615, tmp6616, tmp6617, tmp6618, tmp6620, tmp6621, tmp6622, tmp6623, tmp6625, tmp6626, tmp6627, tmp6628, tmp6633, tmp6634, tmp6636, tmp6637, tmp6639, tmp6640, tmp6645, tmp6646, tmp6647, tmp6648, tmp6649, tmp6650, tmp6652, tmp6653, tmp6654, tmp6655, tmp6657, tmp6658, tmp6660, tmp6661, tmp6662, tmp6663, tmp6665, tmp6666, tmp6667, tmp6668, tmp6670, tmp6671, tmp6672, tmp6673, tmp6675, tmp6676, tmp6678, tmp6679, tmp6684, tmp6687, tmp6688, tmp6689, tmp6691, tmp6694, tmp6695, tmp6702, tmp6704, tmp6728, tmp6729, tmp6730, tmp6731, tmp6732, tmp6733, ϕ_m, θ_m, ψ_m, tmp6735, tmp6736, tmp6737, tmp6738, tmp6739, tmp6740, tmp6741, tmp6742, tmp6743, tmp6744, tmp6745, tmp6746, tmp6747, tmp6748, tmp6749, tmp6750, tmp6751, tmp6752, tmp6753, tmp6754, tmp6755, tmp6756, tmp6757, tmp6758, tmp6759, tmp6760, tmp6761, tmp6762, tmp6763, ϕ_c, tmp6764, tmp6765, tmp6766, tmp6767, tmp6768, tmp6769, tmp6770, tmp6771, tmp6772, tmp6773, tmp6774, tmp6775, ω_c_CE_1, ω_c_CE_2, ω_c_CE_3, J2M_t, C22M_t, C21M_t, S21M_t, S22M_t, x0s_M, y0s_M, z0s_M, ρ0s2_M, ρ0s_M, z0s2_M, r0s2_M, r0s_M, r0s5_M, x0s_S, y0s_S, z0s_S, ρ0s2_S, ρ0s_S, z0s2_S, r0s2_S, r0s_S, r0s5_S, coeff0_M, coeff0_S, k_20E_div_r0s5_M, k_20E_div_r0s5_S, a_tid_0_M_x, a_tid_0_M_y, a_tid_0_M_z, a_tid_0_S_x, a_tid_0_S_y, a_tid_0_S_z, x1s_M, y1s_M, z1s_M, ρ1s2_M, ρ1s_M, z1s2_M, r1s2_M, r1s_M, r1s5_M, x1s_S, y1s_S, z1s_S, ρ1s2_S, ρ1s_S, z1s2_S, r1s2_S, r1s_S, r1s5_S, coeff1_1_M, coeff1_1_S, coeff2_1_M, coeff2_1_S, coeff3_1_M, coeff3_1_S, k_21E_div_r1s5_M, k_21E_div_r1s5_S, a_tid_1_M_x, a_tid_1_M_y, a_tid_1_M_z, a_tid_1_S_x, a_tid_1_S_y, a_tid_1_S_z, x2s_M, y2s_M, z2s_M, ρ2s2_M, ρ2s_M, z2s2_M, r2s2_M, r2s_M, r2s5_M, x2s_S, y2s_S, z2s_S, ρ2s2_S, ρ2s_S, z2s2_S, r2s2_S, r2s_S, r2s5_S, coeff1_2_M, coeff1_2_S, coeff3_2_M, coeff3_2_S, k_22E_div_r2s5_M, k_22E_div_r2s5_S, a_tid_2_M_x, a_tid_2_M_y, a_tid_2_M_z, a_tid_2_S_x, a_tid_2_S_y, a_tid_2_S_z, RE_div_r_p5, aux_tidacc, a_tidal_coeff_M, a_tidal_coeff_S, a_tidal_tod_x, a_tidal_tod_y, a_tidal_tod_z, a_tidal_x, a_tidal_y, a_tidal_z, accX_mo_tides, accY_mo_tides, accZ_mo_tides, Iω_x, Iω_y, Iω_z, ωxIω_x, ωxIω_y, ωxIω_z, dIω_x, dIω_y, dIω_z, er_EM_I_1, er_EM_I_2, er_EM_I_3, p_E_I_1, p_E_I_2, p_E_I_3, er_EM_1, er_EM_2, er_EM_3, p_E_1, p_E_2, p_E_3, I_er_EM_1, I_er_EM_2, I_er_EM_3, I_p_E_1, I_p_E_2, I_p_E_3, er_EM_cross_I_er_EM_1, er_EM_cross_I_er_EM_2, er_EM_cross_I_er_EM_3, er_EM_cross_I_p_E_1, er_EM_cross_I_p_E_2, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_1, p_E_cross_I_er_EM_2, p_E_cross_I_er_EM_3, p_E_cross_I_p_E_1, p_E_cross_I_p_E_2, p_E_cross_I_p_E_3, one_minus_7sin2ϕEM, two_sinϕEM, N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_1, N_MfigM_figE_2, N_MfigM_figE_3, N_1_LMF, N_2_LMF, N_3_LMF, N_cmb_1, N_cmb_2, N_cmb_3, I_dω_1, I_dω_2, I_dω_3, Ic_ωc_1, Ic_ωc_2, Ic_ωc_3, m_ωm_x_Icωc_1, m_ωm_x_Icωc_2, m_ωm_x_Icωc_3, Ic_dωc_1, Ic_dωc_2, Ic_dωc_3, tmp6776, tmp6777, tmp6778, tmp6779, tmp6780, tmp6781, tmp6782, tmp6783, w_LE, α_TTmTDB, v4E, ϕ_Earth_Newtonian_sq, β_TTmTDB], [newtonX, newtonY, newtonZ, newtonianNb_Potential, v2, pntempX, pntempY, pntempZ, postNewtonX, postNewtonY, postNewtonZ, accX, accY, accZ, N_MfigM_pmA_x, N_MfigM_pmA_y, N_MfigM_pmA_z, temp_N_M_x, temp_N_M_y, temp_N_M_z, N_MfigM, J2_t, tmp5771, tmp5773, tmp5776, tmp5778, tmp5781, tmp5783, tmp5827, tmp5829, tmp5830, tmp5832, tmp6709, tmp6711, tmp6712, β_TTmTDB_i_2], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, _2v2, vi_dot_vj, rij_dot_vi_div_rij_sq, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, X_bf_1, Y_bf_1, Z_bf_1, X_bf_2, Y_bf_2, Z_bf_2, X_bf_3, Y_bf_3, Z_bf_3, X_bf, Y_bf, Z_bf, F_JCS_x, F_JCS_y, F_JCS_z, temp_accX_j, temp_accY_j, temp_accZ_j, temp_accX_i, temp_accY_i, temp_accZ_i, sin_ϕ, cos_ϕ, sin_λ, cos_λ, r_xy, r_p4, F_CS_ξ_36, F_CS_η_36, F_CS_ζ_36, F_J_ξ_36, F_J_ζ_36, F_J_ξ, F_J_ζ, F_CS_ξ, F_CS_η, F_CS_ζ, F_JCS_ξ, F_JCS_η, F_JCS_ζ, mantlef2coref, pn2x, pn2y, pn2z, tmp5791, tmp5794, tmp5796, tmp5797, tmp5799, tmp5807, tmp5808, tmp5819, temp_001, tmp5821, temp_002, tmp5823, temp_003, temp_004, tmp5860, tmp5862, tmp5864, tmp5868, tmp5870, tmp5871, tmp5977, tmp5978, tmp5981, tmp5982, tmp5988, tmp5991, tmp6053, tmp6055, tmp6057, tmp6059, tmp6061, tmp6063, tmp6065, tmp6066, tmp6067, tmp6069, tmp6070, tmp6071, tmp6073, tmp6074, tmp6075, tmp6087, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp6093, Rij_dot_Vi, tmp6096, tmp6099, pn1t2_7, tmp6106, tmp6107, tmp6108, tmp6116, termpnx, sumpnx, tmp6119, termpny, sumpny, tmp6122, termpnz, sumpnz, β_TTmTDB_i_1, tmp6714, tmp6715, tmp6716, tmp6717, tmp6718, β_TTmTDB_i_3, β_TTmTDB_i_4, tmp6723, tmp6724, β_TTmTDB_i, tmp6726, temp_β_TTmTDB], [P_n, dP_n, temp_fjξ, temp_fjζ, temp_rn, sin_mλ, cos_mλ, RotM, tmp5876, tmp5877, tmp5878, tmp5880, tmp5881, tmp5886, tmp5887, tmp5889, tmp5890, tmp5891, tmp5893, tmp5894, tmp5895, tmp5897, tmp5898, tmp5899, tmp5900, tmp5903, tmp5904, tmp5906, tmp5907, tmp5926, tmp5927, tmp5928, tmp5931, tmp5932, tmp5933, tmp5938, tmp5939, tmp5940, tmp5943, tmp5944, tmp5945, tmp5949, tmp5950, tmp5951, tmp5953, tmp5954, tmp5955], [temp_CS_ξ, temp_CS_η, temp_CS_ζ, Cnm_cosmλ, Cnm_sinmλ, Snm_cosmλ, Snm_sinmλ, secϕ_P_nm, P_nm, cosϕ_dP_nm, Rb2p, Gc2p, tmp5909, tmp5912, tmp5914, tmp5916, tmp5917, tmp5918, tmp5921, tmp5922, tmp5923, tmp5925, tmp5929, tmp5930, tmp5934, tmp5935, tmp5937, tmp5941, tmp5942, tmp5946, tmp5947, tmp5952, tmp5956, tmp5957, tmp5963, tmp5964, tmp5965, tmp5966, tmp5968, tmp5969, tmp5970, tmp5971, tmp5973, tmp5974, tmp5975, tmp5993, tmp5994, tmp5995, tmp5996, tmp5998, tmp5999, tmp6000, tmp6001, tmp6003, tmp6004, tmp6005, tmp6006, tmp6008, tmp6009, tmp6010, tmp6011, tmp6013, tmp6014, tmp6015, tmp6016, tmp6018, tmp6019, tmp6020, tmp6021, tmp6023, tmp6024, tmp6025, tmp6026, tmp6028, tmp6029, tmp6030, tmp6031, tmp6033, tmp6034, tmp6035, tmp6036, tmp6038, tmp6039, tmp6040, tmp6041, tmp6043, tmp6044, tmp6045, tmp6046, tmp6048, tmp6049, tmp6050, tmp6051])
end
# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: DE430!
function TaylorIntegration.jetcoeffs!(::Val{DE430_dev!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp5665 = __ralloc.v0[1]
    tmp5666 = __ralloc.v0[2]
    tmp5667 = __ralloc.v0[3]
    tmp5668 = __ralloc.v0[4]
    tmp5669 = __ralloc.v0[5]
    tmp5670 = __ralloc.v0[6]
    tmp5671 = __ralloc.v0[7]
    tmp5672 = __ralloc.v0[8]
    tmp5674 = __ralloc.v0[9]
    tmp5675 = __ralloc.v0[10]
    tmp5676 = __ralloc.v0[11]
    tmp5677 = __ralloc.v0[12]
    tmp5678 = __ralloc.v0[13]
    tmp5679 = __ralloc.v0[14]
    tmp5680 = __ralloc.v0[15]
    tmp5681 = __ralloc.v0[16]
    tmp5682 = __ralloc.v0[17]
    tmp5684 = __ralloc.v0[18]
    tmp5685 = __ralloc.v0[19]
    tmp5687 = __ralloc.v0[20]
    tmp5688 = __ralloc.v0[21]
    tmp5689 = __ralloc.v0[22]
    tmp5690 = __ralloc.v0[23]
    tmp5691 = __ralloc.v0[24]
    tmp5692 = __ralloc.v0[25]
    tmp5693 = __ralloc.v0[26]
    tmp5694 = __ralloc.v0[27]
    tmp5696 = __ralloc.v0[28]
    tmp5697 = __ralloc.v0[29]
    tmp5698 = __ralloc.v0[30]
    tmp5699 = __ralloc.v0[31]
    tmp5700 = __ralloc.v0[32]
    tmp5701 = __ralloc.v0[33]
    tmp5702 = __ralloc.v0[34]
    tmp5703 = __ralloc.v0[35]
    tmp5705 = __ralloc.v0[36]
    tmp5706 = __ralloc.v0[37]
    tmp5707 = __ralloc.v0[38]
    tmp5709 = __ralloc.v0[39]
    tmp5710 = __ralloc.v0[40]
    tmp5712 = __ralloc.v0[41]
    tmp5713 = __ralloc.v0[42]
    tmp5716 = __ralloc.v0[43]
    tmp5717 = __ralloc.v0[44]
    tmp5718 = __ralloc.v0[45]
    tmp5719 = __ralloc.v0[46]
    tmp5721 = __ralloc.v0[47]
    tmp5722 = __ralloc.v0[48]
    tmp5723 = __ralloc.v0[49]
    tmp5724 = __ralloc.v0[50]
    tmp5725 = __ralloc.v0[51]
    tmp5727 = __ralloc.v0[52]
    tmp5728 = __ralloc.v0[53]
    tmp5729 = __ralloc.v0[54]
    tmp5730 = __ralloc.v0[55]
    tmp5732 = __ralloc.v0[56]
    tmp5733 = __ralloc.v0[57]
    tmp5734 = __ralloc.v0[58]
    tmp5735 = __ralloc.v0[59]
    tmp5736 = __ralloc.v0[60]
    tmp5738 = __ralloc.v0[61]
    tmp5739 = __ralloc.v0[62]
    tmp5740 = __ralloc.v0[63]
    tmp5741 = __ralloc.v0[64]
    tmp5743 = __ralloc.v0[65]
    tmp5744 = __ralloc.v0[66]
    tmp5745 = __ralloc.v0[67]
    tmp5746 = __ralloc.v0[68]
    tmp5747 = __ralloc.v0[69]
    tmp5749 = __ralloc.v0[70]
    tmp5750 = __ralloc.v0[71]
    tmp5751 = __ralloc.v0[72]
    tmp5752 = __ralloc.v0[73]
    tmp5754 = __ralloc.v0[74]
    tmp5755 = __ralloc.v0[75]
    tmp5756 = __ralloc.v0[76]
    tmp5757 = __ralloc.v0[77]
    tmp5759 = __ralloc.v0[78]
    tmp5760 = __ralloc.v0[79]
    tmp5761 = __ralloc.v0[80]
    tmp5762 = __ralloc.v0[81]
    tmp5834 = __ralloc.v0[82]
    tmp5836 = __ralloc.v0[83]
    tmp5837 = __ralloc.v0[84]
    tmp5839 = __ralloc.v0[85]
    tmp5840 = __ralloc.v0[86]
    tmp5843 = __ralloc.v0[87]
    tmp5845 = __ralloc.v0[88]
    tmp5847 = __ralloc.v0[89]
    tmp5848 = __ralloc.v0[90]
    tmp6129 = __ralloc.v0[91]
    tmp6131 = __ralloc.v0[92]
    tmp6141 = __ralloc.v0[93]
    tmp6143 = __ralloc.v0[94]
    tmp6153 = __ralloc.v0[95]
    tmp6155 = __ralloc.v0[96]
    tmp6157 = __ralloc.v0[97]
    tmp6159 = __ralloc.v0[98]
    tmp6160 = __ralloc.v0[99]
    tmp6161 = __ralloc.v0[100]
    tmp6162 = __ralloc.v0[101]
    tmp6163 = __ralloc.v0[102]
    tmp6166 = __ralloc.v0[103]
    tmp6168 = __ralloc.v0[104]
    tmp6170 = __ralloc.v0[105]
    tmp6172 = __ralloc.v0[106]
    tmp6173 = __ralloc.v0[107]
    tmp6174 = __ralloc.v0[108]
    tmp6175 = __ralloc.v0[109]
    tmp6176 = __ralloc.v0[110]
    tmp6180 = __ralloc.v0[111]
    tmp6181 = __ralloc.v0[112]
    tmp6183 = __ralloc.v0[113]
    tmp6184 = __ralloc.v0[114]
    tmp6187 = __ralloc.v0[115]
    tmp6188 = __ralloc.v0[116]
    tmp6189 = __ralloc.v0[117]
    tmp6191 = __ralloc.v0[118]
    tmp6192 = __ralloc.v0[119]
    tmp6194 = __ralloc.v0[120]
    tmp6195 = __ralloc.v0[121]
    tmp6198 = __ralloc.v0[122]
    tmp6199 = __ralloc.v0[123]
    tmp6200 = __ralloc.v0[124]
    tmp6203 = __ralloc.v0[125]
    tmp6205 = __ralloc.v0[126]
    tmp6215 = __ralloc.v0[127]
    tmp6217 = __ralloc.v0[128]
    tmp6226 = __ralloc.v0[129]
    tmp6227 = __ralloc.v0[130]
    tmp6229 = __ralloc.v0[131]
    tmp6230 = __ralloc.v0[132]
    tmp6235 = __ralloc.v0[133]
    tmp6236 = __ralloc.v0[134]
    tmp6239 = __ralloc.v0[135]
    tmp6240 = __ralloc.v0[136]
    tmp6245 = __ralloc.v0[137]
    tmp6246 = __ralloc.v0[138]
    tmp6247 = __ralloc.v0[139]
    tmp6248 = __ralloc.v0[140]
    tmp6251 = __ralloc.v0[141]
    tmp6252 = __ralloc.v0[142]
    tmp6253 = __ralloc.v0[143]
    tmp6254 = __ralloc.v0[144]
    tmp6257 = __ralloc.v0[145]
    tmp6258 = __ralloc.v0[146]
    tmp6259 = __ralloc.v0[147]
    tmp6260 = __ralloc.v0[148]
    tmp6263 = __ralloc.v0[149]
    tmp6264 = __ralloc.v0[150]
    tmp6265 = __ralloc.v0[151]
    tmp6266 = __ralloc.v0[152]
    tmp6269 = __ralloc.v0[153]
    tmp6270 = __ralloc.v0[154]
    tmp6271 = __ralloc.v0[155]
    tmp6272 = __ralloc.v0[156]
    tmp6275 = __ralloc.v0[157]
    tmp6276 = __ralloc.v0[158]
    tmp6277 = __ralloc.v0[159]
    tmp6278 = __ralloc.v0[160]
    tmp6281 = __ralloc.v0[161]
    tmp6283 = __ralloc.v0[162]
    tmp6293 = __ralloc.v0[163]
    tmp6295 = __ralloc.v0[164]
    tmp6304 = __ralloc.v0[165]
    tmp6305 = __ralloc.v0[166]
    tmp6307 = __ralloc.v0[167]
    tmp6308 = __ralloc.v0[168]
    tmp6312 = __ralloc.v0[169]
    tmp6315 = __ralloc.v0[170]
    tmp6316 = __ralloc.v0[171]
    tmp6317 = __ralloc.v0[172]
    tmp6318 = __ralloc.v0[173]
    tmp6319 = __ralloc.v0[174]
    tmp6323 = __ralloc.v0[175]
    tmp6326 = __ralloc.v0[176]
    tmp6327 = __ralloc.v0[177]
    tmp6328 = __ralloc.v0[178]
    tmp6329 = __ralloc.v0[179]
    tmp6330 = __ralloc.v0[180]
    tmp6335 = __ralloc.v0[181]
    tmp6336 = __ralloc.v0[182]
    tmp6337 = __ralloc.v0[183]
    tmp6338 = __ralloc.v0[184]
    tmp6339 = __ralloc.v0[185]
    tmp6342 = __ralloc.v0[186]
    tmp6343 = __ralloc.v0[187]
    tmp6344 = __ralloc.v0[188]
    tmp6345 = __ralloc.v0[189]
    tmp6346 = __ralloc.v0[190]
    tmp6348 = __ralloc.v0[191]
    tmp6349 = __ralloc.v0[192]
    tmp6352 = __ralloc.v0[193]
    tmp6353 = __ralloc.v0[194]
    tmp6354 = __ralloc.v0[195]
    tmp6355 = __ralloc.v0[196]
    tmp6356 = __ralloc.v0[197]
    tmp6359 = __ralloc.v0[198]
    tmp6360 = __ralloc.v0[199]
    tmp6361 = __ralloc.v0[200]
    tmp6362 = __ralloc.v0[201]
    tmp6363 = __ralloc.v0[202]
    tmp6365 = __ralloc.v0[203]
    tmp6366 = __ralloc.v0[204]
    tmp6368 = __ralloc.v0[205]
    tmp6374 = __ralloc.v0[206]
    tmp6375 = __ralloc.v0[207]
    tmp6376 = __ralloc.v0[208]
    tmp6377 = __ralloc.v0[209]
    tmp6378 = __ralloc.v0[210]
    tmp6379 = __ralloc.v0[211]
    tmp6381 = __ralloc.v0[212]
    tmp6382 = __ralloc.v0[213]
    tmp6383 = __ralloc.v0[214]
    tmp6384 = __ralloc.v0[215]
    tmp6385 = __ralloc.v0[216]
    tmp6386 = __ralloc.v0[217]
    tmp6388 = __ralloc.v0[218]
    tmp6389 = __ralloc.v0[219]
    tmp6390 = __ralloc.v0[220]
    tmp6391 = __ralloc.v0[221]
    tmp6392 = __ralloc.v0[222]
    tmp6393 = __ralloc.v0[223]
    tmp6395 = __ralloc.v0[224]
    tmp6396 = __ralloc.v0[225]
    tmp6397 = __ralloc.v0[226]
    tmp6398 = __ralloc.v0[227]
    tmp6400 = __ralloc.v0[228]
    tmp6401 = __ralloc.v0[229]
    tmp6402 = __ralloc.v0[230]
    tmp6403 = __ralloc.v0[231]
    tmp6405 = __ralloc.v0[232]
    tmp6406 = __ralloc.v0[233]
    tmp6407 = __ralloc.v0[234]
    tmp6408 = __ralloc.v0[235]
    tmp6416 = __ralloc.v0[236]
    tmp6417 = __ralloc.v0[237]
    tmp6418 = __ralloc.v0[238]
    tmp6419 = __ralloc.v0[239]
    tmp6421 = __ralloc.v0[240]
    tmp6422 = __ralloc.v0[241]
    tmp6423 = __ralloc.v0[242]
    tmp6424 = __ralloc.v0[243]
    tmp6426 = __ralloc.v0[244]
    tmp6427 = __ralloc.v0[245]
    tmp6428 = __ralloc.v0[246]
    tmp6429 = __ralloc.v0[247]
    tmp6431 = __ralloc.v0[248]
    tmp6432 = __ralloc.v0[249]
    tmp6434 = __ralloc.v0[250]
    tmp6435 = __ralloc.v0[251]
    tmp6437 = __ralloc.v0[252]
    tmp6438 = __ralloc.v0[253]
    tmp6440 = __ralloc.v0[254]
    tmp6441 = __ralloc.v0[255]
    tmp6442 = __ralloc.v0[256]
    tmp6443 = __ralloc.v0[257]
    tmp6445 = __ralloc.v0[258]
    tmp6446 = __ralloc.v0[259]
    tmp6447 = __ralloc.v0[260]
    tmp6448 = __ralloc.v0[261]
    tmp6450 = __ralloc.v0[262]
    tmp6451 = __ralloc.v0[263]
    tmp6452 = __ralloc.v0[264]
    tmp6453 = __ralloc.v0[265]
    tmp6458 = __ralloc.v0[266]
    tmp6459 = __ralloc.v0[267]
    tmp6460 = __ralloc.v0[268]
    tmp6461 = __ralloc.v0[269]
    tmp6463 = __ralloc.v0[270]
    tmp6464 = __ralloc.v0[271]
    tmp6465 = __ralloc.v0[272]
    tmp6466 = __ralloc.v0[273]
    tmp6468 = __ralloc.v0[274]
    tmp6469 = __ralloc.v0[275]
    tmp6470 = __ralloc.v0[276]
    tmp6471 = __ralloc.v0[277]
    tmp6473 = __ralloc.v0[278]
    tmp6474 = __ralloc.v0[279]
    tmp6475 = __ralloc.v0[280]
    tmp6476 = __ralloc.v0[281]
    tmp6478 = __ralloc.v0[282]
    tmp6479 = __ralloc.v0[283]
    tmp6480 = __ralloc.v0[284]
    tmp6481 = __ralloc.v0[285]
    tmp6483 = __ralloc.v0[286]
    tmp6484 = __ralloc.v0[287]
    tmp6485 = __ralloc.v0[288]
    tmp6486 = __ralloc.v0[289]
    tmp6488 = __ralloc.v0[290]
    tmp6489 = __ralloc.v0[291]
    tmp6490 = __ralloc.v0[292]
    tmp6491 = __ralloc.v0[293]
    tmp6493 = __ralloc.v0[294]
    tmp6494 = __ralloc.v0[295]
    tmp6495 = __ralloc.v0[296]
    tmp6496 = __ralloc.v0[297]
    tmp6498 = __ralloc.v0[298]
    tmp6499 = __ralloc.v0[299]
    tmp6500 = __ralloc.v0[300]
    tmp6501 = __ralloc.v0[301]
    tmp6503 = __ralloc.v0[302]
    tmp6504 = __ralloc.v0[303]
    tmp6505 = __ralloc.v0[304]
    tmp6506 = __ralloc.v0[305]
    tmp6508 = __ralloc.v0[306]
    tmp6509 = __ralloc.v0[307]
    tmp6510 = __ralloc.v0[308]
    tmp6511 = __ralloc.v0[309]
    tmp6513 = __ralloc.v0[310]
    tmp6514 = __ralloc.v0[311]
    tmp6515 = __ralloc.v0[312]
    tmp6516 = __ralloc.v0[313]
    tmp6518 = __ralloc.v0[314]
    tmp6519 = __ralloc.v0[315]
    tmp6521 = __ralloc.v0[316]
    tmp6522 = __ralloc.v0[317]
    tmp6524 = __ralloc.v0[318]
    tmp6525 = __ralloc.v0[319]
    tmp6527 = __ralloc.v0[320]
    tmp6528 = __ralloc.v0[321]
    tmp6530 = __ralloc.v0[322]
    tmp6531 = __ralloc.v0[323]
    tmp6533 = __ralloc.v0[324]
    tmp6534 = __ralloc.v0[325]
    tmp6536 = __ralloc.v0[326]
    tmp6537 = __ralloc.v0[327]
    tmp6539 = __ralloc.v0[328]
    tmp6540 = __ralloc.v0[329]
    tmp6542 = __ralloc.v0[330]
    tmp6543 = __ralloc.v0[331]
    tmp6545 = __ralloc.v0[332]
    tmp6546 = __ralloc.v0[333]
    tmp6548 = __ralloc.v0[334]
    tmp6549 = __ralloc.v0[335]
    tmp6551 = __ralloc.v0[336]
    tmp6552 = __ralloc.v0[337]
    tmp6556 = __ralloc.v0[338]
    tmp6557 = __ralloc.v0[339]
    tmp6562 = __ralloc.v0[340]
    tmp6564 = __ralloc.v0[341]
    tmp6565 = __ralloc.v0[342]
    tmp6566 = __ralloc.v0[343]
    tmp6567 = __ralloc.v0[344]
    tmp6569 = __ralloc.v0[345]
    tmp6570 = __ralloc.v0[346]
    tmp6572 = __ralloc.v0[347]
    tmp6573 = __ralloc.v0[348]
    tmp6574 = __ralloc.v0[349]
    tmp6575 = __ralloc.v0[350]
    tmp6577 = __ralloc.v0[351]
    tmp6578 = __ralloc.v0[352]
    tmp6580 = __ralloc.v0[353]
    tmp6581 = __ralloc.v0[354]
    tmp6582 = __ralloc.v0[355]
    tmp6583 = __ralloc.v0[356]
    tmp6585 = __ralloc.v0[357]
    tmp6586 = __ralloc.v0[358]
    tmp6588 = __ralloc.v0[359]
    tmp6589 = __ralloc.v0[360]
    tmp6590 = __ralloc.v0[361]
    tmp6591 = __ralloc.v0[362]
    tmp6593 = __ralloc.v0[363]
    tmp6594 = __ralloc.v0[364]
    tmp6595 = __ralloc.v0[365]
    tmp6596 = __ralloc.v0[366]
    tmp6598 = __ralloc.v0[367]
    tmp6599 = __ralloc.v0[368]
    tmp6600 = __ralloc.v0[369]
    tmp6601 = __ralloc.v0[370]
    tmp6603 = __ralloc.v0[371]
    tmp6604 = __ralloc.v0[372]
    tmp6605 = __ralloc.v0[373]
    tmp6606 = __ralloc.v0[374]
    tmp6608 = __ralloc.v0[375]
    tmp6609 = __ralloc.v0[376]
    tmp6610 = __ralloc.v0[377]
    tmp6611 = __ralloc.v0[378]
    tmp6613 = __ralloc.v0[379]
    tmp6615 = __ralloc.v0[380]
    tmp6616 = __ralloc.v0[381]
    tmp6617 = __ralloc.v0[382]
    tmp6618 = __ralloc.v0[383]
    tmp6620 = __ralloc.v0[384]
    tmp6621 = __ralloc.v0[385]
    tmp6622 = __ralloc.v0[386]
    tmp6623 = __ralloc.v0[387]
    tmp6625 = __ralloc.v0[388]
    tmp6626 = __ralloc.v0[389]
    tmp6627 = __ralloc.v0[390]
    tmp6628 = __ralloc.v0[391]
    tmp6633 = __ralloc.v0[392]
    tmp6634 = __ralloc.v0[393]
    tmp6636 = __ralloc.v0[394]
    tmp6637 = __ralloc.v0[395]
    tmp6639 = __ralloc.v0[396]
    tmp6640 = __ralloc.v0[397]
    tmp6645 = __ralloc.v0[398]
    tmp6646 = __ralloc.v0[399]
    tmp6647 = __ralloc.v0[400]
    tmp6648 = __ralloc.v0[401]
    tmp6649 = __ralloc.v0[402]
    tmp6650 = __ralloc.v0[403]
    tmp6652 = __ralloc.v0[404]
    tmp6653 = __ralloc.v0[405]
    tmp6654 = __ralloc.v0[406]
    tmp6655 = __ralloc.v0[407]
    tmp6657 = __ralloc.v0[408]
    tmp6658 = __ralloc.v0[409]
    tmp6660 = __ralloc.v0[410]
    tmp6661 = __ralloc.v0[411]
    tmp6662 = __ralloc.v0[412]
    tmp6663 = __ralloc.v0[413]
    tmp6665 = __ralloc.v0[414]
    tmp6666 = __ralloc.v0[415]
    tmp6667 = __ralloc.v0[416]
    tmp6668 = __ralloc.v0[417]
    tmp6670 = __ralloc.v0[418]
    tmp6671 = __ralloc.v0[419]
    tmp6672 = __ralloc.v0[420]
    tmp6673 = __ralloc.v0[421]
    tmp6675 = __ralloc.v0[422]
    tmp6676 = __ralloc.v0[423]
    tmp6678 = __ralloc.v0[424]
    tmp6679 = __ralloc.v0[425]
    tmp6684 = __ralloc.v0[426]
    tmp6687 = __ralloc.v0[427]
    tmp6688 = __ralloc.v0[428]
    tmp6689 = __ralloc.v0[429]
    tmp6691 = __ralloc.v0[430]
    tmp6694 = __ralloc.v0[431]
    tmp6695 = __ralloc.v0[432]
    tmp6702 = __ralloc.v0[433]
    tmp6704 = __ralloc.v0[434]
    tmp6728 = __ralloc.v0[435]
    tmp6729 = __ralloc.v0[436]
    tmp6730 = __ralloc.v0[437]
    tmp6731 = __ralloc.v0[438]
    tmp6732 = __ralloc.v0[439]
    tmp6733 = __ralloc.v0[440]
    ϕ_m = __ralloc.v0[441]
    θ_m = __ralloc.v0[442]
    ψ_m = __ralloc.v0[443]
    tmp6735 = __ralloc.v0[444]
    tmp6736 = __ralloc.v0[445]
    tmp6737 = __ralloc.v0[446]
    tmp6738 = __ralloc.v0[447]
    tmp6739 = __ralloc.v0[448]
    tmp6740 = __ralloc.v0[449]
    tmp6741 = __ralloc.v0[450]
    tmp6742 = __ralloc.v0[451]
    tmp6743 = __ralloc.v0[452]
    tmp6744 = __ralloc.v0[453]
    tmp6745 = __ralloc.v0[454]
    tmp6746 = __ralloc.v0[455]
    tmp6747 = __ralloc.v0[456]
    tmp6748 = __ralloc.v0[457]
    tmp6749 = __ralloc.v0[458]
    tmp6750 = __ralloc.v0[459]
    tmp6751 = __ralloc.v0[460]
    tmp6752 = __ralloc.v0[461]
    tmp6753 = __ralloc.v0[462]
    tmp6754 = __ralloc.v0[463]
    tmp6755 = __ralloc.v0[464]
    tmp6756 = __ralloc.v0[465]
    tmp6757 = __ralloc.v0[466]
    tmp6758 = __ralloc.v0[467]
    tmp6759 = __ralloc.v0[468]
    tmp6760 = __ralloc.v0[469]
    tmp6761 = __ralloc.v0[470]
    tmp6762 = __ralloc.v0[471]
    tmp6763 = __ralloc.v0[472]
    ϕ_c = __ralloc.v0[473]
    tmp6764 = __ralloc.v0[474]
    tmp6765 = __ralloc.v0[475]
    tmp6766 = __ralloc.v0[476]
    tmp6767 = __ralloc.v0[477]
    tmp6768 = __ralloc.v0[478]
    tmp6769 = __ralloc.v0[479]
    tmp6770 = __ralloc.v0[480]
    tmp6771 = __ralloc.v0[481]
    tmp6772 = __ralloc.v0[482]
    tmp6773 = __ralloc.v0[483]
    tmp6774 = __ralloc.v0[484]
    tmp6775 = __ralloc.v0[485]
    ω_c_CE_1 = __ralloc.v0[486]
    ω_c_CE_2 = __ralloc.v0[487]
    ω_c_CE_3 = __ralloc.v0[488]
    J2M_t = __ralloc.v0[489]
    C22M_t = __ralloc.v0[490]
    C21M_t = __ralloc.v0[491]
    S21M_t = __ralloc.v0[492]
    S22M_t = __ralloc.v0[493]
    x0s_M = __ralloc.v0[494]
    y0s_M = __ralloc.v0[495]
    z0s_M = __ralloc.v0[496]
    ρ0s2_M = __ralloc.v0[497]
    ρ0s_M = __ralloc.v0[498]
    z0s2_M = __ralloc.v0[499]
    r0s2_M = __ralloc.v0[500]
    r0s_M = __ralloc.v0[501]
    r0s5_M = __ralloc.v0[502]
    x0s_S = __ralloc.v0[503]
    y0s_S = __ralloc.v0[504]
    z0s_S = __ralloc.v0[505]
    ρ0s2_S = __ralloc.v0[506]
    ρ0s_S = __ralloc.v0[507]
    z0s2_S = __ralloc.v0[508]
    r0s2_S = __ralloc.v0[509]
    r0s_S = __ralloc.v0[510]
    r0s5_S = __ralloc.v0[511]
    coeff0_M = __ralloc.v0[512]
    coeff0_S = __ralloc.v0[513]
    k_20E_div_r0s5_M = __ralloc.v0[514]
    k_20E_div_r0s5_S = __ralloc.v0[515]
    a_tid_0_M_x = __ralloc.v0[516]
    a_tid_0_M_y = __ralloc.v0[517]
    a_tid_0_M_z = __ralloc.v0[518]
    a_tid_0_S_x = __ralloc.v0[519]
    a_tid_0_S_y = __ralloc.v0[520]
    a_tid_0_S_z = __ralloc.v0[521]
    x1s_M = __ralloc.v0[522]
    y1s_M = __ralloc.v0[523]
    z1s_M = __ralloc.v0[524]
    ρ1s2_M = __ralloc.v0[525]
    ρ1s_M = __ralloc.v0[526]
    z1s2_M = __ralloc.v0[527]
    r1s2_M = __ralloc.v0[528]
    r1s_M = __ralloc.v0[529]
    r1s5_M = __ralloc.v0[530]
    x1s_S = __ralloc.v0[531]
    y1s_S = __ralloc.v0[532]
    z1s_S = __ralloc.v0[533]
    ρ1s2_S = __ralloc.v0[534]
    ρ1s_S = __ralloc.v0[535]
    z1s2_S = __ralloc.v0[536]
    r1s2_S = __ralloc.v0[537]
    r1s_S = __ralloc.v0[538]
    r1s5_S = __ralloc.v0[539]
    coeff1_1_M = __ralloc.v0[540]
    coeff1_1_S = __ralloc.v0[541]
    coeff2_1_M = __ralloc.v0[542]
    coeff2_1_S = __ralloc.v0[543]
    coeff3_1_M = __ralloc.v0[544]
    coeff3_1_S = __ralloc.v0[545]
    k_21E_div_r1s5_M = __ralloc.v0[546]
    k_21E_div_r1s5_S = __ralloc.v0[547]
    a_tid_1_M_x = __ralloc.v0[548]
    a_tid_1_M_y = __ralloc.v0[549]
    a_tid_1_M_z = __ralloc.v0[550]
    a_tid_1_S_x = __ralloc.v0[551]
    a_tid_1_S_y = __ralloc.v0[552]
    a_tid_1_S_z = __ralloc.v0[553]
    x2s_M = __ralloc.v0[554]
    y2s_M = __ralloc.v0[555]
    z2s_M = __ralloc.v0[556]
    ρ2s2_M = __ralloc.v0[557]
    ρ2s_M = __ralloc.v0[558]
    z2s2_M = __ralloc.v0[559]
    r2s2_M = __ralloc.v0[560]
    r2s_M = __ralloc.v0[561]
    r2s5_M = __ralloc.v0[562]
    x2s_S = __ralloc.v0[563]
    y2s_S = __ralloc.v0[564]
    z2s_S = __ralloc.v0[565]
    ρ2s2_S = __ralloc.v0[566]
    ρ2s_S = __ralloc.v0[567]
    z2s2_S = __ralloc.v0[568]
    r2s2_S = __ralloc.v0[569]
    r2s_S = __ralloc.v0[570]
    r2s5_S = __ralloc.v0[571]
    coeff1_2_M = __ralloc.v0[572]
    coeff1_2_S = __ralloc.v0[573]
    coeff3_2_M = __ralloc.v0[574]
    coeff3_2_S = __ralloc.v0[575]
    k_22E_div_r2s5_M = __ralloc.v0[576]
    k_22E_div_r2s5_S = __ralloc.v0[577]
    a_tid_2_M_x = __ralloc.v0[578]
    a_tid_2_M_y = __ralloc.v0[579]
    a_tid_2_M_z = __ralloc.v0[580]
    a_tid_2_S_x = __ralloc.v0[581]
    a_tid_2_S_y = __ralloc.v0[582]
    a_tid_2_S_z = __ralloc.v0[583]
    RE_div_r_p5 = __ralloc.v0[584]
    aux_tidacc = __ralloc.v0[585]
    a_tidal_coeff_M = __ralloc.v0[586]
    a_tidal_coeff_S = __ralloc.v0[587]
    a_tidal_tod_x = __ralloc.v0[588]
    a_tidal_tod_y = __ralloc.v0[589]
    a_tidal_tod_z = __ralloc.v0[590]
    a_tidal_x = __ralloc.v0[591]
    a_tidal_y = __ralloc.v0[592]
    a_tidal_z = __ralloc.v0[593]
    accX_mo_tides = __ralloc.v0[594]
    accY_mo_tides = __ralloc.v0[595]
    accZ_mo_tides = __ralloc.v0[596]
    Iω_x = __ralloc.v0[597]
    Iω_y = __ralloc.v0[598]
    Iω_z = __ralloc.v0[599]
    ωxIω_x = __ralloc.v0[600]
    ωxIω_y = __ralloc.v0[601]
    ωxIω_z = __ralloc.v0[602]
    dIω_x = __ralloc.v0[603]
    dIω_y = __ralloc.v0[604]
    dIω_z = __ralloc.v0[605]
    er_EM_I_1 = __ralloc.v0[606]
    er_EM_I_2 = __ralloc.v0[607]
    er_EM_I_3 = __ralloc.v0[608]
    p_E_I_1 = __ralloc.v0[609]
    p_E_I_2 = __ralloc.v0[610]
    p_E_I_3 = __ralloc.v0[611]
    er_EM_1 = __ralloc.v0[612]
    er_EM_2 = __ralloc.v0[613]
    er_EM_3 = __ralloc.v0[614]
    p_E_1 = __ralloc.v0[615]
    p_E_2 = __ralloc.v0[616]
    p_E_3 = __ralloc.v0[617]
    I_er_EM_1 = __ralloc.v0[618]
    I_er_EM_2 = __ralloc.v0[619]
    I_er_EM_3 = __ralloc.v0[620]
    I_p_E_1 = __ralloc.v0[621]
    I_p_E_2 = __ralloc.v0[622]
    I_p_E_3 = __ralloc.v0[623]
    er_EM_cross_I_er_EM_1 = __ralloc.v0[624]
    er_EM_cross_I_er_EM_2 = __ralloc.v0[625]
    er_EM_cross_I_er_EM_3 = __ralloc.v0[626]
    er_EM_cross_I_p_E_1 = __ralloc.v0[627]
    er_EM_cross_I_p_E_2 = __ralloc.v0[628]
    er_EM_cross_I_p_E_3 = __ralloc.v0[629]
    p_E_cross_I_er_EM_1 = __ralloc.v0[630]
    p_E_cross_I_er_EM_2 = __ralloc.v0[631]
    p_E_cross_I_er_EM_3 = __ralloc.v0[632]
    p_E_cross_I_p_E_1 = __ralloc.v0[633]
    p_E_cross_I_p_E_2 = __ralloc.v0[634]
    p_E_cross_I_p_E_3 = __ralloc.v0[635]
    one_minus_7sin2ϕEM = __ralloc.v0[636]
    two_sinϕEM = __ralloc.v0[637]
    N_MfigM_figE_factor_div_rEMp5 = __ralloc.v0[638]
    N_MfigM_figE_1 = __ralloc.v0[639]
    N_MfigM_figE_2 = __ralloc.v0[640]
    N_MfigM_figE_3 = __ralloc.v0[641]
    N_1_LMF = __ralloc.v0[642]
    N_2_LMF = __ralloc.v0[643]
    N_3_LMF = __ralloc.v0[644]
    N_cmb_1 = __ralloc.v0[645]
    N_cmb_2 = __ralloc.v0[646]
    N_cmb_3 = __ralloc.v0[647]
    I_dω_1 = __ralloc.v0[648]
    I_dω_2 = __ralloc.v0[649]
    I_dω_3 = __ralloc.v0[650]
    Ic_ωc_1 = __ralloc.v0[651]
    Ic_ωc_2 = __ralloc.v0[652]
    Ic_ωc_3 = __ralloc.v0[653]
    m_ωm_x_Icωc_1 = __ralloc.v0[654]
    m_ωm_x_Icωc_2 = __ralloc.v0[655]
    m_ωm_x_Icωc_3 = __ralloc.v0[656]
    Ic_dωc_1 = __ralloc.v0[657]
    Ic_dωc_2 = __ralloc.v0[658]
    Ic_dωc_3 = __ralloc.v0[659]
    tmp6776 = __ralloc.v0[660]
    tmp6777 = __ralloc.v0[661]
    tmp6778 = __ralloc.v0[662]
    tmp6779 = __ralloc.v0[663]
    tmp6780 = __ralloc.v0[664]
    tmp6781 = __ralloc.v0[665]
    tmp6782 = __ralloc.v0[666]
    tmp6783 = __ralloc.v0[667]
    w_LE = __ralloc.v0[668]
    α_TTmTDB = __ralloc.v0[669]
    v4E = __ralloc.v0[670]
    ϕ_Earth_Newtonian_sq = __ralloc.v0[671]
    β_TTmTDB = __ralloc.v0[672]
    newtonX = __ralloc.v1[1]
    newtonY = __ralloc.v1[2]
    newtonZ = __ralloc.v1[3]
    newtonianNb_Potential = __ralloc.v1[4]
    v2 = __ralloc.v1[5]
    pntempX = __ralloc.v1[6]
    pntempY = __ralloc.v1[7]
    pntempZ = __ralloc.v1[8]
    postNewtonX = __ralloc.v1[9]
    postNewtonY = __ralloc.v1[10]
    postNewtonZ = __ralloc.v1[11]
    accX = __ralloc.v1[12]
    accY = __ralloc.v1[13]
    accZ = __ralloc.v1[14]
    N_MfigM_pmA_x = __ralloc.v1[15]
    N_MfigM_pmA_y = __ralloc.v1[16]
    N_MfigM_pmA_z = __ralloc.v1[17]
    temp_N_M_x = __ralloc.v1[18]
    temp_N_M_y = __ralloc.v1[19]
    temp_N_M_z = __ralloc.v1[20]
    N_MfigM = __ralloc.v1[21]
    J2_t = __ralloc.v1[22]
    tmp5771 = __ralloc.v1[23]
    tmp5773 = __ralloc.v1[24]
    tmp5776 = __ralloc.v1[25]
    tmp5778 = __ralloc.v1[26]
    tmp5781 = __ralloc.v1[27]
    tmp5783 = __ralloc.v1[28]
    tmp5827 = __ralloc.v1[29]
    tmp5829 = __ralloc.v1[30]
    tmp5830 = __ralloc.v1[31]
    tmp5832 = __ralloc.v1[32]
    tmp6709 = __ralloc.v1[33]
    tmp6711 = __ralloc.v1[34]
    tmp6712 = __ralloc.v1[35]
    β_TTmTDB_i_2 = __ralloc.v1[36]
    X = __ralloc.v2[1]
    Y = __ralloc.v2[2]
    Z = __ralloc.v2[3]
    r_p2 = __ralloc.v2[4]
    r_p1d2 = __ralloc.v2[5]
    r_p3d2 = __ralloc.v2[6]
    r_p7d2 = __ralloc.v2[7]
    newtonianCoeff = __ralloc.v2[8]
    U = __ralloc.v2[9]
    V = __ralloc.v2[10]
    W = __ralloc.v2[11]
    _4U_m_3X = __ralloc.v2[12]
    _4V_m_3Y = __ralloc.v2[13]
    _4W_m_3Z = __ralloc.v2[14]
    UU = __ralloc.v2[15]
    VV = __ralloc.v2[16]
    WW = __ralloc.v2[17]
    newtonian1b_Potential = __ralloc.v2[18]
    newton_acc_X = __ralloc.v2[19]
    newton_acc_Y = __ralloc.v2[20]
    newton_acc_Z = __ralloc.v2[21]
    _2v2 = __ralloc.v2[22]
    vi_dot_vj = __ralloc.v2[23]
    rij_dot_vi_div_rij_sq = __ralloc.v2[24]
    pn2 = __ralloc.v2[25]
    U_t_pn2 = __ralloc.v2[26]
    V_t_pn2 = __ralloc.v2[27]
    W_t_pn2 = __ralloc.v2[28]
    pn3 = __ralloc.v2[29]
    pNX_t_pn3 = __ralloc.v2[30]
    pNY_t_pn3 = __ralloc.v2[31]
    pNZ_t_pn3 = __ralloc.v2[32]
    _4ϕj = __ralloc.v2[33]
    ϕi_plus_4ϕj = __ralloc.v2[34]
    sj2_plus_2si2 = __ralloc.v2[35]
    sj2_plus_2si2_minus_4vivj = __ralloc.v2[36]
    ϕs_and_vs = __ralloc.v2[37]
    pn1t1_7 = __ralloc.v2[38]
    pNX_t_X = __ralloc.v2[39]
    pNY_t_Y = __ralloc.v2[40]
    pNZ_t_Z = __ralloc.v2[41]
    pn1 = __ralloc.v2[42]
    X_t_pn1 = __ralloc.v2[43]
    Y_t_pn1 = __ralloc.v2[44]
    Z_t_pn1 = __ralloc.v2[45]
    X_bf_1 = __ralloc.v2[46]
    Y_bf_1 = __ralloc.v2[47]
    Z_bf_1 = __ralloc.v2[48]
    X_bf_2 = __ralloc.v2[49]
    Y_bf_2 = __ralloc.v2[50]
    Z_bf_2 = __ralloc.v2[51]
    X_bf_3 = __ralloc.v2[52]
    Y_bf_3 = __ralloc.v2[53]
    Z_bf_3 = __ralloc.v2[54]
    X_bf = __ralloc.v2[55]
    Y_bf = __ralloc.v2[56]
    Z_bf = __ralloc.v2[57]
    F_JCS_x = __ralloc.v2[58]
    F_JCS_y = __ralloc.v2[59]
    F_JCS_z = __ralloc.v2[60]
    temp_accX_j = __ralloc.v2[61]
    temp_accY_j = __ralloc.v2[62]
    temp_accZ_j = __ralloc.v2[63]
    temp_accX_i = __ralloc.v2[64]
    temp_accY_i = __ralloc.v2[65]
    temp_accZ_i = __ralloc.v2[66]
    sin_ϕ = __ralloc.v2[67]
    cos_ϕ = __ralloc.v2[68]
    sin_λ = __ralloc.v2[69]
    cos_λ = __ralloc.v2[70]
    r_xy = __ralloc.v2[71]
    r_p4 = __ralloc.v2[72]
    F_CS_ξ_36 = __ralloc.v2[73]
    F_CS_η_36 = __ralloc.v2[74]
    F_CS_ζ_36 = __ralloc.v2[75]
    F_J_ξ_36 = __ralloc.v2[76]
    F_J_ζ_36 = __ralloc.v2[77]
    F_J_ξ = __ralloc.v2[78]
    F_J_ζ = __ralloc.v2[79]
    F_CS_ξ = __ralloc.v2[80]
    F_CS_η = __ralloc.v2[81]
    F_CS_ζ = __ralloc.v2[82]
    F_JCS_ξ = __ralloc.v2[83]
    F_JCS_η = __ralloc.v2[84]
    F_JCS_ζ = __ralloc.v2[85]
    mantlef2coref = __ralloc.v2[86]
    pn2x = __ralloc.v2[87]
    pn2y = __ralloc.v2[88]
    pn2z = __ralloc.v2[89]
    tmp5791 = __ralloc.v2[90]
    tmp5794 = __ralloc.v2[91]
    tmp5796 = __ralloc.v2[92]
    tmp5797 = __ralloc.v2[93]
    tmp5799 = __ralloc.v2[94]
    tmp5807 = __ralloc.v2[95]
    tmp5808 = __ralloc.v2[96]
    tmp5819 = __ralloc.v2[97]
    temp_001 = __ralloc.v2[98]
    tmp5821 = __ralloc.v2[99]
    temp_002 = __ralloc.v2[100]
    tmp5823 = __ralloc.v2[101]
    temp_003 = __ralloc.v2[102]
    temp_004 = __ralloc.v2[103]
    tmp5860 = __ralloc.v2[104]
    tmp5862 = __ralloc.v2[105]
    tmp5864 = __ralloc.v2[106]
    tmp5868 = __ralloc.v2[107]
    tmp5870 = __ralloc.v2[108]
    tmp5871 = __ralloc.v2[109]
    tmp5977 = __ralloc.v2[110]
    tmp5978 = __ralloc.v2[111]
    tmp5981 = __ralloc.v2[112]
    tmp5982 = __ralloc.v2[113]
    tmp5988 = __ralloc.v2[114]
    tmp5991 = __ralloc.v2[115]
    tmp6053 = __ralloc.v2[116]
    tmp6055 = __ralloc.v2[117]
    tmp6057 = __ralloc.v2[118]
    tmp6059 = __ralloc.v2[119]
    tmp6061 = __ralloc.v2[120]
    tmp6063 = __ralloc.v2[121]
    tmp6065 = __ralloc.v2[122]
    tmp6066 = __ralloc.v2[123]
    tmp6067 = __ralloc.v2[124]
    tmp6069 = __ralloc.v2[125]
    tmp6070 = __ralloc.v2[126]
    tmp6071 = __ralloc.v2[127]
    tmp6073 = __ralloc.v2[128]
    tmp6074 = __ralloc.v2[129]
    tmp6075 = __ralloc.v2[130]
    tmp6087 = __ralloc.v2[131]
    Xij_t_Ui = __ralloc.v2[132]
    Yij_t_Vi = __ralloc.v2[133]
    Zij_t_Wi = __ralloc.v2[134]
    tmp6093 = __ralloc.v2[135]
    Rij_dot_Vi = __ralloc.v2[136]
    tmp6096 = __ralloc.v2[137]
    tmp6099 = __ralloc.v2[138]
    pn1t2_7 = __ralloc.v2[139]
    tmp6106 = __ralloc.v2[140]
    tmp6107 = __ralloc.v2[141]
    tmp6108 = __ralloc.v2[142]
    tmp6116 = __ralloc.v2[143]
    termpnx = __ralloc.v2[144]
    sumpnx = __ralloc.v2[145]
    tmp6119 = __ralloc.v2[146]
    termpny = __ralloc.v2[147]
    sumpny = __ralloc.v2[148]
    tmp6122 = __ralloc.v2[149]
    termpnz = __ralloc.v2[150]
    sumpnz = __ralloc.v2[151]
    β_TTmTDB_i_1 = __ralloc.v2[152]
    tmp6714 = __ralloc.v2[153]
    tmp6715 = __ralloc.v2[154]
    tmp6716 = __ralloc.v2[155]
    tmp6717 = __ralloc.v2[156]
    tmp6718 = __ralloc.v2[157]
    β_TTmTDB_i_3 = __ralloc.v2[158]
    β_TTmTDB_i_4 = __ralloc.v2[159]
    tmp6723 = __ralloc.v2[160]
    tmp6724 = __ralloc.v2[161]
    β_TTmTDB_i = __ralloc.v2[162]
    tmp6726 = __ralloc.v2[163]
    temp_β_TTmTDB = __ralloc.v2[164]
    P_n = __ralloc.v3[1]
    dP_n = __ralloc.v3[2]
    temp_fjξ = __ralloc.v3[3]
    temp_fjζ = __ralloc.v3[4]
    temp_rn = __ralloc.v3[5]
    sin_mλ = __ralloc.v3[6]
    cos_mλ = __ralloc.v3[7]
    RotM = __ralloc.v3[8]
    tmp5876 = __ralloc.v3[9]
    tmp5877 = __ralloc.v3[10]
    tmp5878 = __ralloc.v3[11]
    tmp5880 = __ralloc.v3[12]
    tmp5881 = __ralloc.v3[13]
    tmp5886 = __ralloc.v3[14]
    tmp5887 = __ralloc.v3[15]
    tmp5889 = __ralloc.v3[16]
    tmp5890 = __ralloc.v3[17]
    tmp5891 = __ralloc.v3[18]
    tmp5893 = __ralloc.v3[19]
    tmp5894 = __ralloc.v3[20]
    tmp5895 = __ralloc.v3[21]
    tmp5897 = __ralloc.v3[22]
    tmp5898 = __ralloc.v3[23]
    tmp5899 = __ralloc.v3[24]
    tmp5900 = __ralloc.v3[25]
    tmp5903 = __ralloc.v3[26]
    tmp5904 = __ralloc.v3[27]
    tmp5906 = __ralloc.v3[28]
    tmp5907 = __ralloc.v3[29]
    tmp5926 = __ralloc.v3[30]
    tmp5927 = __ralloc.v3[31]
    tmp5928 = __ralloc.v3[32]
    tmp5931 = __ralloc.v3[33]
    tmp5932 = __ralloc.v3[34]
    tmp5933 = __ralloc.v3[35]
    tmp5938 = __ralloc.v3[36]
    tmp5939 = __ralloc.v3[37]
    tmp5940 = __ralloc.v3[38]
    tmp5943 = __ralloc.v3[39]
    tmp5944 = __ralloc.v3[40]
    tmp5945 = __ralloc.v3[41]
    tmp5949 = __ralloc.v3[42]
    tmp5950 = __ralloc.v3[43]
    tmp5951 = __ralloc.v3[44]
    tmp5953 = __ralloc.v3[45]
    tmp5954 = __ralloc.v3[46]
    tmp5955 = __ralloc.v3[47]
    temp_CS_ξ = __ralloc.v4[1]
    temp_CS_η = __ralloc.v4[2]
    temp_CS_ζ = __ralloc.v4[3]
    Cnm_cosmλ = __ralloc.v4[4]
    Cnm_sinmλ = __ralloc.v4[5]
    Snm_cosmλ = __ralloc.v4[6]
    Snm_sinmλ = __ralloc.v4[7]
    secϕ_P_nm = __ralloc.v4[8]
    P_nm = __ralloc.v4[9]
    cosϕ_dP_nm = __ralloc.v4[10]
    Rb2p = __ralloc.v4[11]
    Gc2p = __ralloc.v4[12]
    tmp5909 = __ralloc.v4[13]
    tmp5912 = __ralloc.v4[14]
    tmp5914 = __ralloc.v4[15]
    tmp5916 = __ralloc.v4[16]
    tmp5917 = __ralloc.v4[17]
    tmp5918 = __ralloc.v4[18]
    tmp5921 = __ralloc.v4[19]
    tmp5922 = __ralloc.v4[20]
    tmp5923 = __ralloc.v4[21]
    tmp5925 = __ralloc.v4[22]
    tmp5929 = __ralloc.v4[23]
    tmp5930 = __ralloc.v4[24]
    tmp5934 = __ralloc.v4[25]
    tmp5935 = __ralloc.v4[26]
    tmp5937 = __ralloc.v4[27]
    tmp5941 = __ralloc.v4[28]
    tmp5942 = __ralloc.v4[29]
    tmp5946 = __ralloc.v4[30]
    tmp5947 = __ralloc.v4[31]
    tmp5952 = __ralloc.v4[32]
    tmp5956 = __ralloc.v4[33]
    tmp5957 = __ralloc.v4[34]
    tmp5963 = __ralloc.v4[35]
    tmp5964 = __ralloc.v4[36]
    tmp5965 = __ralloc.v4[37]
    tmp5966 = __ralloc.v4[38]
    tmp5968 = __ralloc.v4[39]
    tmp5969 = __ralloc.v4[40]
    tmp5970 = __ralloc.v4[41]
    tmp5971 = __ralloc.v4[42]
    tmp5973 = __ralloc.v4[43]
    tmp5974 = __ralloc.v4[44]
    tmp5975 = __ralloc.v4[45]
    tmp5993 = __ralloc.v4[46]
    tmp5994 = __ralloc.v4[47]
    tmp5995 = __ralloc.v4[48]
    tmp5996 = __ralloc.v4[49]
    tmp5998 = __ralloc.v4[50]
    tmp5999 = __ralloc.v4[51]
    tmp6000 = __ralloc.v4[52]
    tmp6001 = __ralloc.v4[53]
    tmp6003 = __ralloc.v4[54]
    tmp6004 = __ralloc.v4[55]
    tmp6005 = __ralloc.v4[56]
    tmp6006 = __ralloc.v4[57]
    tmp6008 = __ralloc.v4[58]
    tmp6009 = __ralloc.v4[59]
    tmp6010 = __ralloc.v4[60]
    tmp6011 = __ralloc.v4[61]
    tmp6013 = __ralloc.v4[62]
    tmp6014 = __ralloc.v4[63]
    tmp6015 = __ralloc.v4[64]
    tmp6016 = __ralloc.v4[65]
    tmp6018 = __ralloc.v4[66]
    tmp6019 = __ralloc.v4[67]
    tmp6020 = __ralloc.v4[68]
    tmp6021 = __ralloc.v4[69]
    tmp6023 = __ralloc.v4[70]
    tmp6024 = __ralloc.v4[71]
    tmp6025 = __ralloc.v4[72]
    tmp6026 = __ralloc.v4[73]
    tmp6028 = __ralloc.v4[74]
    tmp6029 = __ralloc.v4[75]
    tmp6030 = __ralloc.v4[76]
    tmp6031 = __ralloc.v4[77]
    tmp6033 = __ralloc.v4[78]
    tmp6034 = __ralloc.v4[79]
    tmp6035 = __ralloc.v4[80]
    tmp6036 = __ralloc.v4[81]
    tmp6038 = __ralloc.v4[82]
    tmp6039 = __ralloc.v4[83]
    tmp6040 = __ralloc.v4[84]
    tmp6041 = __ralloc.v4[85]
    tmp6043 = __ralloc.v4[86]
    tmp6044 = __ralloc.v4[87]
    tmp6045 = __ralloc.v4[88]
    tmp6046 = __ralloc.v4[89]
    tmp6048 = __ralloc.v4[90]
    tmp6049 = __ralloc.v4[91]
    tmp6050 = __ralloc.v4[92]
    tmp6051 = __ralloc.v4[93]
    local (N, jd0) = params
    local __t = Taylor1(numtype(t), t.order)
    local S = eltype(q)
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local params_bwd = (N_bwd, jd0)
    local qq_bwd = Taylor1.(constant_term.(q[union(nbodyind(N, 1:N_bwd), 6N + 1:6N + 13)]), t.order)::Vector{S}
    local dqq_bwd = similar(qq_bwd)
    local xaux_bwd = similar(qq_bwd)
    local jc = TaylorIntegration.jetcoeffs!(NBP_pN_A_J23E_J23M_J2S_threads!, t, qq_bwd, dqq_bwd, xaux_bwd, params_bwd)
    local q_del_τ_M = special_eval(qq_bwd, __t - τ_M)
    local q_del_τ_0 = special_eval(qq_bwd, __t - τ_0p)
    local q_del_τ_1 = special_eval(qq_bwd, __t - τ_1p)
    local q_del_τ_2 = special_eval(qq_bwd, __t - τ_2p)
    local eulang_del_τ_M = q_del_τ_M[6N_bwd + 1:6N_bwd + 3]::Vector{S}
    local ω_m_del_τ_M = q_del_τ_M[6N_bwd + 4:6N_bwd + 6]::Vector{S}
    local I_m_t = ITM(q_del_τ_M, eulang_del_τ_M, ω_m_del_τ_M)::Matrix{S}
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    (N_MfigM[1]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[1]).coeffs[2:order + 1] .= zero((N_MfigM[1]).coeffs[1])
    (N_MfigM[2]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[2]).coeffs[2:order + 1] .= zero((N_MfigM[2]).coeffs[1])
    (N_MfigM[3]).coeffs[1] = identity(constant_term(zero_q_1))
    (N_MfigM[3]).coeffs[2:order + 1] .= zero((N_MfigM[3]).coeffs[1])
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m.coeffs[1] = identity(constant_term(q[6N + 1]))
    ϕ_m.coeffs[2:order + 1] .= zero(ϕ_m.coeffs[1])
    θ_m.coeffs[1] = identity(constant_term(q[6N + 2]))
    θ_m.coeffs[2:order + 1] .= zero(θ_m.coeffs[1])
    ψ_m.coeffs[1] = identity(constant_term(q[6N + 3]))
    ψ_m.coeffs[2:order + 1] .= zero(ψ_m.coeffs[1])
    tmp5665.coeffs[1] = cos(constant_term(ϕ_m))
    tmp5665.coeffs[2:order + 1] .= zero(tmp5665.coeffs[1])
    tmp6735.coeffs[1] = sin(constant_term(ϕ_m))
    tmp6735.coeffs[2:order + 1] .= zero(tmp6735.coeffs[1])
    tmp5666.coeffs[1] = cos(constant_term(ψ_m))
    tmp5666.coeffs[2:order + 1] .= zero(tmp5666.coeffs[1])
    tmp6736.coeffs[1] = sin(constant_term(ψ_m))
    tmp6736.coeffs[2:order + 1] .= zero(tmp6736.coeffs[1])
    tmp5667.coeffs[1] = constant_term(tmp5665) * constant_term(tmp5666)
    tmp5667.coeffs[2:order + 1] .= zero(tmp5667.coeffs[1])
    tmp5668.coeffs[1] = cos(constant_term(θ_m))
    tmp5668.coeffs[2:order + 1] .= zero(tmp5668.coeffs[1])
    tmp6737.coeffs[1] = sin(constant_term(θ_m))
    tmp6737.coeffs[2:order + 1] .= zero(tmp6737.coeffs[1])
    tmp5669.coeffs[1] = sin(constant_term(ϕ_m))
    tmp5669.coeffs[2:order + 1] .= zero(tmp5669.coeffs[1])
    tmp6738.coeffs[1] = cos(constant_term(ϕ_m))
    tmp6738.coeffs[2:order + 1] .= zero(tmp6738.coeffs[1])
    tmp5670.coeffs[1] = constant_term(tmp5668) * constant_term(tmp5669)
    tmp5670.coeffs[2:order + 1] .= zero(tmp5670.coeffs[1])
    tmp5671.coeffs[1] = sin(constant_term(ψ_m))
    tmp5671.coeffs[2:order + 1] .= zero(tmp5671.coeffs[1])
    tmp6739.coeffs[1] = cos(constant_term(ψ_m))
    tmp6739.coeffs[2:order + 1] .= zero(tmp6739.coeffs[1])
    tmp5672.coeffs[1] = constant_term(tmp5670) * constant_term(tmp5671)
    tmp5672.coeffs[2:order + 1] .= zero(tmp5672.coeffs[1])
    (RotM[1, 1, mo]).coeffs[1] = constant_term(tmp5667) - constant_term(tmp5672)
    (RotM[1, 1, mo]).coeffs[2:order + 1] .= zero((RotM[1, 1, mo]).coeffs[1])
    tmp5674.coeffs[1] = cos(constant_term(θ_m))
    tmp5674.coeffs[2:order + 1] .= zero(tmp5674.coeffs[1])
    tmp6740.coeffs[1] = sin(constant_term(θ_m))
    tmp6740.coeffs[2:order + 1] .= zero(tmp6740.coeffs[1])
    tmp5675.coeffs[1] = -(constant_term(tmp5674))
    tmp5675.coeffs[2:order + 1] .= zero(tmp5675.coeffs[1])
    tmp5676.coeffs[1] = cos(constant_term(ψ_m))
    tmp5676.coeffs[2:order + 1] .= zero(tmp5676.coeffs[1])
    tmp6741.coeffs[1] = sin(constant_term(ψ_m))
    tmp6741.coeffs[2:order + 1] .= zero(tmp6741.coeffs[1])
    tmp5677.coeffs[1] = constant_term(tmp5675) * constant_term(tmp5676)
    tmp5677.coeffs[2:order + 1] .= zero(tmp5677.coeffs[1])
    tmp5678.coeffs[1] = sin(constant_term(ϕ_m))
    tmp5678.coeffs[2:order + 1] .= zero(tmp5678.coeffs[1])
    tmp6742.coeffs[1] = cos(constant_term(ϕ_m))
    tmp6742.coeffs[2:order + 1] .= zero(tmp6742.coeffs[1])
    tmp5679.coeffs[1] = constant_term(tmp5677) * constant_term(tmp5678)
    tmp5679.coeffs[2:order + 1] .= zero(tmp5679.coeffs[1])
    tmp5680.coeffs[1] = cos(constant_term(ϕ_m))
    tmp5680.coeffs[2:order + 1] .= zero(tmp5680.coeffs[1])
    tmp6743.coeffs[1] = sin(constant_term(ϕ_m))
    tmp6743.coeffs[2:order + 1] .= zero(tmp6743.coeffs[1])
    tmp5681.coeffs[1] = sin(constant_term(ψ_m))
    tmp5681.coeffs[2:order + 1] .= zero(tmp5681.coeffs[1])
    tmp6744.coeffs[1] = cos(constant_term(ψ_m))
    tmp6744.coeffs[2:order + 1] .= zero(tmp6744.coeffs[1])
    tmp5682.coeffs[1] = constant_term(tmp5680) * constant_term(tmp5681)
    tmp5682.coeffs[2:order + 1] .= zero(tmp5682.coeffs[1])
    (RotM[2, 1, mo]).coeffs[1] = constant_term(tmp5679) - constant_term(tmp5682)
    (RotM[2, 1, mo]).coeffs[2:order + 1] .= zero((RotM[2, 1, mo]).coeffs[1])
    tmp5684.coeffs[1] = sin(constant_term(θ_m))
    tmp5684.coeffs[2:order + 1] .= zero(tmp5684.coeffs[1])
    tmp6745.coeffs[1] = cos(constant_term(θ_m))
    tmp6745.coeffs[2:order + 1] .= zero(tmp6745.coeffs[1])
    tmp5685.coeffs[1] = sin(constant_term(ϕ_m))
    tmp5685.coeffs[2:order + 1] .= zero(tmp5685.coeffs[1])
    tmp6746.coeffs[1] = cos(constant_term(ϕ_m))
    tmp6746.coeffs[2:order + 1] .= zero(tmp6746.coeffs[1])
    (RotM[3, 1, mo]).coeffs[1] = constant_term(tmp5684) * constant_term(tmp5685)
    (RotM[3, 1, mo]).coeffs[2:order + 1] .= zero((RotM[3, 1, mo]).coeffs[1])
    tmp5687.coeffs[1] = cos(constant_term(ψ_m))
    tmp5687.coeffs[2:order + 1] .= zero(tmp5687.coeffs[1])
    tmp6747.coeffs[1] = sin(constant_term(ψ_m))
    tmp6747.coeffs[2:order + 1] .= zero(tmp6747.coeffs[1])
    tmp5688.coeffs[1] = sin(constant_term(ϕ_m))
    tmp5688.coeffs[2:order + 1] .= zero(tmp5688.coeffs[1])
    tmp6748.coeffs[1] = cos(constant_term(ϕ_m))
    tmp6748.coeffs[2:order + 1] .= zero(tmp6748.coeffs[1])
    tmp5689.coeffs[1] = constant_term(tmp5687) * constant_term(tmp5688)
    tmp5689.coeffs[2:order + 1] .= zero(tmp5689.coeffs[1])
    tmp5690.coeffs[1] = cos(constant_term(θ_m))
    tmp5690.coeffs[2:order + 1] .= zero(tmp5690.coeffs[1])
    tmp6749.coeffs[1] = sin(constant_term(θ_m))
    tmp6749.coeffs[2:order + 1] .= zero(tmp6749.coeffs[1])
    tmp5691.coeffs[1] = cos(constant_term(ϕ_m))
    tmp5691.coeffs[2:order + 1] .= zero(tmp5691.coeffs[1])
    tmp6750.coeffs[1] = sin(constant_term(ϕ_m))
    tmp6750.coeffs[2:order + 1] .= zero(tmp6750.coeffs[1])
    tmp5692.coeffs[1] = constant_term(tmp5690) * constant_term(tmp5691)
    tmp5692.coeffs[2:order + 1] .= zero(tmp5692.coeffs[1])
    tmp5693.coeffs[1] = sin(constant_term(ψ_m))
    tmp5693.coeffs[2:order + 1] .= zero(tmp5693.coeffs[1])
    tmp6751.coeffs[1] = cos(constant_term(ψ_m))
    tmp6751.coeffs[2:order + 1] .= zero(tmp6751.coeffs[1])
    tmp5694.coeffs[1] = constant_term(tmp5692) * constant_term(tmp5693)
    tmp5694.coeffs[2:order + 1] .= zero(tmp5694.coeffs[1])
    (RotM[1, 2, mo]).coeffs[1] = constant_term(tmp5689) + constant_term(tmp5694)
    (RotM[1, 2, mo]).coeffs[2:order + 1] .= zero((RotM[1, 2, mo]).coeffs[1])
    tmp5696.coeffs[1] = cos(constant_term(θ_m))
    tmp5696.coeffs[2:order + 1] .= zero(tmp5696.coeffs[1])
    tmp6752.coeffs[1] = sin(constant_term(θ_m))
    tmp6752.coeffs[2:order + 1] .= zero(tmp6752.coeffs[1])
    tmp5697.coeffs[1] = cos(constant_term(ϕ_m))
    tmp5697.coeffs[2:order + 1] .= zero(tmp5697.coeffs[1])
    tmp6753.coeffs[1] = sin(constant_term(ϕ_m))
    tmp6753.coeffs[2:order + 1] .= zero(tmp6753.coeffs[1])
    tmp5698.coeffs[1] = constant_term(tmp5696) * constant_term(tmp5697)
    tmp5698.coeffs[2:order + 1] .= zero(tmp5698.coeffs[1])
    tmp5699.coeffs[1] = cos(constant_term(ψ_m))
    tmp5699.coeffs[2:order + 1] .= zero(tmp5699.coeffs[1])
    tmp6754.coeffs[1] = sin(constant_term(ψ_m))
    tmp6754.coeffs[2:order + 1] .= zero(tmp6754.coeffs[1])
    tmp5700.coeffs[1] = constant_term(tmp5698) * constant_term(tmp5699)
    tmp5700.coeffs[2:order + 1] .= zero(tmp5700.coeffs[1])
    tmp5701.coeffs[1] = sin(constant_term(ϕ_m))
    tmp5701.coeffs[2:order + 1] .= zero(tmp5701.coeffs[1])
    tmp6755.coeffs[1] = cos(constant_term(ϕ_m))
    tmp6755.coeffs[2:order + 1] .= zero(tmp6755.coeffs[1])
    tmp5702.coeffs[1] = sin(constant_term(ψ_m))
    tmp5702.coeffs[2:order + 1] .= zero(tmp5702.coeffs[1])
    tmp6756.coeffs[1] = cos(constant_term(ψ_m))
    tmp6756.coeffs[2:order + 1] .= zero(tmp6756.coeffs[1])
    tmp5703.coeffs[1] = constant_term(tmp5701) * constant_term(tmp5702)
    tmp5703.coeffs[2:order + 1] .= zero(tmp5703.coeffs[1])
    (RotM[2, 2, mo]).coeffs[1] = constant_term(tmp5700) - constant_term(tmp5703)
    (RotM[2, 2, mo]).coeffs[2:order + 1] .= zero((RotM[2, 2, mo]).coeffs[1])
    tmp5705.coeffs[1] = cos(constant_term(ϕ_m))
    tmp5705.coeffs[2:order + 1] .= zero(tmp5705.coeffs[1])
    tmp6757.coeffs[1] = sin(constant_term(ϕ_m))
    tmp6757.coeffs[2:order + 1] .= zero(tmp6757.coeffs[1])
    tmp5706.coeffs[1] = -(constant_term(tmp5705))
    tmp5706.coeffs[2:order + 1] .= zero(tmp5706.coeffs[1])
    tmp5707.coeffs[1] = sin(constant_term(θ_m))
    tmp5707.coeffs[2:order + 1] .= zero(tmp5707.coeffs[1])
    tmp6758.coeffs[1] = cos(constant_term(θ_m))
    tmp6758.coeffs[2:order + 1] .= zero(tmp6758.coeffs[1])
    (RotM[3, 2, mo]).coeffs[1] = constant_term(tmp5706) * constant_term(tmp5707)
    (RotM[3, 2, mo]).coeffs[2:order + 1] .= zero((RotM[3, 2, mo]).coeffs[1])
    tmp5709.coeffs[1] = sin(constant_term(θ_m))
    tmp5709.coeffs[2:order + 1] .= zero(tmp5709.coeffs[1])
    tmp6759.coeffs[1] = cos(constant_term(θ_m))
    tmp6759.coeffs[2:order + 1] .= zero(tmp6759.coeffs[1])
    tmp5710.coeffs[1] = sin(constant_term(ψ_m))
    tmp5710.coeffs[2:order + 1] .= zero(tmp5710.coeffs[1])
    tmp6760.coeffs[1] = cos(constant_term(ψ_m))
    tmp6760.coeffs[2:order + 1] .= zero(tmp6760.coeffs[1])
    (RotM[1, 3, mo]).coeffs[1] = constant_term(tmp5709) * constant_term(tmp5710)
    (RotM[1, 3, mo]).coeffs[2:order + 1] .= zero((RotM[1, 3, mo]).coeffs[1])
    tmp5712.coeffs[1] = cos(constant_term(ψ_m))
    tmp5712.coeffs[2:order + 1] .= zero(tmp5712.coeffs[1])
    tmp6761.coeffs[1] = sin(constant_term(ψ_m))
    tmp6761.coeffs[2:order + 1] .= zero(tmp6761.coeffs[1])
    tmp5713.coeffs[1] = sin(constant_term(θ_m))
    tmp5713.coeffs[2:order + 1] .= zero(tmp5713.coeffs[1])
    tmp6762.coeffs[1] = cos(constant_term(θ_m))
    tmp6762.coeffs[2:order + 1] .= zero(tmp6762.coeffs[1])
    (RotM[2, 3, mo]).coeffs[1] = constant_term(tmp5712) * constant_term(tmp5713)
    (RotM[2, 3, mo]).coeffs[2:order + 1] .= zero((RotM[2, 3, mo]).coeffs[1])
    (RotM[3, 3, mo]).coeffs[1] = cos(constant_term(θ_m))
    (RotM[3, 3, mo]).coeffs[2:order + 1] .= zero((RotM[3, 3, mo]).coeffs[1])
    tmp6763.coeffs[1] = sin(constant_term(θ_m))
    tmp6763.coeffs[2:order + 1] .= zero(tmp6763.coeffs[1])
    ϕ_c.coeffs[1] = identity(constant_term(q[6N + 7]))
    ϕ_c.coeffs[2:order + 1] .= zero(ϕ_c.coeffs[1])
    tmp5716.coeffs[1] = cos(constant_term(ϕ_c))
    tmp5716.coeffs[2:order + 1] .= zero(tmp5716.coeffs[1])
    tmp6764.coeffs[1] = sin(constant_term(ϕ_c))
    tmp6764.coeffs[2:order + 1] .= zero(tmp6764.coeffs[1])
    tmp5717.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(tmp5716)
    tmp5717.coeffs[2:order + 1] .= zero(tmp5717.coeffs[1])
    tmp5718.coeffs[1] = sin(constant_term(ϕ_c))
    tmp5718.coeffs[2:order + 1] .= zero(tmp5718.coeffs[1])
    tmp6765.coeffs[1] = cos(constant_term(ϕ_c))
    tmp6765.coeffs[2:order + 1] .= zero(tmp6765.coeffs[1])
    tmp5719.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp5718)
    tmp5719.coeffs[2:order + 1] .= zero(tmp5719.coeffs[1])
    (mantlef2coref[1, 1]).coeffs[1] = constant_term(tmp5717) + constant_term(tmp5719)
    (mantlef2coref[1, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 1]).coeffs[1])
    tmp5721.coeffs[1] = -(constant_term(RotM[1, 1, mo]))
    tmp5721.coeffs[2:order + 1] .= zero(tmp5721.coeffs[1])
    tmp5722.coeffs[1] = sin(constant_term(ϕ_c))
    tmp5722.coeffs[2:order + 1] .= zero(tmp5722.coeffs[1])
    tmp6766.coeffs[1] = cos(constant_term(ϕ_c))
    tmp6766.coeffs[2:order + 1] .= zero(tmp6766.coeffs[1])
    tmp5723.coeffs[1] = constant_term(tmp5721) * constant_term(tmp5722)
    tmp5723.coeffs[2:order + 1] .= zero(tmp5723.coeffs[1])
    tmp5724.coeffs[1] = cos(constant_term(ϕ_c))
    tmp5724.coeffs[2:order + 1] .= zero(tmp5724.coeffs[1])
    tmp6767.coeffs[1] = sin(constant_term(ϕ_c))
    tmp6767.coeffs[2:order + 1] .= zero(tmp6767.coeffs[1])
    tmp5725.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(tmp5724)
    tmp5725.coeffs[2:order + 1] .= zero(tmp5725.coeffs[1])
    (mantlef2coref[2, 1]).coeffs[1] = constant_term(tmp5723) + constant_term(tmp5725)
    (mantlef2coref[2, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 1]).coeffs[1])
    (mantlef2coref[3, 1]).coeffs[1] = identity(constant_term(RotM[1, 3, mo]))
    (mantlef2coref[3, 1]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 1]).coeffs[1])
    tmp5727.coeffs[1] = cos(constant_term(ϕ_c))
    tmp5727.coeffs[2:order + 1] .= zero(tmp5727.coeffs[1])
    tmp6768.coeffs[1] = sin(constant_term(ϕ_c))
    tmp6768.coeffs[2:order + 1] .= zero(tmp6768.coeffs[1])
    tmp5728.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(tmp5727)
    tmp5728.coeffs[2:order + 1] .= zero(tmp5728.coeffs[1])
    tmp5729.coeffs[1] = sin(constant_term(ϕ_c))
    tmp5729.coeffs[2:order + 1] .= zero(tmp5729.coeffs[1])
    tmp6769.coeffs[1] = cos(constant_term(ϕ_c))
    tmp6769.coeffs[2:order + 1] .= zero(tmp6769.coeffs[1])
    tmp5730.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp5729)
    tmp5730.coeffs[2:order + 1] .= zero(tmp5730.coeffs[1])
    (mantlef2coref[1, 2]).coeffs[1] = constant_term(tmp5728) + constant_term(tmp5730)
    (mantlef2coref[1, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 2]).coeffs[1])
    tmp5732.coeffs[1] = -(constant_term(RotM[2, 1, mo]))
    tmp5732.coeffs[2:order + 1] .= zero(tmp5732.coeffs[1])
    tmp5733.coeffs[1] = sin(constant_term(ϕ_c))
    tmp5733.coeffs[2:order + 1] .= zero(tmp5733.coeffs[1])
    tmp6770.coeffs[1] = cos(constant_term(ϕ_c))
    tmp6770.coeffs[2:order + 1] .= zero(tmp6770.coeffs[1])
    tmp5734.coeffs[1] = constant_term(tmp5732) * constant_term(tmp5733)
    tmp5734.coeffs[2:order + 1] .= zero(tmp5734.coeffs[1])
    tmp5735.coeffs[1] = cos(constant_term(ϕ_c))
    tmp5735.coeffs[2:order + 1] .= zero(tmp5735.coeffs[1])
    tmp6771.coeffs[1] = sin(constant_term(ϕ_c))
    tmp6771.coeffs[2:order + 1] .= zero(tmp6771.coeffs[1])
    tmp5736.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(tmp5735)
    tmp5736.coeffs[2:order + 1] .= zero(tmp5736.coeffs[1])
    (mantlef2coref[2, 2]).coeffs[1] = constant_term(tmp5734) + constant_term(tmp5736)
    (mantlef2coref[2, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 2]).coeffs[1])
    (mantlef2coref[3, 2]).coeffs[1] = identity(constant_term(RotM[2, 3, mo]))
    (mantlef2coref[3, 2]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 2]).coeffs[1])
    tmp5738.coeffs[1] = cos(constant_term(ϕ_c))
    tmp5738.coeffs[2:order + 1] .= zero(tmp5738.coeffs[1])
    tmp6772.coeffs[1] = sin(constant_term(ϕ_c))
    tmp6772.coeffs[2:order + 1] .= zero(tmp6772.coeffs[1])
    tmp5739.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(tmp5738)
    tmp5739.coeffs[2:order + 1] .= zero(tmp5739.coeffs[1])
    tmp5740.coeffs[1] = sin(constant_term(ϕ_c))
    tmp5740.coeffs[2:order + 1] .= zero(tmp5740.coeffs[1])
    tmp6773.coeffs[1] = cos(constant_term(ϕ_c))
    tmp6773.coeffs[2:order + 1] .= zero(tmp6773.coeffs[1])
    tmp5741.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp5740)
    tmp5741.coeffs[2:order + 1] .= zero(tmp5741.coeffs[1])
    (mantlef2coref[1, 3]).coeffs[1] = constant_term(tmp5739) + constant_term(tmp5741)
    (mantlef2coref[1, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[1, 3]).coeffs[1])
    tmp5743.coeffs[1] = -(constant_term(RotM[3, 1, mo]))
    tmp5743.coeffs[2:order + 1] .= zero(tmp5743.coeffs[1])
    tmp5744.coeffs[1] = sin(constant_term(ϕ_c))
    tmp5744.coeffs[2:order + 1] .= zero(tmp5744.coeffs[1])
    tmp6774.coeffs[1] = cos(constant_term(ϕ_c))
    tmp6774.coeffs[2:order + 1] .= zero(tmp6774.coeffs[1])
    tmp5745.coeffs[1] = constant_term(tmp5743) * constant_term(tmp5744)
    tmp5745.coeffs[2:order + 1] .= zero(tmp5745.coeffs[1])
    tmp5746.coeffs[1] = cos(constant_term(ϕ_c))
    tmp5746.coeffs[2:order + 1] .= zero(tmp5746.coeffs[1])
    tmp6775.coeffs[1] = sin(constant_term(ϕ_c))
    tmp6775.coeffs[2:order + 1] .= zero(tmp6775.coeffs[1])
    tmp5747.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(tmp5746)
    tmp5747.coeffs[2:order + 1] .= zero(tmp5747.coeffs[1])
    (mantlef2coref[2, 3]).coeffs[1] = constant_term(tmp5745) + constant_term(tmp5747)
    (mantlef2coref[2, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[2, 3]).coeffs[1])
    (mantlef2coref[3, 3]).coeffs[1] = identity(constant_term(RotM[3, 3, mo]))
    (mantlef2coref[3, 3]).coeffs[2:order + 1] .= zero((mantlef2coref[3, 3]).coeffs[1])
    tmp5749.coeffs[1] = constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10])
    tmp5749.coeffs[2:order + 1] .= zero(tmp5749.coeffs[1])
    tmp5750.coeffs[1] = constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11])
    tmp5750.coeffs[2:order + 1] .= zero(tmp5750.coeffs[1])
    tmp5751.coeffs[1] = constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12])
    tmp5751.coeffs[2:order + 1] .= zero(tmp5751.coeffs[1])
    tmp5752.coeffs[1] = constant_term(tmp5750) + constant_term(tmp5751)
    tmp5752.coeffs[2:order + 1] .= zero(tmp5752.coeffs[1])
    ω_c_CE_1.coeffs[1] = constant_term(tmp5749) + constant_term(tmp5752)
    ω_c_CE_1.coeffs[2:order + 1] .= zero(ω_c_CE_1.coeffs[1])
    tmp5754.coeffs[1] = constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10])
    tmp5754.coeffs[2:order + 1] .= zero(tmp5754.coeffs[1])
    tmp5755.coeffs[1] = constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11])
    tmp5755.coeffs[2:order + 1] .= zero(tmp5755.coeffs[1])
    tmp5756.coeffs[1] = constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12])
    tmp5756.coeffs[2:order + 1] .= zero(tmp5756.coeffs[1])
    tmp5757.coeffs[1] = constant_term(tmp5755) + constant_term(tmp5756)
    tmp5757.coeffs[2:order + 1] .= zero(tmp5757.coeffs[1])
    ω_c_CE_2.coeffs[1] = constant_term(tmp5754) + constant_term(tmp5757)
    ω_c_CE_2.coeffs[2:order + 1] .= zero(ω_c_CE_2.coeffs[1])
    tmp5759.coeffs[1] = constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10])
    tmp5759.coeffs[2:order + 1] .= zero(tmp5759.coeffs[1])
    tmp5760.coeffs[1] = constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11])
    tmp5760.coeffs[2:order + 1] .= zero(tmp5760.coeffs[1])
    tmp5761.coeffs[1] = constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12])
    tmp5761.coeffs[2:order + 1] .= zero(tmp5761.coeffs[1])
    tmp5762.coeffs[1] = constant_term(tmp5760) + constant_term(tmp5761)
    tmp5762.coeffs[2:order + 1] .= zero(tmp5762.coeffs[1])
    ω_c_CE_3.coeffs[1] = constant_term(tmp5759) + constant_term(tmp5762)
    ω_c_CE_3.coeffs[2:order + 1] .= zero(ω_c_CE_3.coeffs[1])
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    (J2_t[su]).coeffs[1] = identity(constant_term(J2S_t))
    (J2_t[su]).coeffs[2:order + 1] .= zero((J2_t[su]).coeffs[1])
    (J2_t[ea]).coeffs[1] = identity(constant_term(J2E_t))
    (J2_t[ea]).coeffs[2:order + 1] .= zero((J2_t[ea]).coeffs[1])
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    local q_ME_τ_0 = q_del_τ_0[3mo - 2:3mo] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_ME_τ_1 = q_del_τ_1[3mo - 2:3mo] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_ME_τ_2 = q_del_τ_2[3mo - 2:3mo] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local q_SE_τ_0 = q_del_τ_0[3su - 2:3su] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_SE_τ_1 = q_del_τ_1[3su - 2:3su] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_SE_τ_2 = q_del_τ_2[3su - 2:3su] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local R30 = RotM[:, :, ea]
    local R31 = Rz(-ω_E * τ_1) * RotM[:, :, ea]
    local R32 = Rz(-ω_E * τ_2) * RotM[:, :, ea]
    local r_star_M_0 = R30 * q_ME_τ_0
    local r_star_M_1 = R31 * q_ME_τ_1
    local r_star_M_2 = R32 * q_ME_τ_2
    local r_star_S_0 = R30 * q_SE_τ_0
    local r_star_S_1 = R31 * q_SE_τ_1
    local r_star_S_2 = R32 * q_SE_τ_2
    for j = 1:N
        (newtonX[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (newtonX[j]).coeffs[2:order + 1] .= zero((newtonX[j]).coeffs[1])
        (newtonY[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (newtonY[j]).coeffs[2:order + 1] .= zero((newtonY[j]).coeffs[1])
        (newtonZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (newtonZ[j]).coeffs[2:order + 1] .= zero((newtonZ[j]).coeffs[1])
        (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (newtonianNb_Potential[j]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[j]).coeffs[1])
        (dq[3j - 2]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 2]))
        (dq[3j - 2]).coeffs[2:order + 1] .= zero((dq[3j - 2]).coeffs[1])
        (dq[3j - 1]).coeffs[1] = identity(constant_term(q[3 * (N + j) - 1]))
        (dq[3j - 1]).coeffs[2:order + 1] .= zero((dq[3j - 1]).coeffs[1])
        (dq[3j]).coeffs[1] = identity(constant_term(q[3 * (N + j)]))
        (dq[3j]).coeffs[2:order + 1] .= zero((dq[3j]).coeffs[1])
    end
    for j = 1:N_ext
        (accX[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (accX[j]).coeffs[2:order + 1] .= zero((accX[j]).coeffs[1])
        (accY[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (accY[j]).coeffs[2:order + 1] .= zero((accY[j]).coeffs[1])
        (accZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
        (accZ[j]).coeffs[2:order + 1] .= zero((accZ[j]).coeffs[1])
    end
    #= In[33]:380 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    (X[i, j]).coeffs[1] = constant_term(q[3i - 2]) - constant_term(q[3j - 2])
                    (X[i, j]).coeffs[2:order + 1] .= zero((X[i, j]).coeffs[1])
                    (Y[i, j]).coeffs[1] = constant_term(q[3i - 1]) - constant_term(q[3j - 1])
                    (Y[i, j]).coeffs[2:order + 1] .= zero((Y[i, j]).coeffs[1])
                    (Z[i, j]).coeffs[1] = constant_term(q[3i]) - constant_term(q[3j])
                    (Z[i, j]).coeffs[2:order + 1] .= zero((Z[i, j]).coeffs[1])
                    (U[i, j]).coeffs[1] = constant_term(dq[3i - 2]) - constant_term(dq[3j - 2])
                    (U[i, j]).coeffs[2:order + 1] .= zero((U[i, j]).coeffs[1])
                    (V[i, j]).coeffs[1] = constant_term(dq[3i - 1]) - constant_term(dq[3j - 1])
                    (V[i, j]).coeffs[2:order + 1] .= zero((V[i, j]).coeffs[1])
                    (W[i, j]).coeffs[1] = constant_term(dq[3i]) - constant_term(dq[3j])
                    (W[i, j]).coeffs[2:order + 1] .= zero((W[i, j]).coeffs[1])
                    (tmp5771[3j - 2]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 2])
                    (tmp5771[3j - 2]).coeffs[2:order + 1] .= zero((tmp5771[3j - 2]).coeffs[1])
                    (tmp5773[3i - 2]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 2])
                    (tmp5773[3i - 2]).coeffs[2:order + 1] .= zero((tmp5773[3i - 2]).coeffs[1])
                    (_4U_m_3X[i, j]).coeffs[1] = constant_term(tmp5771[3j - 2]) - constant_term(tmp5773[3i - 2])
                    (_4U_m_3X[i, j]).coeffs[2:order + 1] .= zero((_4U_m_3X[i, j]).coeffs[1])
                    (tmp5776[3j - 1]).coeffs[1] = constant_term(4) * constant_term(dq[3j - 1])
                    (tmp5776[3j - 1]).coeffs[2:order + 1] .= zero((tmp5776[3j - 1]).coeffs[1])
                    (tmp5778[3i - 1]).coeffs[1] = constant_term(3) * constant_term(dq[3i - 1])
                    (tmp5778[3i - 1]).coeffs[2:order + 1] .= zero((tmp5778[3i - 1]).coeffs[1])
                    (_4V_m_3Y[i, j]).coeffs[1] = constant_term(tmp5776[3j - 1]) - constant_term(tmp5778[3i - 1])
                    (_4V_m_3Y[i, j]).coeffs[2:order + 1] .= zero((_4V_m_3Y[i, j]).coeffs[1])
                    (tmp5781[3j]).coeffs[1] = constant_term(4) * constant_term(dq[3j])
                    (tmp5781[3j]).coeffs[2:order + 1] .= zero((tmp5781[3j]).coeffs[1])
                    (tmp5783[3i]).coeffs[1] = constant_term(3) * constant_term(dq[3i])
                    (tmp5783[3i]).coeffs[2:order + 1] .= zero((tmp5783[3i]).coeffs[1])
                    (_4W_m_3Z[i, j]).coeffs[1] = constant_term(tmp5781[3j]) - constant_term(tmp5783[3i])
                    (_4W_m_3Z[i, j]).coeffs[2:order + 1] .= zero((_4W_m_3Z[i, j]).coeffs[1])
                    (pn2x[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j])
                    (pn2x[i, j]).coeffs[2:order + 1] .= zero((pn2x[i, j]).coeffs[1])
                    (pn2y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j])
                    (pn2y[i, j]).coeffs[2:order + 1] .= zero((pn2y[i, j]).coeffs[1])
                    (pn2z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j])
                    (pn2z[i, j]).coeffs[2:order + 1] .= zero((pn2z[i, j]).coeffs[1])
                    (UU[i, j]).coeffs[1] = constant_term(dq[3i - 2]) * constant_term(dq[3j - 2])
                    (UU[i, j]).coeffs[2:order + 1] .= zero((UU[i, j]).coeffs[1])
                    (VV[i, j]).coeffs[1] = constant_term(dq[3i - 1]) * constant_term(dq[3j - 1])
                    (VV[i, j]).coeffs[2:order + 1] .= zero((VV[i, j]).coeffs[1])
                    (WW[i, j]).coeffs[1] = constant_term(dq[3i]) * constant_term(dq[3j])
                    (WW[i, j]).coeffs[2:order + 1] .= zero((WW[i, j]).coeffs[1])
                    (tmp5791[i, j]).coeffs[1] = constant_term(UU[i, j]) + constant_term(VV[i, j])
                    (tmp5791[i, j]).coeffs[2:order + 1] .= zero((tmp5791[i, j]).coeffs[1])
                    (vi_dot_vj[i, j]).coeffs[1] = constant_term(tmp5791[i, j]) + constant_term(WW[i, j])
                    (vi_dot_vj[i, j]).coeffs[2:order + 1] .= zero((vi_dot_vj[i, j]).coeffs[1])
                    (tmp5794[i, j]).coeffs[1] = constant_term(X[i, j]) ^ float(constant_term(2))
                    (tmp5794[i, j]).coeffs[2:order + 1] .= zero((tmp5794[i, j]).coeffs[1])
                    (tmp5796[i, j]).coeffs[1] = constant_term(Y[i, j]) ^ float(constant_term(2))
                    (tmp5796[i, j]).coeffs[2:order + 1] .= zero((tmp5796[i, j]).coeffs[1])
                    (tmp5797[i, j]).coeffs[1] = constant_term(tmp5794[i, j]) + constant_term(tmp5796[i, j])
                    (tmp5797[i, j]).coeffs[2:order + 1] .= zero((tmp5797[i, j]).coeffs[1])
                    (tmp5799[i, j]).coeffs[1] = constant_term(Z[i, j]) ^ float(constant_term(2))
                    (tmp5799[i, j]).coeffs[2:order + 1] .= zero((tmp5799[i, j]).coeffs[1])
                    (r_p2[i, j]).coeffs[1] = constant_term(tmp5797[i, j]) + constant_term(tmp5799[i, j])
                    (r_p2[i, j]).coeffs[2:order + 1] .= zero((r_p2[i, j]).coeffs[1])
                    (r_p1d2[i, j]).coeffs[1] = sqrt(constant_term(r_p2[i, j]))
                    (r_p1d2[i, j]).coeffs[2:order + 1] .= zero((r_p1d2[i, j]).coeffs[1])
                    (r_p3d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(1.5))
                    (r_p3d2[i, j]).coeffs[2:order + 1] .= zero((r_p3d2[i, j]).coeffs[1])
                    (r_p7d2[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(3.5))
                    (r_p7d2[i, j]).coeffs[2:order + 1] .= zero((r_p7d2[i, j]).coeffs[1])
                    (newtonianCoeff[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i, j])
                    (newtonianCoeff[i, j]).coeffs[2:order + 1] .= zero((newtonianCoeff[i, j]).coeffs[1])
                    (tmp5807[i, j]).coeffs[1] = constant_term(pn2x[i, j]) + constant_term(pn2y[i, j])
                    (tmp5807[i, j]).coeffs[2:order + 1] .= zero((tmp5807[i, j]).coeffs[1])
                    (tmp5808[i, j]).coeffs[1] = constant_term(tmp5807[i, j]) + constant_term(pn2z[i, j])
                    (tmp5808[i, j]).coeffs[2:order + 1] .= zero((tmp5808[i, j]).coeffs[1])
                    (pn2[i, j]).coeffs[1] = constant_term(newtonianCoeff[i, j]) * constant_term(tmp5808[i, j])
                    (pn2[i, j]).coeffs[2:order + 1] .= zero((pn2[i, j]).coeffs[1])
                    (newton_acc_X[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                    (newton_acc_X[i, j]).coeffs[2:order + 1] .= zero((newton_acc_X[i, j]).coeffs[1])
                    (newton_acc_Y[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                    (newton_acc_Y[i, j]).coeffs[2:order + 1] .= zero((newton_acc_Y[i, j]).coeffs[1])
                    (newton_acc_Z[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                    (newton_acc_Z[i, j]).coeffs[2:order + 1] .= zero((newton_acc_Z[i, j]).coeffs[1])
                    (newtonian1b_Potential[i, j]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i, j])
                    (newtonian1b_Potential[i, j]).coeffs[2:order + 1] .= zero((newtonian1b_Potential[i, j]).coeffs[1])
                    (pn3[i, j]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i, j])
                    (pn3[i, j]).coeffs[2:order + 1] .= zero((pn3[i, j]).coeffs[1])
                    (U_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(U[i, j])
                    (U_t_pn2[i, j]).coeffs[2:order + 1] .= zero((U_t_pn2[i, j]).coeffs[1])
                    (V_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(V[i, j])
                    (V_t_pn2[i, j]).coeffs[2:order + 1] .= zero((V_t_pn2[i, j]).coeffs[1])
                    (W_t_pn2[i, j]).coeffs[1] = constant_term(pn2[i, j]) * constant_term(W[i, j])
                    (W_t_pn2[i, j]).coeffs[2:order + 1] .= zero((W_t_pn2[i, j]).coeffs[1])
                    (tmp5819[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j])
                    (tmp5819[i, j]).coeffs[2:order + 1] .= zero((tmp5819[i, j]).coeffs[1])
                    (temp_001[i, j]).coeffs[1] = constant_term(newtonX[j]) + constant_term(tmp5819[i, j])
                    (temp_001[i, j]).coeffs[2:order + 1] .= zero((temp_001[i, j]).coeffs[1])
                    (newtonX[j]).coeffs[1] = identity(constant_term(temp_001[i, j]))
                    (newtonX[j]).coeffs[2:order + 1] .= zero((newtonX[j]).coeffs[1])
                    (tmp5821[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j])
                    (tmp5821[i, j]).coeffs[2:order + 1] .= zero((tmp5821[i, j]).coeffs[1])
                    (temp_002[i, j]).coeffs[1] = constant_term(newtonY[j]) + constant_term(tmp5821[i, j])
                    (temp_002[i, j]).coeffs[2:order + 1] .= zero((temp_002[i, j]).coeffs[1])
                    (newtonY[j]).coeffs[1] = identity(constant_term(temp_002[i, j]))
                    (newtonY[j]).coeffs[2:order + 1] .= zero((newtonY[j]).coeffs[1])
                    (tmp5823[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j])
                    (tmp5823[i, j]).coeffs[2:order + 1] .= zero((tmp5823[i, j]).coeffs[1])
                    (temp_003[i, j]).coeffs[1] = constant_term(newtonZ[j]) + constant_term(tmp5823[i, j])
                    (temp_003[i, j]).coeffs[2:order + 1] .= zero((temp_003[i, j]).coeffs[1])
                    (newtonZ[j]).coeffs[1] = identity(constant_term(temp_003[i, j]))
                    (newtonZ[j]).coeffs[2:order + 1] .= zero((newtonZ[j]).coeffs[1])
                    (temp_004[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j])
                    (temp_004[i, j]).coeffs[2:order + 1] .= zero((temp_004[i, j]).coeffs[1])
                    (newtonianNb_Potential[j]).coeffs[1] = identity(constant_term(temp_004[i, j]))
                    (newtonianNb_Potential[j]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[j]).coeffs[1])
                end
            end
            (tmp5827[3j - 2]).coeffs[1] = constant_term(dq[3j - 2]) ^ float(constant_term(2))
            (tmp5827[3j - 2]).coeffs[2:order + 1] .= zero((tmp5827[3j - 2]).coeffs[1])
            (tmp5829[3j - 1]).coeffs[1] = constant_term(dq[3j - 1]) ^ float(constant_term(2))
            (tmp5829[3j - 1]).coeffs[2:order + 1] .= zero((tmp5829[3j - 1]).coeffs[1])
            (tmp5830[3j - 2]).coeffs[1] = constant_term(tmp5827[3j - 2]) + constant_term(tmp5829[3j - 1])
            (tmp5830[3j - 2]).coeffs[2:order + 1] .= zero((tmp5830[3j - 2]).coeffs[1])
            (tmp5832[3j]).coeffs[1] = constant_term(dq[3j]) ^ float(constant_term(2))
            (tmp5832[3j]).coeffs[2:order + 1] .= zero((tmp5832[3j]).coeffs[1])
            (v2[j]).coeffs[1] = constant_term(tmp5830[3j - 2]) + constant_term(tmp5832[3j])
            (v2[j]).coeffs[2:order + 1] .= zero((v2[j]).coeffs[1])
        end
    tmp5834.coeffs[1] = constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2])
    tmp5834.coeffs[2:order + 1] .= zero(tmp5834.coeffs[1])
    tmp5836.coeffs[1] = constant_term(tmp5834) / constant_term(2)
    tmp5836.coeffs[2:order + 1] .= zero(tmp5836.coeffs[1])
    tmp5837.coeffs[1] = constant_term(I_M_t[3, 3]) - constant_term(tmp5836)
    tmp5837.coeffs[2:order + 1] .= zero(tmp5837.coeffs[1])
    J2M_t.coeffs[1] = constant_term(tmp5837) / constant_term(μ[mo])
    J2M_t.coeffs[2:order + 1] .= zero(J2M_t.coeffs[1])
    tmp5839.coeffs[1] = constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1])
    tmp5839.coeffs[2:order + 1] .= zero(tmp5839.coeffs[1])
    tmp5840.coeffs[1] = constant_term(tmp5839) / constant_term(μ[mo])
    tmp5840.coeffs[2:order + 1] .= zero(tmp5840.coeffs[1])
    C22M_t.coeffs[1] = constant_term(tmp5840) / constant_term(4)
    C22M_t.coeffs[2:order + 1] .= zero(C22M_t.coeffs[1])
    tmp5843.coeffs[1] = -(constant_term(I_M_t[1, 3]))
    tmp5843.coeffs[2:order + 1] .= zero(tmp5843.coeffs[1])
    C21M_t.coeffs[1] = constant_term(tmp5843) / constant_term(μ[mo])
    C21M_t.coeffs[2:order + 1] .= zero(C21M_t.coeffs[1])
    tmp5845.coeffs[1] = -(constant_term(I_M_t[3, 2]))
    tmp5845.coeffs[2:order + 1] .= zero(tmp5845.coeffs[1])
    S21M_t.coeffs[1] = constant_term(tmp5845) / constant_term(μ[mo])
    S21M_t.coeffs[2:order + 1] .= zero(S21M_t.coeffs[1])
    tmp5847.coeffs[1] = -(constant_term(I_M_t[2, 1]))
    tmp5847.coeffs[2:order + 1] .= zero(tmp5847.coeffs[1])
    tmp5848.coeffs[1] = constant_term(tmp5847) / constant_term(μ[mo])
    tmp5848.coeffs[2:order + 1] .= zero(tmp5848.coeffs[1])
    S22M_t.coeffs[1] = constant_term(tmp5848) / constant_term(2)
    S22M_t.coeffs[2:order + 1] .= zero(S22M_t.coeffs[1])
    (J2_t[mo]).coeffs[1] = identity(constant_term(J2M_t))
    (J2_t[mo]).coeffs[2:order + 1] .= zero((J2_t[mo]).coeffs[1])
    #= In[33]:474 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        (X_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[1, 1, j])
                        (X_bf_1[i, j]).coeffs[2:order + 1] .= zero((X_bf_1[i, j]).coeffs[1])
                        (X_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[1, 2, j])
                        (X_bf_2[i, j]).coeffs[2:order + 1] .= zero((X_bf_2[i, j]).coeffs[1])
                        (X_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[1, 3, j])
                        (X_bf_3[i, j]).coeffs[2:order + 1] .= zero((X_bf_3[i, j]).coeffs[1])
                        (Y_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[2, 1, j])
                        (Y_bf_1[i, j]).coeffs[2:order + 1] .= zero((Y_bf_1[i, j]).coeffs[1])
                        (Y_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[2, 2, j])
                        (Y_bf_2[i, j]).coeffs[2:order + 1] .= zero((Y_bf_2[i, j]).coeffs[1])
                        (Y_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[2, 3, j])
                        (Y_bf_3[i, j]).coeffs[2:order + 1] .= zero((Y_bf_3[i, j]).coeffs[1])
                        (Z_bf_1[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(RotM[3, 1, j])
                        (Z_bf_1[i, j]).coeffs[2:order + 1] .= zero((Z_bf_1[i, j]).coeffs[1])
                        (Z_bf_2[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(RotM[3, 2, j])
                        (Z_bf_2[i, j]).coeffs[2:order + 1] .= zero((Z_bf_2[i, j]).coeffs[1])
                        (Z_bf_3[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(RotM[3, 3, j])
                        (Z_bf_3[i, j]).coeffs[2:order + 1] .= zero((Z_bf_3[i, j]).coeffs[1])
                        (tmp5860[i, j]).coeffs[1] = constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j])
                        (tmp5860[i, j]).coeffs[2:order + 1] .= zero((tmp5860[i, j]).coeffs[1])
                        (X_bf[i, j]).coeffs[1] = constant_term(tmp5860[i, j]) + constant_term(X_bf_3[i, j])
                        (X_bf[i, j]).coeffs[2:order + 1] .= zero((X_bf[i, j]).coeffs[1])
                        (tmp5862[i, j]).coeffs[1] = constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j])
                        (tmp5862[i, j]).coeffs[2:order + 1] .= zero((tmp5862[i, j]).coeffs[1])
                        (Y_bf[i, j]).coeffs[1] = constant_term(tmp5862[i, j]) + constant_term(Y_bf_3[i, j])
                        (Y_bf[i, j]).coeffs[2:order + 1] .= zero((Y_bf[i, j]).coeffs[1])
                        (tmp5864[i, j]).coeffs[1] = constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j])
                        (tmp5864[i, j]).coeffs[2:order + 1] .= zero((tmp5864[i, j]).coeffs[1])
                        (Z_bf[i, j]).coeffs[1] = constant_term(tmp5864[i, j]) + constant_term(Z_bf_3[i, j])
                        (Z_bf[i, j]).coeffs[2:order + 1] .= zero((Z_bf[i, j]).coeffs[1])
                        (sin_ϕ[i, j]).coeffs[1] = constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j])
                        (sin_ϕ[i, j]).coeffs[2:order + 1] .= zero((sin_ϕ[i, j]).coeffs[1])
                        (tmp5868[i, j]).coeffs[1] = constant_term(X_bf[i, j]) ^ float(constant_term(2))
                        (tmp5868[i, j]).coeffs[2:order + 1] .= zero((tmp5868[i, j]).coeffs[1])
                        (tmp5870[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) ^ float(constant_term(2))
                        (tmp5870[i, j]).coeffs[2:order + 1] .= zero((tmp5870[i, j]).coeffs[1])
                        (tmp5871[i, j]).coeffs[1] = constant_term(tmp5868[i, j]) + constant_term(tmp5870[i, j])
                        (tmp5871[i, j]).coeffs[2:order + 1] .= zero((tmp5871[i, j]).coeffs[1])
                        (r_xy[i, j]).coeffs[1] = sqrt(constant_term(tmp5871[i, j]))
                        (r_xy[i, j]).coeffs[2:order + 1] .= zero((r_xy[i, j]).coeffs[1])
                        (cos_ϕ[i, j]).coeffs[1] = constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j])
                        (cos_ϕ[i, j]).coeffs[2:order + 1] .= zero((cos_ϕ[i, j]).coeffs[1])
                        (sin_λ[i, j]).coeffs[1] = constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j])
                        (sin_λ[i, j]).coeffs[2:order + 1] .= zero((sin_λ[i, j]).coeffs[1])
                        (cos_λ[i, j]).coeffs[1] = constant_term(X_bf[i, j]) / constant_term(r_xy[i, j])
                        (cos_λ[i, j]).coeffs[2:order + 1] .= zero((cos_λ[i, j]).coeffs[1])
                        (P_n[i, j, 1]).coeffs[1] = identity(constant_term(one_t))
                        (P_n[i, j, 1]).coeffs[2:order + 1] .= zero((P_n[i, j, 1]).coeffs[1])
                        (P_n[i, j, 2]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                        (P_n[i, j, 2]).coeffs[2:order + 1] .= zero((P_n[i, j, 2]).coeffs[1])
                        (dP_n[i, j, 1]).coeffs[1] = identity(constant_term(zero_q_1))
                        (dP_n[i, j, 1]).coeffs[2:order + 1] .= zero((dP_n[i, j, 1]).coeffs[1])
                        (dP_n[i, j, 2]).coeffs[1] = identity(constant_term(one_t))
                        (dP_n[i, j, 2]).coeffs[2:order + 1] .= zero((dP_n[i, j, 2]).coeffs[1])
                        for n = 2:n1SEM[j]
                            (tmp5876[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                            (tmp5876[i, j, n]).coeffs[2:order + 1] .= zero((tmp5876[i, j, n]).coeffs[1])
                            (tmp5877[i, j, n]).coeffs[1] = constant_term(tmp5876[i, j, n]) * constant_term(fact1_jsem[n])
                            (tmp5877[i, j, n]).coeffs[2:order + 1] .= zero((tmp5877[i, j, n]).coeffs[1])
                            (tmp5878[i, j, n - 1]).coeffs[1] = constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n])
                            (tmp5878[i, j, n - 1]).coeffs[2:order + 1] .= zero((tmp5878[i, j, n - 1]).coeffs[1])
                            (P_n[i, j, n + 1]).coeffs[1] = constant_term(tmp5877[i, j, n]) - constant_term(tmp5878[i, j, n - 1])
                            (P_n[i, j, n + 1]).coeffs[2:order + 1] .= zero((P_n[i, j, n + 1]).coeffs[1])
                            (tmp5880[i, j, n]).coeffs[1] = constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j])
                            (tmp5880[i, j, n]).coeffs[2:order + 1] .= zero((tmp5880[i, j, n]).coeffs[1])
                            (tmp5881[i, j, n]).coeffs[1] = constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n])
                            (tmp5881[i, j, n]).coeffs[2:order + 1] .= zero((tmp5881[i, j, n]).coeffs[1])
                            (dP_n[i, j, n + 1]).coeffs[1] = constant_term(tmp5880[i, j, n]) + constant_term(tmp5881[i, j, n])
                            (dP_n[i, j, n + 1]).coeffs[2:order + 1] .= zero((dP_n[i, j, n + 1]).coeffs[1])
                            (temp_rn[i, j, n]).coeffs[1] = constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n]))
                            (temp_rn[i, j, n]).coeffs[2:order + 1] .= zero((temp_rn[i, j, n]).coeffs[1])
                        end
                        (r_p4[i, j]).coeffs[1] = constant_term(r_p2[i, j]) ^ float(constant_term(2))
                        (r_p4[i, j]).coeffs[2:order + 1] .= zero((r_p4[i, j]).coeffs[1])
                        (tmp5886[i, j, 3]).coeffs[1] = constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2])
                        (tmp5886[i, j, 3]).coeffs[2:order + 1] .= zero((tmp5886[i, j, 3]).coeffs[1])
                        (tmp5887[i, j, 3]).coeffs[1] = constant_term(tmp5886[i, j, 3]) * constant_term(J2_t[j])
                        (tmp5887[i, j, 3]).coeffs[2:order + 1] .= zero((tmp5887[i, j, 3]).coeffs[1])
                        (F_J_ξ[i, j]).coeffs[1] = constant_term(tmp5887[i, j, 3]) / constant_term(r_p4[i, j])
                        (F_J_ξ[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ[i, j]).coeffs[1])
                        (tmp5889[i, j, 3]).coeffs[1] = -(constant_term(dP_n[i, j, 3]))
                        (tmp5889[i, j, 3]).coeffs[2:order + 1] .= zero((tmp5889[i, j, 3]).coeffs[1])
                        (tmp5890[i, j, 3]).coeffs[1] = constant_term(tmp5889[i, j, 3]) * constant_term(cos_ϕ[i, j])
                        (tmp5890[i, j, 3]).coeffs[2:order + 1] .= zero((tmp5890[i, j, 3]).coeffs[1])
                        (tmp5891[i, j, 3]).coeffs[1] = constant_term(tmp5890[i, j, 3]) * constant_term(J2_t[j])
                        (tmp5891[i, j, 3]).coeffs[2:order + 1] .= zero((tmp5891[i, j, 3]).coeffs[1])
                        (F_J_ζ[i, j]).coeffs[1] = constant_term(tmp5891[i, j, 3]) / constant_term(r_p4[i, j])
                        (F_J_ζ[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ[i, j]).coeffs[1])
                        (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        (F_J_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ_36[i, j]).coeffs[1])
                        (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                        (F_J_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ_36[i, j]).coeffs[1])
                        for n = 3:n1SEM[j]
                            (tmp5893[i, j, n + 1]).coeffs[1] = constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n])
                            (tmp5893[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp5893[i, j, n + 1]).coeffs[1])
                            (tmp5894[i, j, n + 1]).coeffs[1] = constant_term(tmp5893[i, j, n + 1]) * constant_term(JSEM[j, n])
                            (tmp5894[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp5894[i, j, n + 1]).coeffs[1])
                            (tmp5895[i, j, n + 1]).coeffs[1] = constant_term(tmp5894[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                            (tmp5895[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp5895[i, j, n + 1]).coeffs[1])
                            (temp_fjξ[i, j, n]).coeffs[1] = constant_term(tmp5895[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j])
                            (temp_fjξ[i, j, n]).coeffs[2:order + 1] .= zero((temp_fjξ[i, j, n]).coeffs[1])
                            (tmp5897[i, j, n + 1]).coeffs[1] = -(constant_term(dP_n[i, j, n + 1]))
                            (tmp5897[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp5897[i, j, n + 1]).coeffs[1])
                            (tmp5898[i, j, n + 1]).coeffs[1] = constant_term(tmp5897[i, j, n + 1]) * constant_term(cos_ϕ[i, j])
                            (tmp5898[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp5898[i, j, n + 1]).coeffs[1])
                            (tmp5899[i, j, n + 1]).coeffs[1] = constant_term(tmp5898[i, j, n + 1]) * constant_term(JSEM[j, n])
                            (tmp5899[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp5899[i, j, n + 1]).coeffs[1])
                            (tmp5900[i, j, n + 1]).coeffs[1] = constant_term(tmp5899[i, j, n + 1]) / constant_term(temp_rn[i, j, n])
                            (tmp5900[i, j, n + 1]).coeffs[2:order + 1] .= zero((tmp5900[i, j, n + 1]).coeffs[1])
                            (temp_fjζ[i, j, n]).coeffs[1] = constant_term(tmp5900[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j])
                            (temp_fjζ[i, j, n]).coeffs[2:order + 1] .= zero((temp_fjζ[i, j, n]).coeffs[1])
                            (F_J_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjξ[i, j, n]))
                            (F_J_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ξ_36[i, j]).coeffs[1])
                            (F_J_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_fjζ[i, j, n]))
                            (F_J_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_J_ζ_36[i, j]).coeffs[1])
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    (sin_mλ[i, j, 1]).coeffs[1] = identity(constant_term(sin_λ[i, j]))
                                    (sin_mλ[i, j, 1]).coeffs[2:order + 1] .= zero((sin_mλ[i, j, 1]).coeffs[1])
                                    (cos_mλ[i, j, 1]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                                    (cos_mλ[i, j, 1]).coeffs[2:order + 1] .= zero((cos_mλ[i, j, 1]).coeffs[1])
                                    (secϕ_P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(one_t))
                                    (secϕ_P_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, 1, 1]).coeffs[1])
                                    (P_nm[i, j, 1, 1]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                                    (P_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((P_nm[i, j, 1, 1]).coeffs[1])
                                    (cosϕ_dP_nm[i, j, 1, 1]).coeffs[1] = constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1])
                                    (cosϕ_dP_nm[i, j, 1, 1]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, 1, 1]).coeffs[1])
                                else
                                    (tmp5903[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                    (tmp5903[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp5903[i, j, m - 1]).coeffs[1])
                                    (tmp5904[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                    (tmp5904[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp5904[i, j, m - 1]).coeffs[1])
                                    (sin_mλ[i, j, m]).coeffs[1] = constant_term(tmp5903[i, j, m - 1]) + constant_term(tmp5904[i, j, m - 1])
                                    (sin_mλ[i, j, m]).coeffs[2:order + 1] .= zero((sin_mλ[i, j, m]).coeffs[1])
                                    (tmp5906[i, j, m - 1]).coeffs[1] = constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1])
                                    (tmp5906[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp5906[i, j, m - 1]).coeffs[1])
                                    (tmp5907[i, j, m - 1]).coeffs[1] = constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1])
                                    (tmp5907[i, j, m - 1]).coeffs[2:order + 1] .= zero((tmp5907[i, j, m - 1]).coeffs[1])
                                    (cos_mλ[i, j, m]).coeffs[1] = constant_term(tmp5906[i, j, m - 1]) - constant_term(tmp5907[i, j, m - 1])
                                    (cos_mλ[i, j, m]).coeffs[2:order + 1] .= zero((cos_mλ[i, j, m]).coeffs[1])
                                    (tmp5909[i, j, m - 1, m - 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j])
                                    (tmp5909[i, j, m - 1, m - 1]).coeffs[2:order + 1] .= zero((tmp5909[i, j, m - 1, m - 1]).coeffs[1])
                                    (secϕ_P_nm[i, j, m, m]).coeffs[1] = constant_term(tmp5909[i, j, m - 1, m - 1]) * constant_term(lnm5[m])
                                    (secϕ_P_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, m, m]).coeffs[1])
                                    (P_nm[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j])
                                    (P_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((P_nm[i, j, m, m]).coeffs[1])
                                    (tmp5912[i, j, m, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j])
                                    (tmp5912[i, j, m, m]).coeffs[2:order + 1] .= zero((tmp5912[i, j, m, m]).coeffs[1])
                                    (cosϕ_dP_nm[i, j, m, m]).coeffs[1] = constant_term(tmp5912[i, j, m, m]) * constant_term(lnm3[m])
                                    (cosϕ_dP_nm[i, j, m, m]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, m, m]).coeffs[1])
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        (tmp5914[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                        (tmp5914[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp5914[i, j, n - 1, m]).coeffs[1])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp5914[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, n, m]).coeffs[1])
                                    else
                                        (tmp5916[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j])
                                        (tmp5916[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp5916[i, j, n - 1, m]).coeffs[1])
                                        (tmp5917[i, j, n - 1, m]).coeffs[1] = constant_term(tmp5916[i, j, n - 1, m]) * constant_term(lnm1[n, m])
                                        (tmp5917[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp5917[i, j, n - 1, m]).coeffs[1])
                                        (tmp5918[i, j, n - 2, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m])
                                        (tmp5918[i, j, n - 2, m]).coeffs[2:order + 1] .= zero((tmp5918[i, j, n - 2, m]).coeffs[1])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[1] = constant_term(tmp5917[i, j, n - 1, m]) + constant_term(tmp5918[i, j, n - 2, m])
                                        (secϕ_P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((secϕ_P_nm[i, j, n, m]).coeffs[1])
                                    end
                                    (P_nm[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j])
                                    (P_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((P_nm[i, j, n, m]).coeffs[1])
                                    (tmp5921[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j])
                                    (tmp5921[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5921[i, j, n, m]).coeffs[1])
                                    (tmp5922[i, j, n, m]).coeffs[1] = constant_term(tmp5921[i, j, n, m]) * constant_term(lnm3[n])
                                    (tmp5922[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5922[i, j, n, m]).coeffs[1])
                                    (tmp5923[i, j, n - 1, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m])
                                    (tmp5923[i, j, n - 1, m]).coeffs[2:order + 1] .= zero((tmp5923[i, j, n - 1, m]).coeffs[1])
                                    (cosϕ_dP_nm[i, j, n, m]).coeffs[1] = constant_term(tmp5922[i, j, n, m]) + constant_term(tmp5923[i, j, n - 1, m])
                                    (cosϕ_dP_nm[i, j, n, m]).coeffs[2:order + 1] .= zero((cosϕ_dP_nm[i, j, n, m]).coeffs[1])
                                end
                            end
                            (tmp5925[i, j, 2, 1]).coeffs[1] = constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2])
                            (tmp5925[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5925[i, j, 2, 1]).coeffs[1])
                            (tmp5926[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                            (tmp5926[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5926[i, j, 1]).coeffs[1])
                            (tmp5927[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                            (tmp5927[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5927[i, j, 1]).coeffs[1])
                            (tmp5928[i, j, 1]).coeffs[1] = constant_term(tmp5926[i, j, 1]) + constant_term(tmp5927[i, j, 1])
                            (tmp5928[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5928[i, j, 1]).coeffs[1])
                            (tmp5929[i, j, 2, 1]).coeffs[1] = constant_term(tmp5925[i, j, 2, 1]) * constant_term(tmp5928[i, j, 1])
                            (tmp5929[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5929[i, j, 2, 1]).coeffs[1])
                            (tmp5930[i, j, 2, 2]).coeffs[1] = constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2])
                            (tmp5930[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp5930[i, j, 2, 2]).coeffs[1])
                            (tmp5931[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                            (tmp5931[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5931[i, j, 2]).coeffs[1])
                            (tmp5932[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                            (tmp5932[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5932[i, j, 2]).coeffs[1])
                            (tmp5933[i, j, 2]).coeffs[1] = constant_term(tmp5931[i, j, 2]) + constant_term(tmp5932[i, j, 2])
                            (tmp5933[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5933[i, j, 2]).coeffs[1])
                            (tmp5934[i, j, 2, 2]).coeffs[1] = constant_term(tmp5930[i, j, 2, 2]) * constant_term(tmp5933[i, j, 2])
                            (tmp5934[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp5934[i, j, 2, 2]).coeffs[1])
                            (tmp5935[i, j, 2, 1]).coeffs[1] = constant_term(tmp5929[i, j, 2, 1]) + constant_term(tmp5934[i, j, 2, 2])
                            (tmp5935[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5935[i, j, 2, 1]).coeffs[1])
                            (F_CS_ξ[i, j]).coeffs[1] = constant_term(tmp5935[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            (F_CS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ[i, j]).coeffs[1])
                            (tmp5937[i, j, 2, 1]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1])
                            (tmp5937[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5937[i, j, 2, 1]).coeffs[1])
                            (tmp5938[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1])
                            (tmp5938[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5938[i, j, 1]).coeffs[1])
                            (tmp5939[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1])
                            (tmp5939[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5939[i, j, 1]).coeffs[1])
                            (tmp5940[i, j, 1]).coeffs[1] = constant_term(tmp5938[i, j, 1]) - constant_term(tmp5939[i, j, 1])
                            (tmp5940[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5940[i, j, 1]).coeffs[1])
                            (tmp5941[i, j, 2, 1]).coeffs[1] = constant_term(tmp5937[i, j, 2, 1]) * constant_term(tmp5940[i, j, 1])
                            (tmp5941[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5941[i, j, 2, 1]).coeffs[1])
                            (tmp5942[i, j, 2, 2]).coeffs[1] = constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2])
                            (tmp5942[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp5942[i, j, 2, 2]).coeffs[1])
                            (tmp5943[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2])
                            (tmp5943[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5943[i, j, 2]).coeffs[1])
                            (tmp5944[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2])
                            (tmp5944[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5944[i, j, 2]).coeffs[1])
                            (tmp5945[i, j, 2]).coeffs[1] = constant_term(tmp5943[i, j, 2]) - constant_term(tmp5944[i, j, 2])
                            (tmp5945[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5945[i, j, 2]).coeffs[1])
                            (tmp5946[i, j, 2, 2]).coeffs[1] = constant_term(tmp5942[i, j, 2, 2]) * constant_term(tmp5945[i, j, 2])
                            (tmp5946[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp5946[i, j, 2, 2]).coeffs[1])
                            (tmp5947[i, j, 2, 1]).coeffs[1] = constant_term(tmp5941[i, j, 2, 1]) + constant_term(tmp5946[i, j, 2, 2])
                            (tmp5947[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5947[i, j, 2, 1]).coeffs[1])
                            (F_CS_η[i, j]).coeffs[1] = constant_term(tmp5947[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            (F_CS_η[i, j]).coeffs[2:order + 1] .= zero((F_CS_η[i, j]).coeffs[1])
                            (tmp5949[i, j, 1]).coeffs[1] = constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1])
                            (tmp5949[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5949[i, j, 1]).coeffs[1])
                            (tmp5950[i, j, 1]).coeffs[1] = constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1])
                            (tmp5950[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5950[i, j, 1]).coeffs[1])
                            (tmp5951[i, j, 1]).coeffs[1] = constant_term(tmp5949[i, j, 1]) + constant_term(tmp5950[i, j, 1])
                            (tmp5951[i, j, 1]).coeffs[2:order + 1] .= zero((tmp5951[i, j, 1]).coeffs[1])
                            (tmp5952[i, j, 2, 1]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp5951[i, j, 1])
                            (tmp5952[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5952[i, j, 2, 1]).coeffs[1])
                            (tmp5953[i, j, 2]).coeffs[1] = constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2])
                            (tmp5953[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5953[i, j, 2]).coeffs[1])
                            (tmp5954[i, j, 2]).coeffs[1] = constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2])
                            (tmp5954[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5954[i, j, 2]).coeffs[1])
                            (tmp5955[i, j, 2]).coeffs[1] = constant_term(tmp5953[i, j, 2]) + constant_term(tmp5954[i, j, 2])
                            (tmp5955[i, j, 2]).coeffs[2:order + 1] .= zero((tmp5955[i, j, 2]).coeffs[1])
                            (tmp5956[i, j, 2, 2]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp5955[i, j, 2])
                            (tmp5956[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp5956[i, j, 2, 2]).coeffs[1])
                            (tmp5957[i, j, 2, 1]).coeffs[1] = constant_term(tmp5952[i, j, 2, 1]) + constant_term(tmp5956[i, j, 2, 2])
                            (tmp5957[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5957[i, j, 2, 1]).coeffs[1])
                            (F_CS_ζ[i, j]).coeffs[1] = constant_term(tmp5957[i, j, 2, 1]) / constant_term(r_p4[i, j])
                            (F_CS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ[i, j]).coeffs[1])
                            (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            (F_CS_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ_36[i, j]).coeffs[1])
                            (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            (F_CS_η_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_η_36[i, j]).coeffs[1])
                            (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            (F_CS_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ_36[i, j]).coeffs[1])
                            for n = 3:n2M
                                for m = 1:n
                                    (Cnm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m])
                                    (Cnm_cosmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Cnm_cosmλ[i, j, n, m]).coeffs[1])
                                    (Cnm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m])
                                    (Cnm_sinmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Cnm_sinmλ[i, j, n, m]).coeffs[1])
                                    (Snm_cosmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m])
                                    (Snm_cosmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Snm_cosmλ[i, j, n, m]).coeffs[1])
                                    (Snm_sinmλ[i, j, n, m]).coeffs[1] = constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m])
                                    (Snm_sinmλ[i, j, n, m]).coeffs[2:order + 1] .= zero((Snm_sinmλ[i, j, n, m]).coeffs[1])
                                    (tmp5963[i, j, n, m]).coeffs[1] = constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n])
                                    (tmp5963[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5963[i, j, n, m]).coeffs[1])
                                    (tmp5964[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                    (tmp5964[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5964[i, j, n, m]).coeffs[1])
                                    (tmp5965[i, j, n, m]).coeffs[1] = constant_term(tmp5963[i, j, n, m]) * constant_term(tmp5964[i, j, n, m])
                                    (tmp5965[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5965[i, j, n, m]).coeffs[1])
                                    (tmp5966[i, j, n, m]).coeffs[1] = constant_term(tmp5965[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    (tmp5966[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5966[i, j, n, m]).coeffs[1])
                                    (temp_CS_ξ[i, j, n, m]).coeffs[1] = constant_term(tmp5966[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j])
                                    (temp_CS_ξ[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_ξ[i, j, n, m]).coeffs[1])
                                    (tmp5968[i, j, n, m]).coeffs[1] = constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m])
                                    (tmp5968[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5968[i, j, n, m]).coeffs[1])
                                    (tmp5969[i, j, n, m]).coeffs[1] = constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m])
                                    (tmp5969[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5969[i, j, n, m]).coeffs[1])
                                    (tmp5970[i, j, n, m]).coeffs[1] = constant_term(tmp5968[i, j, n, m]) * constant_term(tmp5969[i, j, n, m])
                                    (tmp5970[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5970[i, j, n, m]).coeffs[1])
                                    (tmp5971[i, j, n, m]).coeffs[1] = constant_term(tmp5970[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    (tmp5971[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5971[i, j, n, m]).coeffs[1])
                                    (temp_CS_η[i, j, n, m]).coeffs[1] = constant_term(tmp5971[i, j, n, m]) + constant_term(F_CS_η_36[i, j])
                                    (temp_CS_η[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_η[i, j, n, m]).coeffs[1])
                                    (tmp5973[i, j, n, m]).coeffs[1] = constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m])
                                    (tmp5973[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5973[i, j, n, m]).coeffs[1])
                                    (tmp5974[i, j, n, m]).coeffs[1] = constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp5973[i, j, n, m])
                                    (tmp5974[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5974[i, j, n, m]).coeffs[1])
                                    (tmp5975[i, j, n, m]).coeffs[1] = constant_term(tmp5974[i, j, n, m]) / constant_term(temp_rn[i, j, n])
                                    (tmp5975[i, j, n, m]).coeffs[2:order + 1] .= zero((tmp5975[i, j, n, m]).coeffs[1])
                                    (temp_CS_ζ[i, j, n, m]).coeffs[1] = constant_term(tmp5975[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j])
                                    (temp_CS_ζ[i, j, n, m]).coeffs[2:order + 1] .= zero((temp_CS_ζ[i, j, n, m]).coeffs[1])
                                    (F_CS_ξ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ξ[i, j, n, m]))
                                    (F_CS_ξ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ξ_36[i, j]).coeffs[1])
                                    (F_CS_η_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_η[i, j, n, m]))
                                    (F_CS_η_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_η_36[i, j]).coeffs[1])
                                    (F_CS_ζ_36[i, j]).coeffs[1] = identity(constant_term(temp_CS_ζ[i, j, n, m]))
                                    (F_CS_ζ_36[i, j]).coeffs[2:order + 1] .= zero((F_CS_ζ_36[i, j]).coeffs[1])
                                end
                            end
                            (tmp5977[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                            (tmp5977[i, j]).coeffs[2:order + 1] .= zero((tmp5977[i, j]).coeffs[1])
                            (tmp5978[i, j]).coeffs[1] = constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j])
                            (tmp5978[i, j]).coeffs[2:order + 1] .= zero((tmp5978[i, j]).coeffs[1])
                            (F_JCS_ξ[i, j]).coeffs[1] = constant_term(tmp5977[i, j]) + constant_term(tmp5978[i, j])
                            (F_JCS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ξ[i, j]).coeffs[1])
                            (F_JCS_η[i, j]).coeffs[1] = constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j])
                            (F_JCS_η[i, j]).coeffs[2:order + 1] .= zero((F_JCS_η[i, j]).coeffs[1])
                            (tmp5981[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                            (tmp5981[i, j]).coeffs[2:order + 1] .= zero((tmp5981[i, j]).coeffs[1])
                            (tmp5982[i, j]).coeffs[1] = constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j])
                            (tmp5982[i, j]).coeffs[2:order + 1] .= zero((tmp5982[i, j]).coeffs[1])
                            (F_JCS_ζ[i, j]).coeffs[1] = constant_term(tmp5981[i, j]) + constant_term(tmp5982[i, j])
                            (F_JCS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ζ[i, j]).coeffs[1])
                        else
                            (F_JCS_ξ[i, j]).coeffs[1] = constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j])
                            (F_JCS_ξ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ξ[i, j]).coeffs[1])
                            (F_JCS_η[i, j]).coeffs[1] = identity(constant_term(zero_q_1))
                            (F_JCS_η[i, j]).coeffs[2:order + 1] .= zero((F_JCS_η[i, j]).coeffs[1])
                            (F_JCS_ζ[i, j]).coeffs[1] = constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j])
                            (F_JCS_ζ[i, j]).coeffs[2:order + 1] .= zero((F_JCS_ζ[i, j]).coeffs[1])
                        end
                        (Rb2p[i, j, 1, 1]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j])
                        (Rb2p[i, j, 1, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 1]).coeffs[1])
                        (Rb2p[i, j, 2, 1]).coeffs[1] = -(constant_term(sin_λ[i, j]))
                        (Rb2p[i, j, 2, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 1]).coeffs[1])
                        (tmp5988[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                        (tmp5988[i, j]).coeffs[2:order + 1] .= zero((tmp5988[i, j]).coeffs[1])
                        (Rb2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp5988[i, j]) * constant_term(cos_λ[i, j])
                        (Rb2p[i, j, 3, 1]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 1]).coeffs[1])
                        (Rb2p[i, j, 1, 2]).coeffs[1] = constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j])
                        (Rb2p[i, j, 1, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 2]).coeffs[1])
                        (Rb2p[i, j, 2, 2]).coeffs[1] = identity(constant_term(cos_λ[i, j]))
                        (Rb2p[i, j, 2, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 2]).coeffs[1])
                        (tmp5991[i, j]).coeffs[1] = -(constant_term(sin_ϕ[i, j]))
                        (tmp5991[i, j]).coeffs[2:order + 1] .= zero((tmp5991[i, j]).coeffs[1])
                        (Rb2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp5991[i, j]) * constant_term(sin_λ[i, j])
                        (Rb2p[i, j, 3, 2]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 2]).coeffs[1])
                        (Rb2p[i, j, 1, 3]).coeffs[1] = identity(constant_term(sin_ϕ[i, j]))
                        (Rb2p[i, j, 1, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 1, 3]).coeffs[1])
                        (Rb2p[i, j, 2, 3]).coeffs[1] = identity(constant_term(zero_q_1))
                        (Rb2p[i, j, 2, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 2, 3]).coeffs[1])
                        (Rb2p[i, j, 3, 3]).coeffs[1] = identity(constant_term(cos_ϕ[i, j]))
                        (Rb2p[i, j, 3, 3]).coeffs[2:order + 1] .= zero((Rb2p[i, j, 3, 3]).coeffs[1])
                        (tmp5993[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j])
                        (tmp5993[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp5993[i, j, 1, 1]).coeffs[1])
                        (tmp5994[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j])
                        (tmp5994[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp5994[i, j, 1, 2]).coeffs[1])
                        (tmp5995[i, j, 1, 1]).coeffs[1] = constant_term(tmp5993[i, j, 1, 1]) + constant_term(tmp5994[i, j, 1, 2])
                        (tmp5995[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp5995[i, j, 1, 1]).coeffs[1])
                        (tmp5996[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j])
                        (tmp5996[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp5996[i, j, 1, 3]).coeffs[1])
                        (Gc2p[i, j, 1, 1]).coeffs[1] = constant_term(tmp5995[i, j, 1, 1]) + constant_term(tmp5996[i, j, 1, 3])
                        (Gc2p[i, j, 1, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 1]).coeffs[1])
                        (tmp5998[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j])
                        (tmp5998[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp5998[i, j, 2, 1]).coeffs[1])
                        (tmp5999[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j])
                        (tmp5999[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp5999[i, j, 2, 2]).coeffs[1])
                        (tmp6000[i, j, 2, 1]).coeffs[1] = constant_term(tmp5998[i, j, 2, 1]) + constant_term(tmp5999[i, j, 2, 2])
                        (tmp6000[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp6000[i, j, 2, 1]).coeffs[1])
                        (tmp6001[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j])
                        (tmp6001[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp6001[i, j, 2, 3]).coeffs[1])
                        (Gc2p[i, j, 2, 1]).coeffs[1] = constant_term(tmp6000[i, j, 2, 1]) + constant_term(tmp6001[i, j, 2, 3])
                        (Gc2p[i, j, 2, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 1]).coeffs[1])
                        (tmp6003[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j])
                        (tmp6003[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp6003[i, j, 3, 1]).coeffs[1])
                        (tmp6004[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j])
                        (tmp6004[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp6004[i, j, 3, 2]).coeffs[1])
                        (tmp6005[i, j, 3, 1]).coeffs[1] = constant_term(tmp6003[i, j, 3, 1]) + constant_term(tmp6004[i, j, 3, 2])
                        (tmp6005[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp6005[i, j, 3, 1]).coeffs[1])
                        (tmp6006[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j])
                        (tmp6006[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp6006[i, j, 3, 3]).coeffs[1])
                        (Gc2p[i, j, 3, 1]).coeffs[1] = constant_term(tmp6005[i, j, 3, 1]) + constant_term(tmp6006[i, j, 3, 3])
                        (Gc2p[i, j, 3, 1]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 1]).coeffs[1])
                        (tmp6008[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j])
                        (tmp6008[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp6008[i, j, 1, 1]).coeffs[1])
                        (tmp6009[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j])
                        (tmp6009[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp6009[i, j, 1, 2]).coeffs[1])
                        (tmp6010[i, j, 1, 1]).coeffs[1] = constant_term(tmp6008[i, j, 1, 1]) + constant_term(tmp6009[i, j, 1, 2])
                        (tmp6010[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp6010[i, j, 1, 1]).coeffs[1])
                        (tmp6011[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j])
                        (tmp6011[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp6011[i, j, 1, 3]).coeffs[1])
                        (Gc2p[i, j, 1, 2]).coeffs[1] = constant_term(tmp6010[i, j, 1, 1]) + constant_term(tmp6011[i, j, 1, 3])
                        (Gc2p[i, j, 1, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 2]).coeffs[1])
                        (tmp6013[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j])
                        (tmp6013[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp6013[i, j, 2, 1]).coeffs[1])
                        (tmp6014[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j])
                        (tmp6014[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp6014[i, j, 2, 2]).coeffs[1])
                        (tmp6015[i, j, 2, 1]).coeffs[1] = constant_term(tmp6013[i, j, 2, 1]) + constant_term(tmp6014[i, j, 2, 2])
                        (tmp6015[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp6015[i, j, 2, 1]).coeffs[1])
                        (tmp6016[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j])
                        (tmp6016[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp6016[i, j, 2, 3]).coeffs[1])
                        (Gc2p[i, j, 2, 2]).coeffs[1] = constant_term(tmp6015[i, j, 2, 1]) + constant_term(tmp6016[i, j, 2, 3])
                        (Gc2p[i, j, 2, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 2]).coeffs[1])
                        (tmp6018[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j])
                        (tmp6018[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp6018[i, j, 3, 1]).coeffs[1])
                        (tmp6019[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j])
                        (tmp6019[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp6019[i, j, 3, 2]).coeffs[1])
                        (tmp6020[i, j, 3, 1]).coeffs[1] = constant_term(tmp6018[i, j, 3, 1]) + constant_term(tmp6019[i, j, 3, 2])
                        (tmp6020[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp6020[i, j, 3, 1]).coeffs[1])
                        (tmp6021[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j])
                        (tmp6021[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp6021[i, j, 3, 3]).coeffs[1])
                        (Gc2p[i, j, 3, 2]).coeffs[1] = constant_term(tmp6020[i, j, 3, 1]) + constant_term(tmp6021[i, j, 3, 3])
                        (Gc2p[i, j, 3, 2]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 2]).coeffs[1])
                        (tmp6023[i, j, 1, 1]).coeffs[1] = constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j])
                        (tmp6023[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp6023[i, j, 1, 1]).coeffs[1])
                        (tmp6024[i, j, 1, 2]).coeffs[1] = constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j])
                        (tmp6024[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp6024[i, j, 1, 2]).coeffs[1])
                        (tmp6025[i, j, 1, 1]).coeffs[1] = constant_term(tmp6023[i, j, 1, 1]) + constant_term(tmp6024[i, j, 1, 2])
                        (tmp6025[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp6025[i, j, 1, 1]).coeffs[1])
                        (tmp6026[i, j, 1, 3]).coeffs[1] = constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j])
                        (tmp6026[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp6026[i, j, 1, 3]).coeffs[1])
                        (Gc2p[i, j, 1, 3]).coeffs[1] = constant_term(tmp6025[i, j, 1, 1]) + constant_term(tmp6026[i, j, 1, 3])
                        (Gc2p[i, j, 1, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 1, 3]).coeffs[1])
                        (tmp6028[i, j, 2, 1]).coeffs[1] = constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j])
                        (tmp6028[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp6028[i, j, 2, 1]).coeffs[1])
                        (tmp6029[i, j, 2, 2]).coeffs[1] = constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j])
                        (tmp6029[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp6029[i, j, 2, 2]).coeffs[1])
                        (tmp6030[i, j, 2, 1]).coeffs[1] = constant_term(tmp6028[i, j, 2, 1]) + constant_term(tmp6029[i, j, 2, 2])
                        (tmp6030[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp6030[i, j, 2, 1]).coeffs[1])
                        (tmp6031[i, j, 2, 3]).coeffs[1] = constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j])
                        (tmp6031[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp6031[i, j, 2, 3]).coeffs[1])
                        (Gc2p[i, j, 2, 3]).coeffs[1] = constant_term(tmp6030[i, j, 2, 1]) + constant_term(tmp6031[i, j, 2, 3])
                        (Gc2p[i, j, 2, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 2, 3]).coeffs[1])
                        (tmp6033[i, j, 3, 1]).coeffs[1] = constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j])
                        (tmp6033[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp6033[i, j, 3, 1]).coeffs[1])
                        (tmp6034[i, j, 3, 2]).coeffs[1] = constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j])
                        (tmp6034[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp6034[i, j, 3, 2]).coeffs[1])
                        (tmp6035[i, j, 3, 1]).coeffs[1] = constant_term(tmp6033[i, j, 3, 1]) + constant_term(tmp6034[i, j, 3, 2])
                        (tmp6035[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp6035[i, j, 3, 1]).coeffs[1])
                        (tmp6036[i, j, 3, 3]).coeffs[1] = constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j])
                        (tmp6036[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp6036[i, j, 3, 3]).coeffs[1])
                        (Gc2p[i, j, 3, 3]).coeffs[1] = constant_term(tmp6035[i, j, 3, 1]) + constant_term(tmp6036[i, j, 3, 3])
                        (Gc2p[i, j, 3, 3]).coeffs[2:order + 1] .= zero((Gc2p[i, j, 3, 3]).coeffs[1])
                        (tmp6038[i, j, 1, 1]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1])
                        (tmp6038[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp6038[i, j, 1, 1]).coeffs[1])
                        (tmp6039[i, j, 2, 1]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1])
                        (tmp6039[i, j, 2, 1]).coeffs[2:order + 1] .= zero((tmp6039[i, j, 2, 1]).coeffs[1])
                        (tmp6040[i, j, 1, 1]).coeffs[1] = constant_term(tmp6038[i, j, 1, 1]) + constant_term(tmp6039[i, j, 2, 1])
                        (tmp6040[i, j, 1, 1]).coeffs[2:order + 1] .= zero((tmp6040[i, j, 1, 1]).coeffs[1])
                        (tmp6041[i, j, 3, 1]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1])
                        (tmp6041[i, j, 3, 1]).coeffs[2:order + 1] .= zero((tmp6041[i, j, 3, 1]).coeffs[1])
                        (F_JCS_x[i, j]).coeffs[1] = constant_term(tmp6040[i, j, 1, 1]) + constant_term(tmp6041[i, j, 3, 1])
                        (F_JCS_x[i, j]).coeffs[2:order + 1] .= zero((F_JCS_x[i, j]).coeffs[1])
                        (tmp6043[i, j, 1, 2]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2])
                        (tmp6043[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp6043[i, j, 1, 2]).coeffs[1])
                        (tmp6044[i, j, 2, 2]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2])
                        (tmp6044[i, j, 2, 2]).coeffs[2:order + 1] .= zero((tmp6044[i, j, 2, 2]).coeffs[1])
                        (tmp6045[i, j, 1, 2]).coeffs[1] = constant_term(tmp6043[i, j, 1, 2]) + constant_term(tmp6044[i, j, 2, 2])
                        (tmp6045[i, j, 1, 2]).coeffs[2:order + 1] .= zero((tmp6045[i, j, 1, 2]).coeffs[1])
                        (tmp6046[i, j, 3, 2]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2])
                        (tmp6046[i, j, 3, 2]).coeffs[2:order + 1] .= zero((tmp6046[i, j, 3, 2]).coeffs[1])
                        (F_JCS_y[i, j]).coeffs[1] = constant_term(tmp6045[i, j, 1, 2]) + constant_term(tmp6046[i, j, 3, 2])
                        (F_JCS_y[i, j]).coeffs[2:order + 1] .= zero((F_JCS_y[i, j]).coeffs[1])
                        (tmp6048[i, j, 1, 3]).coeffs[1] = constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3])
                        (tmp6048[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp6048[i, j, 1, 3]).coeffs[1])
                        (tmp6049[i, j, 2, 3]).coeffs[1] = constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3])
                        (tmp6049[i, j, 2, 3]).coeffs[2:order + 1] .= zero((tmp6049[i, j, 2, 3]).coeffs[1])
                        (tmp6050[i, j, 1, 3]).coeffs[1] = constant_term(tmp6048[i, j, 1, 3]) + constant_term(tmp6049[i, j, 2, 3])
                        (tmp6050[i, j, 1, 3]).coeffs[2:order + 1] .= zero((tmp6050[i, j, 1, 3]).coeffs[1])
                        (tmp6051[i, j, 3, 3]).coeffs[1] = constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3])
                        (tmp6051[i, j, 3, 3]).coeffs[2:order + 1] .= zero((tmp6051[i, j, 3, 3]).coeffs[1])
                        (F_JCS_z[i, j]).coeffs[1] = constant_term(tmp6050[i, j, 1, 3]) + constant_term(tmp6051[i, j, 3, 3])
                        (F_JCS_z[i, j]).coeffs[2:order + 1] .= zero((F_JCS_z[i, j]).coeffs[1])
                    end
                end
            end
        end
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    (tmp6053[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_x[i, j])
                    (tmp6053[i, j]).coeffs[2:order + 1] .= zero((tmp6053[i, j]).coeffs[1])
                    (temp_accX_j[i, j]).coeffs[1] = constant_term(accX[j]) - constant_term(tmp6053[i, j])
                    (temp_accX_j[i, j]).coeffs[2:order + 1] .= zero((temp_accX_j[i, j]).coeffs[1])
                    (accX[j]).coeffs[1] = identity(constant_term(temp_accX_j[i, j]))
                    (accX[j]).coeffs[2:order + 1] .= zero((accX[j]).coeffs[1])
                    (tmp6055[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_y[i, j])
                    (tmp6055[i, j]).coeffs[2:order + 1] .= zero((tmp6055[i, j]).coeffs[1])
                    (temp_accY_j[i, j]).coeffs[1] = constant_term(accY[j]) - constant_term(tmp6055[i, j])
                    (temp_accY_j[i, j]).coeffs[2:order + 1] .= zero((temp_accY_j[i, j]).coeffs[1])
                    (accY[j]).coeffs[1] = identity(constant_term(temp_accY_j[i, j]))
                    (accY[j]).coeffs[2:order + 1] .= zero((accY[j]).coeffs[1])
                    (tmp6057[i, j]).coeffs[1] = constant_term(μ[i]) * constant_term(F_JCS_z[i, j])
                    (tmp6057[i, j]).coeffs[2:order + 1] .= zero((tmp6057[i, j]).coeffs[1])
                    (temp_accZ_j[i, j]).coeffs[1] = constant_term(accZ[j]) - constant_term(tmp6057[i, j])
                    (temp_accZ_j[i, j]).coeffs[2:order + 1] .= zero((temp_accZ_j[i, j]).coeffs[1])
                    (accZ[j]).coeffs[1] = identity(constant_term(temp_accZ_j[i, j]))
                    (accZ[j]).coeffs[2:order + 1] .= zero((accZ[j]).coeffs[1])
                    (tmp6059[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_x[i, j])
                    (tmp6059[i, j]).coeffs[2:order + 1] .= zero((tmp6059[i, j]).coeffs[1])
                    (temp_accX_i[i, j]).coeffs[1] = constant_term(accX[i]) + constant_term(tmp6059[i, j])
                    (temp_accX_i[i, j]).coeffs[2:order + 1] .= zero((temp_accX_i[i, j]).coeffs[1])
                    (accX[i]).coeffs[1] = identity(constant_term(temp_accX_i[i, j]))
                    (accX[i]).coeffs[2:order + 1] .= zero((accX[i]).coeffs[1])
                    (tmp6061[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_y[i, j])
                    (tmp6061[i, j]).coeffs[2:order + 1] .= zero((tmp6061[i, j]).coeffs[1])
                    (temp_accY_i[i, j]).coeffs[1] = constant_term(accY[i]) + constant_term(tmp6061[i, j])
                    (temp_accY_i[i, j]).coeffs[2:order + 1] .= zero((temp_accY_i[i, j]).coeffs[1])
                    (accY[i]).coeffs[1] = identity(constant_term(temp_accY_i[i, j]))
                    (accY[i]).coeffs[2:order + 1] .= zero((accY[i]).coeffs[1])
                    (tmp6063[i, j]).coeffs[1] = constant_term(μ[j]) * constant_term(F_JCS_z[i, j])
                    (tmp6063[i, j]).coeffs[2:order + 1] .= zero((tmp6063[i, j]).coeffs[1])
                    (temp_accZ_i[i, j]).coeffs[1] = constant_term(accZ[i]) + constant_term(tmp6063[i, j])
                    (temp_accZ_i[i, j]).coeffs[2:order + 1] .= zero((temp_accZ_i[i, j]).coeffs[1])
                    (accZ[i]).coeffs[1] = identity(constant_term(temp_accZ_i[i, j]))
                    (accZ[i]).coeffs[2:order + 1] .= zero((accZ[i]).coeffs[1])
                    if j == mo
                        (tmp6065[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j])
                        (tmp6065[i, j]).coeffs[2:order + 1] .= zero((tmp6065[i, j]).coeffs[1])
                        (tmp6066[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j])
                        (tmp6066[i, j]).coeffs[2:order + 1] .= zero((tmp6066[i, j]).coeffs[1])
                        (tmp6067[i, j]).coeffs[1] = constant_term(tmp6065[i, j]) - constant_term(tmp6066[i, j])
                        (tmp6067[i, j]).coeffs[2:order + 1] .= zero((tmp6067[i, j]).coeffs[1])
                        (N_MfigM_pmA_x[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp6067[i, j])
                        (N_MfigM_pmA_x[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_x[i]).coeffs[1])
                        (tmp6069[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j])
                        (tmp6069[i, j]).coeffs[2:order + 1] .= zero((tmp6069[i, j]).coeffs[1])
                        (tmp6070[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_z[i, j])
                        (tmp6070[i, j]).coeffs[2:order + 1] .= zero((tmp6070[i, j]).coeffs[1])
                        (tmp6071[i, j]).coeffs[1] = constant_term(tmp6069[i, j]) - constant_term(tmp6070[i, j])
                        (tmp6071[i, j]).coeffs[2:order + 1] .= zero((tmp6071[i, j]).coeffs[1])
                        (N_MfigM_pmA_y[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp6071[i, j])
                        (N_MfigM_pmA_y[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_y[i]).coeffs[1])
                        (tmp6073[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(F_JCS_y[i, j])
                        (tmp6073[i, j]).coeffs[2:order + 1] .= zero((tmp6073[i, j]).coeffs[1])
                        (tmp6074[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j])
                        (tmp6074[i, j]).coeffs[2:order + 1] .= zero((tmp6074[i, j]).coeffs[1])
                        (tmp6075[i, j]).coeffs[1] = constant_term(tmp6073[i, j]) - constant_term(tmp6074[i, j])
                        (tmp6075[i, j]).coeffs[2:order + 1] .= zero((tmp6075[i, j]).coeffs[1])
                        (N_MfigM_pmA_z[i]).coeffs[1] = constant_term(μ[i]) * constant_term(tmp6075[i, j])
                        (N_MfigM_pmA_z[i]).coeffs[2:order + 1] .= zero((N_MfigM_pmA_z[i]).coeffs[1])
                        (temp_N_M_x[i]).coeffs[1] = constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i])
                        (temp_N_M_x[i]).coeffs[2:order + 1] .= zero((temp_N_M_x[i]).coeffs[1])
                        (N_MfigM[1]).coeffs[1] = identity(constant_term(temp_N_M_x[i]))
                        (N_MfigM[1]).coeffs[2:order + 1] .= zero((N_MfigM[1]).coeffs[1])
                        (temp_N_M_y[i]).coeffs[1] = constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i])
                        (temp_N_M_y[i]).coeffs[2:order + 1] .= zero((temp_N_M_y[i]).coeffs[1])
                        (N_MfigM[2]).coeffs[1] = identity(constant_term(temp_N_M_y[i]))
                        (N_MfigM[2]).coeffs[2:order + 1] .= zero((N_MfigM[2]).coeffs[1])
                        (temp_N_M_z[i]).coeffs[1] = constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i])
                        (temp_N_M_z[i]).coeffs[2:order + 1] .= zero((temp_N_M_z[i]).coeffs[1])
                        (N_MfigM[3]).coeffs[1] = identity(constant_term(temp_N_M_z[i]))
                        (N_MfigM[3]).coeffs[2:order + 1] .= zero((N_MfigM[3]).coeffs[1])
                    end
                end
            end
        end
    end
    #= In[33]:713 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    (_4ϕj[i, j]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[j])
                    (_4ϕj[i, j]).coeffs[2:order + 1] .= zero((_4ϕj[i, j]).coeffs[1])
                    (ϕi_plus_4ϕj[i, j]).coeffs[1] = constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j])
                    (ϕi_plus_4ϕj[i, j]).coeffs[2:order + 1] .= zero((ϕi_plus_4ϕj[i, j]).coeffs[1])
                    (_2v2[i, j]).coeffs[1] = constant_term(2) * constant_term(v2[i])
                    (_2v2[i, j]).coeffs[2:order + 1] .= zero((_2v2[i, j]).coeffs[1])
                    (sj2_plus_2si2[i, j]).coeffs[1] = constant_term(v2[j]) + constant_term(_2v2[i, j])
                    (sj2_plus_2si2[i, j]).coeffs[2:order + 1] .= zero((sj2_plus_2si2[i, j]).coeffs[1])
                    (tmp6087[i, j]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i, j])
                    (tmp6087[i, j]).coeffs[2:order + 1] .= zero((tmp6087[i, j]).coeffs[1])
                    (sj2_plus_2si2_minus_4vivj[i, j]).coeffs[1] = constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp6087[i, j])
                    (sj2_plus_2si2_minus_4vivj[i, j]).coeffs[2:order + 1] .= zero((sj2_plus_2si2_minus_4vivj[i, j]).coeffs[1])
                    (ϕs_and_vs[i, j]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j])
                    (ϕs_and_vs[i, j]).coeffs[2:order + 1] .= zero((ϕs_and_vs[i, j]).coeffs[1])
                    (Xij_t_Ui[i, j]).coeffs[1] = constant_term(X[i, j]) * constant_term(dq[3i - 2])
                    (Xij_t_Ui[i, j]).coeffs[2:order + 1] .= zero((Xij_t_Ui[i, j]).coeffs[1])
                    (Yij_t_Vi[i, j]).coeffs[1] = constant_term(Y[i, j]) * constant_term(dq[3i - 1])
                    (Yij_t_Vi[i, j]).coeffs[2:order + 1] .= zero((Yij_t_Vi[i, j]).coeffs[1])
                    (Zij_t_Wi[i, j]).coeffs[1] = constant_term(Z[i, j]) * constant_term(dq[3i])
                    (Zij_t_Wi[i, j]).coeffs[2:order + 1] .= zero((Zij_t_Wi[i, j]).coeffs[1])
                    (tmp6093[i, j]).coeffs[1] = constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j])
                    (tmp6093[i, j]).coeffs[2:order + 1] .= zero((tmp6093[i, j]).coeffs[1])
                    (Rij_dot_Vi[i, j]).coeffs[1] = constant_term(tmp6093[i, j]) + constant_term(Zij_t_Wi[i, j])
                    (Rij_dot_Vi[i, j]).coeffs[2:order + 1] .= zero((Rij_dot_Vi[i, j]).coeffs[1])
                    (tmp6096[i, j]).coeffs[1] = constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2))
                    (tmp6096[i, j]).coeffs[2:order + 1] .= zero((tmp6096[i, j]).coeffs[1])
                    (rij_dot_vi_div_rij_sq[i, j]).coeffs[1] = constant_term(tmp6096[i, j]) / constant_term(r_p2[i, j])
                    (rij_dot_vi_div_rij_sq[i, j]).coeffs[2:order + 1] .= zero((rij_dot_vi_div_rij_sq[i, j]).coeffs[1])
                    (tmp6099[i, j]).coeffs[1] = constant_term(1.5) * constant_term(rij_dot_vi_div_rij_sq[i, j])
                    (tmp6099[i, j]).coeffs[2:order + 1] .= zero((tmp6099[i, j]).coeffs[1])
                    (pn1t2_7[i, j]).coeffs[1] = constant_term(ϕs_and_vs[i, j]) - constant_term(tmp6099[i, j])
                    (pn1t2_7[i, j]).coeffs[2:order + 1] .= zero((pn1t2_7[i, j]).coeffs[1])
                    (pn1t1_7[i, j]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i, j])
                    (pn1t1_7[i, j]).coeffs[2:order + 1] .= zero((pn1t1_7[i, j]).coeffs[1])
                end
            end
            (pntempX[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (pntempX[j]).coeffs[2:order + 1] .= zero((pntempX[j]).coeffs[1])
            (pntempY[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (pntempY[j]).coeffs[2:order + 1] .= zero((pntempY[j]).coeffs[1])
            (pntempZ[j]).coeffs[1] = identity(constant_term(zero_q_1))
            (pntempZ[j]).coeffs[2:order + 1] .= zero((pntempZ[j]).coeffs[1])
        end
    #= In[33]:752 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    (pNX_t_X[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(X[i, j])
                    (pNX_t_X[i, j]).coeffs[2:order + 1] .= zero((pNX_t_X[i, j]).coeffs[1])
                    (pNY_t_Y[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(Y[i, j])
                    (pNY_t_Y[i, j]).coeffs[2:order + 1] .= zero((pNY_t_Y[i, j]).coeffs[1])
                    (pNZ_t_Z[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(Z[i, j])
                    (pNZ_t_Z[i, j]).coeffs[2:order + 1] .= zero((pNZ_t_Z[i, j]).coeffs[1])
                    (tmp6106[i, j]).coeffs[1] = constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j])
                    (tmp6106[i, j]).coeffs[2:order + 1] .= zero((tmp6106[i, j]).coeffs[1])
                    (tmp6107[i, j]).coeffs[1] = constant_term(tmp6106[i, j]) + constant_term(pNZ_t_Z[i, j])
                    (tmp6107[i, j]).coeffs[2:order + 1] .= zero((tmp6107[i, j]).coeffs[1])
                    (tmp6108[i, j]).coeffs[1] = constant_term(0.5) * constant_term(tmp6107[i, j])
                    (tmp6108[i, j]).coeffs[2:order + 1] .= zero((tmp6108[i, j]).coeffs[1])
                    (pn1[i, j]).coeffs[1] = constant_term(pn1t1_7[i, j]) + constant_term(tmp6108[i, j])
                    (pn1[i, j]).coeffs[2:order + 1] .= zero((pn1[i, j]).coeffs[1])
                    (X_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j])
                    (X_t_pn1[i, j]).coeffs[2:order + 1] .= zero((X_t_pn1[i, j]).coeffs[1])
                    (Y_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j])
                    (Y_t_pn1[i, j]).coeffs[2:order + 1] .= zero((Y_t_pn1[i, j]).coeffs[1])
                    (Z_t_pn1[i, j]).coeffs[1] = constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j])
                    (Z_t_pn1[i, j]).coeffs[2:order + 1] .= zero((Z_t_pn1[i, j]).coeffs[1])
                    (pNX_t_pn3[i, j]).coeffs[1] = constant_term(newtonX[i]) * constant_term(pn3[i, j])
                    (pNX_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNX_t_pn3[i, j]).coeffs[1])
                    (pNY_t_pn3[i, j]).coeffs[1] = constant_term(newtonY[i]) * constant_term(pn3[i, j])
                    (pNY_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNY_t_pn3[i, j]).coeffs[1])
                    (pNZ_t_pn3[i, j]).coeffs[1] = constant_term(newtonZ[i]) * constant_term(pn3[i, j])
                    (pNZ_t_pn3[i, j]).coeffs[2:order + 1] .= zero((pNZ_t_pn3[i, j]).coeffs[1])
                    (tmp6116[i, j]).coeffs[1] = constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j])
                    (tmp6116[i, j]).coeffs[2:order + 1] .= zero((tmp6116[i, j]).coeffs[1])
                    (termpnx[i, j]).coeffs[1] = constant_term(X_t_pn1[i, j]) + constant_term(tmp6116[i, j])
                    (termpnx[i, j]).coeffs[2:order + 1] .= zero((termpnx[i, j]).coeffs[1])
                    (sumpnx[i, j]).coeffs[1] = constant_term(pntempX[j]) + constant_term(termpnx[i, j])
                    (sumpnx[i, j]).coeffs[2:order + 1] .= zero((sumpnx[i, j]).coeffs[1])
                    (pntempX[j]).coeffs[1] = identity(constant_term(sumpnx[i, j]))
                    (pntempX[j]).coeffs[2:order + 1] .= zero((pntempX[j]).coeffs[1])
                    (tmp6119[i, j]).coeffs[1] = constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j])
                    (tmp6119[i, j]).coeffs[2:order + 1] .= zero((tmp6119[i, j]).coeffs[1])
                    (termpny[i, j]).coeffs[1] = constant_term(Y_t_pn1[i, j]) + constant_term(tmp6119[i, j])
                    (termpny[i, j]).coeffs[2:order + 1] .= zero((termpny[i, j]).coeffs[1])
                    (sumpny[i, j]).coeffs[1] = constant_term(pntempY[j]) + constant_term(termpny[i, j])
                    (sumpny[i, j]).coeffs[2:order + 1] .= zero((sumpny[i, j]).coeffs[1])
                    (pntempY[j]).coeffs[1] = identity(constant_term(sumpny[i, j]))
                    (pntempY[j]).coeffs[2:order + 1] .= zero((pntempY[j]).coeffs[1])
                    (tmp6122[i, j]).coeffs[1] = constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j])
                    (tmp6122[i, j]).coeffs[2:order + 1] .= zero((tmp6122[i, j]).coeffs[1])
                    (termpnz[i, j]).coeffs[1] = constant_term(Z_t_pn1[i, j]) + constant_term(tmp6122[i, j])
                    (termpnz[i, j]).coeffs[2:order + 1] .= zero((termpnz[i, j]).coeffs[1])
                    (sumpnz[i, j]).coeffs[1] = constant_term(pntempZ[j]) + constant_term(termpnz[i, j])
                    (sumpnz[i, j]).coeffs[2:order + 1] .= zero((sumpnz[i, j]).coeffs[1])
                    (pntempZ[j]).coeffs[1] = identity(constant_term(sumpnz[i, j]))
                    (pntempZ[j]).coeffs[2:order + 1] .= zero((pntempZ[j]).coeffs[1])
                end
            end
            (postNewtonX[j]).coeffs[1] = constant_term(pntempX[j]) * constant_term(c_m2)
            (postNewtonX[j]).coeffs[2:order + 1] .= zero((postNewtonX[j]).coeffs[1])
            (postNewtonY[j]).coeffs[1] = constant_term(pntempY[j]) * constant_term(c_m2)
            (postNewtonY[j]).coeffs[2:order + 1] .= zero((postNewtonY[j]).coeffs[1])
            (postNewtonZ[j]).coeffs[1] = constant_term(pntempZ[j]) * constant_term(c_m2)
            (postNewtonZ[j]).coeffs[2:order + 1] .= zero((postNewtonZ[j]).coeffs[1])
        end
    x0s_M.coeffs[1] = identity(constant_term(r_star_M_0[1]))
    x0s_M.coeffs[2:order + 1] .= zero(x0s_M.coeffs[1])
    y0s_M.coeffs[1] = identity(constant_term(r_star_M_0[2]))
    y0s_M.coeffs[2:order + 1] .= zero(y0s_M.coeffs[1])
    z0s_M.coeffs[1] = identity(constant_term(r_star_M_0[3]))
    z0s_M.coeffs[2:order + 1] .= zero(z0s_M.coeffs[1])
    tmp6129.coeffs[1] = constant_term(x0s_M) ^ float(constant_term(2))
    tmp6129.coeffs[2:order + 1] .= zero(tmp6129.coeffs[1])
    tmp6131.coeffs[1] = constant_term(y0s_M) ^ float(constant_term(2))
    tmp6131.coeffs[2:order + 1] .= zero(tmp6131.coeffs[1])
    ρ0s2_M.coeffs[1] = constant_term(tmp6129) + constant_term(tmp6131)
    ρ0s2_M.coeffs[2:order + 1] .= zero(ρ0s2_M.coeffs[1])
    ρ0s_M.coeffs[1] = sqrt(constant_term(ρ0s2_M))
    ρ0s_M.coeffs[2:order + 1] .= zero(ρ0s_M.coeffs[1])
    z0s2_M.coeffs[1] = constant_term(z0s_M) ^ float(constant_term(2))
    z0s2_M.coeffs[2:order + 1] .= zero(z0s2_M.coeffs[1])
    r0s2_M.coeffs[1] = constant_term(ρ0s2_M) + constant_term(z0s2_M)
    r0s2_M.coeffs[2:order + 1] .= zero(r0s2_M.coeffs[1])
    r0s_M.coeffs[1] = sqrt(constant_term(r0s2_M))
    r0s_M.coeffs[2:order + 1] .= zero(r0s_M.coeffs[1])
    r0s5_M.coeffs[1] = constant_term(r0s_M) ^ float(constant_term(5))
    r0s5_M.coeffs[2:order + 1] .= zero(r0s5_M.coeffs[1])
    x0s_S.coeffs[1] = identity(constant_term(r_star_S_0[1]))
    x0s_S.coeffs[2:order + 1] .= zero(x0s_S.coeffs[1])
    y0s_S.coeffs[1] = identity(constant_term(r_star_S_0[2]))
    y0s_S.coeffs[2:order + 1] .= zero(y0s_S.coeffs[1])
    z0s_S.coeffs[1] = identity(constant_term(r_star_S_0[3]))
    z0s_S.coeffs[2:order + 1] .= zero(z0s_S.coeffs[1])
    tmp6141.coeffs[1] = constant_term(x0s_S) ^ float(constant_term(2))
    tmp6141.coeffs[2:order + 1] .= zero(tmp6141.coeffs[1])
    tmp6143.coeffs[1] = constant_term(y0s_S) ^ float(constant_term(2))
    tmp6143.coeffs[2:order + 1] .= zero(tmp6143.coeffs[1])
    ρ0s2_S.coeffs[1] = constant_term(tmp6141) + constant_term(tmp6143)
    ρ0s2_S.coeffs[2:order + 1] .= zero(ρ0s2_S.coeffs[1])
    ρ0s_S.coeffs[1] = sqrt(constant_term(ρ0s2_S))
    ρ0s_S.coeffs[2:order + 1] .= zero(ρ0s_S.coeffs[1])
    z0s2_S.coeffs[1] = constant_term(z0s_S) ^ float(constant_term(2))
    z0s2_S.coeffs[2:order + 1] .= zero(z0s2_S.coeffs[1])
    r0s2_S.coeffs[1] = constant_term(ρ0s2_S) + constant_term(z0s2_S)
    r0s2_S.coeffs[2:order + 1] .= zero(r0s2_S.coeffs[1])
    r0s_S.coeffs[1] = sqrt(constant_term(r0s2_S))
    r0s_S.coeffs[2:order + 1] .= zero(r0s_S.coeffs[1])
    r0s5_S.coeffs[1] = constant_term(r0s_S) ^ float(constant_term(5))
    r0s5_S.coeffs[2:order + 1] .= zero(r0s5_S.coeffs[1])
    tmp6153.coeffs[1] = constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_0[3])
    tmp6153.coeffs[2:order + 1] .= zero(tmp6153.coeffs[1])
    tmp6155.coeffs[1] = constant_term(tmp6153) ^ float(constant_term(2))
    tmp6155.coeffs[2:order + 1] .= zero(tmp6155.coeffs[1])
    tmp6157.coeffs[1] = constant_term(r_xy[mo, ea]) * constant_term(ρ0s_M)
    tmp6157.coeffs[2:order + 1] .= zero(tmp6157.coeffs[1])
    tmp6159.coeffs[1] = constant_term(tmp6157) ^ float(constant_term(2))
    tmp6159.coeffs[2:order + 1] .= zero(tmp6159.coeffs[1])
    tmp6160.coeffs[1] = constant_term(0.5) * constant_term(tmp6159)
    tmp6160.coeffs[2:order + 1] .= zero(tmp6160.coeffs[1])
    tmp6161.coeffs[1] = constant_term(tmp6155) + constant_term(tmp6160)
    tmp6161.coeffs[2:order + 1] .= zero(tmp6161.coeffs[1])
    tmp6162.coeffs[1] = constant_term(tmp6161) / constant_term(r_p2[mo, ea])
    tmp6162.coeffs[2:order + 1] .= zero(tmp6162.coeffs[1])
    tmp6163.coeffs[1] = constant_term(5) * constant_term(tmp6162)
    tmp6163.coeffs[2:order + 1] .= zero(tmp6163.coeffs[1])
    coeff0_M.coeffs[1] = constant_term(r0s2_M) - constant_term(tmp6163)
    coeff0_M.coeffs[2:order + 1] .= zero(coeff0_M.coeffs[1])
    tmp6166.coeffs[1] = constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_0[3])
    tmp6166.coeffs[2:order + 1] .= zero(tmp6166.coeffs[1])
    tmp6168.coeffs[1] = constant_term(tmp6166) ^ float(constant_term(2))
    tmp6168.coeffs[2:order + 1] .= zero(tmp6168.coeffs[1])
    tmp6170.coeffs[1] = constant_term(r_xy[mo, ea]) * constant_term(ρ0s_S)
    tmp6170.coeffs[2:order + 1] .= zero(tmp6170.coeffs[1])
    tmp6172.coeffs[1] = constant_term(tmp6170) ^ float(constant_term(2))
    tmp6172.coeffs[2:order + 1] .= zero(tmp6172.coeffs[1])
    tmp6173.coeffs[1] = constant_term(0.5) * constant_term(tmp6172)
    tmp6173.coeffs[2:order + 1] .= zero(tmp6173.coeffs[1])
    tmp6174.coeffs[1] = constant_term(tmp6168) + constant_term(tmp6173)
    tmp6174.coeffs[2:order + 1] .= zero(tmp6174.coeffs[1])
    tmp6175.coeffs[1] = constant_term(tmp6174) / constant_term(r_p2[mo, ea])
    tmp6175.coeffs[2:order + 1] .= zero(tmp6175.coeffs[1])
    tmp6176.coeffs[1] = constant_term(5) * constant_term(tmp6175)
    tmp6176.coeffs[2:order + 1] .= zero(tmp6176.coeffs[1])
    coeff0_S.coeffs[1] = constant_term(r0s2_S) - constant_term(tmp6176)
    coeff0_S.coeffs[2:order + 1] .= zero(coeff0_S.coeffs[1])
    k_20E_div_r0s5_M.coeffs[1] = constant_term(k_20E) / constant_term(r0s5_M)
    k_20E_div_r0s5_M.coeffs[2:order + 1] .= zero(k_20E_div_r0s5_M.coeffs[1])
    k_20E_div_r0s5_S.coeffs[1] = constant_term(k_20E) / constant_term(r0s5_S)
    k_20E_div_r0s5_S.coeffs[2:order + 1] .= zero(k_20E_div_r0s5_S.coeffs[1])
    tmp6180.coeffs[1] = constant_term(ρ0s2_M) + constant_term(coeff0_M)
    tmp6180.coeffs[2:order + 1] .= zero(tmp6180.coeffs[1])
    tmp6181.coeffs[1] = constant_term(k_20E_div_r0s5_M) * constant_term(tmp6180)
    tmp6181.coeffs[2:order + 1] .= zero(tmp6181.coeffs[1])
    a_tid_0_M_x.coeffs[1] = constant_term(tmp6181) * constant_term(X_bf[mo, ea])
    a_tid_0_M_x.coeffs[2:order + 1] .= zero(a_tid_0_M_x.coeffs[1])
    tmp6183.coeffs[1] = constant_term(ρ0s2_M) + constant_term(coeff0_M)
    tmp6183.coeffs[2:order + 1] .= zero(tmp6183.coeffs[1])
    tmp6184.coeffs[1] = constant_term(k_20E_div_r0s5_M) * constant_term(tmp6183)
    tmp6184.coeffs[2:order + 1] .= zero(tmp6184.coeffs[1])
    a_tid_0_M_y.coeffs[1] = constant_term(tmp6184) * constant_term(Y_bf[mo, ea])
    a_tid_0_M_y.coeffs[2:order + 1] .= zero(a_tid_0_M_y.coeffs[1])
    tmp6187.coeffs[1] = constant_term(2) * constant_term(z0s2_M)
    tmp6187.coeffs[2:order + 1] .= zero(tmp6187.coeffs[1])
    tmp6188.coeffs[1] = constant_term(tmp6187) + constant_term(coeff0_M)
    tmp6188.coeffs[2:order + 1] .= zero(tmp6188.coeffs[1])
    tmp6189.coeffs[1] = constant_term(k_20E_div_r0s5_M) * constant_term(tmp6188)
    tmp6189.coeffs[2:order + 1] .= zero(tmp6189.coeffs[1])
    a_tid_0_M_z.coeffs[1] = constant_term(tmp6189) * constant_term(Z_bf[mo, ea])
    a_tid_0_M_z.coeffs[2:order + 1] .= zero(a_tid_0_M_z.coeffs[1])
    tmp6191.coeffs[1] = constant_term(ρ0s2_S) + constant_term(coeff0_S)
    tmp6191.coeffs[2:order + 1] .= zero(tmp6191.coeffs[1])
    tmp6192.coeffs[1] = constant_term(k_20E_div_r0s5_S) * constant_term(tmp6191)
    tmp6192.coeffs[2:order + 1] .= zero(tmp6192.coeffs[1])
    a_tid_0_S_x.coeffs[1] = constant_term(tmp6192) * constant_term(X_bf[mo, ea])
    a_tid_0_S_x.coeffs[2:order + 1] .= zero(a_tid_0_S_x.coeffs[1])
    tmp6194.coeffs[1] = constant_term(ρ0s2_S) + constant_term(coeff0_S)
    tmp6194.coeffs[2:order + 1] .= zero(tmp6194.coeffs[1])
    tmp6195.coeffs[1] = constant_term(k_20E_div_r0s5_S) * constant_term(tmp6194)
    tmp6195.coeffs[2:order + 1] .= zero(tmp6195.coeffs[1])
    a_tid_0_S_y.coeffs[1] = constant_term(tmp6195) * constant_term(Y_bf[mo, ea])
    a_tid_0_S_y.coeffs[2:order + 1] .= zero(a_tid_0_S_y.coeffs[1])
    tmp6198.coeffs[1] = constant_term(2) * constant_term(z0s2_S)
    tmp6198.coeffs[2:order + 1] .= zero(tmp6198.coeffs[1])
    tmp6199.coeffs[1] = constant_term(tmp6198) + constant_term(coeff0_S)
    tmp6199.coeffs[2:order + 1] .= zero(tmp6199.coeffs[1])
    tmp6200.coeffs[1] = constant_term(k_20E_div_r0s5_S) * constant_term(tmp6199)
    tmp6200.coeffs[2:order + 1] .= zero(tmp6200.coeffs[1])
    a_tid_0_S_z.coeffs[1] = constant_term(tmp6200) * constant_term(Z_bf[mo, ea])
    a_tid_0_S_z.coeffs[2:order + 1] .= zero(a_tid_0_S_z.coeffs[1])
    x1s_M.coeffs[1] = identity(constant_term(r_star_M_1[1]))
    x1s_M.coeffs[2:order + 1] .= zero(x1s_M.coeffs[1])
    y1s_M.coeffs[1] = identity(constant_term(r_star_M_1[2]))
    y1s_M.coeffs[2:order + 1] .= zero(y1s_M.coeffs[1])
    z1s_M.coeffs[1] = identity(constant_term(r_star_M_1[3]))
    z1s_M.coeffs[2:order + 1] .= zero(z1s_M.coeffs[1])
    tmp6203.coeffs[1] = constant_term(x1s_M) ^ float(constant_term(2))
    tmp6203.coeffs[2:order + 1] .= zero(tmp6203.coeffs[1])
    tmp6205.coeffs[1] = constant_term(y1s_M) ^ float(constant_term(2))
    tmp6205.coeffs[2:order + 1] .= zero(tmp6205.coeffs[1])
    ρ1s2_M.coeffs[1] = constant_term(tmp6203) + constant_term(tmp6205)
    ρ1s2_M.coeffs[2:order + 1] .= zero(ρ1s2_M.coeffs[1])
    ρ1s_M.coeffs[1] = sqrt(constant_term(ρ1s2_M))
    ρ1s_M.coeffs[2:order + 1] .= zero(ρ1s_M.coeffs[1])
    z1s2_M.coeffs[1] = constant_term(z1s_M) ^ float(constant_term(2))
    z1s2_M.coeffs[2:order + 1] .= zero(z1s2_M.coeffs[1])
    r1s2_M.coeffs[1] = constant_term(ρ1s2_M) + constant_term(z1s2_M)
    r1s2_M.coeffs[2:order + 1] .= zero(r1s2_M.coeffs[1])
    r1s_M.coeffs[1] = sqrt(constant_term(r1s2_M))
    r1s_M.coeffs[2:order + 1] .= zero(r1s_M.coeffs[1])
    r1s5_M.coeffs[1] = constant_term(r1s_M) ^ float(constant_term(5))
    r1s5_M.coeffs[2:order + 1] .= zero(r1s5_M.coeffs[1])
    x1s_S.coeffs[1] = identity(constant_term(r_star_S_1[1]))
    x1s_S.coeffs[2:order + 1] .= zero(x1s_S.coeffs[1])
    y1s_S.coeffs[1] = identity(constant_term(r_star_S_1[2]))
    y1s_S.coeffs[2:order + 1] .= zero(y1s_S.coeffs[1])
    z1s_S.coeffs[1] = identity(constant_term(r_star_S_1[3]))
    z1s_S.coeffs[2:order + 1] .= zero(z1s_S.coeffs[1])
    tmp6215.coeffs[1] = constant_term(x1s_S) ^ float(constant_term(2))
    tmp6215.coeffs[2:order + 1] .= zero(tmp6215.coeffs[1])
    tmp6217.coeffs[1] = constant_term(y1s_S) ^ float(constant_term(2))
    tmp6217.coeffs[2:order + 1] .= zero(tmp6217.coeffs[1])
    ρ1s2_S.coeffs[1] = constant_term(tmp6215) + constant_term(tmp6217)
    ρ1s2_S.coeffs[2:order + 1] .= zero(ρ1s2_S.coeffs[1])
    ρ1s_S.coeffs[1] = sqrt(constant_term(ρ1s2_S))
    ρ1s_S.coeffs[2:order + 1] .= zero(ρ1s_S.coeffs[1])
    z1s2_S.coeffs[1] = constant_term(z1s_S) ^ float(constant_term(2))
    z1s2_S.coeffs[2:order + 1] .= zero(z1s2_S.coeffs[1])
    r1s2_S.coeffs[1] = constant_term(ρ1s2_S) + constant_term(z1s2_S)
    r1s2_S.coeffs[2:order + 1] .= zero(r1s2_S.coeffs[1])
    r1s_S.coeffs[1] = sqrt(constant_term(r1s2_S))
    r1s_S.coeffs[2:order + 1] .= zero(r1s_S.coeffs[1])
    r1s5_S.coeffs[1] = constant_term(r1s_S) ^ float(constant_term(5))
    r1s5_S.coeffs[2:order + 1] .= zero(r1s5_S.coeffs[1])
    tmp6226.coeffs[1] = constant_term(X_bf[mo, ea]) * constant_term(r_star_M_1[1])
    tmp6226.coeffs[2:order + 1] .= zero(tmp6226.coeffs[1])
    tmp6227.coeffs[1] = constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_1[2])
    tmp6227.coeffs[2:order + 1] .= zero(tmp6227.coeffs[1])
    coeff1_1_M.coeffs[1] = constant_term(tmp6226) + constant_term(tmp6227)
    coeff1_1_M.coeffs[2:order + 1] .= zero(coeff1_1_M.coeffs[1])
    tmp6229.coeffs[1] = constant_term(X_bf[mo, ea]) * constant_term(r_star_S_1[1])
    tmp6229.coeffs[2:order + 1] .= zero(tmp6229.coeffs[1])
    tmp6230.coeffs[1] = constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_1[2])
    tmp6230.coeffs[2:order + 1] .= zero(tmp6230.coeffs[1])
    coeff1_1_S.coeffs[1] = constant_term(tmp6229) + constant_term(tmp6230)
    coeff1_1_S.coeffs[2:order + 1] .= zero(coeff1_1_S.coeffs[1])
    coeff2_1_M.coeffs[1] = constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_1[3])
    coeff2_1_M.coeffs[2:order + 1] .= zero(coeff2_1_M.coeffs[1])
    coeff2_1_S.coeffs[1] = constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_1[3])
    coeff2_1_S.coeffs[2:order + 1] .= zero(coeff2_1_S.coeffs[1])
    tmp6235.coeffs[1] = constant_term(10) * constant_term(coeff1_1_M)
    tmp6235.coeffs[2:order + 1] .= zero(tmp6235.coeffs[1])
    tmp6236.coeffs[1] = constant_term(tmp6235) * constant_term(coeff2_1_M)
    tmp6236.coeffs[2:order + 1] .= zero(tmp6236.coeffs[1])
    coeff3_1_M.coeffs[1] = constant_term(tmp6236) / constant_term(r_p2[mo, ea])
    coeff3_1_M.coeffs[2:order + 1] .= zero(coeff3_1_M.coeffs[1])
    tmp6239.coeffs[1] = constant_term(10) * constant_term(coeff1_1_S)
    tmp6239.coeffs[2:order + 1] .= zero(tmp6239.coeffs[1])
    tmp6240.coeffs[1] = constant_term(tmp6239) * constant_term(coeff2_1_S)
    tmp6240.coeffs[2:order + 1] .= zero(tmp6240.coeffs[1])
    coeff3_1_S.coeffs[1] = constant_term(tmp6240) / constant_term(r_p2[mo, ea])
    coeff3_1_S.coeffs[2:order + 1] .= zero(coeff3_1_S.coeffs[1])
    k_21E_div_r1s5_M.coeffs[1] = constant_term(k_21E) / constant_term(r1s5_M)
    k_21E_div_r1s5_M.coeffs[2:order + 1] .= zero(k_21E_div_r1s5_M.coeffs[1])
    k_21E_div_r1s5_S.coeffs[1] = constant_term(k_21E) / constant_term(r1s5_S)
    k_21E_div_r1s5_S.coeffs[2:order + 1] .= zero(k_21E_div_r1s5_S.coeffs[1])
    tmp6245.coeffs[1] = constant_term(2) * constant_term(coeff2_1_M)
    tmp6245.coeffs[2:order + 1] .= zero(tmp6245.coeffs[1])
    tmp6246.coeffs[1] = constant_term(tmp6245) * constant_term(r_star_M_1[1])
    tmp6246.coeffs[2:order + 1] .= zero(tmp6246.coeffs[1])
    tmp6247.coeffs[1] = constant_term(coeff3_1_M) * constant_term(X_bf[mo, ea])
    tmp6247.coeffs[2:order + 1] .= zero(tmp6247.coeffs[1])
    tmp6248.coeffs[1] = constant_term(tmp6246) - constant_term(tmp6247)
    tmp6248.coeffs[2:order + 1] .= zero(tmp6248.coeffs[1])
    a_tid_1_M_x.coeffs[1] = constant_term(k_21E_div_r1s5_M) * constant_term(tmp6248)
    a_tid_1_M_x.coeffs[2:order + 1] .= zero(a_tid_1_M_x.coeffs[1])
    tmp6251.coeffs[1] = constant_term(2) * constant_term(coeff2_1_M)
    tmp6251.coeffs[2:order + 1] .= zero(tmp6251.coeffs[1])
    tmp6252.coeffs[1] = constant_term(tmp6251) * constant_term(r_star_M_1[2])
    tmp6252.coeffs[2:order + 1] .= zero(tmp6252.coeffs[1])
    tmp6253.coeffs[1] = constant_term(coeff3_1_M) * constant_term(Y_bf[mo, ea])
    tmp6253.coeffs[2:order + 1] .= zero(tmp6253.coeffs[1])
    tmp6254.coeffs[1] = constant_term(tmp6252) - constant_term(tmp6253)
    tmp6254.coeffs[2:order + 1] .= zero(tmp6254.coeffs[1])
    a_tid_1_M_y.coeffs[1] = constant_term(k_21E_div_r1s5_M) * constant_term(tmp6254)
    a_tid_1_M_y.coeffs[2:order + 1] .= zero(a_tid_1_M_y.coeffs[1])
    tmp6257.coeffs[1] = constant_term(2) * constant_term(coeff1_1_M)
    tmp6257.coeffs[2:order + 1] .= zero(tmp6257.coeffs[1])
    tmp6258.coeffs[1] = constant_term(tmp6257) * constant_term(r_star_M_1[3])
    tmp6258.coeffs[2:order + 1] .= zero(tmp6258.coeffs[1])
    tmp6259.coeffs[1] = constant_term(coeff3_1_M) * constant_term(Z_bf[mo, ea])
    tmp6259.coeffs[2:order + 1] .= zero(tmp6259.coeffs[1])
    tmp6260.coeffs[1] = constant_term(tmp6258) - constant_term(tmp6259)
    tmp6260.coeffs[2:order + 1] .= zero(tmp6260.coeffs[1])
    a_tid_1_M_z.coeffs[1] = constant_term(k_21E_div_r1s5_M) * constant_term(tmp6260)
    a_tid_1_M_z.coeffs[2:order + 1] .= zero(a_tid_1_M_z.coeffs[1])
    tmp6263.coeffs[1] = constant_term(2) * constant_term(coeff2_1_S)
    tmp6263.coeffs[2:order + 1] .= zero(tmp6263.coeffs[1])
    tmp6264.coeffs[1] = constant_term(tmp6263) * constant_term(r_star_S_1[1])
    tmp6264.coeffs[2:order + 1] .= zero(tmp6264.coeffs[1])
    tmp6265.coeffs[1] = constant_term(coeff3_1_S) * constant_term(X_bf[mo, ea])
    tmp6265.coeffs[2:order + 1] .= zero(tmp6265.coeffs[1])
    tmp6266.coeffs[1] = constant_term(tmp6264) - constant_term(tmp6265)
    tmp6266.coeffs[2:order + 1] .= zero(tmp6266.coeffs[1])
    a_tid_1_S_x.coeffs[1] = constant_term(k_21E_div_r1s5_S) * constant_term(tmp6266)
    a_tid_1_S_x.coeffs[2:order + 1] .= zero(a_tid_1_S_x.coeffs[1])
    tmp6269.coeffs[1] = constant_term(2) * constant_term(coeff2_1_S)
    tmp6269.coeffs[2:order + 1] .= zero(tmp6269.coeffs[1])
    tmp6270.coeffs[1] = constant_term(tmp6269) * constant_term(r_star_S_1[2])
    tmp6270.coeffs[2:order + 1] .= zero(tmp6270.coeffs[1])
    tmp6271.coeffs[1] = constant_term(coeff3_1_S) * constant_term(Y_bf[mo, ea])
    tmp6271.coeffs[2:order + 1] .= zero(tmp6271.coeffs[1])
    tmp6272.coeffs[1] = constant_term(tmp6270) - constant_term(tmp6271)
    tmp6272.coeffs[2:order + 1] .= zero(tmp6272.coeffs[1])
    a_tid_1_S_y.coeffs[1] = constant_term(k_21E_div_r1s5_S) * constant_term(tmp6272)
    a_tid_1_S_y.coeffs[2:order + 1] .= zero(a_tid_1_S_y.coeffs[1])
    tmp6275.coeffs[1] = constant_term(2) * constant_term(coeff1_1_S)
    tmp6275.coeffs[2:order + 1] .= zero(tmp6275.coeffs[1])
    tmp6276.coeffs[1] = constant_term(tmp6275) * constant_term(r_star_S_1[3])
    tmp6276.coeffs[2:order + 1] .= zero(tmp6276.coeffs[1])
    tmp6277.coeffs[1] = constant_term(coeff3_1_S) * constant_term(Z_bf[mo, ea])
    tmp6277.coeffs[2:order + 1] .= zero(tmp6277.coeffs[1])
    tmp6278.coeffs[1] = constant_term(tmp6276) - constant_term(tmp6277)
    tmp6278.coeffs[2:order + 1] .= zero(tmp6278.coeffs[1])
    a_tid_1_S_z.coeffs[1] = constant_term(k_21E_div_r1s5_S) * constant_term(tmp6278)
    a_tid_1_S_z.coeffs[2:order + 1] .= zero(a_tid_1_S_z.coeffs[1])
    x2s_M.coeffs[1] = identity(constant_term(r_star_M_2[1]))
    x2s_M.coeffs[2:order + 1] .= zero(x2s_M.coeffs[1])
    y2s_M.coeffs[1] = identity(constant_term(r_star_M_2[2]))
    y2s_M.coeffs[2:order + 1] .= zero(y2s_M.coeffs[1])
    z2s_M.coeffs[1] = identity(constant_term(r_star_M_2[3]))
    z2s_M.coeffs[2:order + 1] .= zero(z2s_M.coeffs[1])
    tmp6281.coeffs[1] = constant_term(x2s_M) ^ float(constant_term(2))
    tmp6281.coeffs[2:order + 1] .= zero(tmp6281.coeffs[1])
    tmp6283.coeffs[1] = constant_term(y2s_M) ^ float(constant_term(2))
    tmp6283.coeffs[2:order + 1] .= zero(tmp6283.coeffs[1])
    ρ2s2_M.coeffs[1] = constant_term(tmp6281) + constant_term(tmp6283)
    ρ2s2_M.coeffs[2:order + 1] .= zero(ρ2s2_M.coeffs[1])
    ρ2s_M.coeffs[1] = sqrt(constant_term(ρ2s2_M))
    ρ2s_M.coeffs[2:order + 1] .= zero(ρ2s_M.coeffs[1])
    z2s2_M.coeffs[1] = constant_term(z2s_M) ^ float(constant_term(2))
    z2s2_M.coeffs[2:order + 1] .= zero(z2s2_M.coeffs[1])
    r2s2_M.coeffs[1] = constant_term(ρ2s2_M) + constant_term(z2s2_M)
    r2s2_M.coeffs[2:order + 1] .= zero(r2s2_M.coeffs[1])
    r2s_M.coeffs[1] = sqrt(constant_term(r2s2_M))
    r2s_M.coeffs[2:order + 1] .= zero(r2s_M.coeffs[1])
    r2s5_M.coeffs[1] = constant_term(r2s_M) ^ float(constant_term(5))
    r2s5_M.coeffs[2:order + 1] .= zero(r2s5_M.coeffs[1])
    x2s_S.coeffs[1] = identity(constant_term(r_star_S_2[1]))
    x2s_S.coeffs[2:order + 1] .= zero(x2s_S.coeffs[1])
    y2s_S.coeffs[1] = identity(constant_term(r_star_S_2[2]))
    y2s_S.coeffs[2:order + 1] .= zero(y2s_S.coeffs[1])
    z2s_S.coeffs[1] = identity(constant_term(r_star_S_2[3]))
    z2s_S.coeffs[2:order + 1] .= zero(z2s_S.coeffs[1])
    tmp6293.coeffs[1] = constant_term(x2s_S) ^ float(constant_term(2))
    tmp6293.coeffs[2:order + 1] .= zero(tmp6293.coeffs[1])
    tmp6295.coeffs[1] = constant_term(y2s_S) ^ float(constant_term(2))
    tmp6295.coeffs[2:order + 1] .= zero(tmp6295.coeffs[1])
    ρ2s2_S.coeffs[1] = constant_term(tmp6293) + constant_term(tmp6295)
    ρ2s2_S.coeffs[2:order + 1] .= zero(ρ2s2_S.coeffs[1])
    ρ2s_S.coeffs[1] = sqrt(constant_term(ρ2s2_S))
    ρ2s_S.coeffs[2:order + 1] .= zero(ρ2s_S.coeffs[1])
    z2s2_S.coeffs[1] = constant_term(z2s_S) ^ float(constant_term(2))
    z2s2_S.coeffs[2:order + 1] .= zero(z2s2_S.coeffs[1])
    r2s2_S.coeffs[1] = constant_term(ρ2s2_S) + constant_term(z2s2_S)
    r2s2_S.coeffs[2:order + 1] .= zero(r2s2_S.coeffs[1])
    r2s_S.coeffs[1] = sqrt(constant_term(r2s2_S))
    r2s_S.coeffs[2:order + 1] .= zero(r2s_S.coeffs[1])
    r2s5_S.coeffs[1] = constant_term(r2s_S) ^ float(constant_term(5))
    r2s5_S.coeffs[2:order + 1] .= zero(r2s5_S.coeffs[1])
    tmp6304.coeffs[1] = constant_term(X_bf[mo, ea]) * constant_term(r_star_M_2[1])
    tmp6304.coeffs[2:order + 1] .= zero(tmp6304.coeffs[1])
    tmp6305.coeffs[1] = constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_2[2])
    tmp6305.coeffs[2:order + 1] .= zero(tmp6305.coeffs[1])
    coeff1_2_M.coeffs[1] = constant_term(tmp6304) + constant_term(tmp6305)
    coeff1_2_M.coeffs[2:order + 1] .= zero(coeff1_2_M.coeffs[1])
    tmp6307.coeffs[1] = constant_term(X_bf[mo, ea]) * constant_term(r_star_S_2[1])
    tmp6307.coeffs[2:order + 1] .= zero(tmp6307.coeffs[1])
    tmp6308.coeffs[1] = constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_2[2])
    tmp6308.coeffs[2:order + 1] .= zero(tmp6308.coeffs[1])
    coeff1_2_S.coeffs[1] = constant_term(tmp6307) + constant_term(tmp6308)
    coeff1_2_S.coeffs[2:order + 1] .= zero(coeff1_2_S.coeffs[1])
    tmp6312.coeffs[1] = constant_term(coeff1_2_M) ^ float(constant_term(2))
    tmp6312.coeffs[2:order + 1] .= zero(tmp6312.coeffs[1])
    tmp6315.coeffs[1] = constant_term(r_xy[mo, ea]) ^ float(constant_term(2))
    tmp6315.coeffs[2:order + 1] .= zero(tmp6315.coeffs[1])
    tmp6316.coeffs[1] = constant_term(0.5) * constant_term(tmp6315)
    tmp6316.coeffs[2:order + 1] .= zero(tmp6316.coeffs[1])
    tmp6317.coeffs[1] = constant_term(tmp6316) * constant_term(ρ2s2_M)
    tmp6317.coeffs[2:order + 1] .= zero(tmp6317.coeffs[1])
    tmp6318.coeffs[1] = constant_term(tmp6312) - constant_term(tmp6317)
    tmp6318.coeffs[2:order + 1] .= zero(tmp6318.coeffs[1])
    tmp6319.coeffs[1] = constant_term(5) * constant_term(tmp6318)
    tmp6319.coeffs[2:order + 1] .= zero(tmp6319.coeffs[1])
    coeff3_2_M.coeffs[1] = constant_term(tmp6319) / constant_term(r_p2[mo, ea])
    coeff3_2_M.coeffs[2:order + 1] .= zero(coeff3_2_M.coeffs[1])
    tmp6323.coeffs[1] = constant_term(coeff1_2_S) ^ float(constant_term(2))
    tmp6323.coeffs[2:order + 1] .= zero(tmp6323.coeffs[1])
    tmp6326.coeffs[1] = constant_term(r_xy[mo, ea]) ^ float(constant_term(2))
    tmp6326.coeffs[2:order + 1] .= zero(tmp6326.coeffs[1])
    tmp6327.coeffs[1] = constant_term(0.5) * constant_term(tmp6326)
    tmp6327.coeffs[2:order + 1] .= zero(tmp6327.coeffs[1])
    tmp6328.coeffs[1] = constant_term(tmp6327) * constant_term(ρ2s2_S)
    tmp6328.coeffs[2:order + 1] .= zero(tmp6328.coeffs[1])
    tmp6329.coeffs[1] = constant_term(tmp6323) - constant_term(tmp6328)
    tmp6329.coeffs[2:order + 1] .= zero(tmp6329.coeffs[1])
    tmp6330.coeffs[1] = constant_term(5) * constant_term(tmp6329)
    tmp6330.coeffs[2:order + 1] .= zero(tmp6330.coeffs[1])
    coeff3_2_S.coeffs[1] = constant_term(tmp6330) / constant_term(r_p2[mo, ea])
    coeff3_2_S.coeffs[2:order + 1] .= zero(coeff3_2_S.coeffs[1])
    k_22E_div_r2s5_M.coeffs[1] = constant_term(k_22E) / constant_term(r2s5_M)
    k_22E_div_r2s5_M.coeffs[2:order + 1] .= zero(k_22E_div_r2s5_M.coeffs[1])
    k_22E_div_r2s5_S.coeffs[1] = constant_term(k_22E) / constant_term(r2s5_S)
    k_22E_div_r2s5_S.coeffs[2:order + 1] .= zero(k_22E_div_r2s5_S.coeffs[1])
    tmp6335.coeffs[1] = constant_term(2) * constant_term(coeff1_2_M)
    tmp6335.coeffs[2:order + 1] .= zero(tmp6335.coeffs[1])
    tmp6336.coeffs[1] = constant_term(tmp6335) * constant_term(r_star_M_2[1])
    tmp6336.coeffs[2:order + 1] .= zero(tmp6336.coeffs[1])
    tmp6337.coeffs[1] = constant_term(ρ2s2_M) + constant_term(coeff3_2_M)
    tmp6337.coeffs[2:order + 1] .= zero(tmp6337.coeffs[1])
    tmp6338.coeffs[1] = constant_term(tmp6337) * constant_term(X_bf[mo, ea])
    tmp6338.coeffs[2:order + 1] .= zero(tmp6338.coeffs[1])
    tmp6339.coeffs[1] = constant_term(tmp6336) - constant_term(tmp6338)
    tmp6339.coeffs[2:order + 1] .= zero(tmp6339.coeffs[1])
    a_tid_2_M_x.coeffs[1] = constant_term(k_22E_div_r2s5_M) * constant_term(tmp6339)
    a_tid_2_M_x.coeffs[2:order + 1] .= zero(a_tid_2_M_x.coeffs[1])
    tmp6342.coeffs[1] = constant_term(2) * constant_term(coeff1_2_M)
    tmp6342.coeffs[2:order + 1] .= zero(tmp6342.coeffs[1])
    tmp6343.coeffs[1] = constant_term(tmp6342) * constant_term(r_star_M_2[2])
    tmp6343.coeffs[2:order + 1] .= zero(tmp6343.coeffs[1])
    tmp6344.coeffs[1] = constant_term(ρ2s2_M) + constant_term(coeff3_2_M)
    tmp6344.coeffs[2:order + 1] .= zero(tmp6344.coeffs[1])
    tmp6345.coeffs[1] = constant_term(tmp6344) * constant_term(Y_bf[mo, ea])
    tmp6345.coeffs[2:order + 1] .= zero(tmp6345.coeffs[1])
    tmp6346.coeffs[1] = constant_term(tmp6343) - constant_term(tmp6345)
    tmp6346.coeffs[2:order + 1] .= zero(tmp6346.coeffs[1])
    a_tid_2_M_y.coeffs[1] = constant_term(k_22E_div_r2s5_M) * constant_term(tmp6346)
    a_tid_2_M_y.coeffs[2:order + 1] .= zero(a_tid_2_M_y.coeffs[1])
    tmp6348.coeffs[1] = -(constant_term(coeff3_2_M))
    tmp6348.coeffs[2:order + 1] .= zero(tmp6348.coeffs[1])
    tmp6349.coeffs[1] = constant_term(k_22E_div_r2s5_M) * constant_term(tmp6348)
    tmp6349.coeffs[2:order + 1] .= zero(tmp6349.coeffs[1])
    a_tid_2_M_z.coeffs[1] = constant_term(tmp6349) * constant_term(Z_bf[mo, ea])
    a_tid_2_M_z.coeffs[2:order + 1] .= zero(a_tid_2_M_z.coeffs[1])
    tmp6352.coeffs[1] = constant_term(2) * constant_term(coeff1_2_S)
    tmp6352.coeffs[2:order + 1] .= zero(tmp6352.coeffs[1])
    tmp6353.coeffs[1] = constant_term(tmp6352) * constant_term(r_star_S_2[1])
    tmp6353.coeffs[2:order + 1] .= zero(tmp6353.coeffs[1])
    tmp6354.coeffs[1] = constant_term(ρ2s2_S) + constant_term(coeff3_2_S)
    tmp6354.coeffs[2:order + 1] .= zero(tmp6354.coeffs[1])
    tmp6355.coeffs[1] = constant_term(tmp6354) * constant_term(X_bf[mo, ea])
    tmp6355.coeffs[2:order + 1] .= zero(tmp6355.coeffs[1])
    tmp6356.coeffs[1] = constant_term(tmp6353) - constant_term(tmp6355)
    tmp6356.coeffs[2:order + 1] .= zero(tmp6356.coeffs[1])
    a_tid_2_S_x.coeffs[1] = constant_term(k_22E_div_r2s5_S) * constant_term(tmp6356)
    a_tid_2_S_x.coeffs[2:order + 1] .= zero(a_tid_2_S_x.coeffs[1])
    tmp6359.coeffs[1] = constant_term(2) * constant_term(coeff1_2_S)
    tmp6359.coeffs[2:order + 1] .= zero(tmp6359.coeffs[1])
    tmp6360.coeffs[1] = constant_term(tmp6359) * constant_term(r_star_S_2[2])
    tmp6360.coeffs[2:order + 1] .= zero(tmp6360.coeffs[1])
    tmp6361.coeffs[1] = constant_term(ρ2s2_S) + constant_term(coeff3_2_S)
    tmp6361.coeffs[2:order + 1] .= zero(tmp6361.coeffs[1])
    tmp6362.coeffs[1] = constant_term(tmp6361) * constant_term(Y_bf[mo, ea])
    tmp6362.coeffs[2:order + 1] .= zero(tmp6362.coeffs[1])
    tmp6363.coeffs[1] = constant_term(tmp6360) - constant_term(tmp6362)
    tmp6363.coeffs[2:order + 1] .= zero(tmp6363.coeffs[1])
    a_tid_2_S_y.coeffs[1] = constant_term(k_22E_div_r2s5_S) * constant_term(tmp6363)
    a_tid_2_S_y.coeffs[2:order + 1] .= zero(a_tid_2_S_y.coeffs[1])
    tmp6365.coeffs[1] = -(constant_term(coeff3_2_S))
    tmp6365.coeffs[2:order + 1] .= zero(tmp6365.coeffs[1])
    tmp6366.coeffs[1] = constant_term(k_22E_div_r2s5_S) * constant_term(tmp6365)
    tmp6366.coeffs[2:order + 1] .= zero(tmp6366.coeffs[1])
    a_tid_2_S_z.coeffs[1] = constant_term(tmp6366) * constant_term(Z_bf[mo, ea])
    a_tid_2_S_z.coeffs[2:order + 1] .= zero(a_tid_2_S_z.coeffs[1])
    tmp6368.coeffs[1] = constant_term(RE_au) / constant_term(r_p1d2[mo, ea])
    tmp6368.coeffs[2:order + 1] .= zero(tmp6368.coeffs[1])
    RE_div_r_p5.coeffs[1] = constant_term(tmp6368) ^ float(constant_term(5))
    RE_div_r_p5.coeffs[2:order + 1] .= zero(RE_div_r_p5.coeffs[1])
    aux_tidacc.coeffs[1] = constant_term(tid_num_coeff) * constant_term(RE_div_r_p5)
    aux_tidacc.coeffs[2:order + 1] .= zero(aux_tidacc.coeffs[1])
    a_tidal_coeff_M.coeffs[1] = constant_term(μ[mo]) * constant_term(aux_tidacc)
    a_tidal_coeff_M.coeffs[2:order + 1] .= zero(a_tidal_coeff_M.coeffs[1])
    a_tidal_coeff_S.coeffs[1] = constant_term(μ[su]) * constant_term(aux_tidacc)
    a_tidal_coeff_S.coeffs[2:order + 1] .= zero(a_tidal_coeff_S.coeffs[1])
    tmp6374.coeffs[1] = constant_term(a_tid_0_M_x) + constant_term(a_tid_1_M_x)
    tmp6374.coeffs[2:order + 1] .= zero(tmp6374.coeffs[1])
    tmp6375.coeffs[1] = constant_term(tmp6374) + constant_term(a_tid_2_M_x)
    tmp6375.coeffs[2:order + 1] .= zero(tmp6375.coeffs[1])
    tmp6376.coeffs[1] = constant_term(a_tidal_coeff_M) * constant_term(tmp6375)
    tmp6376.coeffs[2:order + 1] .= zero(tmp6376.coeffs[1])
    tmp6377.coeffs[1] = constant_term(a_tid_0_S_x) + constant_term(a_tid_1_S_x)
    tmp6377.coeffs[2:order + 1] .= zero(tmp6377.coeffs[1])
    tmp6378.coeffs[1] = constant_term(tmp6377) + constant_term(a_tid_2_S_x)
    tmp6378.coeffs[2:order + 1] .= zero(tmp6378.coeffs[1])
    tmp6379.coeffs[1] = constant_term(a_tidal_coeff_S) * constant_term(tmp6378)
    tmp6379.coeffs[2:order + 1] .= zero(tmp6379.coeffs[1])
    a_tidal_tod_x.coeffs[1] = constant_term(tmp6376) + constant_term(tmp6379)
    a_tidal_tod_x.coeffs[2:order + 1] .= zero(a_tidal_tod_x.coeffs[1])
    tmp6381.coeffs[1] = constant_term(a_tid_0_M_y) + constant_term(a_tid_1_M_y)
    tmp6381.coeffs[2:order + 1] .= zero(tmp6381.coeffs[1])
    tmp6382.coeffs[1] = constant_term(tmp6381) + constant_term(a_tid_2_M_y)
    tmp6382.coeffs[2:order + 1] .= zero(tmp6382.coeffs[1])
    tmp6383.coeffs[1] = constant_term(a_tidal_coeff_M) * constant_term(tmp6382)
    tmp6383.coeffs[2:order + 1] .= zero(tmp6383.coeffs[1])
    tmp6384.coeffs[1] = constant_term(a_tid_0_S_y) + constant_term(a_tid_1_S_y)
    tmp6384.coeffs[2:order + 1] .= zero(tmp6384.coeffs[1])
    tmp6385.coeffs[1] = constant_term(tmp6384) + constant_term(a_tid_2_S_y)
    tmp6385.coeffs[2:order + 1] .= zero(tmp6385.coeffs[1])
    tmp6386.coeffs[1] = constant_term(a_tidal_coeff_S) * constant_term(tmp6385)
    tmp6386.coeffs[2:order + 1] .= zero(tmp6386.coeffs[1])
    a_tidal_tod_y.coeffs[1] = constant_term(tmp6383) + constant_term(tmp6386)
    a_tidal_tod_y.coeffs[2:order + 1] .= zero(a_tidal_tod_y.coeffs[1])
    tmp6388.coeffs[1] = constant_term(a_tid_0_M_z) + constant_term(a_tid_1_M_z)
    tmp6388.coeffs[2:order + 1] .= zero(tmp6388.coeffs[1])
    tmp6389.coeffs[1] = constant_term(tmp6388) + constant_term(a_tid_2_M_z)
    tmp6389.coeffs[2:order + 1] .= zero(tmp6389.coeffs[1])
    tmp6390.coeffs[1] = constant_term(a_tidal_coeff_M) * constant_term(tmp6389)
    tmp6390.coeffs[2:order + 1] .= zero(tmp6390.coeffs[1])
    tmp6391.coeffs[1] = constant_term(a_tid_0_S_z) + constant_term(a_tid_1_S_z)
    tmp6391.coeffs[2:order + 1] .= zero(tmp6391.coeffs[1])
    tmp6392.coeffs[1] = constant_term(tmp6391) + constant_term(a_tid_2_S_z)
    tmp6392.coeffs[2:order + 1] .= zero(tmp6392.coeffs[1])
    tmp6393.coeffs[1] = constant_term(a_tidal_coeff_S) * constant_term(tmp6392)
    tmp6393.coeffs[2:order + 1] .= zero(tmp6393.coeffs[1])
    a_tidal_tod_z.coeffs[1] = constant_term(tmp6390) + constant_term(tmp6393)
    a_tidal_tod_z.coeffs[2:order + 1] .= zero(a_tidal_tod_z.coeffs[1])
    tmp6395.coeffs[1] = constant_term(RotM[1, 1, ea]) * constant_term(a_tidal_tod_x)
    tmp6395.coeffs[2:order + 1] .= zero(tmp6395.coeffs[1])
    tmp6396.coeffs[1] = constant_term(RotM[2, 1, ea]) * constant_term(a_tidal_tod_y)
    tmp6396.coeffs[2:order + 1] .= zero(tmp6396.coeffs[1])
    tmp6397.coeffs[1] = constant_term(tmp6395) + constant_term(tmp6396)
    tmp6397.coeffs[2:order + 1] .= zero(tmp6397.coeffs[1])
    tmp6398.coeffs[1] = constant_term(RotM[3, 1, ea]) * constant_term(a_tidal_tod_z)
    tmp6398.coeffs[2:order + 1] .= zero(tmp6398.coeffs[1])
    a_tidal_x.coeffs[1] = constant_term(tmp6397) + constant_term(tmp6398)
    a_tidal_x.coeffs[2:order + 1] .= zero(a_tidal_x.coeffs[1])
    tmp6400.coeffs[1] = constant_term(RotM[1, 2, ea]) * constant_term(a_tidal_tod_x)
    tmp6400.coeffs[2:order + 1] .= zero(tmp6400.coeffs[1])
    tmp6401.coeffs[1] = constant_term(RotM[2, 2, ea]) * constant_term(a_tidal_tod_y)
    tmp6401.coeffs[2:order + 1] .= zero(tmp6401.coeffs[1])
    tmp6402.coeffs[1] = constant_term(tmp6400) + constant_term(tmp6401)
    tmp6402.coeffs[2:order + 1] .= zero(tmp6402.coeffs[1])
    tmp6403.coeffs[1] = constant_term(RotM[3, 2, ea]) * constant_term(a_tidal_tod_z)
    tmp6403.coeffs[2:order + 1] .= zero(tmp6403.coeffs[1])
    a_tidal_y.coeffs[1] = constant_term(tmp6402) + constant_term(tmp6403)
    a_tidal_y.coeffs[2:order + 1] .= zero(a_tidal_y.coeffs[1])
    tmp6405.coeffs[1] = constant_term(RotM[1, 3, ea]) * constant_term(a_tidal_tod_x)
    tmp6405.coeffs[2:order + 1] .= zero(tmp6405.coeffs[1])
    tmp6406.coeffs[1] = constant_term(RotM[2, 3, ea]) * constant_term(a_tidal_tod_y)
    tmp6406.coeffs[2:order + 1] .= zero(tmp6406.coeffs[1])
    tmp6407.coeffs[1] = constant_term(tmp6405) + constant_term(tmp6406)
    tmp6407.coeffs[2:order + 1] .= zero(tmp6407.coeffs[1])
    tmp6408.coeffs[1] = constant_term(RotM[3, 3, ea]) * constant_term(a_tidal_tod_z)
    tmp6408.coeffs[2:order + 1] .= zero(tmp6408.coeffs[1])
    a_tidal_z.coeffs[1] = constant_term(tmp6407) + constant_term(tmp6408)
    a_tidal_z.coeffs[2:order + 1] .= zero(a_tidal_z.coeffs[1])
    accX_mo_tides.coeffs[1] = constant_term(accX[mo]) + constant_term(a_tidal_x)
    accX_mo_tides.coeffs[2:order + 1] .= zero(accX_mo_tides.coeffs[1])
    accY_mo_tides.coeffs[1] = constant_term(accY[mo]) + constant_term(a_tidal_y)
    accY_mo_tides.coeffs[2:order + 1] .= zero(accY_mo_tides.coeffs[1])
    accZ_mo_tides.coeffs[1] = constant_term(accZ[mo]) + constant_term(a_tidal_z)
    accZ_mo_tides.coeffs[2:order + 1] .= zero(accZ_mo_tides.coeffs[1])
    (accX[mo]).coeffs[1] = identity(constant_term(accX_mo_tides))
    (accX[mo]).coeffs[2:order + 1] .= zero((accX[mo]).coeffs[1])
    (accY[mo]).coeffs[1] = identity(constant_term(accY_mo_tides))
    (accY[mo]).coeffs[2:order + 1] .= zero((accY[mo]).coeffs[1])
    (accZ[mo]).coeffs[1] = identity(constant_term(accZ_mo_tides))
    (accZ[mo]).coeffs[2:order + 1] .= zero((accZ[mo]).coeffs[1])
    #= In[33]:990 =# Threads.@threads for i = 1:N_ext
            (dq[3 * (N + i) - 2]).coeffs[1] = constant_term(postNewtonX[i]) + constant_term(accX[i])
            (dq[3 * (N + i) - 2]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 2]).coeffs[1])
            (dq[3 * (N + i) - 1]).coeffs[1] = constant_term(postNewtonY[i]) + constant_term(accY[i])
            (dq[3 * (N + i) - 1]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 1]).coeffs[1])
            (dq[3 * (N + i)]).coeffs[1] = constant_term(postNewtonZ[i]) + constant_term(accZ[i])
            (dq[3 * (N + i)]).coeffs[2:order + 1] .= zero((dq[3 * (N + i)]).coeffs[1])
        end
    #= In[33]:995 =# Threads.@threads for i = N_ext + 1:N
            (dq[3 * (N + i) - 2]).coeffs[1] = identity(constant_term(postNewtonX[i]))
            (dq[3 * (N + i) - 2]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 2]).coeffs[1])
            (dq[3 * (N + i) - 1]).coeffs[1] = identity(constant_term(postNewtonY[i]))
            (dq[3 * (N + i) - 1]).coeffs[2:order + 1] .= zero((dq[3 * (N + i) - 1]).coeffs[1])
            (dq[3 * (N + i)]).coeffs[1] = identity(constant_term(postNewtonZ[i]))
            (dq[3 * (N + i)]).coeffs[2:order + 1] .= zero((dq[3 * (N + i)]).coeffs[1])
        end
    tmp6416.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4])
    tmp6416.coeffs[2:order + 1] .= zero(tmp6416.coeffs[1])
    tmp6417.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5])
    tmp6417.coeffs[2:order + 1] .= zero(tmp6417.coeffs[1])
    tmp6418.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6])
    tmp6418.coeffs[2:order + 1] .= zero(tmp6418.coeffs[1])
    tmp6419.coeffs[1] = constant_term(tmp6417) + constant_term(tmp6418)
    tmp6419.coeffs[2:order + 1] .= zero(tmp6419.coeffs[1])
    Iω_x.coeffs[1] = constant_term(tmp6416) + constant_term(tmp6419)
    Iω_x.coeffs[2:order + 1] .= zero(Iω_x.coeffs[1])
    tmp6421.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4])
    tmp6421.coeffs[2:order + 1] .= zero(tmp6421.coeffs[1])
    tmp6422.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5])
    tmp6422.coeffs[2:order + 1] .= zero(tmp6422.coeffs[1])
    tmp6423.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6])
    tmp6423.coeffs[2:order + 1] .= zero(tmp6423.coeffs[1])
    tmp6424.coeffs[1] = constant_term(tmp6422) + constant_term(tmp6423)
    tmp6424.coeffs[2:order + 1] .= zero(tmp6424.coeffs[1])
    Iω_y.coeffs[1] = constant_term(tmp6421) + constant_term(tmp6424)
    Iω_y.coeffs[2:order + 1] .= zero(Iω_y.coeffs[1])
    tmp6426.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4])
    tmp6426.coeffs[2:order + 1] .= zero(tmp6426.coeffs[1])
    tmp6427.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5])
    tmp6427.coeffs[2:order + 1] .= zero(tmp6427.coeffs[1])
    tmp6428.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6])
    tmp6428.coeffs[2:order + 1] .= zero(tmp6428.coeffs[1])
    tmp6429.coeffs[1] = constant_term(tmp6427) + constant_term(tmp6428)
    tmp6429.coeffs[2:order + 1] .= zero(tmp6429.coeffs[1])
    Iω_z.coeffs[1] = constant_term(tmp6426) + constant_term(tmp6429)
    Iω_z.coeffs[2:order + 1] .= zero(Iω_z.coeffs[1])
    tmp6431.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_z)
    tmp6431.coeffs[2:order + 1] .= zero(tmp6431.coeffs[1])
    tmp6432.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_y)
    tmp6432.coeffs[2:order + 1] .= zero(tmp6432.coeffs[1])
    ωxIω_x.coeffs[1] = constant_term(tmp6431) - constant_term(tmp6432)
    ωxIω_x.coeffs[2:order + 1] .= zero(ωxIω_x.coeffs[1])
    tmp6434.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Iω_x)
    tmp6434.coeffs[2:order + 1] .= zero(tmp6434.coeffs[1])
    tmp6435.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_z)
    tmp6435.coeffs[2:order + 1] .= zero(tmp6435.coeffs[1])
    ωxIω_y.coeffs[1] = constant_term(tmp6434) - constant_term(tmp6435)
    ωxIω_y.coeffs[2:order + 1] .= zero(ωxIω_y.coeffs[1])
    tmp6437.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Iω_y)
    tmp6437.coeffs[2:order + 1] .= zero(tmp6437.coeffs[1])
    tmp6438.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Iω_x)
    tmp6438.coeffs[2:order + 1] .= zero(tmp6438.coeffs[1])
    ωxIω_z.coeffs[1] = constant_term(tmp6437) - constant_term(tmp6438)
    ωxIω_z.coeffs[2:order + 1] .= zero(ωxIω_z.coeffs[1])
    tmp6440.coeffs[1] = constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4])
    tmp6440.coeffs[2:order + 1] .= zero(tmp6440.coeffs[1])
    tmp6441.coeffs[1] = constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5])
    tmp6441.coeffs[2:order + 1] .= zero(tmp6441.coeffs[1])
    tmp6442.coeffs[1] = constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6])
    tmp6442.coeffs[2:order + 1] .= zero(tmp6442.coeffs[1])
    tmp6443.coeffs[1] = constant_term(tmp6441) + constant_term(tmp6442)
    tmp6443.coeffs[2:order + 1] .= zero(tmp6443.coeffs[1])
    dIω_x.coeffs[1] = constant_term(tmp6440) + constant_term(tmp6443)
    dIω_x.coeffs[2:order + 1] .= zero(dIω_x.coeffs[1])
    tmp6445.coeffs[1] = constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4])
    tmp6445.coeffs[2:order + 1] .= zero(tmp6445.coeffs[1])
    tmp6446.coeffs[1] = constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5])
    tmp6446.coeffs[2:order + 1] .= zero(tmp6446.coeffs[1])
    tmp6447.coeffs[1] = constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6])
    tmp6447.coeffs[2:order + 1] .= zero(tmp6447.coeffs[1])
    tmp6448.coeffs[1] = constant_term(tmp6446) + constant_term(tmp6447)
    tmp6448.coeffs[2:order + 1] .= zero(tmp6448.coeffs[1])
    dIω_y.coeffs[1] = constant_term(tmp6445) + constant_term(tmp6448)
    dIω_y.coeffs[2:order + 1] .= zero(dIω_y.coeffs[1])
    tmp6450.coeffs[1] = constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4])
    tmp6450.coeffs[2:order + 1] .= zero(tmp6450.coeffs[1])
    tmp6451.coeffs[1] = constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5])
    tmp6451.coeffs[2:order + 1] .= zero(tmp6451.coeffs[1])
    tmp6452.coeffs[1] = constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6])
    tmp6452.coeffs[2:order + 1] .= zero(tmp6452.coeffs[1])
    tmp6453.coeffs[1] = constant_term(tmp6451) + constant_term(tmp6452)
    tmp6453.coeffs[2:order + 1] .= zero(tmp6453.coeffs[1])
    dIω_z.coeffs[1] = constant_term(tmp6450) + constant_term(tmp6453)
    dIω_z.coeffs[2:order + 1] .= zero(dIω_z.coeffs[1])
    er_EM_I_1.coeffs[1] = constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_1.coeffs[2:order + 1] .= zero(er_EM_I_1.coeffs[1])
    er_EM_I_2.coeffs[1] = constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_2.coeffs[2:order + 1] .= zero(er_EM_I_2.coeffs[1])
    er_EM_I_3.coeffs[1] = constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo])
    er_EM_I_3.coeffs[2:order + 1] .= zero(er_EM_I_3.coeffs[1])
    p_E_I_1.coeffs[1] = identity(constant_term(RotM[3, 1, ea]))
    p_E_I_1.coeffs[2:order + 1] .= zero(p_E_I_1.coeffs[1])
    p_E_I_2.coeffs[1] = identity(constant_term(RotM[3, 2, ea]))
    p_E_I_2.coeffs[2:order + 1] .= zero(p_E_I_2.coeffs[1])
    p_E_I_3.coeffs[1] = identity(constant_term(RotM[3, 3, ea]))
    p_E_I_3.coeffs[2:order + 1] .= zero(p_E_I_3.coeffs[1])
    tmp6458.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1)
    tmp6458.coeffs[2:order + 1] .= zero(tmp6458.coeffs[1])
    tmp6459.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2)
    tmp6459.coeffs[2:order + 1] .= zero(tmp6459.coeffs[1])
    tmp6460.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3)
    tmp6460.coeffs[2:order + 1] .= zero(tmp6460.coeffs[1])
    tmp6461.coeffs[1] = constant_term(tmp6459) + constant_term(tmp6460)
    tmp6461.coeffs[2:order + 1] .= zero(tmp6461.coeffs[1])
    er_EM_1.coeffs[1] = constant_term(tmp6458) + constant_term(tmp6461)
    er_EM_1.coeffs[2:order + 1] .= zero(er_EM_1.coeffs[1])
    tmp6463.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1)
    tmp6463.coeffs[2:order + 1] .= zero(tmp6463.coeffs[1])
    tmp6464.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2)
    tmp6464.coeffs[2:order + 1] .= zero(tmp6464.coeffs[1])
    tmp6465.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3)
    tmp6465.coeffs[2:order + 1] .= zero(tmp6465.coeffs[1])
    tmp6466.coeffs[1] = constant_term(tmp6464) + constant_term(tmp6465)
    tmp6466.coeffs[2:order + 1] .= zero(tmp6466.coeffs[1])
    er_EM_2.coeffs[1] = constant_term(tmp6463) + constant_term(tmp6466)
    er_EM_2.coeffs[2:order + 1] .= zero(er_EM_2.coeffs[1])
    tmp6468.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1)
    tmp6468.coeffs[2:order + 1] .= zero(tmp6468.coeffs[1])
    tmp6469.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2)
    tmp6469.coeffs[2:order + 1] .= zero(tmp6469.coeffs[1])
    tmp6470.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3)
    tmp6470.coeffs[2:order + 1] .= zero(tmp6470.coeffs[1])
    tmp6471.coeffs[1] = constant_term(tmp6469) + constant_term(tmp6470)
    tmp6471.coeffs[2:order + 1] .= zero(tmp6471.coeffs[1])
    er_EM_3.coeffs[1] = constant_term(tmp6468) + constant_term(tmp6471)
    er_EM_3.coeffs[2:order + 1] .= zero(er_EM_3.coeffs[1])
    tmp6473.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1)
    tmp6473.coeffs[2:order + 1] .= zero(tmp6473.coeffs[1])
    tmp6474.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2)
    tmp6474.coeffs[2:order + 1] .= zero(tmp6474.coeffs[1])
    tmp6475.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3)
    tmp6475.coeffs[2:order + 1] .= zero(tmp6475.coeffs[1])
    tmp6476.coeffs[1] = constant_term(tmp6474) + constant_term(tmp6475)
    tmp6476.coeffs[2:order + 1] .= zero(tmp6476.coeffs[1])
    p_E_1.coeffs[1] = constant_term(tmp6473) + constant_term(tmp6476)
    p_E_1.coeffs[2:order + 1] .= zero(p_E_1.coeffs[1])
    tmp6478.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1)
    tmp6478.coeffs[2:order + 1] .= zero(tmp6478.coeffs[1])
    tmp6479.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2)
    tmp6479.coeffs[2:order + 1] .= zero(tmp6479.coeffs[1])
    tmp6480.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3)
    tmp6480.coeffs[2:order + 1] .= zero(tmp6480.coeffs[1])
    tmp6481.coeffs[1] = constant_term(tmp6479) + constant_term(tmp6480)
    tmp6481.coeffs[2:order + 1] .= zero(tmp6481.coeffs[1])
    p_E_2.coeffs[1] = constant_term(tmp6478) + constant_term(tmp6481)
    p_E_2.coeffs[2:order + 1] .= zero(p_E_2.coeffs[1])
    tmp6483.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1)
    tmp6483.coeffs[2:order + 1] .= zero(tmp6483.coeffs[1])
    tmp6484.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2)
    tmp6484.coeffs[2:order + 1] .= zero(tmp6484.coeffs[1])
    tmp6485.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3)
    tmp6485.coeffs[2:order + 1] .= zero(tmp6485.coeffs[1])
    tmp6486.coeffs[1] = constant_term(tmp6484) + constant_term(tmp6485)
    tmp6486.coeffs[2:order + 1] .= zero(tmp6486.coeffs[1])
    p_E_3.coeffs[1] = constant_term(tmp6483) + constant_term(tmp6486)
    p_E_3.coeffs[2:order + 1] .= zero(p_E_3.coeffs[1])
    tmp6488.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(er_EM_1)
    tmp6488.coeffs[2:order + 1] .= zero(tmp6488.coeffs[1])
    tmp6489.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(er_EM_2)
    tmp6489.coeffs[2:order + 1] .= zero(tmp6489.coeffs[1])
    tmp6490.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(er_EM_3)
    tmp6490.coeffs[2:order + 1] .= zero(tmp6490.coeffs[1])
    tmp6491.coeffs[1] = constant_term(tmp6489) + constant_term(tmp6490)
    tmp6491.coeffs[2:order + 1] .= zero(tmp6491.coeffs[1])
    I_er_EM_1.coeffs[1] = constant_term(tmp6488) + constant_term(tmp6491)
    I_er_EM_1.coeffs[2:order + 1] .= zero(I_er_EM_1.coeffs[1])
    tmp6493.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(er_EM_1)
    tmp6493.coeffs[2:order + 1] .= zero(tmp6493.coeffs[1])
    tmp6494.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(er_EM_2)
    tmp6494.coeffs[2:order + 1] .= zero(tmp6494.coeffs[1])
    tmp6495.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(er_EM_3)
    tmp6495.coeffs[2:order + 1] .= zero(tmp6495.coeffs[1])
    tmp6496.coeffs[1] = constant_term(tmp6494) + constant_term(tmp6495)
    tmp6496.coeffs[2:order + 1] .= zero(tmp6496.coeffs[1])
    I_er_EM_2.coeffs[1] = constant_term(tmp6493) + constant_term(tmp6496)
    I_er_EM_2.coeffs[2:order + 1] .= zero(I_er_EM_2.coeffs[1])
    tmp6498.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(er_EM_1)
    tmp6498.coeffs[2:order + 1] .= zero(tmp6498.coeffs[1])
    tmp6499.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(er_EM_2)
    tmp6499.coeffs[2:order + 1] .= zero(tmp6499.coeffs[1])
    tmp6500.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(er_EM_3)
    tmp6500.coeffs[2:order + 1] .= zero(tmp6500.coeffs[1])
    tmp6501.coeffs[1] = constant_term(tmp6499) + constant_term(tmp6500)
    tmp6501.coeffs[2:order + 1] .= zero(tmp6501.coeffs[1])
    I_er_EM_3.coeffs[1] = constant_term(tmp6498) + constant_term(tmp6501)
    I_er_EM_3.coeffs[2:order + 1] .= zero(I_er_EM_3.coeffs[1])
    tmp6503.coeffs[1] = constant_term(I_m_t[1, 1]) * constant_term(p_E_1)
    tmp6503.coeffs[2:order + 1] .= zero(tmp6503.coeffs[1])
    tmp6504.coeffs[1] = constant_term(I_m_t[1, 2]) * constant_term(p_E_2)
    tmp6504.coeffs[2:order + 1] .= zero(tmp6504.coeffs[1])
    tmp6505.coeffs[1] = constant_term(I_m_t[1, 3]) * constant_term(p_E_3)
    tmp6505.coeffs[2:order + 1] .= zero(tmp6505.coeffs[1])
    tmp6506.coeffs[1] = constant_term(tmp6504) + constant_term(tmp6505)
    tmp6506.coeffs[2:order + 1] .= zero(tmp6506.coeffs[1])
    I_p_E_1.coeffs[1] = constant_term(tmp6503) + constant_term(tmp6506)
    I_p_E_1.coeffs[2:order + 1] .= zero(I_p_E_1.coeffs[1])
    tmp6508.coeffs[1] = constant_term(I_m_t[2, 1]) * constant_term(p_E_1)
    tmp6508.coeffs[2:order + 1] .= zero(tmp6508.coeffs[1])
    tmp6509.coeffs[1] = constant_term(I_m_t[2, 2]) * constant_term(p_E_2)
    tmp6509.coeffs[2:order + 1] .= zero(tmp6509.coeffs[1])
    tmp6510.coeffs[1] = constant_term(I_m_t[2, 3]) * constant_term(p_E_3)
    tmp6510.coeffs[2:order + 1] .= zero(tmp6510.coeffs[1])
    tmp6511.coeffs[1] = constant_term(tmp6509) + constant_term(tmp6510)
    tmp6511.coeffs[2:order + 1] .= zero(tmp6511.coeffs[1])
    I_p_E_2.coeffs[1] = constant_term(tmp6508) + constant_term(tmp6511)
    I_p_E_2.coeffs[2:order + 1] .= zero(I_p_E_2.coeffs[1])
    tmp6513.coeffs[1] = constant_term(I_m_t[3, 1]) * constant_term(p_E_1)
    tmp6513.coeffs[2:order + 1] .= zero(tmp6513.coeffs[1])
    tmp6514.coeffs[1] = constant_term(I_m_t[3, 2]) * constant_term(p_E_2)
    tmp6514.coeffs[2:order + 1] .= zero(tmp6514.coeffs[1])
    tmp6515.coeffs[1] = constant_term(I_m_t[3, 3]) * constant_term(p_E_3)
    tmp6515.coeffs[2:order + 1] .= zero(tmp6515.coeffs[1])
    tmp6516.coeffs[1] = constant_term(tmp6514) + constant_term(tmp6515)
    tmp6516.coeffs[2:order + 1] .= zero(tmp6516.coeffs[1])
    I_p_E_3.coeffs[1] = constant_term(tmp6513) + constant_term(tmp6516)
    I_p_E_3.coeffs[2:order + 1] .= zero(I_p_E_3.coeffs[1])
    tmp6518.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_3)
    tmp6518.coeffs[2:order + 1] .= zero(tmp6518.coeffs[1])
    tmp6519.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_2)
    tmp6519.coeffs[2:order + 1] .= zero(tmp6519.coeffs[1])
    er_EM_cross_I_er_EM_1.coeffs[1] = constant_term(tmp6518) - constant_term(tmp6519)
    er_EM_cross_I_er_EM_1.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_1.coeffs[1])
    tmp6521.coeffs[1] = constant_term(er_EM_3) * constant_term(I_er_EM_1)
    tmp6521.coeffs[2:order + 1] .= zero(tmp6521.coeffs[1])
    tmp6522.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_3)
    tmp6522.coeffs[2:order + 1] .= zero(tmp6522.coeffs[1])
    er_EM_cross_I_er_EM_2.coeffs[1] = constant_term(tmp6521) - constant_term(tmp6522)
    er_EM_cross_I_er_EM_2.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_2.coeffs[1])
    tmp6524.coeffs[1] = constant_term(er_EM_1) * constant_term(I_er_EM_2)
    tmp6524.coeffs[2:order + 1] .= zero(tmp6524.coeffs[1])
    tmp6525.coeffs[1] = constant_term(er_EM_2) * constant_term(I_er_EM_1)
    tmp6525.coeffs[2:order + 1] .= zero(tmp6525.coeffs[1])
    er_EM_cross_I_er_EM_3.coeffs[1] = constant_term(tmp6524) - constant_term(tmp6525)
    er_EM_cross_I_er_EM_3.coeffs[2:order + 1] .= zero(er_EM_cross_I_er_EM_3.coeffs[1])
    tmp6527.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_3)
    tmp6527.coeffs[2:order + 1] .= zero(tmp6527.coeffs[1])
    tmp6528.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_2)
    tmp6528.coeffs[2:order + 1] .= zero(tmp6528.coeffs[1])
    er_EM_cross_I_p_E_1.coeffs[1] = constant_term(tmp6527) - constant_term(tmp6528)
    er_EM_cross_I_p_E_1.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_1.coeffs[1])
    tmp6530.coeffs[1] = constant_term(er_EM_3) * constant_term(I_p_E_1)
    tmp6530.coeffs[2:order + 1] .= zero(tmp6530.coeffs[1])
    tmp6531.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_3)
    tmp6531.coeffs[2:order + 1] .= zero(tmp6531.coeffs[1])
    er_EM_cross_I_p_E_2.coeffs[1] = constant_term(tmp6530) - constant_term(tmp6531)
    er_EM_cross_I_p_E_2.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_2.coeffs[1])
    tmp6533.coeffs[1] = constant_term(er_EM_1) * constant_term(I_p_E_2)
    tmp6533.coeffs[2:order + 1] .= zero(tmp6533.coeffs[1])
    tmp6534.coeffs[1] = constant_term(er_EM_2) * constant_term(I_p_E_1)
    tmp6534.coeffs[2:order + 1] .= zero(tmp6534.coeffs[1])
    er_EM_cross_I_p_E_3.coeffs[1] = constant_term(tmp6533) - constant_term(tmp6534)
    er_EM_cross_I_p_E_3.coeffs[2:order + 1] .= zero(er_EM_cross_I_p_E_3.coeffs[1])
    tmp6536.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_3)
    tmp6536.coeffs[2:order + 1] .= zero(tmp6536.coeffs[1])
    tmp6537.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_2)
    tmp6537.coeffs[2:order + 1] .= zero(tmp6537.coeffs[1])
    p_E_cross_I_er_EM_1.coeffs[1] = constant_term(tmp6536) - constant_term(tmp6537)
    p_E_cross_I_er_EM_1.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_1.coeffs[1])
    tmp6539.coeffs[1] = constant_term(p_E_3) * constant_term(I_er_EM_1)
    tmp6539.coeffs[2:order + 1] .= zero(tmp6539.coeffs[1])
    tmp6540.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_3)
    tmp6540.coeffs[2:order + 1] .= zero(tmp6540.coeffs[1])
    p_E_cross_I_er_EM_2.coeffs[1] = constant_term(tmp6539) - constant_term(tmp6540)
    p_E_cross_I_er_EM_2.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_2.coeffs[1])
    tmp6542.coeffs[1] = constant_term(p_E_1) * constant_term(I_er_EM_2)
    tmp6542.coeffs[2:order + 1] .= zero(tmp6542.coeffs[1])
    tmp6543.coeffs[1] = constant_term(p_E_2) * constant_term(I_er_EM_1)
    tmp6543.coeffs[2:order + 1] .= zero(tmp6543.coeffs[1])
    p_E_cross_I_er_EM_3.coeffs[1] = constant_term(tmp6542) - constant_term(tmp6543)
    p_E_cross_I_er_EM_3.coeffs[2:order + 1] .= zero(p_E_cross_I_er_EM_3.coeffs[1])
    tmp6545.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_3)
    tmp6545.coeffs[2:order + 1] .= zero(tmp6545.coeffs[1])
    tmp6546.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_2)
    tmp6546.coeffs[2:order + 1] .= zero(tmp6546.coeffs[1])
    p_E_cross_I_p_E_1.coeffs[1] = constant_term(tmp6545) - constant_term(tmp6546)
    p_E_cross_I_p_E_1.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_1.coeffs[1])
    tmp6548.coeffs[1] = constant_term(p_E_3) * constant_term(I_p_E_1)
    tmp6548.coeffs[2:order + 1] .= zero(tmp6548.coeffs[1])
    tmp6549.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_3)
    tmp6549.coeffs[2:order + 1] .= zero(tmp6549.coeffs[1])
    p_E_cross_I_p_E_2.coeffs[1] = constant_term(tmp6548) - constant_term(tmp6549)
    p_E_cross_I_p_E_2.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_2.coeffs[1])
    tmp6551.coeffs[1] = constant_term(p_E_1) * constant_term(I_p_E_2)
    tmp6551.coeffs[2:order + 1] .= zero(tmp6551.coeffs[1])
    tmp6552.coeffs[1] = constant_term(p_E_2) * constant_term(I_p_E_1)
    tmp6552.coeffs[2:order + 1] .= zero(tmp6552.coeffs[1])
    p_E_cross_I_p_E_3.coeffs[1] = constant_term(tmp6551) - constant_term(tmp6552)
    p_E_cross_I_p_E_3.coeffs[2:order + 1] .= zero(p_E_cross_I_p_E_3.coeffs[1])
    tmp6556.coeffs[1] = constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2))
    tmp6556.coeffs[2:order + 1] .= zero(tmp6556.coeffs[1])
    tmp6557.coeffs[1] = constant_term(7) * constant_term(tmp6556)
    tmp6557.coeffs[2:order + 1] .= zero(tmp6557.coeffs[1])
    one_minus_7sin2ϕEM.coeffs[1] = constant_term(one_t) - constant_term(tmp6557)
    one_minus_7sin2ϕEM.coeffs[2:order + 1] .= zero(one_minus_7sin2ϕEM.coeffs[1])
    two_sinϕEM.coeffs[1] = constant_term(2) * constant_term(sin_ϕ[ea, mo])
    two_sinϕEM.coeffs[2:order + 1] .= zero(two_sinϕEM.coeffs[1])
    tmp6562.coeffs[1] = constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5))
    tmp6562.coeffs[2:order + 1] .= zero(tmp6562.coeffs[1])
    N_MfigM_figE_factor_div_rEMp5.coeffs[1] = constant_term(N_MfigM_figE_factor) / constant_term(tmp6562)
    N_MfigM_figE_factor_div_rEMp5.coeffs[2:order + 1] .= zero(N_MfigM_figE_factor_div_rEMp5.coeffs[1])
    tmp6564.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1)
    tmp6564.coeffs[2:order + 1] .= zero(tmp6564.coeffs[1])
    tmp6565.coeffs[1] = constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1)
    tmp6565.coeffs[2:order + 1] .= zero(tmp6565.coeffs[1])
    tmp6566.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp6565)
    tmp6566.coeffs[2:order + 1] .= zero(tmp6566.coeffs[1])
    tmp6567.coeffs[1] = constant_term(tmp6564) + constant_term(tmp6566)
    tmp6567.coeffs[2:order + 1] .= zero(tmp6567.coeffs[1])
    tmp6569.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_1)
    tmp6569.coeffs[2:order + 1] .= zero(tmp6569.coeffs[1])
    tmp6570.coeffs[1] = constant_term(tmp6567) - constant_term(tmp6569)
    tmp6570.coeffs[2:order + 1] .= zero(tmp6570.coeffs[1])
    N_MfigM_figE_1.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp6570)
    N_MfigM_figE_1.coeffs[2:order + 1] .= zero(N_MfigM_figE_1.coeffs[1])
    tmp6572.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2)
    tmp6572.coeffs[2:order + 1] .= zero(tmp6572.coeffs[1])
    tmp6573.coeffs[1] = constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2)
    tmp6573.coeffs[2:order + 1] .= zero(tmp6573.coeffs[1])
    tmp6574.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp6573)
    tmp6574.coeffs[2:order + 1] .= zero(tmp6574.coeffs[1])
    tmp6575.coeffs[1] = constant_term(tmp6572) + constant_term(tmp6574)
    tmp6575.coeffs[2:order + 1] .= zero(tmp6575.coeffs[1])
    tmp6577.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_2)
    tmp6577.coeffs[2:order + 1] .= zero(tmp6577.coeffs[1])
    tmp6578.coeffs[1] = constant_term(tmp6575) - constant_term(tmp6577)
    tmp6578.coeffs[2:order + 1] .= zero(tmp6578.coeffs[1])
    N_MfigM_figE_2.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp6578)
    N_MfigM_figE_2.coeffs[2:order + 1] .= zero(N_MfigM_figE_2.coeffs[1])
    tmp6580.coeffs[1] = constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3)
    tmp6580.coeffs[2:order + 1] .= zero(tmp6580.coeffs[1])
    tmp6581.coeffs[1] = constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3)
    tmp6581.coeffs[2:order + 1] .= zero(tmp6581.coeffs[1])
    tmp6582.coeffs[1] = constant_term(two_sinϕEM) * constant_term(tmp6581)
    tmp6582.coeffs[2:order + 1] .= zero(tmp6582.coeffs[1])
    tmp6583.coeffs[1] = constant_term(tmp6580) + constant_term(tmp6582)
    tmp6583.coeffs[2:order + 1] .= zero(tmp6583.coeffs[1])
    tmp6585.coeffs[1] = constant_term(0.4) * constant_term(p_E_cross_I_p_E_3)
    tmp6585.coeffs[2:order + 1] .= zero(tmp6585.coeffs[1])
    tmp6586.coeffs[1] = constant_term(tmp6583) - constant_term(tmp6585)
    tmp6586.coeffs[2:order + 1] .= zero(tmp6586.coeffs[1])
    N_MfigM_figE_3.coeffs[1] = constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp6586)
    N_MfigM_figE_3.coeffs[2:order + 1] .= zero(N_MfigM_figE_3.coeffs[1])
    tmp6588.coeffs[1] = constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1])
    tmp6588.coeffs[2:order + 1] .= zero(tmp6588.coeffs[1])
    tmp6589.coeffs[1] = constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2])
    tmp6589.coeffs[2:order + 1] .= zero(tmp6589.coeffs[1])
    tmp6590.coeffs[1] = constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3])
    tmp6590.coeffs[2:order + 1] .= zero(tmp6590.coeffs[1])
    tmp6591.coeffs[1] = constant_term(tmp6589) + constant_term(tmp6590)
    tmp6591.coeffs[2:order + 1] .= zero(tmp6591.coeffs[1])
    N_1_LMF.coeffs[1] = constant_term(tmp6588) + constant_term(tmp6591)
    N_1_LMF.coeffs[2:order + 1] .= zero(N_1_LMF.coeffs[1])
    tmp6593.coeffs[1] = constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1])
    tmp6593.coeffs[2:order + 1] .= zero(tmp6593.coeffs[1])
    tmp6594.coeffs[1] = constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2])
    tmp6594.coeffs[2:order + 1] .= zero(tmp6594.coeffs[1])
    tmp6595.coeffs[1] = constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3])
    tmp6595.coeffs[2:order + 1] .= zero(tmp6595.coeffs[1])
    tmp6596.coeffs[1] = constant_term(tmp6594) + constant_term(tmp6595)
    tmp6596.coeffs[2:order + 1] .= zero(tmp6596.coeffs[1])
    N_2_LMF.coeffs[1] = constant_term(tmp6593) + constant_term(tmp6596)
    N_2_LMF.coeffs[2:order + 1] .= zero(N_2_LMF.coeffs[1])
    tmp6598.coeffs[1] = constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1])
    tmp6598.coeffs[2:order + 1] .= zero(tmp6598.coeffs[1])
    tmp6599.coeffs[1] = constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2])
    tmp6599.coeffs[2:order + 1] .= zero(tmp6599.coeffs[1])
    tmp6600.coeffs[1] = constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3])
    tmp6600.coeffs[2:order + 1] .= zero(tmp6600.coeffs[1])
    tmp6601.coeffs[1] = constant_term(tmp6599) + constant_term(tmp6600)
    tmp6601.coeffs[2:order + 1] .= zero(tmp6601.coeffs[1])
    N_3_LMF.coeffs[1] = constant_term(tmp6598) + constant_term(tmp6601)
    N_3_LMF.coeffs[2:order + 1] .= zero(N_3_LMF.coeffs[1])
    tmp6603.coeffs[1] = constant_term(q[6N + 10]) - constant_term(q[6N + 4])
    tmp6603.coeffs[2:order + 1] .= zero(tmp6603.coeffs[1])
    tmp6604.coeffs[1] = constant_term(k_ν) * constant_term(tmp6603)
    tmp6604.coeffs[2:order + 1] .= zero(tmp6604.coeffs[1])
    tmp6605.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    tmp6605.coeffs[2:order + 1] .= zero(tmp6605.coeffs[1])
    tmp6606.coeffs[1] = constant_term(tmp6605) * constant_term(q[6N + 11])
    tmp6606.coeffs[2:order + 1] .= zero(tmp6606.coeffs[1])
    N_cmb_1.coeffs[1] = constant_term(tmp6604) - constant_term(tmp6606)
    N_cmb_1.coeffs[2:order + 1] .= zero(N_cmb_1.coeffs[1])
    tmp6608.coeffs[1] = constant_term(q[6N + 11]) - constant_term(q[6N + 5])
    tmp6608.coeffs[2:order + 1] .= zero(tmp6608.coeffs[1])
    tmp6609.coeffs[1] = constant_term(k_ν) * constant_term(tmp6608)
    tmp6609.coeffs[2:order + 1] .= zero(tmp6609.coeffs[1])
    tmp6610.coeffs[1] = constant_term(C_c_m_A_c) * constant_term(q[6N + 12])
    tmp6610.coeffs[2:order + 1] .= zero(tmp6610.coeffs[1])
    tmp6611.coeffs[1] = constant_term(tmp6610) * constant_term(q[6N + 10])
    tmp6611.coeffs[2:order + 1] .= zero(tmp6611.coeffs[1])
    N_cmb_2.coeffs[1] = constant_term(tmp6609) + constant_term(tmp6611)
    N_cmb_2.coeffs[2:order + 1] .= zero(N_cmb_2.coeffs[1])
    tmp6613.coeffs[1] = constant_term(q[6N + 12]) - constant_term(q[6N + 6])
    tmp6613.coeffs[2:order + 1] .= zero(tmp6613.coeffs[1])
    N_cmb_3.coeffs[1] = constant_term(k_ν) * constant_term(tmp6613)
    N_cmb_3.coeffs[2:order + 1] .= zero(N_cmb_3.coeffs[1])
    tmp6615.coeffs[1] = constant_term(μ[mo]) * constant_term(N_1_LMF)
    tmp6615.coeffs[2:order + 1] .= zero(tmp6615.coeffs[1])
    tmp6616.coeffs[1] = constant_term(N_MfigM_figE_1) + constant_term(tmp6615)
    tmp6616.coeffs[2:order + 1] .= zero(tmp6616.coeffs[1])
    tmp6617.coeffs[1] = constant_term(tmp6616) + constant_term(N_cmb_1)
    tmp6617.coeffs[2:order + 1] .= zero(tmp6617.coeffs[1])
    tmp6618.coeffs[1] = constant_term(dIω_x) + constant_term(ωxIω_x)
    tmp6618.coeffs[2:order + 1] .= zero(tmp6618.coeffs[1])
    I_dω_1.coeffs[1] = constant_term(tmp6617) - constant_term(tmp6618)
    I_dω_1.coeffs[2:order + 1] .= zero(I_dω_1.coeffs[1])
    tmp6620.coeffs[1] = constant_term(μ[mo]) * constant_term(N_2_LMF)
    tmp6620.coeffs[2:order + 1] .= zero(tmp6620.coeffs[1])
    tmp6621.coeffs[1] = constant_term(N_MfigM_figE_2) + constant_term(tmp6620)
    tmp6621.coeffs[2:order + 1] .= zero(tmp6621.coeffs[1])
    tmp6622.coeffs[1] = constant_term(tmp6621) + constant_term(N_cmb_2)
    tmp6622.coeffs[2:order + 1] .= zero(tmp6622.coeffs[1])
    tmp6623.coeffs[1] = constant_term(dIω_y) + constant_term(ωxIω_y)
    tmp6623.coeffs[2:order + 1] .= zero(tmp6623.coeffs[1])
    I_dω_2.coeffs[1] = constant_term(tmp6622) - constant_term(tmp6623)
    I_dω_2.coeffs[2:order + 1] .= zero(I_dω_2.coeffs[1])
    tmp6625.coeffs[1] = constant_term(μ[mo]) * constant_term(N_3_LMF)
    tmp6625.coeffs[2:order + 1] .= zero(tmp6625.coeffs[1])
    tmp6626.coeffs[1] = constant_term(N_MfigM_figE_3) + constant_term(tmp6625)
    tmp6626.coeffs[2:order + 1] .= zero(tmp6626.coeffs[1])
    tmp6627.coeffs[1] = constant_term(tmp6626) + constant_term(N_cmb_3)
    tmp6627.coeffs[2:order + 1] .= zero(tmp6627.coeffs[1])
    tmp6628.coeffs[1] = constant_term(dIω_z) + constant_term(ωxIω_z)
    tmp6628.coeffs[2:order + 1] .= zero(tmp6628.coeffs[1])
    I_dω_3.coeffs[1] = constant_term(tmp6627) - constant_term(tmp6628)
    I_dω_3.coeffs[2:order + 1] .= zero(I_dω_3.coeffs[1])
    Ic_ωc_1.coeffs[1] = constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10])
    Ic_ωc_1.coeffs[2:order + 1] .= zero(Ic_ωc_1.coeffs[1])
    Ic_ωc_2.coeffs[1] = constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11])
    Ic_ωc_2.coeffs[2:order + 1] .= zero(Ic_ωc_2.coeffs[1])
    Ic_ωc_3.coeffs[1] = constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12])
    Ic_ωc_3.coeffs[2:order + 1] .= zero(Ic_ωc_3.coeffs[1])
    tmp6633.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_2)
    tmp6633.coeffs[2:order + 1] .= zero(tmp6633.coeffs[1])
    tmp6634.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_3)
    tmp6634.coeffs[2:order + 1] .= zero(tmp6634.coeffs[1])
    m_ωm_x_Icωc_1.coeffs[1] = constant_term(tmp6633) - constant_term(tmp6634)
    m_ωm_x_Icωc_1.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_1.coeffs[1])
    tmp6636.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_3)
    tmp6636.coeffs[2:order + 1] .= zero(tmp6636.coeffs[1])
    tmp6637.coeffs[1] = constant_term(q[6N + 6]) * constant_term(Ic_ωc_1)
    tmp6637.coeffs[2:order + 1] .= zero(tmp6637.coeffs[1])
    m_ωm_x_Icωc_2.coeffs[1] = constant_term(tmp6636) - constant_term(tmp6637)
    m_ωm_x_Icωc_2.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_2.coeffs[1])
    tmp6639.coeffs[1] = constant_term(q[6N + 5]) * constant_term(Ic_ωc_1)
    tmp6639.coeffs[2:order + 1] .= zero(tmp6639.coeffs[1])
    tmp6640.coeffs[1] = constant_term(q[6N + 4]) * constant_term(Ic_ωc_2)
    tmp6640.coeffs[2:order + 1] .= zero(tmp6640.coeffs[1])
    m_ωm_x_Icωc_3.coeffs[1] = constant_term(tmp6639) - constant_term(tmp6640)
    m_ωm_x_Icωc_3.coeffs[2:order + 1] .= zero(m_ωm_x_Icωc_3.coeffs[1])
    Ic_dωc_1.coeffs[1] = constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1)
    Ic_dωc_1.coeffs[2:order + 1] .= zero(Ic_dωc_1.coeffs[1])
    Ic_dωc_2.coeffs[1] = constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2)
    Ic_dωc_2.coeffs[2:order + 1] .= zero(Ic_dωc_2.coeffs[1])
    Ic_dωc_3.coeffs[1] = constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3)
    Ic_dωc_3.coeffs[2:order + 1] .= zero(Ic_dωc_3.coeffs[1])
    tmp6645.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp6645.coeffs[2:order + 1] .= zero(tmp6645.coeffs[1])
    tmp6776.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp6776.coeffs[2:order + 1] .= zero(tmp6776.coeffs[1])
    tmp6646.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp6645)
    tmp6646.coeffs[2:order + 1] .= zero(tmp6646.coeffs[1])
    tmp6647.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp6647.coeffs[2:order + 1] .= zero(tmp6647.coeffs[1])
    tmp6777.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp6777.coeffs[2:order + 1] .= zero(tmp6777.coeffs[1])
    tmp6648.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp6647)
    tmp6648.coeffs[2:order + 1] .= zero(tmp6648.coeffs[1])
    tmp6649.coeffs[1] = constant_term(tmp6646) + constant_term(tmp6648)
    tmp6649.coeffs[2:order + 1] .= zero(tmp6649.coeffs[1])
    tmp6650.coeffs[1] = sin(constant_term(q[6N + 2]))
    tmp6650.coeffs[2:order + 1] .= zero(tmp6650.coeffs[1])
    tmp6778.coeffs[1] = cos(constant_term(q[6N + 2]))
    tmp6778.coeffs[2:order + 1] .= zero(tmp6778.coeffs[1])
    (dq[6N + 1]).coeffs[1] = constant_term(tmp6649) / constant_term(tmp6650)
    (dq[6N + 1]).coeffs[2:order + 1] .= zero((dq[6N + 1]).coeffs[1])
    tmp6652.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp6652.coeffs[2:order + 1] .= zero(tmp6652.coeffs[1])
    tmp6779.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp6779.coeffs[2:order + 1] .= zero(tmp6779.coeffs[1])
    tmp6653.coeffs[1] = constant_term(q[6N + 4]) * constant_term(tmp6652)
    tmp6653.coeffs[2:order + 1] .= zero(tmp6653.coeffs[1])
    tmp6654.coeffs[1] = sin(constant_term(q[6N + 3]))
    tmp6654.coeffs[2:order + 1] .= zero(tmp6654.coeffs[1])
    tmp6780.coeffs[1] = cos(constant_term(q[6N + 3]))
    tmp6780.coeffs[2:order + 1] .= zero(tmp6780.coeffs[1])
    tmp6655.coeffs[1] = constant_term(q[6N + 5]) * constant_term(tmp6654)
    tmp6655.coeffs[2:order + 1] .= zero(tmp6655.coeffs[1])
    (dq[6N + 2]).coeffs[1] = constant_term(tmp6653) - constant_term(tmp6655)
    (dq[6N + 2]).coeffs[2:order + 1] .= zero((dq[6N + 2]).coeffs[1])
    tmp6657.coeffs[1] = cos(constant_term(q[6N + 2]))
    tmp6657.coeffs[2:order + 1] .= zero(tmp6657.coeffs[1])
    tmp6781.coeffs[1] = sin(constant_term(q[6N + 2]))
    tmp6781.coeffs[2:order + 1] .= zero(tmp6781.coeffs[1])
    tmp6658.coeffs[1] = constant_term(dq[6N + 1]) * constant_term(tmp6657)
    tmp6658.coeffs[2:order + 1] .= zero(tmp6658.coeffs[1])
    (dq[6N + 3]).coeffs[1] = constant_term(q[6N + 6]) - constant_term(tmp6658)
    (dq[6N + 3]).coeffs[2:order + 1] .= zero((dq[6N + 3]).coeffs[1])
    tmp6660.coeffs[1] = constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1)
    tmp6660.coeffs[2:order + 1] .= zero(tmp6660.coeffs[1])
    tmp6661.coeffs[1] = constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2)
    tmp6661.coeffs[2:order + 1] .= zero(tmp6661.coeffs[1])
    tmp6662.coeffs[1] = constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3)
    tmp6662.coeffs[2:order + 1] .= zero(tmp6662.coeffs[1])
    tmp6663.coeffs[1] = constant_term(tmp6661) + constant_term(tmp6662)
    tmp6663.coeffs[2:order + 1] .= zero(tmp6663.coeffs[1])
    (dq[6N + 4]).coeffs[1] = constant_term(tmp6660) + constant_term(tmp6663)
    (dq[6N + 4]).coeffs[2:order + 1] .= zero((dq[6N + 4]).coeffs[1])
    tmp6665.coeffs[1] = constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1)
    tmp6665.coeffs[2:order + 1] .= zero(tmp6665.coeffs[1])
    tmp6666.coeffs[1] = constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2)
    tmp6666.coeffs[2:order + 1] .= zero(tmp6666.coeffs[1])
    tmp6667.coeffs[1] = constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3)
    tmp6667.coeffs[2:order + 1] .= zero(tmp6667.coeffs[1])
    tmp6668.coeffs[1] = constant_term(tmp6666) + constant_term(tmp6667)
    tmp6668.coeffs[2:order + 1] .= zero(tmp6668.coeffs[1])
    (dq[6N + 5]).coeffs[1] = constant_term(tmp6665) + constant_term(tmp6668)
    (dq[6N + 5]).coeffs[2:order + 1] .= zero((dq[6N + 5]).coeffs[1])
    tmp6670.coeffs[1] = constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1)
    tmp6670.coeffs[2:order + 1] .= zero(tmp6670.coeffs[1])
    tmp6671.coeffs[1] = constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2)
    tmp6671.coeffs[2:order + 1] .= zero(tmp6671.coeffs[1])
    tmp6672.coeffs[1] = constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3)
    tmp6672.coeffs[2:order + 1] .= zero(tmp6672.coeffs[1])
    tmp6673.coeffs[1] = constant_term(tmp6671) + constant_term(tmp6672)
    tmp6673.coeffs[2:order + 1] .= zero(tmp6673.coeffs[1])
    (dq[6N + 6]).coeffs[1] = constant_term(tmp6670) + constant_term(tmp6673)
    (dq[6N + 6]).coeffs[2:order + 1] .= zero((dq[6N + 6]).coeffs[1])
    tmp6675.coeffs[1] = sin(constant_term(q[6N + 8]))
    tmp6675.coeffs[2:order + 1] .= zero(tmp6675.coeffs[1])
    tmp6782.coeffs[1] = cos(constant_term(q[6N + 8]))
    tmp6782.coeffs[2:order + 1] .= zero(tmp6782.coeffs[1])
    tmp6676.coeffs[1] = constant_term(ω_c_CE_2) / constant_term(tmp6675)
    tmp6676.coeffs[2:order + 1] .= zero(tmp6676.coeffs[1])
    (dq[6N + 9]).coeffs[1] = -(constant_term(tmp6676))
    (dq[6N + 9]).coeffs[2:order + 1] .= zero((dq[6N + 9]).coeffs[1])
    tmp6678.coeffs[1] = cos(constant_term(q[6N + 8]))
    tmp6678.coeffs[2:order + 1] .= zero(tmp6678.coeffs[1])
    tmp6783.coeffs[1] = sin(constant_term(q[6N + 8]))
    tmp6783.coeffs[2:order + 1] .= zero(tmp6783.coeffs[1])
    tmp6679.coeffs[1] = constant_term(dq[6N + 9]) * constant_term(tmp6678)
    tmp6679.coeffs[2:order + 1] .= zero(tmp6679.coeffs[1])
    (dq[6N + 7]).coeffs[1] = constant_term(ω_c_CE_3) - constant_term(tmp6679)
    (dq[6N + 7]).coeffs[2:order + 1] .= zero((dq[6N + 7]).coeffs[1])
    (dq[6N + 8]).coeffs[1] = identity(constant_term(ω_c_CE_1))
    (dq[6N + 8]).coeffs[2:order + 1] .= zero((dq[6N + 8]).coeffs[1])
    (dq[6N + 10]).coeffs[1] = constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1)
    (dq[6N + 10]).coeffs[2:order + 1] .= zero((dq[6N + 10]).coeffs[1])
    (dq[6N + 11]).coeffs[1] = constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2)
    (dq[6N + 11]).coeffs[2:order + 1] .= zero((dq[6N + 11]).coeffs[1])
    (dq[6N + 12]).coeffs[1] = constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3)
    (dq[6N + 12]).coeffs[2:order + 1] .= zero((dq[6N + 12]).coeffs[1])
    tmp6684.coeffs[1] = constant_term(newtonianCoeff[su, ea]) * constant_term(J2_t[su])
    tmp6684.coeffs[2:order + 1] .= zero(tmp6684.coeffs[1])
    tmp6687.coeffs[1] = constant_term(sin_ϕ[su, ea]) ^ float(constant_term(2))
    tmp6687.coeffs[2:order + 1] .= zero(tmp6687.coeffs[1])
    tmp6688.coeffs[1] = constant_term(3) * constant_term(tmp6687)
    tmp6688.coeffs[2:order + 1] .= zero(tmp6688.coeffs[1])
    tmp6689.coeffs[1] = constant_term(one_t) - constant_term(tmp6688)
    tmp6689.coeffs[2:order + 1] .= zero(tmp6689.coeffs[1])
    tmp6691.coeffs[1] = constant_term(tmp6689) / constant_term(2)
    tmp6691.coeffs[2:order + 1] .= zero(tmp6691.coeffs[1])
    w_LE.coeffs[1] = constant_term(tmp6684) * constant_term(tmp6691)
    w_LE.coeffs[2:order + 1] .= zero(w_LE.coeffs[1])
    tmp6694.coeffs[1] = constant_term(0.5) * constant_term(v2[ea])
    tmp6694.coeffs[2:order + 1] .= zero(tmp6694.coeffs[1])
    tmp6695.coeffs[1] = constant_term(tmp6694) + constant_term(newtonianNb_Potential[ea])
    tmp6695.coeffs[2:order + 1] .= zero(tmp6695.coeffs[1])
    α_TTmTDB.coeffs[1] = constant_term(tmp6695) + constant_term(w_LE)
    α_TTmTDB.coeffs[2:order + 1] .= zero(α_TTmTDB.coeffs[1])
    v4E.coeffs[1] = constant_term(v2[ea]) ^ float(constant_term(2))
    v4E.coeffs[2:order + 1] .= zero(v4E.coeffs[1])
    ϕ_Earth_Newtonian_sq.coeffs[1] = constant_term(newtonianNb_Potential[ea]) ^ float(constant_term(2))
    ϕ_Earth_Newtonian_sq.coeffs[2:order + 1] .= zero(ϕ_Earth_Newtonian_sq.coeffs[1])
    tmp6702.coeffs[1] = constant_term(ϕ_Earth_Newtonian_sq) / constant_term(2)
    tmp6702.coeffs[2:order + 1] .= zero(tmp6702.coeffs[1])
    tmp6704.coeffs[1] = constant_term(v4E) / constant_term(8)
    tmp6704.coeffs[2:order + 1] .= zero(tmp6704.coeffs[1])
    β_TTmTDB.coeffs[1] = constant_term(tmp6702) - constant_term(tmp6704)
    β_TTmTDB.coeffs[2:order + 1] .= zero(β_TTmTDB.coeffs[1])
    #= In[33]:1161 =# Threads.@threads for i = 1:N
            if i == ea
                continue
            else
                (β_TTmTDB_i_1[i, ea]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i, ea])
                (β_TTmTDB_i_1[i, ea]).coeffs[2:order + 1] .= zero((β_TTmTDB_i_1[i, ea]).coeffs[1])
                (tmp6709[ea]).coeffs[1] = constant_term(1.5) * constant_term(v2[ea])
                (tmp6709[ea]).coeffs[2:order + 1] .= zero((tmp6709[ea]).coeffs[1])
                (tmp6711[i]).coeffs[1] = constant_term(2) * constant_term(v2[i])
                (tmp6711[i]).coeffs[2:order + 1] .= zero((tmp6711[i]).coeffs[1])
                (tmp6712[ea]).coeffs[1] = constant_term(tmp6709[ea]) + constant_term(tmp6711[i])
                (tmp6712[ea]).coeffs[2:order + 1] .= zero((tmp6712[ea]).coeffs[1])
                (β_TTmTDB_i_2[i]).coeffs[1] = constant_term(newtonianNb_Potential[i]) - constant_term(tmp6712[ea])
                (β_TTmTDB_i_2[i]).coeffs[2:order + 1] .= zero((β_TTmTDB_i_2[i]).coeffs[1])
                (tmp6714[i, ea]).coeffs[1] = constant_term(dq[3 * (N + i) - 2]) * constant_term(X[i, ea])
                (tmp6714[i, ea]).coeffs[2:order + 1] .= zero((tmp6714[i, ea]).coeffs[1])
                (tmp6715[i, ea]).coeffs[1] = constant_term(dq[3 * (N + i) - 1]) * constant_term(Y[i, ea])
                (tmp6715[i, ea]).coeffs[2:order + 1] .= zero((tmp6715[i, ea]).coeffs[1])
                (tmp6716[i, ea]).coeffs[1] = constant_term(tmp6714[i, ea]) + constant_term(tmp6715[i, ea])
                (tmp6716[i, ea]).coeffs[2:order + 1] .= zero((tmp6716[i, ea]).coeffs[1])
                (tmp6717[i, ea]).coeffs[1] = constant_term(dq[3 * (N + i)]) * constant_term(Z[i, ea])
                (tmp6717[i, ea]).coeffs[2:order + 1] .= zero((tmp6717[i, ea]).coeffs[1])
                (tmp6718[i, ea]).coeffs[1] = constant_term(tmp6716[i, ea]) + constant_term(tmp6717[i, ea])
                (tmp6718[i, ea]).coeffs[2:order + 1] .= zero((tmp6718[i, ea]).coeffs[1])
                (β_TTmTDB_i_3[i, ea]).coeffs[1] = constant_term(tmp6718[i, ea]) / constant_term(2)
                (β_TTmTDB_i_3[i, ea]).coeffs[2:order + 1] .= zero((β_TTmTDB_i_3[i, ea]).coeffs[1])
                (β_TTmTDB_i_4[i, ea]).coeffs[1] = constant_term(rij_dot_vi_div_rij_sq[i, ea]) / constant_term(2)
                (β_TTmTDB_i_4[i, ea]).coeffs[2:order + 1] .= zero((β_TTmTDB_i_4[i, ea]).coeffs[1])
                (tmp6723[i, ea]).coeffs[1] = constant_term(β_TTmTDB_i_1[i, ea]) + constant_term(β_TTmTDB_i_2[i])
                (tmp6723[i, ea]).coeffs[2:order + 1] .= zero((tmp6723[i, ea]).coeffs[1])
                (tmp6724[i, ea]).coeffs[1] = constant_term(β_TTmTDB_i_3[i, ea]) + constant_term(β_TTmTDB_i_4[i, ea])
                (tmp6724[i, ea]).coeffs[2:order + 1] .= zero((tmp6724[i, ea]).coeffs[1])
                (β_TTmTDB_i[i, ea]).coeffs[1] = constant_term(tmp6723[i, ea]) + constant_term(tmp6724[i, ea])
                (β_TTmTDB_i[i, ea]).coeffs[2:order + 1] .= zero((β_TTmTDB_i[i, ea]).coeffs[1])
                (tmp6726[i, ea]).coeffs[1] = constant_term(newtonian1b_Potential[i, ea]) * constant_term(β_TTmTDB_i[i, ea])
                (tmp6726[i, ea]).coeffs[2:order + 1] .= zero((tmp6726[i, ea]).coeffs[1])
                (temp_β_TTmTDB[i, ea]).coeffs[1] = constant_term(β_TTmTDB) + constant_term(tmp6726[i, ea])
                (temp_β_TTmTDB[i, ea]).coeffs[2:order + 1] .= zero((temp_β_TTmTDB[i, ea]).coeffs[1])
                β_TTmTDB.coeffs[1] = identity(constant_term(temp_β_TTmTDB[i, ea]))
                β_TTmTDB.coeffs[2:order + 1] .= zero(β_TTmTDB.coeffs[1])
            end
        end
    tmp6728.coeffs[1] = constant_term(c_m2) * constant_term(α_TTmTDB)
    tmp6728.coeffs[2:order + 1] .= zero(tmp6728.coeffs[1])
    tmp6729.coeffs[1] = constant_term(L_B) - constant_term(tmp6728)
    tmp6729.coeffs[2:order + 1] .= zero(tmp6729.coeffs[1])
    tmp6730.coeffs[1] = constant_term(tmp6729) * constant_term(one_plus_L_B_minus_L_G)
    tmp6730.coeffs[2:order + 1] .= zero(tmp6730.coeffs[1])
    tmp6731.coeffs[1] = constant_term(c_m4) * constant_term(β_TTmTDB)
    tmp6731.coeffs[2:order + 1] .= zero(tmp6731.coeffs[1])
    tmp6732.coeffs[1] = constant_term(tmp6731) - constant_term(L_G)
    tmp6732.coeffs[2:order + 1] .= zero(tmp6732.coeffs[1])
    tmp6733.coeffs[1] = constant_term(tmp6730) + constant_term(tmp6732)
    tmp6733.coeffs[2:order + 1] .= zero(tmp6733.coeffs[1])
    (dq[6N + 13]).coeffs[1] = constant_term(daysec) * constant_term(tmp6733)
    (dq[6N + 13]).coeffs[2:order + 1] .= zero((dq[6N + 13]).coeffs[1])
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp6735, tmp5665, ϕ_m, ord)
        TaylorSeries.sincos!(tmp6736, tmp5666, ψ_m, ord)
        TaylorSeries.mul!(tmp5667, tmp5665, tmp5666, ord)
        TaylorSeries.sincos!(tmp6737, tmp5668, θ_m, ord)
        TaylorSeries.sincos!(tmp5669, tmp6738, ϕ_m, ord)
        TaylorSeries.mul!(tmp5670, tmp5668, tmp5669, ord)
        TaylorSeries.sincos!(tmp5671, tmp6739, ψ_m, ord)
        TaylorSeries.mul!(tmp5672, tmp5670, tmp5671, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp5667, tmp5672, ord)
        TaylorSeries.sincos!(tmp6740, tmp5674, θ_m, ord)
        TaylorSeries.subst!(tmp5675, tmp5674, ord)
        TaylorSeries.sincos!(tmp6741, tmp5676, ψ_m, ord)
        TaylorSeries.mul!(tmp5677, tmp5675, tmp5676, ord)
        TaylorSeries.sincos!(tmp5678, tmp6742, ϕ_m, ord)
        TaylorSeries.mul!(tmp5679, tmp5677, tmp5678, ord)
        TaylorSeries.sincos!(tmp6743, tmp5680, ϕ_m, ord)
        TaylorSeries.sincos!(tmp5681, tmp6744, ψ_m, ord)
        TaylorSeries.mul!(tmp5682, tmp5680, tmp5681, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp5679, tmp5682, ord)
        TaylorSeries.sincos!(tmp5684, tmp6745, θ_m, ord)
        TaylorSeries.sincos!(tmp5685, tmp6746, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp5684, tmp5685, ord)
        TaylorSeries.sincos!(tmp6747, tmp5687, ψ_m, ord)
        TaylorSeries.sincos!(tmp5688, tmp6748, ϕ_m, ord)
        TaylorSeries.mul!(tmp5689, tmp5687, tmp5688, ord)
        TaylorSeries.sincos!(tmp6749, tmp5690, θ_m, ord)
        TaylorSeries.sincos!(tmp6750, tmp5691, ϕ_m, ord)
        TaylorSeries.mul!(tmp5692, tmp5690, tmp5691, ord)
        TaylorSeries.sincos!(tmp5693, tmp6751, ψ_m, ord)
        TaylorSeries.mul!(tmp5694, tmp5692, tmp5693, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp5689, tmp5694, ord)
        TaylorSeries.sincos!(tmp6752, tmp5696, θ_m, ord)
        TaylorSeries.sincos!(tmp6753, tmp5697, ϕ_m, ord)
        TaylorSeries.mul!(tmp5698, tmp5696, tmp5697, ord)
        TaylorSeries.sincos!(tmp6754, tmp5699, ψ_m, ord)
        TaylorSeries.mul!(tmp5700, tmp5698, tmp5699, ord)
        TaylorSeries.sincos!(tmp5701, tmp6755, ϕ_m, ord)
        TaylorSeries.sincos!(tmp5702, tmp6756, ψ_m, ord)
        TaylorSeries.mul!(tmp5703, tmp5701, tmp5702, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp5700, tmp5703, ord)
        TaylorSeries.sincos!(tmp6757, tmp5705, ϕ_m, ord)
        TaylorSeries.subst!(tmp5706, tmp5705, ord)
        TaylorSeries.sincos!(tmp5707, tmp6758, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp5706, tmp5707, ord)
        TaylorSeries.sincos!(tmp5709, tmp6759, θ_m, ord)
        TaylorSeries.sincos!(tmp5710, tmp6760, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp5709, tmp5710, ord)
        TaylorSeries.sincos!(tmp6761, tmp5712, ψ_m, ord)
        TaylorSeries.sincos!(tmp5713, tmp6762, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp5712, tmp5713, ord)
        TaylorSeries.sincos!(tmp6763, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp6764, tmp5716, ϕ_c, ord)
        TaylorSeries.mul!(tmp5717, RotM[1, 1, mo], tmp5716, ord)
        TaylorSeries.sincos!(tmp5718, tmp6765, ϕ_c, ord)
        TaylorSeries.mul!(tmp5719, RotM[1, 2, mo], tmp5718, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp5717, tmp5719, ord)
        TaylorSeries.subst!(tmp5721, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp5722, tmp6766, ϕ_c, ord)
        TaylorSeries.mul!(tmp5723, tmp5721, tmp5722, ord)
        TaylorSeries.sincos!(tmp6767, tmp5724, ϕ_c, ord)
        TaylorSeries.mul!(tmp5725, RotM[1, 2, mo], tmp5724, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp5723, tmp5725, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp6768, tmp5727, ϕ_c, ord)
        TaylorSeries.mul!(tmp5728, RotM[2, 1, mo], tmp5727, ord)
        TaylorSeries.sincos!(tmp5729, tmp6769, ϕ_c, ord)
        TaylorSeries.mul!(tmp5730, RotM[2, 2, mo], tmp5729, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp5728, tmp5730, ord)
        TaylorSeries.subst!(tmp5732, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp5733, tmp6770, ϕ_c, ord)
        TaylorSeries.mul!(tmp5734, tmp5732, tmp5733, ord)
        TaylorSeries.sincos!(tmp6771, tmp5735, ϕ_c, ord)
        TaylorSeries.mul!(tmp5736, RotM[2, 2, mo], tmp5735, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp5734, tmp5736, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp6772, tmp5738, ϕ_c, ord)
        TaylorSeries.mul!(tmp5739, RotM[3, 1, mo], tmp5738, ord)
        TaylorSeries.sincos!(tmp5740, tmp6773, ϕ_c, ord)
        TaylorSeries.mul!(tmp5741, RotM[3, 2, mo], tmp5740, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp5739, tmp5741, ord)
        TaylorSeries.subst!(tmp5743, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp5744, tmp6774, ϕ_c, ord)
        TaylorSeries.mul!(tmp5745, tmp5743, tmp5744, ord)
        TaylorSeries.sincos!(tmp6775, tmp5746, ϕ_c, ord)
        TaylorSeries.mul!(tmp5747, RotM[3, 2, mo], tmp5746, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp5745, tmp5747, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp5749, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp5750, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp5751, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp5752, tmp5750, tmp5751, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp5749, tmp5752, ord)
        TaylorSeries.mul!(tmp5754, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp5755, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp5756, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp5757, tmp5755, tmp5756, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp5754, tmp5757, ord)
        TaylorSeries.mul!(tmp5759, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp5760, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp5761, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp5762, tmp5760, tmp5761, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp5759, tmp5762, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        for j = 1:N
            TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
            TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
            TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
            TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
        end
        for j = 1:N_ext
            TaylorSeries.identity!(accX[j], zero_q_1, ord)
            TaylorSeries.identity!(accY[j], zero_q_1, ord)
            TaylorSeries.identity!(accZ[j], zero_q_1, ord)
        end
        #= In[33]:380 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                        TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                        TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                        TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.mul!(tmp5771[3j - 2], 4, dq[3j - 2], ord)
                        TaylorSeries.mul!(tmp5773[3i - 2], 3, dq[3i - 2], ord)
                        TaylorSeries.subst!(_4U_m_3X[i, j], tmp5771[3j - 2], tmp5773[3i - 2], ord)
                        TaylorSeries.mul!(tmp5776[3j - 1], 4, dq[3j - 1], ord)
                        TaylorSeries.mul!(tmp5778[3i - 1], 3, dq[3i - 1], ord)
                        TaylorSeries.subst!(_4V_m_3Y[i, j], tmp5776[3j - 1], tmp5778[3i - 1], ord)
                        TaylorSeries.mul!(tmp5781[3j], 4, dq[3j], ord)
                        TaylorSeries.mul!(tmp5783[3i], 3, dq[3i], ord)
                        TaylorSeries.subst!(_4W_m_3Z[i, j], tmp5781[3j], tmp5783[3i], ord)
                        TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                        TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                        TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                        TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.add!(tmp5791[i, j], UU[i, j], VV[i, j], ord)
                        TaylorSeries.add!(vi_dot_vj[i, j], tmp5791[i, j], WW[i, j], ord)
                        TaylorSeries.pow!(tmp5794[i, j], X[i, j], 2, ord)
                        TaylorSeries.pow!(tmp5796[i, j], Y[i, j], 2, ord)
                        TaylorSeries.add!(tmp5797[i, j], tmp5794[i, j], tmp5796[i, j], ord)
                        TaylorSeries.pow!(tmp5799[i, j], Z[i, j], 2, ord)
                        TaylorSeries.add!(r_p2[i, j], tmp5797[i, j], tmp5799[i, j], ord)
                        TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                        TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], 1.5, ord)
                        TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], 3.5, ord)
                        TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                        TaylorSeries.add!(tmp5807[i, j], pn2x[i, j], pn2y[i, j], ord)
                        TaylorSeries.add!(tmp5808[i, j], tmp5807[i, j], pn2z[i, j], ord)
                        TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp5808[i, j], ord)
                        TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                        TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                        TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                        TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                        TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                        TaylorSeries.mul!(tmp5819[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp5819[i, j], ord)
                        TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                        TaylorSeries.mul!(tmp5821[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp5821[i, j], ord)
                        TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                        TaylorSeries.mul!(tmp5823[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp5823[i, j], ord)
                        TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                        TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                        TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                    end
                end
                TaylorSeries.pow!(tmp5827[3j - 2], dq[3j - 2], 2, ord)
                TaylorSeries.pow!(tmp5829[3j - 1], dq[3j - 1], 2, ord)
                TaylorSeries.add!(tmp5830[3j - 2], tmp5827[3j - 2], tmp5829[3j - 1], ord)
                TaylorSeries.pow!(tmp5832[3j], dq[3j], 2, ord)
                TaylorSeries.add!(v2[j], tmp5830[3j - 2], tmp5832[3j], ord)
            end
        TaylorSeries.add!(tmp5834, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp5836, tmp5834, 2, ord)
        TaylorSeries.subst!(tmp5837, I_M_t[3, 3], tmp5836, ord)
        TaylorSeries.div!(J2M_t, tmp5837, μ[mo], ord)
        TaylorSeries.subst!(tmp5839, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp5840, tmp5839, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp5840, 4, ord)
        TaylorSeries.subst!(tmp5843, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp5843, μ[mo], ord)
        TaylorSeries.subst!(tmp5845, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp5845, μ[mo], ord)
        TaylorSeries.subst!(tmp5847, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp5848, tmp5847, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp5848, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        #= In[33]:474 =# Threads.@threads for j = 1:N_ext
                for i = 1:N_ext
                    if i == j
                        continue
                    else
                        if UJ_interaction[i, j]
                            TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                            TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                            TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                            TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                            TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                            TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                            TaylorSeries.add!(tmp5860[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                            TaylorSeries.add!(X_bf[i, j], tmp5860[i, j], X_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp5862[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                            TaylorSeries.add!(Y_bf[i, j], tmp5862[i, j], Y_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp5864[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                            TaylorSeries.add!(Z_bf[i, j], tmp5864[i, j], Z_bf_3[i, j], ord)
                            TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.pow!(tmp5868[i, j], X_bf[i, j], 2, ord)
                            TaylorSeries.pow!(tmp5870[i, j], Y_bf[i, j], 2, ord)
                            TaylorSeries.add!(tmp5871[i, j], tmp5868[i, j], tmp5870[i, j], ord)
                            TaylorSeries.sqrt!(r_xy[i, j], tmp5871[i, j], ord)
                            TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                            TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                            TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                            for n = 2:n1SEM[j]
                                TaylorSeries.mul!(tmp5876[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp5877[i, j, n], tmp5876[i, j, n], fact1_jsem[n], ord)
                                TaylorSeries.mul!(tmp5878[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                                TaylorSeries.subst!(P_n[i, j, n + 1], tmp5877[i, j, n], tmp5878[i, j, n - 1], ord)
                                TaylorSeries.mul!(tmp5880[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp5881[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                                TaylorSeries.add!(dP_n[i, j, n + 1], tmp5880[i, j, n], tmp5881[i, j, n], ord)
                                TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], fact5_jsem[n], ord)
                            end
                            TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], 2, ord)
                            TaylorSeries.mul!(tmp5886[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                            TaylorSeries.mul!(tmp5887[i, j, 3], tmp5886[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ξ[i, j], tmp5887[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.subst!(tmp5889[i, j, 3], dP_n[i, j, 3], ord)
                            TaylorSeries.mul!(tmp5890[i, j, 3], tmp5889[i, j, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp5891[i, j, 3], tmp5890[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ζ[i, j], tmp5891[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n1SEM[j]
                                TaylorSeries.mul!(tmp5893[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                                TaylorSeries.mul!(tmp5894[i, j, n + 1], tmp5893[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp5895[i, j, n + 1], tmp5894[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjξ[i, j, n], tmp5895[i, j, n + 1], F_J_ξ_36[i, j], ord)
                                TaylorSeries.subst!(tmp5897[i, j, n + 1], dP_n[i, j, n + 1], ord)
                                TaylorSeries.mul!(tmp5898[i, j, n + 1], tmp5897[i, j, n + 1], cos_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp5899[i, j, n + 1], tmp5898[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp5900[i, j, n + 1], tmp5899[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjζ[i, j, n], tmp5900[i, j, n + 1], F_J_ζ_36[i, j], ord)
                                TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                                TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                            end
                            if j == mo
                                for m = 1:n1SEM[mo]
                                    if m == 1
                                        TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                        TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                        TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                        TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                    else
                                        TaylorSeries.mul!(tmp5903[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp5904[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.add!(sin_mλ[i, j, m], tmp5903[i, j, m - 1], tmp5904[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp5906[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp5907[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.subst!(cos_mλ[i, j, m], tmp5906[i, j, m - 1], tmp5907[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp5909[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp5909[i, j, m - 1, m - 1], lnm5[m], ord)
                                        TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp5912[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp5912[i, j, m, m], lnm3[m], ord)
                                    end
                                    for n = m + 1:n1SEM[mo]
                                        if n == m + 1
                                            TaylorSeries.mul!(tmp5914[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp5914[i, j, n - 1, m], lnm1[n, m], ord)
                                        else
                                            TaylorSeries.mul!(tmp5916[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(tmp5917[i, j, n - 1, m], tmp5916[i, j, n - 1, m], lnm1[n, m], ord)
                                            TaylorSeries.mul!(tmp5918[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                            TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp5917[i, j, n - 1, m], tmp5918[i, j, n - 2, m], ord)
                                        end
                                        TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp5921[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp5922[i, j, n, m], tmp5921[i, j, n, m], lnm3[n], ord)
                                        TaylorSeries.mul!(tmp5923[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                        TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp5922[i, j, n, m], tmp5923[i, j, n - 1, m], ord)
                                    end
                                end
                                TaylorSeries.mul!(tmp5925[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                                TaylorSeries.mul!(tmp5926[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5927[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp5928[i, j, 1], tmp5926[i, j, 1], tmp5927[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5929[i, j, 2, 1], tmp5925[i, j, 2, 1], tmp5928[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5930[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                                TaylorSeries.mul!(tmp5931[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp5932[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp5933[i, j, 2], tmp5931[i, j, 2], tmp5932[i, j, 2], ord)
                                TaylorSeries.mul!(tmp5934[i, j, 2, 2], tmp5930[i, j, 2, 2], tmp5933[i, j, 2], ord)
                                TaylorSeries.add!(tmp5935[i, j, 2, 1], tmp5929[i, j, 2, 1], tmp5934[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ξ[i, j], tmp5935[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp5937[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                                TaylorSeries.mul!(tmp5938[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5939[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.subst!(tmp5940[i, j, 1], tmp5938[i, j, 1], tmp5939[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5941[i, j, 2, 1], tmp5937[i, j, 2, 1], tmp5940[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5942[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                                TaylorSeries.mul!(tmp5943[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp5944[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.subst!(tmp5945[i, j, 2], tmp5943[i, j, 2], tmp5944[i, j, 2], ord)
                                TaylorSeries.mul!(tmp5946[i, j, 2, 2], tmp5942[i, j, 2, 2], tmp5945[i, j, 2], ord)
                                TaylorSeries.add!(tmp5947[i, j, 2, 1], tmp5941[i, j, 2, 1], tmp5946[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_η[i, j], tmp5947[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp5949[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5950[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp5951[i, j, 1], tmp5949[i, j, 1], tmp5950[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5952[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp5951[i, j, 1], ord)
                                TaylorSeries.mul!(tmp5953[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp5954[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp5955[i, j, 2], tmp5953[i, j, 2], tmp5954[i, j, 2], ord)
                                TaylorSeries.mul!(tmp5956[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp5955[i, j, 2], ord)
                                TaylorSeries.add!(tmp5957[i, j, 2, 1], tmp5952[i, j, 2, 1], tmp5956[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ζ[i, j], tmp5957[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                                for n = 3:n2M
                                    for m = 1:n
                                        TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(tmp5963[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                        TaylorSeries.add!(tmp5964[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp5965[i, j, n, m], tmp5963[i, j, n, m], tmp5964[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp5966[i, j, n, m], tmp5965[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp5966[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                        TaylorSeries.mul!(tmp5968[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                        TaylorSeries.subst!(tmp5969[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp5970[i, j, n, m], tmp5968[i, j, n, m], tmp5969[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp5971[i, j, n, m], tmp5970[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp5971[i, j, n, m], F_CS_η_36[i, j], ord)
                                        TaylorSeries.add!(tmp5973[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp5974[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp5973[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp5975[i, j, n, m], tmp5974[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp5975[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                        TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                    end
                                end
                                TaylorSeries.add!(tmp5977[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.add!(tmp5978[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ξ[i, j], tmp5977[i, j], tmp5978[i, j], ord)
                                TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                                TaylorSeries.add!(tmp5981[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                                TaylorSeries.add!(tmp5982[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], tmp5981[i, j], tmp5982[i, j], ord)
                            else
                                TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            end
                            TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                            TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                            TaylorSeries.subst!(tmp5988[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp5988[i, j], cos_λ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                            TaylorSeries.subst!(tmp5991[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp5991[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                            TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp5993[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp5994[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp5995[i, j, 1, 1], tmp5993[i, j, 1, 1], tmp5994[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp5996[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp5995[i, j, 1, 1], tmp5996[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp5998[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp5999[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp6000[i, j, 2, 1], tmp5998[i, j, 2, 1], tmp5999[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp6001[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp6000[i, j, 2, 1], tmp6001[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp6003[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp6004[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp6005[i, j, 3, 1], tmp6003[i, j, 3, 1], tmp6004[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp6006[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp6005[i, j, 3, 1], tmp6006[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp6008[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp6009[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp6010[i, j, 1, 1], tmp6008[i, j, 1, 1], tmp6009[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp6011[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp6010[i, j, 1, 1], tmp6011[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp6013[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp6014[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp6015[i, j, 2, 1], tmp6013[i, j, 2, 1], tmp6014[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp6016[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp6015[i, j, 2, 1], tmp6016[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp6018[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp6019[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp6020[i, j, 3, 1], tmp6018[i, j, 3, 1], tmp6019[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp6021[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp6020[i, j, 3, 1], tmp6021[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp6023[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp6024[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp6025[i, j, 1, 1], tmp6023[i, j, 1, 1], tmp6024[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp6026[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp6025[i, j, 1, 1], tmp6026[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp6028[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp6029[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp6030[i, j, 2, 1], tmp6028[i, j, 2, 1], tmp6029[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp6031[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp6030[i, j, 2, 1], tmp6031[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp6033[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp6034[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp6035[i, j, 3, 1], tmp6033[i, j, 3, 1], tmp6034[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp6036[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp6035[i, j, 3, 1], tmp6036[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp6038[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                            TaylorSeries.mul!(tmp6039[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                            TaylorSeries.add!(tmp6040[i, j, 1, 1], tmp6038[i, j, 1, 1], tmp6039[i, j, 2, 1], ord)
                            TaylorSeries.mul!(tmp6041[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                            TaylorSeries.add!(F_JCS_x[i, j], tmp6040[i, j, 1, 1], tmp6041[i, j, 3, 1], ord)
                            TaylorSeries.mul!(tmp6043[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp6044[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                            TaylorSeries.add!(tmp6045[i, j, 1, 2], tmp6043[i, j, 1, 2], tmp6044[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp6046[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                            TaylorSeries.add!(F_JCS_y[i, j], tmp6045[i, j, 1, 2], tmp6046[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp6048[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp6049[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                            TaylorSeries.add!(tmp6050[i, j, 1, 3], tmp6048[i, j, 1, 3], tmp6049[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp6051[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                            TaylorSeries.add!(F_JCS_z[i, j], tmp6050[i, j, 1, 3], tmp6051[i, j, 3, 3], ord)
                        end
                    end
                end
            end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp6053[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp6053[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp6055[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp6055[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp6057[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp6057[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp6059[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp6059[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp6061[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp6061[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp6063[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp6063[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp6065[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp6066[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp6067[i, j], tmp6065[i, j], tmp6066[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp6067[i, j], ord)
                            TaylorSeries.mul!(tmp6069[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp6070[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp6071[i, j], tmp6069[i, j], tmp6070[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp6071[i, j], ord)
                            TaylorSeries.mul!(tmp6073[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp6074[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp6075[i, j], tmp6073[i, j], tmp6074[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp6075[i, j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], N_MfigM_pmA_x[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], N_MfigM_pmA_y[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], N_MfigM_pmA_z[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        #= In[33]:713 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                        TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                        TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                        TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                        TaylorSeries.mul!(tmp6087[i, j], 4, vi_dot_vj[i, j], ord)
                        TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp6087[i, j], ord)
                        TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                        TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                        TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                        TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                        TaylorSeries.add!(tmp6093[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                        TaylorSeries.add!(Rij_dot_Vi[i, j], tmp6093[i, j], Zij_t_Wi[i, j], ord)
                        TaylorSeries.pow!(tmp6096[i, j], Rij_dot_Vi[i, j], 2, ord)
                        TaylorSeries.div!(rij_dot_vi_div_rij_sq[i, j], tmp6096[i, j], r_p2[i, j], ord)
                        TaylorSeries.mul!(tmp6099[i, j], 1.5, rij_dot_vi_div_rij_sq[i, j], ord)
                        TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp6099[i, j], ord)
                        TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                    end
                end
                TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
            end
        #= In[33]:752 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                        TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                        TaylorSeries.add!(tmp6106[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                        TaylorSeries.add!(tmp6107[i, j], tmp6106[i, j], pNZ_t_Z[i, j], ord)
                        TaylorSeries.mul!(tmp6108[i, j], 0.5, tmp6107[i, j], ord)
                        TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp6108[i, j], ord)
                        TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                        TaylorSeries.add!(tmp6116[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp6116[i, j], ord)
                        TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                        TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                        TaylorSeries.add!(tmp6119[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp6119[i, j], ord)
                        TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                        TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                        TaylorSeries.add!(tmp6122[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp6122[i, j], ord)
                        TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                        TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                    end
                end
                TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
            end
        TaylorSeries.identity!(x0s_M, r_star_M_0[1], ord)
        TaylorSeries.identity!(y0s_M, r_star_M_0[2], ord)
        TaylorSeries.identity!(z0s_M, r_star_M_0[3], ord)
        TaylorSeries.pow!(tmp6129, x0s_M, 2, ord)
        TaylorSeries.pow!(tmp6131, y0s_M, 2, ord)
        TaylorSeries.add!(ρ0s2_M, tmp6129, tmp6131, ord)
        TaylorSeries.sqrt!(ρ0s_M, ρ0s2_M, ord)
        TaylorSeries.pow!(z0s2_M, z0s_M, 2, ord)
        TaylorSeries.add!(r0s2_M, ρ0s2_M, z0s2_M, ord)
        TaylorSeries.sqrt!(r0s_M, r0s2_M, ord)
        TaylorSeries.pow!(r0s5_M, r0s_M, 5, ord)
        TaylorSeries.identity!(x0s_S, r_star_S_0[1], ord)
        TaylorSeries.identity!(y0s_S, r_star_S_0[2], ord)
        TaylorSeries.identity!(z0s_S, r_star_S_0[3], ord)
        TaylorSeries.pow!(tmp6141, x0s_S, 2, ord)
        TaylorSeries.pow!(tmp6143, y0s_S, 2, ord)
        TaylorSeries.add!(ρ0s2_S, tmp6141, tmp6143, ord)
        TaylorSeries.sqrt!(ρ0s_S, ρ0s2_S, ord)
        TaylorSeries.pow!(z0s2_S, z0s_S, 2, ord)
        TaylorSeries.add!(r0s2_S, ρ0s2_S, z0s2_S, ord)
        TaylorSeries.sqrt!(r0s_S, r0s2_S, ord)
        TaylorSeries.pow!(r0s5_S, r0s_S, 5, ord)
        TaylorSeries.mul!(tmp6153, Z_bf[mo, ea], r_star_M_0[3], ord)
        TaylorSeries.pow!(tmp6155, tmp6153, 2, ord)
        TaylorSeries.mul!(tmp6157, r_xy[mo, ea], ρ0s_M, ord)
        TaylorSeries.pow!(tmp6159, tmp6157, 2, ord)
        TaylorSeries.mul!(tmp6160, 0.5, tmp6159, ord)
        TaylorSeries.add!(tmp6161, tmp6155, tmp6160, ord)
        TaylorSeries.div!(tmp6162, tmp6161, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp6163, 5, tmp6162, ord)
        TaylorSeries.subst!(coeff0_M, r0s2_M, tmp6163, ord)
        TaylorSeries.mul!(tmp6166, Z_bf[mo, ea], r_star_S_0[3], ord)
        TaylorSeries.pow!(tmp6168, tmp6166, 2, ord)
        TaylorSeries.mul!(tmp6170, r_xy[mo, ea], ρ0s_S, ord)
        TaylorSeries.pow!(tmp6172, tmp6170, 2, ord)
        TaylorSeries.mul!(tmp6173, 0.5, tmp6172, ord)
        TaylorSeries.add!(tmp6174, tmp6168, tmp6173, ord)
        TaylorSeries.div!(tmp6175, tmp6174, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp6176, 5, tmp6175, ord)
        TaylorSeries.subst!(coeff0_S, r0s2_S, tmp6176, ord)
        TaylorSeries.div!(k_20E_div_r0s5_M, k_20E, r0s5_M, ord)
        TaylorSeries.div!(k_20E_div_r0s5_S, k_20E, r0s5_S, ord)
        TaylorSeries.add!(tmp6180, ρ0s2_M, coeff0_M, ord)
        TaylorSeries.mul!(tmp6181, k_20E_div_r0s5_M, tmp6180, ord)
        TaylorSeries.mul!(a_tid_0_M_x, tmp6181, X_bf[mo, ea], ord)
        TaylorSeries.add!(tmp6183, ρ0s2_M, coeff0_M, ord)
        TaylorSeries.mul!(tmp6184, k_20E_div_r0s5_M, tmp6183, ord)
        TaylorSeries.mul!(a_tid_0_M_y, tmp6184, Y_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp6187, 2, z0s2_M, ord)
        TaylorSeries.add!(tmp6188, tmp6187, coeff0_M, ord)
        TaylorSeries.mul!(tmp6189, k_20E_div_r0s5_M, tmp6188, ord)
        TaylorSeries.mul!(a_tid_0_M_z, tmp6189, Z_bf[mo, ea], ord)
        TaylorSeries.add!(tmp6191, ρ0s2_S, coeff0_S, ord)
        TaylorSeries.mul!(tmp6192, k_20E_div_r0s5_S, tmp6191, ord)
        TaylorSeries.mul!(a_tid_0_S_x, tmp6192, X_bf[mo, ea], ord)
        TaylorSeries.add!(tmp6194, ρ0s2_S, coeff0_S, ord)
        TaylorSeries.mul!(tmp6195, k_20E_div_r0s5_S, tmp6194, ord)
        TaylorSeries.mul!(a_tid_0_S_y, tmp6195, Y_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp6198, 2, z0s2_S, ord)
        TaylorSeries.add!(tmp6199, tmp6198, coeff0_S, ord)
        TaylorSeries.mul!(tmp6200, k_20E_div_r0s5_S, tmp6199, ord)
        TaylorSeries.mul!(a_tid_0_S_z, tmp6200, Z_bf[mo, ea], ord)
        TaylorSeries.identity!(x1s_M, r_star_M_1[1], ord)
        TaylorSeries.identity!(y1s_M, r_star_M_1[2], ord)
        TaylorSeries.identity!(z1s_M, r_star_M_1[3], ord)
        TaylorSeries.pow!(tmp6203, x1s_M, 2, ord)
        TaylorSeries.pow!(tmp6205, y1s_M, 2, ord)
        TaylorSeries.add!(ρ1s2_M, tmp6203, tmp6205, ord)
        TaylorSeries.sqrt!(ρ1s_M, ρ1s2_M, ord)
        TaylorSeries.pow!(z1s2_M, z1s_M, 2, ord)
        TaylorSeries.add!(r1s2_M, ρ1s2_M, z1s2_M, ord)
        TaylorSeries.sqrt!(r1s_M, r1s2_M, ord)
        TaylorSeries.pow!(r1s5_M, r1s_M, 5, ord)
        TaylorSeries.identity!(x1s_S, r_star_S_1[1], ord)
        TaylorSeries.identity!(y1s_S, r_star_S_1[2], ord)
        TaylorSeries.identity!(z1s_S, r_star_S_1[3], ord)
        TaylorSeries.pow!(tmp6215, x1s_S, 2, ord)
        TaylorSeries.pow!(tmp6217, y1s_S, 2, ord)
        TaylorSeries.add!(ρ1s2_S, tmp6215, tmp6217, ord)
        TaylorSeries.sqrt!(ρ1s_S, ρ1s2_S, ord)
        TaylorSeries.pow!(z1s2_S, z1s_S, 2, ord)
        TaylorSeries.add!(r1s2_S, ρ1s2_S, z1s2_S, ord)
        TaylorSeries.sqrt!(r1s_S, r1s2_S, ord)
        TaylorSeries.pow!(r1s5_S, r1s_S, 5, ord)
        TaylorSeries.mul!(tmp6226, X_bf[mo, ea], r_star_M_1[1], ord)
        TaylorSeries.mul!(tmp6227, Y_bf[mo, ea], r_star_M_1[2], ord)
        TaylorSeries.add!(coeff1_1_M, tmp6226, tmp6227, ord)
        TaylorSeries.mul!(tmp6229, X_bf[mo, ea], r_star_S_1[1], ord)
        TaylorSeries.mul!(tmp6230, Y_bf[mo, ea], r_star_S_1[2], ord)
        TaylorSeries.add!(coeff1_1_S, tmp6229, tmp6230, ord)
        TaylorSeries.mul!(coeff2_1_M, Z_bf[mo, ea], r_star_M_1[3], ord)
        TaylorSeries.mul!(coeff2_1_S, Z_bf[mo, ea], r_star_S_1[3], ord)
        TaylorSeries.mul!(tmp6235, 10, coeff1_1_M, ord)
        TaylorSeries.mul!(tmp6236, tmp6235, coeff2_1_M, ord)
        TaylorSeries.div!(coeff3_1_M, tmp6236, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp6239, 10, coeff1_1_S, ord)
        TaylorSeries.mul!(tmp6240, tmp6239, coeff2_1_S, ord)
        TaylorSeries.div!(coeff3_1_S, tmp6240, r_p2[mo, ea], ord)
        TaylorSeries.div!(k_21E_div_r1s5_M, k_21E, r1s5_M, ord)
        TaylorSeries.div!(k_21E_div_r1s5_S, k_21E, r1s5_S, ord)
        TaylorSeries.mul!(tmp6245, 2, coeff2_1_M, ord)
        TaylorSeries.mul!(tmp6246, tmp6245, r_star_M_1[1], ord)
        TaylorSeries.mul!(tmp6247, coeff3_1_M, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6248, tmp6246, tmp6247, ord)
        TaylorSeries.mul!(a_tid_1_M_x, k_21E_div_r1s5_M, tmp6248, ord)
        TaylorSeries.mul!(tmp6251, 2, coeff2_1_M, ord)
        TaylorSeries.mul!(tmp6252, tmp6251, r_star_M_1[2], ord)
        TaylorSeries.mul!(tmp6253, coeff3_1_M, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6254, tmp6252, tmp6253, ord)
        TaylorSeries.mul!(a_tid_1_M_y, k_21E_div_r1s5_M, tmp6254, ord)
        TaylorSeries.mul!(tmp6257, 2, coeff1_1_M, ord)
        TaylorSeries.mul!(tmp6258, tmp6257, r_star_M_1[3], ord)
        TaylorSeries.mul!(tmp6259, coeff3_1_M, Z_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6260, tmp6258, tmp6259, ord)
        TaylorSeries.mul!(a_tid_1_M_z, k_21E_div_r1s5_M, tmp6260, ord)
        TaylorSeries.mul!(tmp6263, 2, coeff2_1_S, ord)
        TaylorSeries.mul!(tmp6264, tmp6263, r_star_S_1[1], ord)
        TaylorSeries.mul!(tmp6265, coeff3_1_S, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6266, tmp6264, tmp6265, ord)
        TaylorSeries.mul!(a_tid_1_S_x, k_21E_div_r1s5_S, tmp6266, ord)
        TaylorSeries.mul!(tmp6269, 2, coeff2_1_S, ord)
        TaylorSeries.mul!(tmp6270, tmp6269, r_star_S_1[2], ord)
        TaylorSeries.mul!(tmp6271, coeff3_1_S, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6272, tmp6270, tmp6271, ord)
        TaylorSeries.mul!(a_tid_1_S_y, k_21E_div_r1s5_S, tmp6272, ord)
        TaylorSeries.mul!(tmp6275, 2, coeff1_1_S, ord)
        TaylorSeries.mul!(tmp6276, tmp6275, r_star_S_1[3], ord)
        TaylorSeries.mul!(tmp6277, coeff3_1_S, Z_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6278, tmp6276, tmp6277, ord)
        TaylorSeries.mul!(a_tid_1_S_z, k_21E_div_r1s5_S, tmp6278, ord)
        TaylorSeries.identity!(x2s_M, r_star_M_2[1], ord)
        TaylorSeries.identity!(y2s_M, r_star_M_2[2], ord)
        TaylorSeries.identity!(z2s_M, r_star_M_2[3], ord)
        TaylorSeries.pow!(tmp6281, x2s_M, 2, ord)
        TaylorSeries.pow!(tmp6283, y2s_M, 2, ord)
        TaylorSeries.add!(ρ2s2_M, tmp6281, tmp6283, ord)
        TaylorSeries.sqrt!(ρ2s_M, ρ2s2_M, ord)
        TaylorSeries.pow!(z2s2_M, z2s_M, 2, ord)
        TaylorSeries.add!(r2s2_M, ρ2s2_M, z2s2_M, ord)
        TaylorSeries.sqrt!(r2s_M, r2s2_M, ord)
        TaylorSeries.pow!(r2s5_M, r2s_M, 5, ord)
        TaylorSeries.identity!(x2s_S, r_star_S_2[1], ord)
        TaylorSeries.identity!(y2s_S, r_star_S_2[2], ord)
        TaylorSeries.identity!(z2s_S, r_star_S_2[3], ord)
        TaylorSeries.pow!(tmp6293, x2s_S, 2, ord)
        TaylorSeries.pow!(tmp6295, y2s_S, 2, ord)
        TaylorSeries.add!(ρ2s2_S, tmp6293, tmp6295, ord)
        TaylorSeries.sqrt!(ρ2s_S, ρ2s2_S, ord)
        TaylorSeries.pow!(z2s2_S, z2s_S, 2, ord)
        TaylorSeries.add!(r2s2_S, ρ2s2_S, z2s2_S, ord)
        TaylorSeries.sqrt!(r2s_S, r2s2_S, ord)
        TaylorSeries.pow!(r2s5_S, r2s_S, 5, ord)
        TaylorSeries.mul!(tmp6304, X_bf[mo, ea], r_star_M_2[1], ord)
        TaylorSeries.mul!(tmp6305, Y_bf[mo, ea], r_star_M_2[2], ord)
        TaylorSeries.add!(coeff1_2_M, tmp6304, tmp6305, ord)
        TaylorSeries.mul!(tmp6307, X_bf[mo, ea], r_star_S_2[1], ord)
        TaylorSeries.mul!(tmp6308, Y_bf[mo, ea], r_star_S_2[2], ord)
        TaylorSeries.add!(coeff1_2_S, tmp6307, tmp6308, ord)
        TaylorSeries.pow!(tmp6312, coeff1_2_M, 2, ord)
        TaylorSeries.pow!(tmp6315, r_xy[mo, ea], 2, ord)
        TaylorSeries.mul!(tmp6316, 0.5, tmp6315, ord)
        TaylorSeries.mul!(tmp6317, tmp6316, ρ2s2_M, ord)
        TaylorSeries.subst!(tmp6318, tmp6312, tmp6317, ord)
        TaylorSeries.mul!(tmp6319, 5, tmp6318, ord)
        TaylorSeries.div!(coeff3_2_M, tmp6319, r_p2[mo, ea], ord)
        TaylorSeries.pow!(tmp6323, coeff1_2_S, 2, ord)
        TaylorSeries.pow!(tmp6326, r_xy[mo, ea], 2, ord)
        TaylorSeries.mul!(tmp6327, 0.5, tmp6326, ord)
        TaylorSeries.mul!(tmp6328, tmp6327, ρ2s2_S, ord)
        TaylorSeries.subst!(tmp6329, tmp6323, tmp6328, ord)
        TaylorSeries.mul!(tmp6330, 5, tmp6329, ord)
        TaylorSeries.div!(coeff3_2_S, tmp6330, r_p2[mo, ea], ord)
        TaylorSeries.div!(k_22E_div_r2s5_M, k_22E, r2s5_M, ord)
        TaylorSeries.div!(k_22E_div_r2s5_S, k_22E, r2s5_S, ord)
        TaylorSeries.mul!(tmp6335, 2, coeff1_2_M, ord)
        TaylorSeries.mul!(tmp6336, tmp6335, r_star_M_2[1], ord)
        TaylorSeries.add!(tmp6337, ρ2s2_M, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp6338, tmp6337, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6339, tmp6336, tmp6338, ord)
        TaylorSeries.mul!(a_tid_2_M_x, k_22E_div_r2s5_M, tmp6339, ord)
        TaylorSeries.mul!(tmp6342, 2, coeff1_2_M, ord)
        TaylorSeries.mul!(tmp6343, tmp6342, r_star_M_2[2], ord)
        TaylorSeries.add!(tmp6344, ρ2s2_M, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp6345, tmp6344, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6346, tmp6343, tmp6345, ord)
        TaylorSeries.mul!(a_tid_2_M_y, k_22E_div_r2s5_M, tmp6346, ord)
        TaylorSeries.subst!(tmp6348, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp6349, k_22E_div_r2s5_M, tmp6348, ord)
        TaylorSeries.mul!(a_tid_2_M_z, tmp6349, Z_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp6352, 2, coeff1_2_S, ord)
        TaylorSeries.mul!(tmp6353, tmp6352, r_star_S_2[1], ord)
        TaylorSeries.add!(tmp6354, ρ2s2_S, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp6355, tmp6354, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6356, tmp6353, tmp6355, ord)
        TaylorSeries.mul!(a_tid_2_S_x, k_22E_div_r2s5_S, tmp6356, ord)
        TaylorSeries.mul!(tmp6359, 2, coeff1_2_S, ord)
        TaylorSeries.mul!(tmp6360, tmp6359, r_star_S_2[2], ord)
        TaylorSeries.add!(tmp6361, ρ2s2_S, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp6362, tmp6361, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp6363, tmp6360, tmp6362, ord)
        TaylorSeries.mul!(a_tid_2_S_y, k_22E_div_r2s5_S, tmp6363, ord)
        TaylorSeries.subst!(tmp6365, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp6366, k_22E_div_r2s5_S, tmp6365, ord)
        TaylorSeries.mul!(a_tid_2_S_z, tmp6366, Z_bf[mo, ea], ord)
        TaylorSeries.div!(tmp6368, RE_au, r_p1d2[mo, ea], ord)
        TaylorSeries.pow!(RE_div_r_p5, tmp6368, 5, ord)
        TaylorSeries.mul!(aux_tidacc, tid_num_coeff, RE_div_r_p5, ord)
        TaylorSeries.mul!(a_tidal_coeff_M, μ[mo], aux_tidacc, ord)
        TaylorSeries.mul!(a_tidal_coeff_S, μ[su], aux_tidacc, ord)
        TaylorSeries.add!(tmp6374, a_tid_0_M_x, a_tid_1_M_x, ord)
        TaylorSeries.add!(tmp6375, tmp6374, a_tid_2_M_x, ord)
        TaylorSeries.mul!(tmp6376, a_tidal_coeff_M, tmp6375, ord)
        TaylorSeries.add!(tmp6377, a_tid_0_S_x, a_tid_1_S_x, ord)
        TaylorSeries.add!(tmp6378, tmp6377, a_tid_2_S_x, ord)
        TaylorSeries.mul!(tmp6379, a_tidal_coeff_S, tmp6378, ord)
        TaylorSeries.add!(a_tidal_tod_x, tmp6376, tmp6379, ord)
        TaylorSeries.add!(tmp6381, a_tid_0_M_y, a_tid_1_M_y, ord)
        TaylorSeries.add!(tmp6382, tmp6381, a_tid_2_M_y, ord)
        TaylorSeries.mul!(tmp6383, a_tidal_coeff_M, tmp6382, ord)
        TaylorSeries.add!(tmp6384, a_tid_0_S_y, a_tid_1_S_y, ord)
        TaylorSeries.add!(tmp6385, tmp6384, a_tid_2_S_y, ord)
        TaylorSeries.mul!(tmp6386, a_tidal_coeff_S, tmp6385, ord)
        TaylorSeries.add!(a_tidal_tod_y, tmp6383, tmp6386, ord)
        TaylorSeries.add!(tmp6388, a_tid_0_M_z, a_tid_1_M_z, ord)
        TaylorSeries.add!(tmp6389, tmp6388, a_tid_2_M_z, ord)
        TaylorSeries.mul!(tmp6390, a_tidal_coeff_M, tmp6389, ord)
        TaylorSeries.add!(tmp6391, a_tid_0_S_z, a_tid_1_S_z, ord)
        TaylorSeries.add!(tmp6392, tmp6391, a_tid_2_S_z, ord)
        TaylorSeries.mul!(tmp6393, a_tidal_coeff_S, tmp6392, ord)
        TaylorSeries.add!(a_tidal_tod_z, tmp6390, tmp6393, ord)
        TaylorSeries.mul!(tmp6395, RotM[1, 1, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp6396, RotM[2, 1, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp6397, tmp6395, tmp6396, ord)
        TaylorSeries.mul!(tmp6398, RotM[3, 1, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_x, tmp6397, tmp6398, ord)
        TaylorSeries.mul!(tmp6400, RotM[1, 2, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp6401, RotM[2, 2, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp6402, tmp6400, tmp6401, ord)
        TaylorSeries.mul!(tmp6403, RotM[3, 2, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_y, tmp6402, tmp6403, ord)
        TaylorSeries.mul!(tmp6405, RotM[1, 3, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp6406, RotM[2, 3, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp6407, tmp6405, tmp6406, ord)
        TaylorSeries.mul!(tmp6408, RotM[3, 3, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_z, tmp6407, tmp6408, ord)
        TaylorSeries.add!(accX_mo_tides, accX[mo], a_tidal_x, ord)
        TaylorSeries.add!(accY_mo_tides, accY[mo], a_tidal_y, ord)
        TaylorSeries.add!(accZ_mo_tides, accZ[mo], a_tidal_z, ord)
        TaylorSeries.identity!(accX[mo], accX_mo_tides, ord)
        TaylorSeries.identity!(accY[mo], accY_mo_tides, ord)
        TaylorSeries.identity!(accZ[mo], accZ_mo_tides, ord)
        #= In[33]:990 =# Threads.@threads for i = 1:N_ext
                TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
                TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
                TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
            end
        #= In[33]:995 =# Threads.@threads for i = N_ext + 1:N
                TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
            end
        TaylorSeries.mul!(tmp6416, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp6417, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp6418, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp6419, tmp6417, tmp6418, ord)
        TaylorSeries.add!(Iω_x, tmp6416, tmp6419, ord)
        TaylorSeries.mul!(tmp6421, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp6422, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp6423, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp6424, tmp6422, tmp6423, ord)
        TaylorSeries.add!(Iω_y, tmp6421, tmp6424, ord)
        TaylorSeries.mul!(tmp6426, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp6427, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp6428, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp6429, tmp6427, tmp6428, ord)
        TaylorSeries.add!(Iω_z, tmp6426, tmp6429, ord)
        TaylorSeries.mul!(tmp6431, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp6432, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp6431, tmp6432, ord)
        TaylorSeries.mul!(tmp6434, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp6435, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp6434, tmp6435, ord)
        TaylorSeries.mul!(tmp6437, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp6438, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp6437, tmp6438, ord)
        TaylorSeries.mul!(tmp6440, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp6441, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp6442, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp6443, tmp6441, tmp6442, ord)
        TaylorSeries.add!(dIω_x, tmp6440, tmp6443, ord)
        TaylorSeries.mul!(tmp6445, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp6446, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp6447, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp6448, tmp6446, tmp6447, ord)
        TaylorSeries.add!(dIω_y, tmp6445, tmp6448, ord)
        TaylorSeries.mul!(tmp6450, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp6451, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp6452, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp6453, tmp6451, tmp6452, ord)
        TaylorSeries.add!(dIω_z, tmp6450, tmp6453, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp6458, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp6459, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp6460, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp6461, tmp6459, tmp6460, ord)
        TaylorSeries.add!(er_EM_1, tmp6458, tmp6461, ord)
        TaylorSeries.mul!(tmp6463, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp6464, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp6465, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp6466, tmp6464, tmp6465, ord)
        TaylorSeries.add!(er_EM_2, tmp6463, tmp6466, ord)
        TaylorSeries.mul!(tmp6468, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp6469, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp6470, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp6471, tmp6469, tmp6470, ord)
        TaylorSeries.add!(er_EM_3, tmp6468, tmp6471, ord)
        TaylorSeries.mul!(tmp6473, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp6474, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp6475, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp6476, tmp6474, tmp6475, ord)
        TaylorSeries.add!(p_E_1, tmp6473, tmp6476, ord)
        TaylorSeries.mul!(tmp6478, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp6479, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp6480, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp6481, tmp6479, tmp6480, ord)
        TaylorSeries.add!(p_E_2, tmp6478, tmp6481, ord)
        TaylorSeries.mul!(tmp6483, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp6484, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp6485, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp6486, tmp6484, tmp6485, ord)
        TaylorSeries.add!(p_E_3, tmp6483, tmp6486, ord)
        TaylorSeries.mul!(tmp6488, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp6489, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp6490, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp6491, tmp6489, tmp6490, ord)
        TaylorSeries.add!(I_er_EM_1, tmp6488, tmp6491, ord)
        TaylorSeries.mul!(tmp6493, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp6494, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp6495, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp6496, tmp6494, tmp6495, ord)
        TaylorSeries.add!(I_er_EM_2, tmp6493, tmp6496, ord)
        TaylorSeries.mul!(tmp6498, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp6499, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp6500, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp6501, tmp6499, tmp6500, ord)
        TaylorSeries.add!(I_er_EM_3, tmp6498, tmp6501, ord)
        TaylorSeries.mul!(tmp6503, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp6504, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp6505, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp6506, tmp6504, tmp6505, ord)
        TaylorSeries.add!(I_p_E_1, tmp6503, tmp6506, ord)
        TaylorSeries.mul!(tmp6508, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp6509, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp6510, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp6511, tmp6509, tmp6510, ord)
        TaylorSeries.add!(I_p_E_2, tmp6508, tmp6511, ord)
        TaylorSeries.mul!(tmp6513, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp6514, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp6515, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp6516, tmp6514, tmp6515, ord)
        TaylorSeries.add!(I_p_E_3, tmp6513, tmp6516, ord)
        TaylorSeries.mul!(tmp6518, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp6519, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp6518, tmp6519, ord)
        TaylorSeries.mul!(tmp6521, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp6522, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp6521, tmp6522, ord)
        TaylorSeries.mul!(tmp6524, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp6525, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp6524, tmp6525, ord)
        TaylorSeries.mul!(tmp6527, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp6528, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp6527, tmp6528, ord)
        TaylorSeries.mul!(tmp6530, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp6531, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp6530, tmp6531, ord)
        TaylorSeries.mul!(tmp6533, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp6534, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp6533, tmp6534, ord)
        TaylorSeries.mul!(tmp6536, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp6537, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp6536, tmp6537, ord)
        TaylorSeries.mul!(tmp6539, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp6540, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp6539, tmp6540, ord)
        TaylorSeries.mul!(tmp6542, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp6543, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp6542, tmp6543, ord)
        TaylorSeries.mul!(tmp6545, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp6546, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp6545, tmp6546, ord)
        TaylorSeries.mul!(tmp6548, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp6549, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp6548, tmp6549, ord)
        TaylorSeries.mul!(tmp6551, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp6552, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp6551, tmp6552, ord)
        TaylorSeries.pow!(tmp6556, sin_ϕ[ea, mo], 2, ord)
        TaylorSeries.mul!(tmp6557, 7, tmp6556, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp6557, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp6562, r_p1d2[mo, ea], 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp6562, ord)
        TaylorSeries.mul!(tmp6564, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp6565, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp6566, two_sinϕEM, tmp6565, ord)
        TaylorSeries.add!(tmp6567, tmp6564, tmp6566, ord)
        TaylorSeries.mul!(tmp6569, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp6570, tmp6567, tmp6569, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp6570, ord)
        TaylorSeries.mul!(tmp6572, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp6573, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp6574, two_sinϕEM, tmp6573, ord)
        TaylorSeries.add!(tmp6575, tmp6572, tmp6574, ord)
        TaylorSeries.mul!(tmp6577, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp6578, tmp6575, tmp6577, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp6578, ord)
        TaylorSeries.mul!(tmp6580, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp6581, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp6582, two_sinϕEM, tmp6581, ord)
        TaylorSeries.add!(tmp6583, tmp6580, tmp6582, ord)
        TaylorSeries.mul!(tmp6585, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp6586, tmp6583, tmp6585, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp6586, ord)
        TaylorSeries.mul!(tmp6588, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp6589, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp6590, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp6591, tmp6589, tmp6590, ord)
        TaylorSeries.add!(N_1_LMF, tmp6588, tmp6591, ord)
        TaylorSeries.mul!(tmp6593, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp6594, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp6595, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp6596, tmp6594, tmp6595, ord)
        TaylorSeries.add!(N_2_LMF, tmp6593, tmp6596, ord)
        TaylorSeries.mul!(tmp6598, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp6599, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp6600, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp6601, tmp6599, tmp6600, ord)
        TaylorSeries.add!(N_3_LMF, tmp6598, tmp6601, ord)
        TaylorSeries.subst!(tmp6603, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp6604, k_ν, tmp6603, ord)
        TaylorSeries.mul!(tmp6605, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp6606, tmp6605, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp6604, tmp6606, ord)
        TaylorSeries.subst!(tmp6608, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp6609, k_ν, tmp6608, ord)
        TaylorSeries.mul!(tmp6610, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp6611, tmp6610, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp6609, tmp6611, ord)
        TaylorSeries.subst!(tmp6613, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp6613, ord)
        TaylorSeries.mul!(tmp6615, μ[mo], N_1_LMF, ord)
        TaylorSeries.add!(tmp6616, N_MfigM_figE_1, tmp6615, ord)
        TaylorSeries.add!(tmp6617, tmp6616, N_cmb_1, ord)
        TaylorSeries.add!(tmp6618, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp6617, tmp6618, ord)
        TaylorSeries.mul!(tmp6620, μ[mo], N_2_LMF, ord)
        TaylorSeries.add!(tmp6621, N_MfigM_figE_2, tmp6620, ord)
        TaylorSeries.add!(tmp6622, tmp6621, N_cmb_2, ord)
        TaylorSeries.add!(tmp6623, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp6622, tmp6623, ord)
        TaylorSeries.mul!(tmp6625, μ[mo], N_3_LMF, ord)
        TaylorSeries.add!(tmp6626, N_MfigM_figE_3, tmp6625, ord)
        TaylorSeries.add!(tmp6627, tmp6626, N_cmb_3, ord)
        TaylorSeries.add!(tmp6628, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp6627, tmp6628, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp6633, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp6634, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp6633, tmp6634, ord)
        TaylorSeries.mul!(tmp6636, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp6637, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp6636, tmp6637, ord)
        TaylorSeries.mul!(tmp6639, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp6640, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp6639, tmp6640, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp6645, tmp6776, q[6N + 3], ord)
        TaylorSeries.mul!(tmp6646, q[6N + 4], tmp6645, ord)
        TaylorSeries.sincos!(tmp6777, tmp6647, q[6N + 3], ord)
        TaylorSeries.mul!(tmp6648, q[6N + 5], tmp6647, ord)
        TaylorSeries.add!(tmp6649, tmp6646, tmp6648, ord)
        TaylorSeries.sincos!(tmp6650, tmp6778, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp6649, tmp6650, ord)
        TaylorSeries.sincos!(tmp6779, tmp6652, q[6N + 3], ord)
        TaylorSeries.mul!(tmp6653, q[6N + 4], tmp6652, ord)
        TaylorSeries.sincos!(tmp6654, tmp6780, q[6N + 3], ord)
        TaylorSeries.mul!(tmp6655, q[6N + 5], tmp6654, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp6653, tmp6655, ord)
        TaylorSeries.sincos!(tmp6781, tmp6657, q[6N + 2], ord)
        TaylorSeries.mul!(tmp6658, dq[6N + 1], tmp6657, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp6658, ord)
        TaylorSeries.mul!(tmp6660, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp6661, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp6662, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp6663, tmp6661, tmp6662, ord)
        TaylorSeries.add!(dq[6N + 4], tmp6660, tmp6663, ord)
        TaylorSeries.mul!(tmp6665, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp6666, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp6667, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp6668, tmp6666, tmp6667, ord)
        TaylorSeries.add!(dq[6N + 5], tmp6665, tmp6668, ord)
        TaylorSeries.mul!(tmp6670, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp6671, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp6672, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp6673, tmp6671, tmp6672, ord)
        TaylorSeries.add!(dq[6N + 6], tmp6670, tmp6673, ord)
        TaylorSeries.sincos!(tmp6675, tmp6782, q[6N + 8], ord)
        TaylorSeries.div!(tmp6676, ω_c_CE_2, tmp6675, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp6676, ord)
        TaylorSeries.sincos!(tmp6783, tmp6678, q[6N + 8], ord)
        TaylorSeries.mul!(tmp6679, dq[6N + 9], tmp6678, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp6679, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.mul!(tmp6684, newtonianCoeff[su, ea], J2_t[su], ord)
        TaylorSeries.pow!(tmp6687, sin_ϕ[su, ea], 2, ord)
        TaylorSeries.mul!(tmp6688, 3, tmp6687, ord)
        TaylorSeries.subst!(tmp6689, one_t, tmp6688, ord)
        TaylorSeries.div!(tmp6691, tmp6689, 2, ord)
        TaylorSeries.mul!(w_LE, tmp6684, tmp6691, ord)
        TaylorSeries.mul!(tmp6694, 0.5, v2[ea], ord)
        TaylorSeries.add!(tmp6695, tmp6694, newtonianNb_Potential[ea], ord)
        TaylorSeries.add!(α_TTmTDB, tmp6695, w_LE, ord)
        TaylorSeries.pow!(v4E, v2[ea], 2, ord)
        TaylorSeries.pow!(ϕ_Earth_Newtonian_sq, newtonianNb_Potential[ea], 2, ord)
        TaylorSeries.div!(tmp6702, ϕ_Earth_Newtonian_sq, 2, ord)
        TaylorSeries.div!(tmp6704, v4E, 8, ord)
        TaylorSeries.subst!(β_TTmTDB, tmp6702, tmp6704, ord)
        #= In[33]:1161 =# Threads.@threads for i = 1:N
                if i == ea
                    continue
                else
                    TaylorSeries.mul!(β_TTmTDB_i_1[i, ea], 4, vi_dot_vj[i, ea], ord)
                    TaylorSeries.mul!(tmp6709[ea], 1.5, v2[ea], ord)
                    TaylorSeries.mul!(tmp6711[i], 2, v2[i], ord)
                    TaylorSeries.add!(tmp6712[ea], tmp6709[ea], tmp6711[i], ord)
                    TaylorSeries.subst!(β_TTmTDB_i_2[i], newtonianNb_Potential[i], tmp6712[ea], ord)
                    TaylorSeries.mul!(tmp6714[i, ea], dq[3 * (N + i) - 2], X[i, ea], ord)
                    TaylorSeries.mul!(tmp6715[i, ea], dq[3 * (N + i) - 1], Y[i, ea], ord)
                    TaylorSeries.add!(tmp6716[i, ea], tmp6714[i, ea], tmp6715[i, ea], ord)
                    TaylorSeries.mul!(tmp6717[i, ea], dq[3 * (N + i)], Z[i, ea], ord)
                    TaylorSeries.add!(tmp6718[i, ea], tmp6716[i, ea], tmp6717[i, ea], ord)
                    TaylorSeries.div!(β_TTmTDB_i_3[i, ea], tmp6718[i, ea], 2, ord)
                    TaylorSeries.div!(β_TTmTDB_i_4[i, ea], rij_dot_vi_div_rij_sq[i, ea], 2, ord)
                    TaylorSeries.add!(tmp6723[i, ea], β_TTmTDB_i_1[i, ea], β_TTmTDB_i_2[i], ord)
                    TaylorSeries.add!(tmp6724[i, ea], β_TTmTDB_i_3[i, ea], β_TTmTDB_i_4[i, ea], ord)
                    TaylorSeries.add!(β_TTmTDB_i[i, ea], tmp6723[i, ea], tmp6724[i, ea], ord)
                    TaylorSeries.mul!(tmp6726[i, ea], newtonian1b_Potential[i, ea], β_TTmTDB_i[i, ea], ord)
                    TaylorSeries.add!(temp_β_TTmTDB[i, ea], β_TTmTDB, tmp6726[i, ea], ord)
                    TaylorSeries.identity!(β_TTmTDB, temp_β_TTmTDB[i, ea], ord)
                end
            end
        TaylorSeries.mul!(tmp6728, c_m2, α_TTmTDB, ord)
        TaylorSeries.subst!(tmp6729, L_B, tmp6728, ord)
        TaylorSeries.mul!(tmp6730, tmp6729, one_plus_L_B_minus_L_G, ord)
        TaylorSeries.mul!(tmp6731, c_m4, β_TTmTDB, ord)
        TaylorSeries.subst!(tmp6732, tmp6731, L_G, ord)
        TaylorSeries.add!(tmp6733, tmp6730, tmp6732, ord)
        TaylorSeries.mul!(dq[6N + 13], daysec, tmp6733, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end